   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "sdmmc_block_private_sd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.__NVIC_GetPriorityGrouping,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	__NVIC_GetPriorityGrouping:
  25              	.LFB105:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V5.1.0
   5:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * @date     13. March 2019
   6:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*
   8:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  *
  10:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  *
  16:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  *
  18:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
  24:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  25:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
  30:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  31:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  34:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  36:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
  39:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  40:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
  41:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  44:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  47:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  50:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
  53:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  54:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  55:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
  59:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
  61:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  63:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  65:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  71:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  73:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** */
  76:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #else
  81:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  84:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #else
  85:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  87:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
  88:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_FP
  90:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #else
  93:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  96:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #else
  97:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  99:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #else
 105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #else
 109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #else
 117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #else
 121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
 161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
 167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
 168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
 179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
 207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** */
 216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #else
 219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
 221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** */
 248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
 254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   struct
 262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
 263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   struct
 301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
 302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   struct
 319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
 320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   struct
 374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
 375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
 401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[24U];
 412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
 435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 710:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 711:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
 714:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 715:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 716:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 717:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 719:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 720:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 721:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 722:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 725:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 726:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 730:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 734:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 737:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 740:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 743:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 746:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 748:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 749:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 750:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 751:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
 754:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 755:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 756:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 757:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 759:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 760:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 761:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 766:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 767:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 771:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 774:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 777:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 780:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 781:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 784:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 785:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 788:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 792:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 795:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 798:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 800:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 801:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 802:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 803:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
 806:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 807:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 808:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 809:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 811:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 812:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 813:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 814:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
 815:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 820:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 822:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 824:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[32U];
 826:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 827:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 830:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 843:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 844:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 848:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 852:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 855:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 858:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 861:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 864:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 867:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 870:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 873:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 876:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 880:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 883:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 886:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 888:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 889:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 890:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
 894:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 895:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 896:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
 897:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
 899:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 900:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 901:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 926:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 930:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 933:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 936:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 939:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 942:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 945:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 948:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 951:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 954:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 957:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 960:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 963:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 966:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 969:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 972:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 975:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 978:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 981:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 985:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 989:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 993:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
 997:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1001:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1005:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1009:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1012:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1015:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1018:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1021:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1024:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1027:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1030:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1033:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1035:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1036:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1037:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
1041:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1042:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1043:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1044:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1046:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1047:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1048:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1074:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1078:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1082:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1086:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1089:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1092:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1095:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1099:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
1203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
1299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
1411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
1516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** */
1524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** */
1532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
1542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif
1567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** */
1586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   @{
1595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #else
1603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #else
1623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
1660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1668 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  39              	 .loc 1 1669 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 DB68     	 ldr r3,[r3,#12]
  42 0008 03F4E063 	 and r3,r3,#1792
  43 000c 1B0A     	 lsrs r3,r3,#8
1670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
  44              	 .loc 1 1670 0
  45 000e 1846     	 mov r0,r3
  46 0010 BD46     	 mov sp,r7
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 13
  49              	 
  50 0012 5DF8047B 	 ldr r7,[sp],#4
  51              	.LCFI3:
  52              	 .cfi_restore 7
  53              	 .cfi_def_cfa_offset 0
  54 0016 7047     	 bx lr
  55              	.L4:
  56              	 .align 2
  57              	.L3:
  58 0018 00ED00E0 	 .word -536810240
  59              	 .cfi_endproc
  60              	.LFE105:
  62              	 .section .text.__NVIC_EnableIRQ,"ax",%progbits
  63              	 .align 2
  64              	 .thumb
  65              	 .thumb_func
  67              	__NVIC_EnableIRQ:
  68              	.LFB106:
1671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
  69              	 .loc 1 1680 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI4:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	.LCFI5:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 7
  84 0006 0346     	 mov r3,r0
  85 0008 FB71     	 strb r3,[r7,#7]
1681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  86              	 .loc 1 1681 0
  87 000a 97F90730 	 ldrsb r3,[r7,#7]
  88 000e 002B     	 cmp r3,#0
  89 0010 0BDB     	 blt .L5
1682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
  90              	 .loc 1 1683 0
1684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  91              	 .loc 1 1684 0
  92 0012 0849     	 ldr r1,.L7
  93 0014 97F90730 	 ldrsb r3,[r7,#7]
  94 0018 5B09     	 lsrs r3,r3,#5
  95 001a FA79     	 ldrb r2,[r7,#7]
  96 001c 02F01F02 	 and r2,r2,#31
  97 0020 0120     	 movs r0,#1
  98 0022 00FA02F2 	 lsl r2,r0,r2
  99 0026 41F82320 	 str r2,[r1,r3,lsl#2]
1685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
 100              	 .loc 1 1685 0
 101              	.L5:
1686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
 102              	 .loc 1 1687 0
 103 002a 0C37     	 adds r7,r7,#12
 104              	.LCFI7:
 105              	 .cfi_def_cfa_offset 4
 106 002c BD46     	 mov sp,r7
 107              	.LCFI8:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 002e 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI9:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0032 7047     	 bx lr
 115              	.L8:
 116              	 .align 2
 117              	.L7:
 118 0034 00E100E0 	 .word -536813312
 119              	 .cfi_endproc
 120              	.LFE106:
 122              	 .section .text.__NVIC_ClearPendingIRQ,"ax",%progbits
 123              	 .align 2
 124              	 .thumb
 125              	 .thumb_func
 127              	__NVIC_ClearPendingIRQ:
 128              	.LFB111:
1688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   else
1705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
1709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1710:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1711:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1712:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1713:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1716:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1717:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1719:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1721:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     __DSB();
1723:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     __ISB();
1724:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1725:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
1726:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1727:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1728:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1729:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1730:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1734:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1735:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1736:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1738:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1740:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1742:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   else
1743:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1744:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1745:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1746:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
1747:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1748:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1749:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1750:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1751:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1754:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1755:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1757:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1759:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1761:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
1762:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1763:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1764:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1765:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1766:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1769:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1770:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 129              	 .loc 1 1771 0
 130              	 .cfi_startproc
 131              	 
 132              	 
 133              	 
 134 0000 80B4     	 push {r7}
 135              	.LCFI10:
 136              	 .cfi_def_cfa_offset 4
 137              	 .cfi_offset 7,-4
 138 0002 83B0     	 sub sp,sp,#12
 139              	.LCFI11:
 140              	 .cfi_def_cfa_offset 16
 141 0004 00AF     	 add r7,sp,#0
 142              	.LCFI12:
 143              	 .cfi_def_cfa_register 7
 144 0006 0346     	 mov r3,r0
 145 0008 FB71     	 strb r3,[r7,#7]
1772:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 146              	 .loc 1 1772 0
 147 000a 97F90730 	 ldrsb r3,[r7,#7]
 148 000e 002B     	 cmp r3,#0
 149 0010 0CDB     	 blt .L9
1773:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1774:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 150              	 .loc 1 1774 0
 151 0012 0949     	 ldr r1,.L11
 152 0014 97F90730 	 ldrsb r3,[r7,#7]
 153 0018 5B09     	 lsrs r3,r3,#5
 154 001a FA79     	 ldrb r2,[r7,#7]
 155 001c 02F01F02 	 and r2,r2,#31
 156 0020 0120     	 movs r0,#1
 157 0022 00FA02F2 	 lsl r2,r0,r2
 158 0026 6033     	 adds r3,r3,#96
 159 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 160              	.L9:
1775:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1776:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
 161              	 .loc 1 1776 0
 162 002c 0C37     	 adds r7,r7,#12
 163              	.LCFI13:
 164              	 .cfi_def_cfa_offset 4
 165 002e BD46     	 mov sp,r7
 166              	.LCFI14:
 167              	 .cfi_def_cfa_register 13
 168              	 
 169 0030 5DF8047B 	 ldr r7,[sp],#4
 170              	.LCFI15:
 171              	 .cfi_restore 7
 172              	 .cfi_def_cfa_offset 0
 173 0034 7047     	 bx lr
 174              	.L12:
 175 0036 00BF     	 .align 2
 176              	.L11:
 177 0038 00E100E0 	 .word -536813312
 178              	 .cfi_endproc
 179              	.LFE111:
 181              	 .section .text.__NVIC_SetPriority,"ax",%progbits
 182              	 .align 2
 183              	 .thumb
 184              	 .thumb_func
 186              	__NVIC_SetPriority:
 187              	.LFB113:
1777:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1778:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1779:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1780:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1781:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1784:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1785:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1786:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1787:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1789:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1791:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1793:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   else
1794:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1795:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1796:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1797:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
1798:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1799:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1800:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1801:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1802:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1805:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1807:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1809:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 188              	 .loc 1 1810 0
 189              	 .cfi_startproc
 190              	 
 191              	 
 192              	 
 193 0000 80B4     	 push {r7}
 194              	.LCFI16:
 195              	 .cfi_def_cfa_offset 4
 196              	 .cfi_offset 7,-4
 197 0002 83B0     	 sub sp,sp,#12
 198              	.LCFI17:
 199              	 .cfi_def_cfa_offset 16
 200 0004 00AF     	 add r7,sp,#0
 201              	.LCFI18:
 202              	 .cfi_def_cfa_register 7
 203 0006 0346     	 mov r3,r0
 204 0008 3960     	 str r1,[r7]
 205 000a FB71     	 strb r3,[r7,#7]
1811:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 206              	 .loc 1 1811 0
 207 000c 97F90730 	 ldrsb r3,[r7,#7]
 208 0010 002B     	 cmp r3,#0
 209 0012 0ADB     	 blt .L14
1812:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1813:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 210              	 .loc 1 1813 0
 211 0014 0D49     	 ldr r1,.L16
 212 0016 97F90730 	 ldrsb r3,[r7,#7]
 213 001a 3A68     	 ldr r2,[r7]
 214 001c D2B2     	 uxtb r2,r2
 215 001e 9200     	 lsls r2,r2,#2
 216 0020 D2B2     	 uxtb r2,r2
 217 0022 0B44     	 add r3,r3,r1
 218 0024 83F80023 	 strb r2,[r3,#768]
 219 0028 0AE0     	 b .L13
 220              	.L14:
1814:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1815:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   else
1816:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1817:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 221              	 .loc 1 1817 0
 222 002a 0949     	 ldr r1,.L16+4
 223 002c FB79     	 ldrb r3,[r7,#7]
 224 002e 03F00F03 	 and r3,r3,#15
 225 0032 043B     	 subs r3,r3,#4
 226 0034 3A68     	 ldr r2,[r7]
 227 0036 D2B2     	 uxtb r2,r2
 228 0038 9200     	 lsls r2,r2,#2
 229 003a D2B2     	 uxtb r2,r2
 230 003c 0B44     	 add r3,r3,r1
 231 003e 1A76     	 strb r2,[r3,#24]
 232              	.L13:
1818:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1819:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
 233              	 .loc 1 1819 0
 234 0040 0C37     	 adds r7,r7,#12
 235              	.LCFI19:
 236              	 .cfi_def_cfa_offset 4
 237 0042 BD46     	 mov sp,r7
 238              	.LCFI20:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 0044 5DF8047B 	 ldr r7,[sp],#4
 242              	.LCFI21:
 243              	 .cfi_restore 7
 244              	 .cfi_def_cfa_offset 0
 245 0048 7047     	 bx lr
 246              	.L17:
 247 004a 00BF     	 .align 2
 248              	.L16:
 249 004c 00E100E0 	 .word -536813312
 250 0050 00ED00E0 	 .word -536810240
 251              	 .cfi_endproc
 252              	.LFE113:
 254              	 .section .text.NVIC_EncodePriority,"ax",%progbits
 255              	 .align 2
 256              	 .thumb
 257              	 .thumb_func
 259              	NVIC_EncodePriority:
 260              	.LFB115:
1820:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1821:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1822:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1823:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Priority
1824:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1827:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return             Interrupt Priority.
1829:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1831:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
1833:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1834:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1836:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1838:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   else
1839:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   {
1840:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   }
1842:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
1843:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1844:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1845:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** /**
1846:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Encode Priority
1847:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            preemptive priority value, and subpriority value.
1849:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1850:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****  */
1856:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** {
 261              	 .loc 1 1857 0
 262              	 .cfi_startproc
 263              	 
 264              	 
 265              	 
 266 0000 80B4     	 push {r7}
 267              	.LCFI22:
 268              	 .cfi_def_cfa_offset 4
 269              	 .cfi_offset 7,-4
 270 0002 89B0     	 sub sp,sp,#36
 271              	.LCFI23:
 272              	 .cfi_def_cfa_offset 40
 273 0004 00AF     	 add r7,sp,#0
 274              	.LCFI24:
 275              	 .cfi_def_cfa_register 7
 276 0006 F860     	 str r0,[r7,#12]
 277 0008 B960     	 str r1,[r7,#8]
 278 000a 7A60     	 str r2,[r7,#4]
1858:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 279              	 .loc 1 1858 0
 280 000c FB68     	 ldr r3,[r7,#12]
 281 000e 03F00703 	 and r3,r3,#7
 282 0012 FB61     	 str r3,[r7,#28]
1859:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t SubPriorityBits;
1861:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1862:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 283              	 .loc 1 1862 0
 284 0014 FB69     	 ldr r3,[r7,#28]
 285 0016 C3F10703 	 rsb r3,r3,#7
 286 001a 062B     	 cmp r3,#6
 287 001c 28BF     	 it cs
 288 001e 0623     	 movcs r3,#6
 289 0020 BB61     	 str r3,[r7,#24]
1863:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 290              	 .loc 1 1863 0
 291 0022 FB69     	 ldr r3,[r7,#28]
 292 0024 0633     	 adds r3,r3,#6
 293 0026 062B     	 cmp r3,#6
 294 0028 02D9     	 bls .L19
 295              	 .loc 1 1863 0 is_stmt 0 discriminator 1
 296 002a FB69     	 ldr r3,[r7,#28]
 297 002c 013B     	 subs r3,r3,#1
 298 002e 00E0     	 b .L20
 299              	.L19:
 300              	 .loc 1 1863 0 discriminator 2
 301 0030 0023     	 movs r3,#0
 302              	.L20:
 303              	 .loc 1 1863 0 discriminator 4
 304 0032 7B61     	 str r3,[r7,#20]
1864:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** 
1865:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****   return (
1866:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 305              	 .loc 1 1866 0 is_stmt 1 discriminator 4
 306 0034 BB69     	 ldr r3,[r7,#24]
 307 0036 0122     	 movs r2,#1
 308 0038 02FA03F3 	 lsl r3,r2,r3
 309 003c 5A1E     	 subs r2,r3,#1
 310 003e BB68     	 ldr r3,[r7,#8]
 311 0040 1A40     	 ands r2,r2,r3
 312 0042 7B69     	 ldr r3,[r7,#20]
 313 0044 9A40     	 lsls r2,r2,r3
1867:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 314              	 .loc 1 1867 0 discriminator 4
 315 0046 7B69     	 ldr r3,[r7,#20]
 316 0048 0121     	 movs r1,#1
 317 004a 01FA03F3 	 lsl r3,r1,r3
 318 004e 591E     	 subs r1,r3,#1
 319 0050 7B68     	 ldr r3,[r7,#4]
 320 0052 0B40     	 ands r3,r3,r1
1865:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 321              	 .loc 1 1865 0 discriminator 4
 322 0054 1343     	 orrs r3,r3,r2
1868:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h ****          );
1869:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include\core_cm4.h **** }
 323              	 .loc 1 1869 0 discriminator 4
 324 0056 1846     	 mov r0,r3
 325 0058 2437     	 adds r7,r7,#36
 326              	.LCFI25:
 327              	 .cfi_def_cfa_offset 4
 328 005a BD46     	 mov sp,r7
 329              	.LCFI26:
 330              	 .cfi_def_cfa_register 13
 331              	 
 332 005c 5DF8047B 	 ldr r7,[sp],#4
 333              	.LCFI27:
 334              	 .cfi_restore 7
 335              	 .cfi_def_cfa_offset 0
 336 0060 7047     	 bx lr
 337              	 .cfi_endproc
 338              	.LFE115:
 340 0062 00BF     	 .section .text.XMC_SDMMC_IsAnyErrorEvent,"ax",%progbits
 341              	 .align 2
 342              	 .thumb
 343              	 .thumb_func
 345              	XMC_SDMMC_IsAnyErrorEvent:
 346              	.LFB180:
 347              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_sdmmc.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
   2:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
   3:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @file xmc_sdmmc.h
   4:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @date 2019-05-07
   5:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
   6:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @cond
   7:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  **************************************************************************************************
   8:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library
   9:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  10:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  11:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * All rights reserved.                        
  12:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                             
  13:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * following conditions are met:   
  15:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  16:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * disclaimer.                        
  18:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 
  19:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 
  22:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  25:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  33:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  **************************************************************************************************
  36:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  37:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Change History
  38:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * --------------
  39:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2015-02-20:
  41:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Initial version
  42:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Documentation updates
  43:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2015-06-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-01-16:
  48:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added the following APIs to the XMC_SDMMC low level driver <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         1) XMC_SDMMC_EnableDelayCmdDatLines <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         2) XMC_SDMMC_DisableDelayCmdDatLines <br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         3) XMC_SDMMC_SetDelay <br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         4) XMC_SDMMC_EnableHighSpeed <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         5) XMC_SDMMC_DisableHighSpeed <br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  55:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-04-07:
  56:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added XMC_SDMMC_COMMAND_RESPONSE_t <br>
  57:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-07-11:
  59:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Adjust masks for the following functions: <br>
  60:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetBusVoltage <br>
  61:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetDataLineTimeout <br>
  62:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       3) XMC_SDMMC_SDClockFreqSelect <br>
  63:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  64:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2017-02-14:
  65:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added: <br>
  66:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetCardDetectionStatus() <br>
  67:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetCardDetectionSource() <br>
  68:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2018-08-29:
  70:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - XMC_SDMMC_SetCardDetectionStatus() and XMC_SDMMC_SetCardDetectionSource()
  71:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       Changed for XMC43/XMC47/XMC48 to use SDMMC Write Protection and Card Detection Control reg
  72:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added for XMC43/XMC47/XMC48:
  73:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetWriteProtectionSource()
  74:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetWriteProtectionStatus()
  75:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2019-05-07:
  77:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Fix compilation issues on XMC45
  78:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Fix compilation warnings
  79:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @endcond
  81:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
  82:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  83:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #ifndef XMC_SDMMC_H
  84:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_H
  85:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  86:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
  87:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * HEADER FILES
  88:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
  89:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  
  90:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #include "xmc_common.h"
  91:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (SDMMC)
  93:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  94:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if (UC_SERIES != XMC45)
  95:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSEL_Pos  0
  96:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSEL_Msk  0x00000001UL
  97:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSVAL_Pos 4
  98:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSVAL_Msk 0x00000010UL
  99:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSEL_Pos  16
 100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSEL_Msk  0x00010000UL
 101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSVAL_Pos 20
 102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSVAL_Msk 0x00100000UL
 103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @{
 108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @addtogroup SDMMC
 112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @brief Secure Digital/Multi Media Card (SDMMC) driver for the XMC4500 microcontroller
 113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC peripheral provides an interface between SD/SDIO/MMC cards and the AHB. It handles
 115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the SD/SDIO protocol at transmission level. It automatically packs data and checks for CRC,
 116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * start/end bits and format correctness. For SD cards, a maximum transfer rate of 24MB/sec is
 117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * supported and for MMC cards, 48MB/sec.
 118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The peripheral can be used for applications that require large storage memory; e.g. Data logging
 120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * firmware updates or an embedded database.
 121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC low level driver provides functions to configure and initialize the SDMMC hardware
 123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * peripheral.
 124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @{
 125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * MACROS
 129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * A convenient symbol for the SDMMC peripheral base address
 133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (SDMMC)
 135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** # define XMC_SDMMC ((XMC_SDMMC_t *)SDMMC_BASE)
 136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** # error 'SDMMC' base peripheral pointer not defined
 138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid ACMD errors <br>
 142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_MODULE_PTR(p) ((p) == XMC_SDMMC)
 146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid ACMD errors <br>
 149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_ACMD_ERR(v)\
 153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((v == XMC_SDMMC_ACMD12_NOT_EXEC_ERR) ||\
 154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_TIMEOUT_ERR)    ||\
 155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_CRC_ERR)        ||\
 156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_END_BIT_ERR)    ||\
 157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_IND_ERR)        ||\
 158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR))
 159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid SDCLK divider frequency <br>
 162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_SDCLK_FREQ(f)\
 166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((f == XMC_SDMMC_CLK_DIV_1)           ||\
 167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_2)           ||\
 168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_4)           ||\
 169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_8)           ||\
 170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_16)          ||\
 171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_32)          ||\
 172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_64)          ||\
 173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_128)         ||\
 174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_256))
 175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid bus voltage levels <br>
 178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_BUS_VOLTAGE(v)\
 182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   (v == XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS)
 183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid data timeout counter values <br>
 186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DAT_TIMEOUT_COUNTER(c)\
 190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_13) ||\
 191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_14) ||\
 192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_15) ||\
 193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_16) ||\
 194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_17) ||\
 195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_18) ||\
 196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_19) ||\
 197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_20) ||\
 198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_21) ||\
 199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_22) ||\
 200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_23) ||\
 201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_24) ||\
 202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_25) ||\
 203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_26) ||\
 204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27))
 205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Valid number of data lines <br>
 208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DATA_LINES(l)\
 212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((l == XMC_SDMMC_DATA_LINES_1)        ||\
 213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (l == XMC_SDMMC_DATA_LINES_4)        ||\
 214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (l == XMC_SDMMC_DATA_LINES_8))
 215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check data transfer dir: Host to card and vice-versa <br>
 218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DATA_TRANSFER_DIR(d)\
 222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((d == XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD)   ||\
 223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (d == XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST))
 224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Min and max number of delay elements <br>
 227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_MIN_DELAY_ELEMENTS (0U)
 231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_MAX_DELAY_ELEMENTS (15U)
 232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ENUMS
 235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Number of data lines for SDMMC data transfer
 239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DATA_LINES
 241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_1 = 0x00U, /**< Single data line mode */
 243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_4 = 0x02U, /**< 4-bit mode */
 244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_8 = 0x20U  /**< SD 8-bit mode */
 245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DATA_LINES_t;
 246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Valid SD clock frequency divider selection
 249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_SDCLK_FREQ_SEL
 251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_1   = 0x00U, /**< Base clock (10 Mhz -> 63 Mhz) */
 253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_2   = 0x01U, /**< Base clock divided by 2 */
 254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_4   = 0x02U, /**< Base clock divided by 4 */
 255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_8   = 0x04U, /**< Base clock divided by 8 */
 256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_16  = 0x08U, /**< Base clock divided by 16 */
 257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_32  = 0x10U, /**< Base clock divided by 32 */
 258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_64  = 0x20U, /**< Base clock divided by 64 */
 259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_128 = 0x40U, /**< Base clock divided by 128 */
 260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_256 = 0x80U  /**< Base clock divided by 256 */
 261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_SDCLK_FREQ_SEL_t;
 262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Status return values for the SDMMC low level driver
 265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_STATUS
 267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_SUCCESS       = 0U, /**< Operation successful */
 269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_CMD_LINE_BUSY,      /**< Command line busy */
 270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_DAT_LINE_BUSY       /**< Data line busy */
 271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_STATUS_t;
 272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC events (Normal and error events)
 275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_EVENT
 277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_COMPLETE       = 0x01U, /**< Command complete event */
 279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TX_COMPLETE        = 0x02U, /**< Transmit complete event */
 280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BLOCK_GAP_EVENT    = 0x04U, /**< Block gap event */
 281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUFFER_WRITE_READY = 0x10U, /**< Buffer write ready event */
 282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUFFER_READ_READY  = 0x20U, /**< Buffer read ready event */
 283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_INS           = 0x40U, /**< Card insert event */
 284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_REMOVAL       = 0x80U, /**< Card removal event */
 285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_INT           = 0x100U, /**< Card INT event */
 286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_ERR           = 0x8000U, /**< Card error interrupt */
 287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_TIMEOUT_ERR    = ((uint32_t)0x01 << 16U),   /**< Command time-out error */
 288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_CRC_ERR        = ((uint32_t)0x02U << 16U),  /**< Command CRC error */
 289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_END_BIT_ERR    = ((uint32_t)0x04U << 16U),  /**< Command end bit error */
 290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_IND_ERR        = ((uint32_t)0x08U << 16U),  /**< Command index error */
 291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TIMEOUT_ERR   = ((uint32_t)0x10U << 16U),  /**< Data time-out error */
 292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_CRC_ERR       = ((uint32_t)0x20U << 16U),  /**< Data CRC error */
 293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_END_BIT_ERR   = ((uint32_t)0x40U << 16U),  /**< Data end bit error */
 294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CURRENT_LIMIT_ERR  = ((uint32_t)0x80U << 16U),  /**< Current limit error */
 295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_ERR           = ((uint32_t)0x100U << 16U), /**< ACMD error */
 296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TARGET_RESP_ERR    = ((uint32_t)0x1000U << 16U) /**< Target response error */
 297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_EVENT_t;
 298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC wakeup events
 301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WAKEUP_EVENT
 303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_INT = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_INT_Msk, /**< Wakeup on card int
 305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_INS = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_INS_Msk, /**< Wakeup on SD card 
 306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_REM = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_REM_Msk  /**< Wakeup SD card rem
 307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WAKEUP_EVENT_t;
 308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC software reset modes
 311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_SW_RESET
 313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RESET_ALL    = SDMMC_SW_RESET_SW_RST_ALL_Msk,      /**< Software reset all */
 315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RST_CMD_LINE = SDMMC_SW_RESET_SW_RST_CMD_LINE_Msk, /**< Software reset command line 
 316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RST_DAT_LINE = SDMMC_SW_RESET_SW_RST_DAT_LINE_Msk  /**< Software reset data line */
 317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_SW_RESET_t;
 318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * CMD12 response errors of Auto CMD12
 321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_ACMD_ERR
 323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD12_NOT_EXEC_ERR = SDMMC_ACMD_ERR_STATUS_ACMD12_NOT_EXEC_ERR_Msk, /**< ACMD12 not ex
 325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_TIMEOUT_ERR    = SDMMC_ACMD_ERR_STATUS_ACMD_TIMEOUT_ERR_Msk,    /**< ACMD timeout 
 326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_CRC_ERR        = SDMMC_ACMD_ERR_STATUS_ACMD_CRC_ERR_Msk,        /**< ACMD CRC erro
 327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_END_BIT_ERR    = SDMMC_ACMD_ERR_STATUS_ACMD_END_BIT_ERR_Msk,    /**< ACMD end bit 
 328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_IND_ERR        = SDMMC_ACMD_ERR_STATUS_ACMD_IND_ERR_Msk,        /**< ACMD IND erro
 329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR = SDMMC_ACMD_ERR_STATUS_CMD_NOT_ISSUED_BY_ACMD12_ERR_Msk /
 330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_ACMD_ERR_t;
 331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC response types
 334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_RESPONSE_TYPE
 336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_NO_RESPONSE = 0U, /**< No response */
 338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R1,               /**< Response type: R1 */
 339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R1b,              /**< Response type: R1b */
 340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R2,               /**< Response type: R2 */
 341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R3,               /**< Response type: R3 */
 342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R6,               /**< Response type: R6 */
 343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R7                /**< Response type: R7 */
 344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_RESPONSE_TYPE_t;
 345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** * Command response selection
 348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** */
 349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_COMMAND_RESPONSE
 350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_NONE = 0, /**< No Response */
 352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_LONG = 1, /**< Response length 136 */
 353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_SHORT = 2, /**< Response length 48 */
 354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_SHORT_BUSY = 3, /**< Response length 48 check Busy after response */
 355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_RESPONSE_t;
 356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Types of SDMMC commands
 359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_COMMAND_TYPE
 361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_NORMAL  = 0U, /**< Command normal */
 363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_SUSPEND,      /**< Command suspend */
 364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_RESUME,       /**< Command resume */
 365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_ABORT         /**< Command abort */
 366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_TYPE_t;
 367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer modes
 370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_TRANSFER_MODE_TYPE
 372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_SINGLE        = 0x00U, /**< Transfer mode type: single */
 374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_INFINITE      = 0x20U, /**< Transfer mode type: infinite */
 375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_MULTIPLE      = 0x22U, /**< Transfer mode type: multiple */
 376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_STOP_MULTIPLE = 0x22U  /**< Transfer mode type: multiple stop */
 377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_TYPE_t;
 378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Auto command transfer modes
 381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_TRANSFER_MODE_AUTO_CMD
 383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_DISABLED = 0x00U, /**< ACMD mode disabled */
 385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_12                /**< ACMD12 mode */
 386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_t;
 387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC bus voltage level
 390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_BUS_VOLTAGE
 392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS = 0x07U /**< 3.3V */
 394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_BUS_VOLTAGE_t;
 395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Data line timeout counter values
 398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DAT_TIMEOUT_COUNTER
 400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_13 = 0U, /**< SDCLK * (2 ^ 13) */
 402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_14 = 1U, /**< SDCLK * (2 ^ 14) */
 403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_15 = 2U, /**< SDCLK * (2 ^ 15) */
 404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_16 = 3U, /**< SDCLK * (2 ^ 16) */
 405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_17 = 4U, /**< SDCLK * (2 ^ 17) */
 406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_18 = 5U, /**< SDCLK * (2 ^ 18) */
 407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_19 = 6U, /**< SDCLK * (2 ^ 19) */
 408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_20 = 7U, /**< SDCLK * (2 ^ 20) */
 409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_21 = 8U, /**< SDCLK * (2 ^ 21) */
 410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_22 = 9U, /**< SDCLK * (2 ^ 22) */
 411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_23 = 10U, /**< SDCLK * (2 ^ 23) */
 412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_24 = 11U, /**< SDCLK * (2 ^ 24) */
 413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_25 = 12U, /**< SDCLK * (2 ^ 25) */
 414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_26 = 13U, /**< SDCLK * (2 ^ 26) */
 415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27 = 14U, /**< SDCLK * (2 ^ 27) */
 416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DAT_TIMEOUT_COUNTER_t;
 417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC data transfer direction
 420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DATA_TRANSFER_DIR
 422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD = 0U, /**< Host to card */
 424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST       /**< Card to host */
 425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DATA_TRANSFER_DIR_t;
 426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC card detection signal source
 429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_CD_SOURCE
 431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45 || defined(DOXYGEN)
 433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_PIN = 0 << SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Pos, /**< P1.10 input pin s
 434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_SW = 1 << SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Pos   /**< Software is selec
 435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_PIN = 0 << SDMMC_CON_CDSEL_Pos, /**< P1.10 input pin selected */
 437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_SW = 1 << SDMMC_CON_CDSEL_Pos   /**< Software is selected */
 438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CD_SOURCE_t;
 440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Used to set the SDMMC card detection status when the card detection status source input is set t
 443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_CD_STATUS
 445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45 || defined(DOXYGEN)
 447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_NO_CARD = 0 << SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Pos, /**< No card detec
 448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_INSERTED = 1 << SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Pos /**< Card detected
 449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_NO_CARD = 0 << SDMMC_CON_CDSVAL_Pos,  /**< No card detected */
 451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_INSERTED = 1 << SDMMC_CON_CDSVAL_Pos  /**< Card detected */
 452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CD_STATUS_t;
 454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES != XMC45 || defined(DOXYGEN)
 456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC card write protection signal source
 458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only available for XMC4300, XMC4800 and XMC4700 series
 459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WP_SOURCE
 461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_SOURCE_PIN = 0 << SDMMC_CON_WPSEL_Pos, /**< P1.1 input pin selected */
 463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_SOURCE_SW = 1 << SDMMC_CON_WPSEL_Pos   /**< Software is selected */
 464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WP_SOURCE_t;
 465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Used to set the SDMMC card protection status when the card protection status source input is set
 468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only available for XMC4300, XMC4800 and XMC4700 series
 469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WP_STATUS
 471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_STATUS_NO_WRITE_PROTECTION = 0 << SDMMC_CON_WPSVAL_Pos, /**< No write protection */
 473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_STATUS_WRITE_PROTECTION = 1 << SDMMC_CON_WPSVAL_Pos     /**< Write protection active
 474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WP_STATUS_t;
 475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * DATA STRUCTURES
 479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC device structure <br>
 483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure represents a collection of all hardware registers used
 485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * to configure the SDMMC peripheral on the XMC4500 microcontroller. The
 486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers can be accessed with ::XMC_SDMMC.
 487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct
 489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED0;
 491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  BLOCK_SIZE;
 492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  BLOCK_COUNT;
 493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  ARGUMENT1;
 494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  TRANSFER_MODE;
 495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  COMMAND;
 496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESPONSE[4];
 497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  DATA_BUFFER;
 498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  PRESENT_STATE;
 499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   HOST_CTRL;
 500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   POWER_CTRL;
 501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   BLOCK_GAP_CTRL;
 502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   WAKEUP_CTRL;
 503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  CLOCK_CTRL;
 504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   TIMEOUT_CTRL;
 505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   SW_RESET;
 506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  INT_STATUS_NORM;
 507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  INT_STATUS_ERR;
 508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_STATUS_NORM;
 509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_STATUS_ERR;
 510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_SIGNAL_NORM;
 511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_SIGNAL_ERR;
 512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  ACMD_ERR_STATUS;
 513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  RESERVED1[9];
 514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint16_t  FORCE_EVENT_ACMD_ERR_STATUS;
 515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint16_t  FORCE_EVENT_ERR_STATUS;
 516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED2[8];
 517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint32_t  DEBUG_SEL;
 518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED3[30];
 519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  SPI;
 520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED4[2];
 521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  SLOT_INT_STATUS;
 522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_t;
 523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /* Anonymous structure/union guard start */
 525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (__CC_ARM)
 526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma push
 527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma anon_unions
 528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #elif defined (__TASKING__)
 529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma warning 586
 530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Present state of the SDMMC host controller <br>
 534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure presents a convenient way to obtain the SDMMC peripheral's
 536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * present state information (for example, the write protect pin level). The
 537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_GetPresentState() API can be used to populate the structure
 538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * with the state of the SD host controller.
 539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef union XMC_SDMMC_PRESENT_STATE
 541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   struct
 543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   {
 544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint32_t command_inihibit_cmd    : 1; /**< Command: Inhibit command */
 545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t command_inihibit_dat    : 1; /**< Command: Inhibit data */
 546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat_line_active     : 1; /**< Data line active */
 547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t             : 5;
 548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t write_transfer_active   : 1; /**< Write transfer active */
 549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t read_transfer_active    : 1; /**< Read transfer active */
 550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t buffer_write_enable   : 1; /**< Buffer write enable */
 551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t buffer_read_enable    : 1; /**< Buffer read enable */
 552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t             : 4;
 553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_inserted       : 1; /**< Card inserted */
 554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_state_stable     : 1; /**< Card state stable */
 555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_detect_pin_level   : 1; /**< Card detect pin level */
 556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t write_protect_pin_level : 1; /**< Write protect pin level */
 557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat_3_0_pin_level     : 4; /**< Data 3_0 pin level */
 558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t cmd_line_level          : 1; /**< Command line level */
 559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat7_4_pin_level        : 4; /**< Data 7_4 pin level */
 560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t                         : 3;
 561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   };
 562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t b32;
 563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_PRESENT_STATE_t;
 564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer mode configuration
 567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_TRANSFER_MODE
 569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t block_size;
 571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t num_blocks;
 572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_t type;
 573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_t auto_cmd;
 574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_DIR_t direction;
 575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_t;
 576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Represent an SDMMC command <br>
 579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure holds the configuration for an SDMMC command. The SDMMC
 581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * COMMAND register is a 16-bit register which is responsible for enabling
 582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * configuration parameters like command type, response type, index check
 583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * enable (and a few more). Once SDMMC.COMMAND is configured, the
 584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_SendCommand() function can be used to send the command.
 585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef union XMC_SDMMC_COMMAND
 587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   struct
 589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   {
 590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t response_type_sel : 2; /**< Response type select ::XMC_SDMMC_COMMAND_RESPONSE_t */
 591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t                   : 1;
 592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t crc_check_en      : 1; /**< Command CRC check enable */
 593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t index_check_en    : 1; /**< Command index check enable */
 594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t dat_present_sel   : 1; /**< Data present select */
 595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t cmd_type          : 2; /**< Command type ::XMC_SDMMC_COMMAND_TYPE_t */
 596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t cmd_index         : 6; /**< Command index */
 597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t                   : 2;
 598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   };
 599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint16_t cmd;
 600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_t;
 601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /* Anonymous structure/union guard end */
 603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (__CC_ARM)
 604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma pop
 605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #elif defined (__TASKING__)
 606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma warning restore
 607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Card response structure
 611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_RESPONSE
 613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_0;
 615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_2;
 616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_4;
 617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_6;
 618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_RESPONSE_t;
 619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC configuration data structure <br>
 622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure is used to configure the bus width and the clock divider.
 624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_CONFIG
 626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint8_t bus_width; /**< SDMMC bus width */
 628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SDCLK_FREQ_SEL_t clock_divider; /**< SDMMC clock divider */
 629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CONFIG_t;
 630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * API PROTOTYPES
 633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #ifdef __cplusplus
 636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** extern "C" {
 637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get power status of the SDMMC peripheral <br>
 645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function checks the SD_BUS_POWER bit-field of the POWER_CTRL register and returns
 648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * a boolean value - "on" or "off".
 649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** bool XMC_SDMMC_GetPowerStatus(XMC_SDMMC_t *const sdmmc);
 651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC peripheral <br>
 658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function de-asserts the peripheral reset. The peripheral needs to be initialized.
 661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_Enable(XMC_SDMMC_t *const sdmmc);
 663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable SDMMC peripheral <br>
 670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function asserts the peripheral reset.
 673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_Disable(XMC_SDMMC_t *const sdmmc);
 675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to a constant XMC_SDMMC_CONFIG_t structure containing the
 679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *               bus width and clock divider configuration
 680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return ::XMC_SDMMC_STATUS_SUCCESS
 681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Initialize the SDMMC peripheral <br>
 684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables the SDMMC peripheral, sets the internal clock divider register
 687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and sets the bus width.
 688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** XMC_SDMMC_STATUS_t XMC_SDMMC_Init(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_CONFIG_t *config);
 690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC normal and error event(s) <br>
 699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function first sets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to enable interrupt status for requested normal/error SDMMC events. It then
 703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * sets the bit-fields of EN_INT_SIGNAL_NORM and EN_INT_SIGNAL_ERR to enable the
 704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * interrupt generation for the requested events.
 705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_EnableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 710:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 711:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 712:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 713:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 714:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 715:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable normal and error SDMMC event(s) <br>
 716:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 717:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 718:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables the interrupt generation for the requested events by clearing
 719:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the bit-fields of EN_INT_SIGNAL_NORM and EN_INT_SIGNAL_ERR registers.
 720:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 721:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note:</b><br>
 722:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The XMC_SDMMC_DisableEvent() function doesn't reset the the interrupt status. One
 723:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * may still use XMC_SDMMC_GetEvent() to check the status of requested events even if
 724:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the interrupt generation is already disabled.
 725:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 726:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_DisableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 727:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 728:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 729:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 730:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 731:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 732:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 733:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 734:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 735:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Clear SDMMC event(s) <br>
 736:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 737:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 738:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function clears requested normal/error events by settings the bit-fields of
 739:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the INT_STATUS register. Please check SDMMC_INT_STATUS_NORM in the XMC45000
 740:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * manual for more details.
 741:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 742:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_ClearEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 743:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 744:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 745:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 746:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t)
 747:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 748:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 749:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 750:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get SDMMC event status <br>
 751:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 752:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 753:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function returns the status of a single requested (normal/error) event by
 754:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * reading the appropriate bit-fields of the INT_STATUS register.
 755:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 756:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** bool XMC_SDMMC_GetEvent(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_EVENT_t event);
 757:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 758:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 759:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 760:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 761:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 762:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 763:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 765:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable event status <br>
 766:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 767:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 768:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 769:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to enable interrupt status for requested normal/error SDMMC events.
 770:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 771:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_EnableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event);
 772:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 773:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 774:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 775:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 776:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 777:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 778:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 779:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 780:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable event status <br>
 781:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 782:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 783:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 784:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to disable interrupt status for requested normal/error SDMMC events.
 785:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 786:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_DisableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event);
 787:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 788:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 789:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 790:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (::XMC_SDMMC_EVENT_t) or a valid combination of
 791:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 792:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 793:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 794:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 795:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Trigger SDMMC error events <br>
 796:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 797:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 798:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC peripheral supports triggering of following error events: <br>
 799:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_CMD_TIMEOUT_ERR, ::XMC_SDMMC_CMD_CRC_ERR, ::XMC_SDMMC_CMD_END_BIT_ERR,
 801:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_CMD_IND_ERR, ::XMC_SDMMC_DATA_TIMEOUT_ERR, ::XMC_SDMMC_DATA_CRC_ERR,
 802:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_DATA_END_BIT_ERR, ::XMC_SDMMC_CURRENT_LIMIT_ERR, ::XMC_SDMMC_ACMD_ERR,
 803:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_TARGET_RESP_ERR
 804:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 805:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * For triggering Auto CMD12 error, see XMC_SDMMC_TriggerACMDErr()
 806:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 807:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_TriggerEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 808:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 809:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_TriggerEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 810:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 811:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->FORCE_EVENT_ERR_STATUS |= (uint16_t)(event >> 16U);
 812:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 813:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 814:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 815:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 816:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param source A valid SDMMC card detection signal source (::XMC_SDMMC_CD_SOURCE_t)
 817:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 818:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 819:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 820:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Selects source for card detection
 821:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 822:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetCardDetectionSource(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_CD_SOURCE
 823:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 824:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetCardDetectionSource: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
 825:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 826:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45
 827:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (sdmmc->HOST_CTRL & (uint32_t)~SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Msk) | 
 828:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 829:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 830:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_CDSEL_Msk) | source;
 831:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 832:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 833:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 834:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 835:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 836:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 837:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 838:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param status A valid SDMMC card detection status (::XMC_SDMMC_CD_STATUS_t)
 839:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 840:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 841:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 842:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Sets the card detection status indicating whether card is inserted or not.
 843:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Generates (card ins or card removal) interrupt when the normal interrupt is enabled.
 844:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only valid if SDMMC card detection signal source is set to XMC_SDMMC_CD_SOURCE_SW <br>
 845:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 846:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 847:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetCardDetectionStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_CD_STATUS
 848:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 849:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetCardDetectionStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
 850:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 851:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45
 852:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (sdmmc->HOST_CTRL & (uint32_t)~SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Msk) | 
 853:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 854:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 855:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_CDSVAL_Msk) | status;
 856:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 857:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 858:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 859:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 860:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 861:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 862:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param source A valid SDMMC card detection signal source (::XMC_SDMMC_WP_SOURCE_t)
 863:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 864:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 865:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 866:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Selects input for card write protection status
 867:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 868:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetWriteProtectionSource(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_WP_SOUR
 869:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 870:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetWriteProtectionSource: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
 871:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 872:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 873:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES != XMC45
 874:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_WPSEL_Msk) | source;
 875:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 876:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 877:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 878:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 879:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 880:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param status A valid SDMMC card detection status (::XMC_SDMMC_WP_STATUS_t)
 881:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 882:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 883:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 884:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Sets the card write protection status indicating whether card is write protected or not.
 885:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only valid if SDMMC card detection signal source is set to XMC_SDMMC_WP_SOURCE_SW <br>
 886:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 887:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 888:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetWriteProtectionStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_WP_STAT
 889:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 890:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetWriteProtectionStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
 891:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 892:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 893:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES != XMC45
 894:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_WPSVAL_Msk) | status;
 895:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 896:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 897:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 898:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 899:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 900:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 901:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 902:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 903:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 904:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if any error event has occured <br>
 905:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 906:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 907:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function can typically be used for writing an error interrupt recovery routine.
 908:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Should any error be indicated (If XMC_SDMMC_IsAnyErrorEvent() returns true), the
 909:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * routine may then clear the event after indicating the error event and reset the
 910:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC command and data lines.
 911:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 912:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsAnyErrorEvent(XMC_SDMMC_t *const sdmmc)
 913:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 348              	 .loc 2 913 0
 349              	 .cfi_startproc
 350              	 
 351              	 
 352              	 
 353 0000 80B4     	 push {r7}
 354              	.LCFI28:
 355              	 .cfi_def_cfa_offset 4
 356              	 .cfi_offset 7,-4
 357 0002 83B0     	 sub sp,sp,#12
 358              	.LCFI29:
 359              	 .cfi_def_cfa_offset 16
 360 0004 00AF     	 add r7,sp,#0
 361              	.LCFI30:
 362              	 .cfi_def_cfa_register 7
 363 0006 7860     	 str r0,[r7,#4]
 914:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsAnyErrorEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
 915:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 916:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->INT_STATUS_ERR);
 364              	 .loc 2 916 0
 365 0008 7B68     	 ldr r3,[r7,#4]
 366 000a 5B8E     	 ldrh r3,[r3,#50]
 367 000c 9BB2     	 uxth r3,r3
 368 000e 002B     	 cmp r3,#0
 369 0010 14BF     	 ite ne
 370 0012 0123     	 movne r3,#1
 371 0014 0023     	 moveq r3,#0
 372 0016 DBB2     	 uxtb r3,r3
 917:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 373              	 .loc 2 917 0
 374 0018 1846     	 mov r0,r3
 375 001a 0C37     	 adds r7,r7,#12
 376              	.LCFI31:
 377              	 .cfi_def_cfa_offset 4
 378 001c BD46     	 mov sp,r7
 379              	.LCFI32:
 380              	 .cfi_def_cfa_register 13
 381              	 
 382 001e 5DF8047B 	 ldr r7,[sp],#4
 383              	.LCFI33:
 384              	 .cfi_restore 7
 385              	 .cfi_def_cfa_offset 0
 386 0022 7047     	 bx lr
 387              	 .cfi_endproc
 388              	.LFE180:
 390              	 .section .text.XMC_SDMMC_GetACMDErrStatus,"ax",%progbits
 391              	 .align 2
 392              	 .thumb
 393              	 .thumb_func
 395              	XMC_SDMMC_GetACMDErrStatus:
 396              	.LFB183:
 918:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 919:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 920:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 921:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC wakeup event (::XMC_SDMMC_WAKEUP_EVENT_t) or a valid combination
 922:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd wakeup events
 923:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 924:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 925:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 926:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable wakeup event(s) <br>
 927:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 929:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables SDMMC wakeup events by setting appropriate bit-fields of the WAKEUP_CTRL
 930:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * register. <br>
 931:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 932:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * List of supported wakeup events -> Wakeup on: <br>
 933:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) Card interrupt <br>
 934:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) SD card insertion <br>
 935:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) SD card removal <br>
 936:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 937:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableWakeupEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 938:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 939:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableWakeupEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
 940:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 941:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->WAKEUP_CTRL |= (uint8_t)event;
 942:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 943:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 944:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 945:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 946:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC wakeup event (::XMC_SDMMC_WAKEUP_EVENT_t) or a valid combination
 947:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd wakeup events
 948:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 949:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 950:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 951:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable wakeup event(s) <br>
 952:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 953:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 954:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables SDMMC wakeup events by clearing appropriate bit-fields of the WAKEUP_CTRL
 955:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * register. <br>
 956:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 957:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * List of supported wakeup events -> Wakeup on: <br>
 958:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) Card interrupt <br>
 959:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) SD card insertion <br>
 960:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) SD card removal <br>
 961:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 962:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableWakeupEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 963:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 964:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_DisableWakeupEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
 965:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 966:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->WAKEUP_CTRL &= (uint8_t)~event;
 967:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 968:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 969:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 970:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 971:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param error A valid SDMMC ACMD error (::XMC_SDMMC_ACMD_ERR_t)
 972:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 973:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 974:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 975:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get status of Auto CMD12 errors <br>
 976:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 977:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 978:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function detects the presence of an Auto CMD12 error. A boolean is returned to
 979:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * indicate if an error is detected.
 980:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 981:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetACMDErrStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_ACMD_ERR_t erro
 982:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 397              	 .loc 2 982 0
 398              	 .cfi_startproc
 399              	 
 400              	 
 401              	 
 402 0000 80B4     	 push {r7}
 403              	.LCFI34:
 404              	 .cfi_def_cfa_offset 4
 405              	 .cfi_offset 7,-4
 406 0002 83B0     	 sub sp,sp,#12
 407              	.LCFI35:
 408              	 .cfi_def_cfa_offset 16
 409 0004 00AF     	 add r7,sp,#0
 410              	.LCFI36:
 411              	 .cfi_def_cfa_register 7
 412 0006 7860     	 str r0,[r7,#4]
 413 0008 0B46     	 mov r3,r1
 414 000a FB70     	 strb r3,[r7,#3]
 983:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetACMDErrStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
 984:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetACMDErrStatus: Invalid ACMD response error", XMC_SDMMC_CHECK_ACMD_ERR(er
 985:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 986:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->ACMD_ERR_STATUS & (uint16_t)error);
 415              	 .loc 2 986 0
 416 000c 7B68     	 ldr r3,[r7,#4]
 417 000e 9B8F     	 ldrh r3,[r3,#60]
 418 0010 9BB2     	 uxth r3,r3
 419 0012 1A46     	 mov r2,r3
 420 0014 FB78     	 ldrb r3,[r7,#3]
 421 0016 1340     	 ands r3,r3,r2
 422 0018 002B     	 cmp r3,#0
 423 001a 14BF     	 ite ne
 424 001c 0123     	 movne r3,#1
 425 001e 0023     	 moveq r3,#0
 426 0020 DBB2     	 uxtb r3,r3
 987:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 427              	 .loc 2 987 0
 428 0022 1846     	 mov r0,r3
 429 0024 0C37     	 adds r7,r7,#12
 430              	.LCFI37:
 431              	 .cfi_def_cfa_offset 4
 432 0026 BD46     	 mov sp,r7
 433              	.LCFI38:
 434              	 .cfi_def_cfa_register 13
 435              	 
 436 0028 5DF8047B 	 ldr r7,[sp],#4
 437              	.LCFI39:
 438              	 .cfi_restore 7
 439              	 .cfi_def_cfa_offset 0
 440 002c 7047     	 bx lr
 441              	 .cfi_endproc
 442              	.LFE183:
 444 002e 00BF     	 .section .text.XMC_SDMMC_ReadFIFO,"ax",%progbits
 445              	 .align 2
 446              	 .thumb
 447              	 .thumb_func
 449              	XMC_SDMMC_ReadFIFO:
 450              	.LFB185:
 988:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 989:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 990:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 991:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param error A valid SDMMC ACMD error (::XMC_SDMMC_ACMD_ERR_t) or a valid combination
 992:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd ACMD error events
 993:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 994:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 995:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 996:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Triggers Auto CMD12 error(s) <br>
 997:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 998:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 999:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function triggers Auto CMD12 error(s) by setting appropriate bit-fields of the
1000:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * FORCE_EVENT_ACMD_ERR_STATUS register.
1001:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1002:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Related APIs: </b><br>
1003:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_TriggerEvent()
1004:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1005:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_TriggerACMDErr(XMC_SDMMC_t *const sdmmc, uint32_t error)
1006:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1007:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_TriggerACMDErr: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1008:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1009:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->FORCE_EVENT_ACMD_ERR_STATUS |= (uint16_t)error;
1010:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1011:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1012:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1013:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1014:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t The value held in the SDMMC FIFO
1015:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1016:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1017:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to read a single word (32 bits) from the SDMMC FIFO. <br>
1018:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1019:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_ReadFIFO(XMC_SDMMC_t *const sdmmc)
1020:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 451              	 .loc 2 1020 0
 452              	 .cfi_startproc
 453              	 
 454              	 
 455              	 
 456 0000 80B4     	 push {r7}
 457              	.LCFI40:
 458              	 .cfi_def_cfa_offset 4
 459              	 .cfi_offset 7,-4
 460 0002 83B0     	 sub sp,sp,#12
 461              	.LCFI41:
 462              	 .cfi_def_cfa_offset 16
 463 0004 00AF     	 add r7,sp,#0
 464              	.LCFI42:
 465              	 .cfi_def_cfa_register 7
 466 0006 7860     	 str r0,[r7,#4]
1021:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_ReadFIFO: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1022:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1023:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->DATA_BUFFER);
 467              	 .loc 2 1023 0
 468 0008 7B68     	 ldr r3,[r7,#4]
 469 000a 1B6A     	 ldr r3,[r3,#32]
1024:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 470              	 .loc 2 1024 0
 471 000c 1846     	 mov r0,r3
 472 000e 0C37     	 adds r7,r7,#12
 473              	.LCFI43:
 474              	 .cfi_def_cfa_offset 4
 475 0010 BD46     	 mov sp,r7
 476              	.LCFI44:
 477              	 .cfi_def_cfa_register 13
 478              	 
 479 0012 5DF8047B 	 ldr r7,[sp],#4
 480              	.LCFI45:
 481              	 .cfi_restore 7
 482              	 .cfi_def_cfa_offset 0
 483 0016 7047     	 bx lr
 484              	 .cfi_endproc
 485              	.LFE185:
 487              	 .section .text.XMC_SDMMC_WriteFIFO,"ax",%progbits
 488              	 .align 2
 489              	 .thumb
 490              	 .thumb_func
 492              	XMC_SDMMC_WriteFIFO:
 493              	.LFB186:
1025:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1026:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1027:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1028:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param data Pointer to a data word (32 bits) that needs to be written to the FIFO
1029:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1030:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1031:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1032:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to write a single word (32 bits) to the SDMMC FIFO. <br>
1033:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1034:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_WriteFIFO(XMC_SDMMC_t *const sdmmc, uint32_t *data)
1035:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 494              	 .loc 2 1035 0
 495              	 .cfi_startproc
 496              	 
 497              	 
 498              	 
 499 0000 80B4     	 push {r7}
 500              	.LCFI46:
 501              	 .cfi_def_cfa_offset 4
 502              	 .cfi_offset 7,-4
 503 0002 83B0     	 sub sp,sp,#12
 504              	.LCFI47:
 505              	 .cfi_def_cfa_offset 16
 506 0004 00AF     	 add r7,sp,#0
 507              	.LCFI48:
 508              	 .cfi_def_cfa_register 7
 509 0006 7860     	 str r0,[r7,#4]
 510 0008 3960     	 str r1,[r7]
1036:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_WriteFIFO: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1037:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1038:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->DATA_BUFFER = *data;
 511              	 .loc 2 1038 0
 512 000a 3B68     	 ldr r3,[r7]
 513 000c 1A68     	 ldr r2,[r3]
 514 000e 7B68     	 ldr r3,[r7,#4]
 515 0010 1A62     	 str r2,[r3,#32]
1039:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 516              	 .loc 2 1039 0
 517 0012 0C37     	 adds r7,r7,#12
 518              	.LCFI49:
 519              	 .cfi_def_cfa_offset 4
 520 0014 BD46     	 mov sp,r7
 521              	.LCFI50:
 522              	 .cfi_def_cfa_register 13
 523              	 
 524 0016 5DF8047B 	 ldr r7,[sp],#4
 525              	.LCFI51:
 526              	 .cfi_restore 7
 527              	 .cfi_def_cfa_offset 0
 528 001a 7047     	 bx lr
 529              	 .cfi_endproc
 530              	.LFE186:
 532              	 .section .text.XMC_SDMMC_BusPowerOn,"ax",%progbits
 533              	 .align 2
 534              	 .thumb
 535              	 .thumb_func
 537              	XMC_SDMMC_BusPowerOn:
 538              	.LFB187:
1040:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1041:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1042:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1043:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1044:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1045:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1046:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC bus power <br>
1047:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1048:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1049:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the SD_BUS_POWER bit-field in the POWER_CTRL register, enabling the
1050:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * bus power. It may be invoked after enabling the SD clock (XMC_SDMMC_SDClockEnable()).
1051:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1052:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_BusPowerOn(XMC_SDMMC_t *const sdmmc)
1053:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 539              	 .loc 2 1053 0
 540              	 .cfi_startproc
 541              	 
 542              	 
 543              	 
 544 0000 80B4     	 push {r7}
 545              	.LCFI52:
 546              	 .cfi_def_cfa_offset 4
 547              	 .cfi_offset 7,-4
 548 0002 83B0     	 sub sp,sp,#12
 549              	.LCFI53:
 550              	 .cfi_def_cfa_offset 16
 551 0004 00AF     	 add r7,sp,#0
 552              	.LCFI54:
 553              	 .cfi_def_cfa_register 7
 554 0006 7860     	 str r0,[r7,#4]
1054:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_BusPowerOn: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1055:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1056:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL |= (uint8_t)(SDMMC_POWER_CTRL_SD_BUS_POWER_Msk);
 555              	 .loc 2 1056 0
 556 0008 7B68     	 ldr r3,[r7,#4]
 557 000a 93F82930 	 ldrb r3,[r3,#41]
 558 000e DBB2     	 uxtb r3,r3
 559 0010 43F00103 	 orr r3,r3,#1
 560 0014 DAB2     	 uxtb r2,r3
 561 0016 7B68     	 ldr r3,[r7,#4]
 562 0018 83F82920 	 strb r2,[r3,#41]
1057:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 563              	 .loc 2 1057 0
 564 001c 0C37     	 adds r7,r7,#12
 565              	.LCFI55:
 566              	 .cfi_def_cfa_offset 4
 567 001e BD46     	 mov sp,r7
 568              	.LCFI56:
 569              	 .cfi_def_cfa_register 13
 570              	 
 571 0020 5DF8047B 	 ldr r7,[sp],#4
 572              	.LCFI57:
 573              	 .cfi_restore 7
 574              	 .cfi_def_cfa_offset 0
 575 0024 7047     	 bx lr
 576              	 .cfi_endproc
 577              	.LFE187:
 579 0026 00BF     	 .section .text.XMC_SDMMC_Start,"ax",%progbits
 580              	 .align 2
 581              	 .thumb
 582              	 .thumb_func
 584              	XMC_SDMMC_Start:
 585              	.LFB189:
1058:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1059:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1060:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1061:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1062:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1063:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1064:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable SDMMC bus power <br>
1065:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1066:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1067:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the SD_BUS_POWER bit-field in the POWER_CTRL register, disabling the
1068:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * bus power.
1069:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1070:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_BusPowerOff(XMC_SDMMC_t *const sdmmc)
1071:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1072:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_BusPowerOff: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1073:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1074:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL &= (uint8_t)~SDMMC_POWER_CTRL_SD_BUS_POWER_Msk;
1075:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1076:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1077:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1078:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1079:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1080:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1081:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1082:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable the internal SDMMC clock <br>
1083:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1084:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1085:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables the internal clock of the SDMMC peripheral. To check if the
1086:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * clock is stable, use XMC_SDMMC_GetClockStability().
1087:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1088:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note: </b><br>
1089:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Invoke XMC_SDMMC_Init() before using this function.
1090:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1091:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_Start(XMC_SDMMC_t *const sdmmc)
1092:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 586              	 .loc 2 1092 0
 587              	 .cfi_startproc
 588              	 
 589              	 
 590              	 
 591 0000 80B4     	 push {r7}
 592              	.LCFI58:
 593              	 .cfi_def_cfa_offset 4
 594              	 .cfi_offset 7,-4
 595 0002 83B0     	 sub sp,sp,#12
 596              	.LCFI59:
 597              	 .cfi_def_cfa_offset 16
 598 0004 00AF     	 add r7,sp,#0
 599              	.LCFI60:
 600              	 .cfi_def_cfa_register 7
 601 0006 7860     	 str r0,[r7,#4]
1093:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_Start: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1094:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1095:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   /* Enable internal clock */
1096:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL |= (uint16_t)SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_EN_Msk;
 602              	 .loc 2 1096 0
 603 0008 7B68     	 ldr r3,[r7,#4]
 604 000a 9B8D     	 ldrh r3,[r3,#44]
 605 000c 9BB2     	 uxth r3,r3
 606 000e 43F00103 	 orr r3,r3,#1
 607 0012 9AB2     	 uxth r2,r3
 608 0014 7B68     	 ldr r3,[r7,#4]
 609 0016 9A85     	 strh r2,[r3,#44]
1097:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 610              	 .loc 2 1097 0
 611 0018 0C37     	 adds r7,r7,#12
 612              	.LCFI61:
 613              	 .cfi_def_cfa_offset 4
 614 001a BD46     	 mov sp,r7
 615              	.LCFI62:
 616              	 .cfi_def_cfa_register 13
 617              	 
 618 001c 5DF8047B 	 ldr r7,[sp],#4
 619              	.LCFI63:
 620              	 .cfi_restore 7
 621              	 .cfi_def_cfa_offset 0
 622 0020 7047     	 bx lr
 623              	 .cfi_endproc
 624              	.LFE189:
 626 0022 00BF     	 .section .text.XMC_SDMMC_GetClockStability,"ax",%progbits
 627              	 .align 2
 628              	 .thumb
 629              	 .thumb_func
 631              	XMC_SDMMC_GetClockStability:
 632              	.LFB190:
1098:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1099:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
1102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check internal clock stability <br>
1105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to check the internal SDMMC clock stability. The function returns a
1108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * boolean value indicating internal clock stability (true = stable)
1109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetClockStability(XMC_SDMMC_t *const sdmmc)
1111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 633              	 .loc 2 1111 0
 634              	 .cfi_startproc
 635              	 
 636              	 
 637              	 
 638 0000 80B4     	 push {r7}
 639              	.LCFI64:
 640              	 .cfi_def_cfa_offset 4
 641              	 .cfi_offset 7,-4
 642 0002 83B0     	 sub sp,sp,#12
 643              	.LCFI65:
 644              	 .cfi_def_cfa_offset 16
 645 0004 00AF     	 add r7,sp,#0
 646              	.LCFI66:
 647              	 .cfi_def_cfa_register 7
 648 0006 7860     	 str r0,[r7,#4]
1112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetClockStability: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   /* Return clock stability */
1115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->CLOCK_CTRL & SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_STABLE_Msk);
 649              	 .loc 2 1115 0
 650 0008 7B68     	 ldr r3,[r7,#4]
 651 000a 9B8D     	 ldrh r3,[r3,#44]
 652 000c 9BB2     	 uxth r3,r3
 653 000e 03F00203 	 and r3,r3,#2
 654 0012 002B     	 cmp r3,#0
 655 0014 14BF     	 ite ne
 656 0016 0123     	 movne r3,#1
 657 0018 0023     	 moveq r3,#0
 658 001a DBB2     	 uxtb r3,r3
1116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 659              	 .loc 2 1116 0
 660 001c 1846     	 mov r0,r3
 661 001e 0C37     	 adds r7,r7,#12
 662              	.LCFI67:
 663              	 .cfi_def_cfa_offset 4
 664 0020 BD46     	 mov sp,r7
 665              	.LCFI68:
 666              	 .cfi_def_cfa_register 13
 667              	 
 668 0022 5DF8047B 	 ldr r7,[sp],#4
 669              	.LCFI69:
 670              	 .cfi_restore 7
 671              	 .cfi_def_cfa_offset 0
 672 0026 7047     	 bx lr
 673              	 .cfi_endproc
 674              	.LFE190:
 676              	 .section .text.XMC_SDMMC_Stop,"ax",%progbits
 677              	 .align 2
 678              	 .thumb
 679              	 .thumb_func
 681              	XMC_SDMMC_Stop:
 682              	.LFB191:
1117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable internal SDMMC clock <br>
1124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables the internal clock of the SDMMC peripheral. The SDMMC registers
1127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * can still be read and written even if the internal clock is disabled.
1128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_Stop(XMC_SDMMC_t *const sdmmc)
1130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 683              	 .loc 2 1130 0
 684              	 .cfi_startproc
 685              	 
 686              	 
 687              	 
 688 0000 80B4     	 push {r7}
 689              	.LCFI70:
 690              	 .cfi_def_cfa_offset 4
 691              	 .cfi_offset 7,-4
 692 0002 83B0     	 sub sp,sp,#12
 693              	.LCFI71:
 694              	 .cfi_def_cfa_offset 16
 695 0004 00AF     	 add r7,sp,#0
 696              	.LCFI72:
 697              	 .cfi_def_cfa_register 7
 698 0006 7860     	 str r0,[r7,#4]
1131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_Stop: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL &= (uint16_t)~SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_EN_Msk;
 699              	 .loc 2 1133 0
 700 0008 7B68     	 ldr r3,[r7,#4]
 701 000a 9B8D     	 ldrh r3,[r3,#44]
 702 000c 9BB2     	 uxth r3,r3
 703 000e 23F00103 	 bic r3,r3,#1
 704 0012 9AB2     	 uxth r2,r3
 705 0014 7B68     	 ldr r3,[r7,#4]
 706 0016 9A85     	 strh r2,[r3,#44]
1134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 707              	 .loc 2 1134 0
 708 0018 0C37     	 adds r7,r7,#12
 709              	.LCFI73:
 710              	 .cfi_def_cfa_offset 4
 711 001a BD46     	 mov sp,r7
 712              	.LCFI74:
 713              	 .cfi_def_cfa_register 13
 714              	 
 715 001c 5DF8047B 	 ldr r7,[sp],#4
 716              	.LCFI75:
 717              	 .cfi_restore 7
 718              	 .cfi_def_cfa_offset 0
 719 0020 7047     	 bx lr
 720              	 .cfi_endproc
 721              	.LFE191:
 723 0022 00BF     	 .section .text.XMC_SDMMC_SDClockEnable,"ax",%progbits
 724              	 .align 2
 725              	 .thumb
 726              	 .thumb_func
 728              	XMC_SDMMC_SDClockEnable:
 729              	.LFB192:
1135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable the SD clock <br>
1142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the SDCLOCK_EN bit-field of the CLOCK_CTRL register, enabling the
1145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock. It can be invoked after the internal clock has achieved stability. SD card
1146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * initialization process may then follow.
1147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockEnable(XMC_SDMMC_t *const sdmmc)
1149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 730              	 .loc 2 1149 0
 731              	 .cfi_startproc
 732              	 
 733              	 
 734              	 
 735 0000 80B4     	 push {r7}
 736              	.LCFI76:
 737              	 .cfi_def_cfa_offset 4
 738              	 .cfi_offset 7,-4
 739 0002 83B0     	 sub sp,sp,#12
 740              	.LCFI77:
 741              	 .cfi_def_cfa_offset 16
 742 0004 00AF     	 add r7,sp,#0
 743              	.LCFI78:
 744              	 .cfi_def_cfa_register 7
 745 0006 7860     	 str r0,[r7,#4]
1150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockEnable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL |= (uint16_t)SDMMC_CLOCK_CTRL_SDCLOCK_EN_Msk;
 746              	 .loc 2 1152 0
 747 0008 7B68     	 ldr r3,[r7,#4]
 748 000a 9B8D     	 ldrh r3,[r3,#44]
 749 000c 9BB2     	 uxth r3,r3
 750 000e 43F00403 	 orr r3,r3,#4
 751 0012 9AB2     	 uxth r2,r3
 752 0014 7B68     	 ldr r3,[r7,#4]
 753 0016 9A85     	 strh r2,[r3,#44]
1153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 754              	 .loc 2 1153 0
 755 0018 0C37     	 adds r7,r7,#12
 756              	.LCFI79:
 757              	 .cfi_def_cfa_offset 4
 758 001a BD46     	 mov sp,r7
 759              	.LCFI80:
 760              	 .cfi_def_cfa_register 13
 761              	 
 762 001c 5DF8047B 	 ldr r7,[sp],#4
 763              	.LCFI81:
 764              	 .cfi_restore 7
 765              	 .cfi_def_cfa_offset 0
 766 0020 7047     	 bx lr
 767              	 .cfi_endproc
 768              	.LFE192:
 770 0022 00BF     	 .section .text.XMC_SDMMC_SDClockDisable,"ax",%progbits
 771              	 .align 2
 772              	 .thumb
 773              	 .thumb_func
 775              	XMC_SDMMC_SDClockDisable:
 776              	.LFB193:
1154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable the SD clock <br>
1161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the SDCLOCK_EN bit-field of the CLOCK_CTRL register, disabling the
1164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock. It can be used alongside a SD card information reset routine (if required).
1165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockDisable(XMC_SDMMC_t *const sdmmc)
1167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 777              	 .loc 2 1167 0
 778              	 .cfi_startproc
 779              	 
 780              	 
 781              	 
 782 0000 80B4     	 push {r7}
 783              	.LCFI82:
 784              	 .cfi_def_cfa_offset 4
 785              	 .cfi_offset 7,-4
 786 0002 83B0     	 sub sp,sp,#12
 787              	.LCFI83:
 788              	 .cfi_def_cfa_offset 16
 789 0004 00AF     	 add r7,sp,#0
 790              	.LCFI84:
 791              	 .cfi_def_cfa_register 7
 792 0006 7860     	 str r0,[r7,#4]
1168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockDisable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL &= (uint16_t)~SDMMC_CLOCK_CTRL_SDCLOCK_EN_Msk;
 793              	 .loc 2 1170 0
 794 0008 7B68     	 ldr r3,[r7,#4]
 795 000a 9B8D     	 ldrh r3,[r3,#44]
 796 000c 9BB2     	 uxth r3,r3
 797 000e 23F00403 	 bic r3,r3,#4
 798 0012 9AB2     	 uxth r2,r3
 799 0014 7B68     	 ldr r3,[r7,#4]
 800 0016 9A85     	 strh r2,[r3,#44]
1171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 801              	 .loc 2 1171 0
 802 0018 0C37     	 adds r7,r7,#12
 803              	.LCFI85:
 804              	 .cfi_def_cfa_offset 4
 805 001a BD46     	 mov sp,r7
 806              	.LCFI86:
 807              	 .cfi_def_cfa_register 13
 808              	 
 809 001c 5DF8047B 	 ldr r7,[sp],#4
 810              	.LCFI87:
 811              	 .cfi_restore 7
 812              	 .cfi_def_cfa_offset 0
 813 0020 7047     	 bx lr
 814              	 .cfi_endproc
 815              	.LFE193:
 817 0022 00BF     	 .section .text.XMC_SDMMC_SetSWReset,"ax",%progbits
 818              	 .align 2
 819              	 .thumb
 820              	 .thumb_func
 822              	XMC_SDMMC_SetSWReset:
 823              	.LFB194:
1172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param reset_mode Reset mode or a bitwise combination of modes
1176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SDMMC software reset request <br>
1180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets in the SDMMC SW_RESET register: <br>
1183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) bit 0 to reset all <br>
1184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) bit 1 to reset CMD line <br>
1185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) bit 2 reset DAT line <br>
1186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * It is typically used to reset the SD HOST controller's registers.
1188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetSWReset(XMC_SDMMC_t *const sdmmc, uint32_t reset_mode)
1190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 824              	 .loc 2 1190 0
 825              	 .cfi_startproc
 826              	 
 827              	 
 828              	 
 829 0000 80B4     	 push {r7}
 830              	.LCFI88:
 831              	 .cfi_def_cfa_offset 4
 832              	 .cfi_offset 7,-4
 833 0002 83B0     	 sub sp,sp,#12
 834              	.LCFI89:
 835              	 .cfi_def_cfa_offset 16
 836 0004 00AF     	 add r7,sp,#0
 837              	.LCFI90:
 838              	 .cfi_def_cfa_register 7
 839 0006 7860     	 str r0,[r7,#4]
 840 0008 3960     	 str r1,[r7]
1191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetSWReset: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->SW_RESET |= (uint8_t)reset_mode;
 841              	 .loc 2 1193 0
 842 000a 7B68     	 ldr r3,[r7,#4]
 843 000c 93F82F30 	 ldrb r3,[r3,#47]
 844 0010 DAB2     	 uxtb r2,r3
 845 0012 3B68     	 ldr r3,[r7]
 846 0014 DBB2     	 uxtb r3,r3
 847 0016 1343     	 orrs r3,r3,r2
 848 0018 DAB2     	 uxtb r2,r3
 849 001a 7B68     	 ldr r3,[r7,#4]
 850 001c 83F82F20 	 strb r2,[r3,#47]
1194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 851              	 .loc 2 1194 0
 852 0020 0C37     	 adds r7,r7,#12
 853              	.LCFI91:
 854              	 .cfi_def_cfa_offset 4
 855 0022 BD46     	 mov sp,r7
 856              	.LCFI92:
 857              	 .cfi_def_cfa_register 13
 858              	 
 859 0024 5DF8047B 	 ldr r7,[sp],#4
 860              	.LCFI93:
 861              	 .cfi_restore 7
 862              	 .cfi_def_cfa_offset 0
 863 0028 7047     	 bx lr
 864              	 .cfi_endproc
 865              	.LFE194:
 867 002a 00BF     	 .section .text.XMC_SDMMC_GetSWResetStatus,"ax",%progbits
 868              	 .align 2
 869              	 .thumb
 870              	 .thumb_func
 872              	XMC_SDMMC_GetSWResetStatus:
 873              	.LFB195:
1195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return Software reset status
1199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get SDMMC software reset status <br>
1202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SD host takes some time to reset its registers after invoking XMC_SDMMC_SetSWReset().
1205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Since XMC_SDMMC_SetSWReset() is a non-blocking function, XMC_SDMMC_GetSWResetStatus() has
1206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * been provided to check the software reset status. The return value needs to be masked
1207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * with the reset mode (XMC_SDMMC_SW_RESET_t) to get a specific software reset status value.
1208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetSWResetStatus(XMC_SDMMC_t *const sdmmc)
1210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 874              	 .loc 2 1210 0
 875              	 .cfi_startproc
 876              	 
 877              	 
 878              	 
 879 0000 80B4     	 push {r7}
 880              	.LCFI94:
 881              	 .cfi_def_cfa_offset 4
 882              	 .cfi_offset 7,-4
 883 0002 83B0     	 sub sp,sp,#12
 884              	.LCFI95:
 885              	 .cfi_def_cfa_offset 16
 886 0004 00AF     	 add r7,sp,#0
 887              	.LCFI96:
 888              	 .cfi_def_cfa_register 7
 889 0006 7860     	 str r0,[r7,#4]
1211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetSWResetStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
1212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (uint32_t)(sdmmc->SW_RESET);
 890              	 .loc 2 1213 0
 891 0008 7B68     	 ldr r3,[r7,#4]
 892 000a 93F82F30 	 ldrb r3,[r3,#47]
 893 000e DBB2     	 uxtb r3,r3
1214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 894              	 .loc 2 1214 0
 895 0010 1846     	 mov r0,r3
 896 0012 0C37     	 adds r7,r7,#12
 897              	.LCFI97:
 898              	 .cfi_def_cfa_offset 4
 899 0014 BD46     	 mov sp,r7
 900              	.LCFI98:
 901              	 .cfi_def_cfa_register 13
 902              	 
 903 0016 5DF8047B 	 ldr r7,[sp],#4
 904              	.LCFI99:
 905              	 .cfi_restore 7
 906              	 .cfi_def_cfa_offset 0
 907 001a 7047     	 bx lr
 908              	 .cfi_endproc
 909              	.LFE195:
 911              	 .section .text.XMC_SDMMC_IsCommandLineBusy,"ax",%progbits
 912              	 .align 2
 913              	 .thumb
 914              	 .thumb_func
 916              	XMC_SDMMC_IsCommandLineBusy:
 917              	.LFB197:
1215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return XMC_SDMMC_PRESENT_STATE_t A structure storing the present state of the host controller
1219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the present state of the SDMMC host controller <br>
1222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the values of each bit-field in SDMMC_PRESENT_STATE register
1225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function call populates an instance of the XMC_SDMMC_PRESENT_STATE_t structure with
1226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the state of the SD host controller and returns it to the caller.
1227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE XMC_SDMMC_PRESENT_STATE_t XMC_SDMMC_GetPresentState(const XMC_SDMMC_t *const sdmmc)
1229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_PRESENT_STATE_t result;
1231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetPresentState: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
1233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   result.b32 = (uint32_t)sdmmc->PRESENT_STATE;
1235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return result;
1237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool SDMMC command line status
1242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if the command line is busy <br>
1245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if the command
1248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * line is busy ("false" otherwise). The command line must be free before sending an SDMMC
1249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command with XMC_SDMMC_SendCommand().
1250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsCommandLineBusy(XMC_SDMMC_t *const sdmmc)
1252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 918              	 .loc 2 1252 0
 919              	 .cfi_startproc
 920              	 
 921              	 
 922              	 
 923 0000 80B4     	 push {r7}
 924              	.LCFI100:
 925              	 .cfi_def_cfa_offset 4
 926              	 .cfi_offset 7,-4
 927 0002 83B0     	 sub sp,sp,#12
 928              	.LCFI101:
 929              	 .cfi_def_cfa_offset 16
 930 0004 00AF     	 add r7,sp,#0
 931              	.LCFI102:
 932              	 .cfi_def_cfa_register 7
 933 0006 7860     	 str r0,[r7,#4]
1253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsCommandLineBusy: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_CMD_Msk);
 934              	 .loc 2 1255 0
 935 0008 7B68     	 ldr r3,[r7,#4]
 936 000a 5B6A     	 ldr r3,[r3,#36]
 937 000c 03F00103 	 and r3,r3,#1
 938 0010 002B     	 cmp r3,#0
 939 0012 14BF     	 ite ne
 940 0014 0123     	 movne r3,#1
 941 0016 0023     	 moveq r3,#0
 942 0018 DBB2     	 uxtb r3,r3
1256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 943              	 .loc 2 1256 0
 944 001a 1846     	 mov r0,r3
 945 001c 0C37     	 adds r7,r7,#12
 946              	.LCFI103:
 947              	 .cfi_def_cfa_offset 4
 948 001e BD46     	 mov sp,r7
 949              	.LCFI104:
 950              	 .cfi_def_cfa_register 13
 951              	 
 952 0020 5DF8047B 	 ldr r7,[sp],#4
 953              	.LCFI105:
 954              	 .cfi_restore 7
 955              	 .cfi_def_cfa_offset 0
 956 0024 7047     	 bx lr
 957              	 .cfi_endproc
 958              	.LFE197:
 960 0026 00BF     	 .section .text.XMC_SDMMC_IsDataLineBusy,"ax",%progbits
 961              	 .align 2
 962              	 .thumb
 963              	 .thumb_func
 965              	XMC_SDMMC_IsDataLineBusy:
 966              	.LFB198:
1257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool SDMMC data line status
1261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if the data line is busy <br>
1264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if the data
1267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * line is busy ("false" otherwise). The data line must be free before sending an SDMMC
1268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command with XMC_SDMMC_SendCommand().
1269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsDataLineBusy(XMC_SDMMC_t *const sdmmc)
1271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 967              	 .loc 2 1271 0
 968              	 .cfi_startproc
 969              	 
 970              	 
 971              	 
 972 0000 80B4     	 push {r7}
 973              	.LCFI106:
 974              	 .cfi_def_cfa_offset 4
 975              	 .cfi_offset 7,-4
 976 0002 83B0     	 sub sp,sp,#12
 977              	.LCFI107:
 978              	 .cfi_def_cfa_offset 16
 979 0004 00AF     	 add r7,sp,#0
 980              	.LCFI108:
 981              	 .cfi_def_cfa_register 7
 982 0006 7860     	 str r0,[r7,#4]
1272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsDataLineBusy: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_DAT_Msk);
 983              	 .loc 2 1274 0
 984 0008 7B68     	 ldr r3,[r7,#4]
 985 000a 5B6A     	 ldr r3,[r3,#36]
 986 000c 03F00203 	 and r3,r3,#2
 987 0010 002B     	 cmp r3,#0
 988 0012 14BF     	 ite ne
 989 0014 0123     	 movne r3,#1
 990 0016 0023     	 moveq r3,#0
 991 0018 DBB2     	 uxtb r3,r3
1275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 992              	 .loc 2 1275 0
 993 001a 1846     	 mov r0,r3
 994 001c 0C37     	 adds r7,r7,#12
 995              	.LCFI109:
 996              	 .cfi_def_cfa_offset 4
 997 001e BD46     	 mov sp,r7
 998              	.LCFI110:
 999              	 .cfi_def_cfa_register 13
 1000              	 
 1001 0020 5DF8047B 	 ldr r7,[sp],#4
 1002              	.LCFI111:
 1003              	 .cfi_restore 7
 1004              	 .cfi_def_cfa_offset 0
 1005 0024 7047     	 bx lr
 1006              	 .cfi_endproc
 1007              	.LFE198:
 1009 0026 00BF     	 .section .text.XMC_SDMMC_IsAllDataLinesHigh,"ax",%progbits
 1010              	 .align 2
 1011              	 .thumb
 1012              	 .thumb_func
 1014              	XMC_SDMMC_IsAllDataLinesHigh:
 1015              	.LFB199:
1276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool Status of all data lines
1280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if all data line are high <br>
1283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if all data
1286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * lines are high. It can be used to handle SDMMC error conditions. For example, if an
1287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * error event (XMC_SDMMC_IsAnyErrorEvent()) is detected and all data lines are high,
1288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the user code can conclude that the error is of a "recoverable" type.
1289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsAllDataLinesHigh(XMC_SDMMC_t *const sdmmc)
1291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1016              	 .loc 2 1291 0
 1017              	 .cfi_startproc
 1018              	 
 1019              	 
 1020              	 
 1021 0000 80B4     	 push {r7}
 1022              	.LCFI112:
 1023              	 .cfi_def_cfa_offset 4
 1024              	 .cfi_offset 7,-4
 1025 0002 83B0     	 sub sp,sp,#12
 1026              	.LCFI113:
 1027              	 .cfi_def_cfa_offset 16
 1028 0004 00AF     	 add r7,sp,#0
 1029              	.LCFI114:
 1030              	 .cfi_def_cfa_register 7
 1031 0006 7860     	 str r0,[r7,#4]
1292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsAllDataLinesHigh: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return ((((sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Msk) >>
 1032              	 .loc 2 1294 0
 1033 0008 7B68     	 ldr r3,[r7,#4]
 1034 000a 5B6A     	 ldr r3,[r3,#36]
 1035 000c 03F47003 	 and r3,r3,#15728640
 1036 0010 1B0D     	 lsrs r3,r3,#20
 1037 0012 0F2B     	 cmp r3,#15
 1038 0014 0CBF     	 ite eq
 1039 0016 0123     	 moveq r3,#1
 1040 0018 0023     	 movne r3,#0
 1041 001a DBB2     	 uxtb r3,r3
1295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****         SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Pos) == 0x0FU) ? true : false);
1296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1042              	 .loc 2 1296 0
 1043 001c 1846     	 mov r0,r3
 1044 001e 0C37     	 adds r7,r7,#12
 1045              	.LCFI115:
 1046              	 .cfi_def_cfa_offset 4
 1047 0020 BD46     	 mov sp,r7
 1048              	.LCFI116:
 1049              	 .cfi_def_cfa_register 13
 1050              	 
 1051 0022 5DF8047B 	 ldr r7,[sp],#4
 1052              	.LCFI117:
 1053              	 .cfi_restore 7
 1054              	 .cfi_def_cfa_offset 0
 1055 0026 7047     	 bx lr
 1056              	 .cfi_endproc
 1057              	.LFE199:
 1059              	 .section .text.XMC_SDMMC_SDClockFreqSelect,"ax",%progbits
 1060              	 .align 2
 1061              	 .thumb
 1062              	 .thumb_func
 1064              	XMC_SDMMC_SDClockFreqSelect:
 1065              	.LFB209:
1297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param command A pointer to a constant of type XMC_SDMMC_COMMAND_t, pointing to the command conf
1301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param arg Command argument
1302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return ::XMC_SDMMC_STATUS_SUCCESS
1303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Send normal SDMMC command <br>
1306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to send a normal SDMMC command. This non-blocking function sets the
1309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ARGUMENT1 and COMMAND registers. It is the user's responsibility to check if the command
1310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and data lines are busy (XMC_SDMMC_IsDataLineBusy(), XMC_SDMMC_IsCommandLineBusy()).
1311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** XMC_SDMMC_STATUS_t XMC_SDMMC_SendCommand(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_COMMAND_t *comma
1313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t SDMMC command response
1317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card response (no Auto command) <br>
1320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function returns [39:8] bits of the card response. The others are checked automatically
1323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * by the peripheral. This function can be used with response type R1, R1b, R3, R4, R5, R5b, R6
1324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * but it doesn't support the retrieving of R1 of Auto CMD 23 and R1b of Auto CMD 12. To get
1325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * these responses, use XMC_SDMMC_GetAutoCommandResponse().
1326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetCommandResponse(XMC_SDMMC_t *const sdmmc)
1328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetCommandResponse: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->RESPONSE[0]);
1332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t Auto command response value
1337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card response of Auto commands <br>
1340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function returns card response [39:8] bits of auto commands: R1 of Auto CMD 23 and
1343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * R1b of Auto CMD 12.
1344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetAutoCommandResponse(const XMC_SDMMC_t *const sdmmc)
1346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetAutoCommandResponse: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
1348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->RESPONSE[3]);
1350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param response Pointer to structure type XMC_SDMMC_RESPONSE_t to store the full response
1355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card R2 response <br>
1359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The R2 response is 120 bits wide. The function reads all peripheral registers and store in
1362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the response data structure.
1363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_GetR2Response(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_RESPONSE_t *const response);
1365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param transfer_mode Transfer mode configuration
1369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Configure data transfer mode <br>
1373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function configures block size, block count, type of data transfer, response type
1376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and sets the auto command configuration. Use this function to configure a multi-block
1377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer.
1378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_SetDataTransferMode(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_TRANSFER_MODE_t *const trans
1380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t Number of blocks that need to be transferred
1384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the number of blocks that need to be transferred <br>
1387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function is valid only for multiple block transfers. The host controller
1390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * decrements the block count after each block transfer and stops when the count reaches
1391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * zero. It can only be accessed when no transaction is happening (i.e after a transaction
1392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * has stopped). This function returns an invalid value during the transfer. <br>
1393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * When saving transfer context as a result of the suspend command, the number of blocks
1395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * yet to be transferred can be determined by using this function.
1396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetTransferBlocksNum(XMC_SDMMC_t *const sdmmc)
1398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetTransferBlocksNum: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(s
1400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (uint32_t)(sdmmc->BLOCK_COUNT);
1402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to enable read wait control, "false" to disable read wait control.
1407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Configure read wait control <br>
1411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The read wait function is optional for SDIO cards. If the card supports read wait and
1414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_GetTransferBlocksNum() is executed, the SDMMC peripheral will stop read data
1415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * using DAT[2] line. If this feature is not enabled the peripheral has to stop the SD
1416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * clock to hold read data, restricting commands generation. <br>
1417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * When the host driver detects an SD card insertion, it sets this bit according to the
1419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * CCCR of the SDIO card. If the card does not support read wait, this feature shall
1420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * never be enabled otherwise a DAT line conflict may occur. If this feature is disabled,
1421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Suspend/Resume cannot be supported.
1422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetReadWaitControl(XMC_SDMMC_t *const sdmmc, bool enabled)
1424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetReadWaitControl: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = (uint8_t)((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_READ_WA
1428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                     (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_READ_WAIT_CT
1429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to set stop at block gap, "false" for transfer
1434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Stop at block gap request <br>
1438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function is used to terminate a transaction execution at the next block gap for
1441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * non-DMA transfers.
1442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetStopAtBlockGap(XMC_SDMMC_t *const sdmmc, bool enabled)
1444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetStopAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = (uint8_t)((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_STOP_AT
1448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                     (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_STOP_AT_BLOC
1449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to restart transaction, "false" is ignored
1454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Issue a continue request <br>
1458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function is used to restart a transaction which was stopped using the "Stop at
1461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * block gap" request. (XMC_SDMMC_SetStopAtBlockGap())
1462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetContinueRequest(XMC_SDMMC_t *const sdmmc, bool enabled)
1464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetContinueRequest: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = ((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Msk
1468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                            (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Pos));
1469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
1474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get continue request <br>
1477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function returns the status of the BLOCK_GAP_CTRL.CONTINUE_REQ bit-field. It
1480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * returns "true" if the transaction is restarted after a "stop at block gap" request.
1481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetContinueRequest(XMC_SDMMC_t *const sdmmc)
1483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetContinueRequest: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->BLOCK_GAP_CTRL & (uint8_t)(1U << SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Pos));
1487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to the SDMMC configuration structure (::XMC_SDMMC_CONFIG_t)
1492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable interrupt at block gap <br>
1496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the BLOCK_GAP_CTRL.INT_AT_BLOCK_GAP bit-field to enable interrupt
1499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at block gap for a multi-block transfer. This bit is only valid in a 4-bit mode of
1500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the SDIO card.
1501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableInterruptAtBlockGap(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_
1503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_
1505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: This operation is only valid in 4-bit mode",
1506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****              (config->bus_width == XMC_SDMMC_DATA_LINES_1));
1507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(config);
1509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL |= (uint8_t)SDMMC_BLOCK_GAP_CTRL_INT_AT_BLOCK_GAP_Msk;
1510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to the SDMMC configuration structure (::XMC_SDMMC_CONFIG_t)
1515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable interrupt at block gap <br>
1519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the BLOCK_GAP_CTRL.INT_AT_BLOCK_GAP bit-field to disable interrupt
1522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at block gap. This bit is only valid in a 4-bit mode of the SDIO card.
1523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableInterruptAtBlockGap(XMC_SDMMC_t *const sdmmc,
1525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                                           const XMC_SDMMC_CONFIG_t *config)
1526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_
1529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: This operation is only valid in 4-bit mode",
1530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****              (config->bus_width == XMC_SDMMC_DATA_LINES_1));
1531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(config);
1533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL &= (uint8_t)~SDMMC_BLOCK_GAP_CTRL_INT_AT_BLOCK_GAP_Msk;
1534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param clk Desired clock frequency (::XMC_SDMMC_SDCLK_FREQ_SEL_t)
1539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SD clock frequency <br>
1543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the CLOCK_CTRL register to configure the frequency of the SD clock
1546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * pin. The register is programmed with the divisor of the base clock frequency (clk).
1547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The following settings are permitted (8-bit divided clock mode): <br>
1549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 00H: base clock (10MHz->63MHz) <br>
1550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 01H: base clock divided by 2   <br>
1551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 10H: base clock divided by 32  <br>
1552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 02H: base clock divided by 4   <br>
1553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 04H: base clock divided by 8   <br>
1554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 08H: base clock divided by 16  <br>
1555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 20H: base clock divided by 64  <br>
1556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 40H: base clock divided by 128 <br>
1557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 80H: base clock divided by 256 <br>
1558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note: </b><br>
1560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The internal clock should be disabled before updating frequency clock select. Please
1561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * see section 2.2.14 -> "Clock Control Register" in the SD HOST specification for more
1562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * information.
1563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockFreqSelect(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_SDCLK_FREQ_SEL
1565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1066              	 .loc 2 1565 0
 1067              	 .cfi_startproc
 1068              	 
 1069              	 
 1070              	 
 1071 0000 80B4     	 push {r7}
 1072              	.LCFI118:
 1073              	 .cfi_def_cfa_offset 4
 1074              	 .cfi_offset 7,-4
 1075 0002 83B0     	 sub sp,sp,#12
 1076              	.LCFI119:
 1077              	 .cfi_def_cfa_offset 16
 1078 0004 00AF     	 add r7,sp,#0
 1079              	.LCFI120:
 1080              	 .cfi_def_cfa_register 7
 1081 0006 7860     	 str r0,[r7,#4]
 1082 0008 0B46     	 mov r3,r1
 1083 000a FB70     	 strb r3,[r7,#3]
1566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockFreqSelect: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockFreqSelect: Invalid clock frequency selection", XMC_SDMMC_CHECK_SDCL
1568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL = (uint16_t)((sdmmc->CLOCK_CTRL & (uint32_t)~SDMMC_CLOCK_CTRL_SDCLK_FREQ_SEL_Ms
 1084              	 .loc 2 1569 0
 1085 000c 7B68     	 ldr r3,[r7,#4]
 1086 000e 9B8D     	 ldrh r3,[r3,#44]
 1087 0010 9BB2     	 uxth r3,r3
 1088 0012 DBB2     	 uxtb r3,r3
 1089 0014 9AB2     	 uxth r2,r3
 1090 0016 FB78     	 ldrb r3,[r7,#3]
 1091 0018 9BB2     	 uxth r3,r3
 1092 001a 1B02     	 lsls r3,r3,#8
 1093 001c 9BB2     	 uxth r3,r3
 1094 001e 1343     	 orrs r3,r3,r2
 1095 0020 9AB2     	 uxth r2,r3
 1096 0022 7B68     	 ldr r3,[r7,#4]
 1097 0024 9A85     	 strh r2,[r3,#44]
1570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                  (uint32_t)(clk << SDMMC_CLOCK_CTRL_SDCLK_FREQ_SEL_Pos));
1571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1098              	 .loc 2 1571 0
 1099 0026 0C37     	 adds r7,r7,#12
 1100              	.LCFI121:
 1101              	 .cfi_def_cfa_offset 4
 1102 0028 BD46     	 mov sp,r7
 1103              	.LCFI122:
 1104              	 .cfi_def_cfa_register 13
 1105              	 
 1106 002a 5DF8047B 	 ldr r7,[sp],#4
 1107              	.LCFI123:
 1108              	 .cfi_restore 7
 1109              	 .cfi_def_cfa_offset 0
 1110 002e 7047     	 bx lr
 1111              	 .cfi_endproc
 1112              	.LFE209:
 1114              	 .section .text.XMC_SDMMC_SetBusVoltage,"ax",%progbits
 1115              	 .align 2
 1116              	 .thumb
 1117              	 .thumb_func
 1119              	XMC_SDMMC_SetBusVoltage:
 1120              	.LFB210:
1572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param bus_voltage Desired bus voltage (::XMC_SDMMC_BUS_VOLTAGE_t)
1576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SDMMC bus voltage <br>
1580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the CLOCK_CTRL register to configure the bus voltage. Currently,
1583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3.3 volts is the supported voltage level. This function is relevant within the host
1584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * controller initialization routine.
1585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetBusVoltage(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_BUS_VOLTAGE_t bus_
1587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1121              	 .loc 2 1587 0
 1122              	 .cfi_startproc
 1123              	 
 1124              	 
 1125              	 
 1126 0000 80B4     	 push {r7}
 1127              	.LCFI124:
 1128              	 .cfi_def_cfa_offset 4
 1129              	 .cfi_offset 7,-4
 1130 0002 83B0     	 sub sp,sp,#12
 1131              	.LCFI125:
 1132              	 .cfi_def_cfa_offset 16
 1133 0004 00AF     	 add r7,sp,#0
 1134              	.LCFI126:
 1135              	 .cfi_def_cfa_register 7
 1136 0006 7860     	 str r0,[r7,#4]
 1137 0008 0B46     	 mov r3,r1
 1138 000a FB70     	 strb r3,[r7,#3]
1588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetBusVoltage: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetBusVoltage: Invalid bus voltage", XMC_SDMMC_CHECK_BUS_VOLTAGE(bus_voltag
1590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL = (uint8_t)((sdmmc->POWER_CTRL & (uint32_t)~SDMMC_POWER_CTRL_SD_BUS_VOLTAGE_SEL
 1139              	 .loc 2 1591 0
 1140 000c 7B68     	 ldr r3,[r7,#4]
 1141 000e 93F82930 	 ldrb r3,[r3,#41]
 1142 0012 DBB2     	 uxtb r3,r3
 1143 0014 23F00E03 	 bic r3,r3,#14
 1144 0018 DAB2     	 uxtb r2,r3
 1145 001a FB78     	 ldrb r3,[r7,#3]
 1146 001c 5B00     	 lsls r3,r3,#1
 1147 001e DBB2     	 uxtb r3,r3
 1148 0020 1343     	 orrs r3,r3,r2
 1149 0022 DAB2     	 uxtb r2,r3
 1150 0024 7B68     	 ldr r3,[r7,#4]
 1151 0026 83F82920 	 strb r2,[r3,#41]
1592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                 (uint32_t)(bus_voltage << SDMMC_POWER_CTRL_SD_BUS_VOLTAGE_SEL_Pos))
1593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1152              	 .loc 2 1593 0
 1153 002a 0C37     	 adds r7,r7,#12
 1154              	.LCFI127:
 1155              	 .cfi_def_cfa_offset 4
 1156 002c BD46     	 mov sp,r7
 1157              	.LCFI128:
 1158              	 .cfi_def_cfa_register 13
 1159              	 
 1160 002e 5DF8047B 	 ldr r7,[sp],#4
 1161              	.LCFI129:
 1162              	 .cfi_restore 7
 1163              	 .cfi_def_cfa_offset 0
 1164 0032 7047     	 bx lr
 1165              	 .cfi_endproc
 1166              	.LFE210:
 1168              	 .section .text.XMC_SDMMC_SetDataLineTimeout,"ax",%progbits
 1169              	 .align 2
 1170              	 .thumb
 1171              	 .thumb_func
 1173              	XMC_SDMMC_SetDataLineTimeout:
 1174              	.LFB211:
1594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param timeout Data line timeout value
1598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data line timeout <br>
1602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the interval by which the data line timeouts are detected. The
1605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * timeout clock frequency is generated by dividing the SD clock (TMCLK) by the timeout argument.
1606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function must be called before setting the bus voltage (XMC_SDMMC_SetBusVoltage()).
1607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataLineTimeout(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_DAT_TIMEOUT_C
1609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1175              	 .loc 2 1609 0
 1176              	 .cfi_startproc
 1177              	 
 1178              	 
 1179              	 
 1180 0000 80B4     	 push {r7}
 1181              	.LCFI130:
 1182              	 .cfi_def_cfa_offset 4
 1183              	 .cfi_offset 7,-4
 1184 0002 83B0     	 sub sp,sp,#12
 1185              	.LCFI131:
 1186              	 .cfi_def_cfa_offset 16
 1187 0004 00AF     	 add r7,sp,#0
 1188              	.LCFI132:
 1189              	 .cfi_def_cfa_register 7
 1190 0006 7860     	 str r0,[r7,#4]
 1191 0008 0B46     	 mov r3,r1
 1192 000a FB70     	 strb r3,[r7,#3]
1610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataLineTimeout: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataLineTimeout: Invalid timeout", XMC_SDMMC_CHECK_DAT_TIMEOUT_COUNTER(t
1612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->TIMEOUT_CTRL = (uint8_t)((sdmmc->TIMEOUT_CTRL & (uint32_t)~SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_
 1193              	 .loc 2 1613 0
 1194 000c 7B68     	 ldr r3,[r7,#4]
 1195 000e 93F82E30 	 ldrb r3,[r3,#46]
 1196 0012 DBB2     	 uxtb r3,r3
 1197 0014 23F00F03 	 bic r3,r3,#15
 1198 0018 DAB2     	 uxtb r2,r3
 1199 001a FB78     	 ldrb r3,[r7,#3]
 1200 001c 1343     	 orrs r3,r3,r2
 1201 001e DAB2     	 uxtb r2,r3
 1202 0020 7B68     	 ldr r3,[r7,#4]
 1203 0022 83F82E20 	 strb r2,[r3,#46]
1614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint32_t)(timeout << SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL_Pos)
1615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1204              	 .loc 2 1615 0
 1205 0026 0C37     	 adds r7,r7,#12
 1206              	.LCFI133:
 1207              	 .cfi_def_cfa_offset 4
 1208 0028 BD46     	 mov sp,r7
 1209              	.LCFI134:
 1210              	 .cfi_def_cfa_register 13
 1211              	 
 1212 002a 5DF8047B 	 ldr r7,[sp],#4
 1213              	.LCFI135:
 1214              	 .cfi_restore 7
 1215              	 .cfi_def_cfa_offset 0
 1216 002e 7047     	 bx lr
 1217              	 .cfi_endproc
 1218              	.LFE211:
 1220              	 .section .text.XMC_SDMMC_SetDataTransferWidth,"ax",%progbits
 1221              	 .align 2
 1222              	 .thumb
 1223              	 .thumb_func
 1225              	XMC_SDMMC_SetDataTransferWidth:
 1226              	.LFB212:
1616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param lines Number of data lines to use  (::XMC_SDMMC_DATA_LINES_t)
1620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data transfer width <br>
1624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the data transfer width. Before using this function, an ACMD6
1627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command (with R1 response type) must be sent to switch the bus width.
1628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataTransferWidth(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_DATA_LINES_
1630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1227              	 .loc 2 1630 0
 1228              	 .cfi_startproc
 1229              	 
 1230              	 
 1231              	 
 1232 0000 80B4     	 push {r7}
 1233              	.LCFI136:
 1234              	 .cfi_def_cfa_offset 4
 1235              	 .cfi_offset 7,-4
 1236 0002 83B0     	 sub sp,sp,#12
 1237              	.LCFI137:
 1238              	 .cfi_def_cfa_offset 16
 1239 0004 00AF     	 add r7,sp,#0
 1240              	.LCFI138:
 1241              	 .cfi_def_cfa_register 7
 1242 0006 7860     	 str r0,[r7,#4]
 1243 0008 0B46     	 mov r3,r1
 1244 000a FB70     	 strb r3,[r7,#3]
1631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferWidth: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(s
1632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferWidth: Invalid no. of data lines", XMC_SDMMC_CHECK_DATA_LINE
1633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL &= (uint8_t)~(XMC_SDMMC_DATA_LINES_1 | XMC_SDMMC_DATA_LINES_4 | XMC_SDMMC_DATA_L
 1245              	 .loc 2 1634 0
 1246 000c 7B68     	 ldr r3,[r7,#4]
 1247 000e 93F82830 	 ldrb r3,[r3,#40]
 1248 0012 DBB2     	 uxtb r3,r3
 1249 0014 23F02203 	 bic r3,r3,#34
 1250 0018 DAB2     	 uxtb r2,r3
 1251 001a 7B68     	 ldr r3,[r7,#4]
 1252 001c 83F82820 	 strb r2,[r3,#40]
1635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (uint8_t)lines;
 1253              	 .loc 2 1635 0
 1254 0020 7B68     	 ldr r3,[r7,#4]
 1255 0022 93F82830 	 ldrb r3,[r3,#40]
 1256 0026 DAB2     	 uxtb r2,r3
 1257 0028 FB78     	 ldrb r3,[r7,#3]
 1258 002a 1343     	 orrs r3,r3,r2
 1259 002c DAB2     	 uxtb r2,r3
 1260 002e 7B68     	 ldr r3,[r7,#4]
 1261 0030 83F82820 	 strb r2,[r3,#40]
1636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1262              	 .loc 2 1636 0
 1263 0034 0C37     	 adds r7,r7,#12
 1264              	.LCFI139:
 1265              	 .cfi_def_cfa_offset 4
 1266 0036 BD46     	 mov sp,r7
 1267              	.LCFI140:
 1268              	 .cfi_def_cfa_register 13
 1269              	 
 1270 0038 5DF8047B 	 ldr r7,[sp],#4
 1271              	.LCFI141:
 1272              	 .cfi_restore 7
 1273              	 .cfi_def_cfa_offset 0
 1274 003c 7047     	 bx lr
 1275              	 .cfi_endproc
 1276              	.LFE212:
 1278 003e 00BF     	 .section .text.XMC_SDMMC_SetDataTransferDirection,"ax",%progbits
 1279              	 .align 2
 1280              	 .thumb
 1281              	 .thumb_func
 1283              	XMC_SDMMC_SetDataTransferDirection:
 1284              	.LFB213:
1637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param dir Transfer direction (::XMC_SDMMC_DATA_TRANSFER_DIR_t)
1641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data transfer direction <br>
1645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the data transfer direction: host to card OR card to host. It
1648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * is typically used to configure block operations (read/write) on the SD card. For
1649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * example, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD must be used for a write block operation.
1650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataTransferDirection(XMC_SDMMC_t *const sdmmc,
1652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                                         XMC_SDMMC_DATA_TRANSFER_DIR_t dir)
1653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1285              	 .loc 2 1653 0
 1286              	 .cfi_startproc
 1287              	 
 1288              	 
 1289              	 
 1290 0000 80B4     	 push {r7}
 1291              	.LCFI142:
 1292              	 .cfi_def_cfa_offset 4
 1293              	 .cfi_offset 7,-4
 1294 0002 83B0     	 sub sp,sp,#12
 1295              	.LCFI143:
 1296              	 .cfi_def_cfa_offset 16
 1297 0004 00AF     	 add r7,sp,#0
 1298              	.LCFI144:
 1299              	 .cfi_def_cfa_register 7
 1300 0006 7860     	 str r0,[r7,#4]
 1301 0008 0B46     	 mov r3,r1
 1302 000a FB70     	 strb r3,[r7,#3]
1654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferDirection: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
1655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferDirection: Invalid direction", XMC_SDMMC_CHECK_DATA_TRANSFER
1656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->TRANSFER_MODE = (uint16_t)((sdmmc->TRANSFER_MODE & (uint16_t)~SDMMC_TRANSFER_MODE_TX_DIR_S
 1303              	 .loc 2 1657 0
 1304 000c 7B68     	 ldr r3,[r7,#4]
 1305 000e 9B89     	 ldrh r3,[r3,#12]
 1306 0010 9BB2     	 uxth r3,r3
 1307 0012 9BB2     	 uxth r3,r3
 1308 0014 23F01003 	 bic r3,r3,#16
 1309 0018 9AB2     	 uxth r2,r3
1658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint16_t)((uint16_t)dir << SDMMC_TRANSFER_MODE_TX_DIR_SELECT_Pos
 1310              	 .loc 2 1658 0
 1311 001a FB78     	 ldrb r3,[r7,#3]
 1312 001c 9BB2     	 uxth r3,r3
 1313 001e 1B01     	 lsls r3,r3,#4
 1314 0020 9BB2     	 uxth r3,r3
1657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint16_t)((uint16_t)dir << SDMMC_TRANSFER_MODE_TX_DIR_SELECT_Pos
 1315              	 .loc 2 1657 0
 1316 0022 9BB2     	 uxth r3,r3
 1317 0024 1343     	 orrs r3,r3,r2
 1318 0026 9BB2     	 uxth r3,r3
 1319 0028 9AB2     	 uxth r2,r3
 1320 002a 7B68     	 ldr r3,[r7,#4]
 1321 002c 9A81     	 strh r2,[r3,#12]
1659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1322              	 .loc 2 1659 0
 1323 002e 0C37     	 adds r7,r7,#12
 1324              	.LCFI145:
 1325              	 .cfi_def_cfa_offset 4
 1326 0030 BD46     	 mov sp,r7
 1327              	.LCFI146:
 1328              	 .cfi_def_cfa_register 13
 1329              	 
 1330 0032 5DF8047B 	 ldr r7,[sp],#4
 1331              	.LCFI147:
 1332              	 .cfi_restore 7
 1333              	 .cfi_def_cfa_offset 0
 1334 0036 7047     	 bx lr
 1335              	 .cfi_endproc
 1336              	.LFE213:
 1338              	 .section .text.XMC_SDMMC_EnableHighSpeed,"ax",%progbits
 1339              	 .align 2
 1340              	 .thumb
 1341              	 .thumb_func
 1343              	XMC_SDMMC_EnableHighSpeed:
 1344              	.LFB217:
1660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable delay on the command/data out lines <br>
1667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to enable delay on the command/data out lines. Invoke this function
1670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * before selecting the number of delay elements.
1671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableDelayCmdDatLines(void)
1673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL |= (uint32_t)SCU_GENERAL_SDMMCDEL_TAPEN_Msk;
1675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable delay on the command/data out lines <br>
1683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to disable delay on the command/data out lines.
1686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableDelayCmdDatLines(void)
1688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL &= (uint32_t)~SCU_GENERAL_SDMMCDEL_TAPEN_Msk;
1690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param tapdel Number of delay elements to select
1694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set number of delay elements on the command/data out lines <br>
1698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the number of delay elements on the command/data out lines.
1701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function writes the delay value to the SDMMC delay control register (SDMMCDEL)
1702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * within the realm of the SCU peripheral. A delay of tapdel + 1 is considered as the
1703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * final selected number of delay elements.
1704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDelay(uint8_t tapdel)
1706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL = (uint32_t)((SCU_GENERAL->SDMMCDEL & (uint32_t)~SCU_GENERAL_SDMMCDEL_TAPDE
1708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint32_t)(tapdel << SCU_GENERAL_SDMMCDEL_TAPDEL_Pos));
1709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1710:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1711:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1712:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1713:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1714:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1715:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1716:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * High speed enable <br>
1717:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1718:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1719:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to enable high speed operation. The default is a normal speed operation.
1720:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Once enabled, the host controller outputs command and data lines at the rising edge of the
1721:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock (up to 50 MHz for SD).
1722:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1723:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableHighSpeed(XMC_SDMMC_t *const sdmmc)
1724:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1345              	 .loc 2 1724 0
 1346              	 .cfi_startproc
 1347              	 
 1348              	 
 1349              	 
 1350 0000 80B4     	 push {r7}
 1351              	.LCFI148:
 1352              	 .cfi_def_cfa_offset 4
 1353              	 .cfi_offset 7,-4
 1354 0002 83B0     	 sub sp,sp,#12
 1355              	.LCFI149:
 1356              	 .cfi_def_cfa_offset 16
 1357 0004 00AF     	 add r7,sp,#0
 1358              	.LCFI150:
 1359              	 .cfi_def_cfa_register 7
 1360 0006 7860     	 str r0,[r7,#4]
1725:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableHighSpeed: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
1726:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1727:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (uint8_t)SDMMC_HOST_CTRL_HIGH_SPEED_EN_Msk;
 1361              	 .loc 2 1727 0
 1362 0008 7B68     	 ldr r3,[r7,#4]
 1363 000a 93F82830 	 ldrb r3,[r3,#40]
 1364 000e DBB2     	 uxtb r3,r3
 1365 0010 43F00403 	 orr r3,r3,#4
 1366 0014 DAB2     	 uxtb r2,r3
 1367 0016 7B68     	 ldr r3,[r7,#4]
 1368 0018 83F82820 	 strb r2,[r3,#40]
1728:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1369              	 .loc 2 1728 0
 1370 001c 0C37     	 adds r7,r7,#12
 1371              	.LCFI151:
 1372              	 .cfi_def_cfa_offset 4
 1373 001e BD46     	 mov sp,r7
 1374              	.LCFI152:
 1375              	 .cfi_def_cfa_register 13
 1376              	 
 1377 0020 5DF8047B 	 ldr r7,[sp],#4
 1378              	.LCFI153:
 1379              	 .cfi_restore 7
 1380              	 .cfi_def_cfa_offset 0
 1381 0024 7047     	 bx lr
 1382              	 .cfi_endproc
 1383              	.LFE217:
 1385 0026 00BF     	 .section .text.XMC_SDMMC_DisableHighSpeed,"ax",%progbits
 1386              	 .align 2
 1387              	 .thumb
 1388              	 .thumb_func
 1390              	XMC_SDMMC_DisableHighSpeed:
 1391              	.LFB218:
1729:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1730:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1731:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1732:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1733:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1734:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1735:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * High speed disable <br>
1736:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1737:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1738:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to disable high speed operation. The host controller will switch back
1739:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * to a normal speed mode. In this mode, the host controller outputs command and data lines
1740:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at 25 MHz for SD.
1741:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1742:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableHighSpeed(XMC_SDMMC_t *const sdmmc)
1743:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1392              	 .loc 2 1743 0
 1393              	 .cfi_startproc
 1394              	 
 1395              	 
 1396              	 
 1397 0000 80B4     	 push {r7}
 1398              	.LCFI154:
 1399              	 .cfi_def_cfa_offset 4
 1400              	 .cfi_offset 7,-4
 1401 0002 83B0     	 sub sp,sp,#12
 1402              	.LCFI155:
 1403              	 .cfi_def_cfa_offset 16
 1404 0004 00AF     	 add r7,sp,#0
 1405              	.LCFI156:
 1406              	 .cfi_def_cfa_register 7
 1407 0006 7860     	 str r0,[r7,#4]
1744:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_DisableHighSpeed: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
1745:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1746:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL &= (uint8_t)~SDMMC_HOST_CTRL_HIGH_SPEED_EN_Msk;
 1408              	 .loc 2 1746 0
 1409 0008 7B68     	 ldr r3,[r7,#4]
 1410 000a 93F82830 	 ldrb r3,[r3,#40]
 1411 000e DBB2     	 uxtb r3,r3
 1412 0010 23F00403 	 bic r3,r3,#4
 1413 0014 DAB2     	 uxtb r2,r3
 1414 0016 7B68     	 ldr r3,[r7,#4]
 1415 0018 83F82820 	 strb r2,[r3,#40]
1747:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1416              	 .loc 2 1747 0
 1417 001c 0C37     	 adds r7,r7,#12
 1418              	.LCFI157:
 1419              	 .cfi_def_cfa_offset 4
 1420 001e BD46     	 mov sp,r7
 1421              	.LCFI158:
 1422              	 .cfi_def_cfa_register 13
 1423              	 
 1424 0020 5DF8047B 	 ldr r7,[sp],#4
 1425              	.LCFI159:
 1426              	 .cfi_restore 7
 1427              	 .cfi_def_cfa_offset 0
 1428 0024 7047     	 bx lr
 1429              	 .cfi_endproc
 1430              	.LFE218:
 1432              	 .global sdmmc_block_command
 1433 0026 00BF     	 .section .rodata.sdmmc_block_command,"a",%progbits
 1434              	 .align 2
 1437              	sdmmc_block_command:
 1438 0000 00       	 .byte 0
 1439 0001 00       	 .byte 0
 1440 0002 09       	 .byte 9
 1441 0003 02       	 .byte 2
 1442 0004 1A       	 .byte 26
 1443 0005 03       	 .byte 3
 1444 0006 00       	 .byte 0
 1445 0007 04       	 .byte 4
 1446 0008 3A       	 .byte 58
 1447 0009 06       	 .byte 6
 1448 000a 1B       	 .byte 27
 1449 000b 07       	 .byte 7
 1450 000c 1A       	 .byte 26
 1451 000d 08       	 .byte 8
 1452 000e 09       	 .byte 9
 1453 000f 09       	 .byte 9
 1454 0010 09       	 .byte 9
 1455 0011 0A       	 .byte 10
 1456 0012 1B       	 .byte 27
 1457 0013 0C       	 .byte 12
 1458 0014 1A       	 .byte 26
 1459 0015 0D       	 .byte 13
 1460 0016 00       	 .byte 0
 1461 0017 0F       	 .byte 15
 1462 0018 1A       	 .byte 26
 1463 0019 10       	 .byte 16
 1464 001a 3A       	 .byte 58
 1465 001b 11       	 .byte 17
 1466 001c 3A       	 .byte 58
 1467 001d 12       	 .byte 18
 1468 001e 3A       	 .byte 58
 1469 001f 18       	 .byte 24
 1470 0020 3A       	 .byte 58
 1471 0021 19       	 .byte 25
 1472 0022 3A       	 .byte 58
 1473 0023 1B       	 .byte 27
 1474 0024 1A       	 .byte 26
 1475 0025 1C       	 .byte 28
 1476 0026 1A       	 .byte 26
 1477 0027 1D       	 .byte 29
 1478 0028 3A       	 .byte 58
 1479 0029 1E       	 .byte 30
 1480 002a 1A       	 .byte 26
 1481 002b 20       	 .byte 32
 1482 002c 1A       	 .byte 26
 1483 002d 21       	 .byte 33
 1484 002e 1B       	 .byte 27
 1485 002f 26       	 .byte 38
 1486 0030 3A       	 .byte 58
 1487 0031 2A       	 .byte 42
 1488 0032 1A       	 .byte 26
 1489 0033 37       	 .byte 55
 1490 0034 3A       	 .byte 58
 1491 0035 38       	 .byte 56
 1492 0036 1A       	 .byte 26
 1493 0037 06       	 .byte 6
 1494 0038 3A       	 .byte 58
 1495 0039 0D       	 .byte 13
 1496 003a 3A       	 .byte 58
 1497 003b 16       	 .byte 22
 1498 003c 1A       	 .byte 26
 1499 003d 17       	 .byte 23
 1500 003e 02       	 .byte 2
 1501 003f 29       	 .byte 41
 1502 0040 1A       	 .byte 26
 1503 0041 2A       	 .byte 42
 1504 0042 3A       	 .byte 58
 1505 0043 33       	 .byte 51
 1506 0044 12       	 .byte 18
 1507 0045 01       	 .byte 1
 1508 0046 1B       	 .byte 27
 1509 0047 05       	 .byte 5
 1510 0048 1B       	 .byte 27
 1511 0049 06       	 .byte 6
 1512 004a 3A       	 .byte 58
 1513 004b 08       	 .byte 8
 1514 004c 1A       	 .byte 26
 1515 004d 23       	 .byte 35
 1516 004e 1A       	 .byte 26
 1517 004f 24       	 .byte 36
 1518              	 .global sdmmc_block_sd_hash_table
 1519              	 .section .rodata.sdmmc_block_sd_hash_table,"a",%progbits
 1520              	 .align 2
 1523              	sdmmc_block_sd_hash_table:
 1524 0000 00       	 .byte 0
 1525 0001 FF       	 .byte -1
 1526 0002 01       	 .byte 1
 1527 0003 02       	 .byte 2
 1528 0004 03       	 .byte 3
 1529 0005 FF       	 .byte -1
 1530 0006 04       	 .byte 4
 1531 0007 05       	 .byte 5
 1532 0008 06       	 .byte 6
 1533 0009 07       	 .byte 7
 1534 000a 08       	 .byte 8
 1535 000b FF       	 .byte -1
 1536 000c 09       	 .byte 9
 1537 000d 0A       	 .byte 10
 1538 000e FF       	 .byte -1
 1539 000f 0B       	 .byte 11
 1540 0010 0C       	 .byte 12
 1541 0011 0D       	 .byte 13
 1542 0012 0E       	 .byte 14
 1543 0013 FF       	 .byte -1
 1544 0014 FF       	 .byte -1
 1545 0015 FF       	 .byte -1
 1546 0016 FF       	 .byte -1
 1547 0017 FF       	 .byte -1
 1548 0018 0F       	 .byte 15
 1549 0019 10       	 .byte 16
 1550 001a FF       	 .byte -1
 1551 001b 11       	 .byte 17
 1552 001c 12       	 .byte 18
 1553 001d 13       	 .byte 19
 1554 001e 14       	 .byte 20
 1555 001f FF       	 .byte -1
 1556 0020 15       	 .byte 21
 1557 0021 16       	 .byte 22
 1558 0022 FF       	 .byte -1
 1559 0023 FF       	 .byte -1
 1560 0024 FF       	 .byte -1
 1561 0025 FF       	 .byte -1
 1562 0026 17       	 .byte 23
 1563 0027 FF       	 .byte -1
 1564 0028 FF       	 .byte -1
 1565 0029 FF       	 .byte -1
 1566 002a 18       	 .byte 24
 1567 002b FF       	 .byte -1
 1568 002c FF       	 .byte -1
 1569 002d FF       	 .byte -1
 1570 002e FF       	 .byte -1
 1571 002f FF       	 .byte -1
 1572 0030 FF       	 .byte -1
 1573 0031 FF       	 .byte -1
 1574 0032 FF       	 .byte -1
 1575 0033 FF       	 .byte -1
 1576 0034 FF       	 .byte -1
 1577 0035 FF       	 .byte -1
 1578 0036 FF       	 .byte -1
 1579 0037 19       	 .byte 25
 1580 0038 1A       	 .byte 26
 1581 0039 FF       	 .byte -1
 1582 003a 1B       	 .byte 27
 1583 003b 1C       	 .byte 28
 1584 003c 1D       	 .byte 29
 1585 003d 1E       	 .byte 30
 1586 003e 1F       	 .byte 31
 1587 003f 20       	 .byte 32
 1588 0040 21       	 .byte 33
 1589 0041 000000   	 .section .text.SDMMC_BLOCK_SD_lReset,"ax",%progbits
 1590              	 .align 2
 1591              	 .thumb
 1592              	 .thumb_func
 1594              	SDMMC_BLOCK_SD_lReset:
 1595              	.LFB229:
 1596              	 .file 3 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c"
   1:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**
   2:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @file sdmmc_block_private_sd.c
   3:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @date 2017-06-08
   4:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
   5:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * NOTE:
   6:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
   8:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @cond
   9:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
  10:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SDMMC_BLOCK v4.0.28 - Configures the SD host to interface with the SDMMC card.
  11:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  12:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Copyright (c) 2016-2019, Infineon Technologies AG
  13:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * All rights reserved.
  14:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  15:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * following conditions are met:
  17:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  18:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   disclaimer.
  20:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  21:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  24:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  27:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  35:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
  38:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  39:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Change History
  40:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * --------------
  41:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  42:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-01-20:
  43:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Initial version. <br>
  44:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  45:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-02-08:
  46:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Help Doc updated. <br>
  47:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Bug fixes done.<br>
  48:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  49:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-04-05
  50:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Bug fixes for public release, April, 2016 <br>
  51:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - MISRA fixes <br>
  52:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Add timeout for erase() <br>
  53:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Check write protection in write/erase conditions <br>
  54:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Remove mode_init_flag check for functions invoked in IOCTL <br>
  55:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  56:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-07-20:
  57:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - lReadResponse(): Fixes in handling XMC_SDMMC_RESPONSE_TYPE_R2 <br>
  58:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  59:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-08-24:
  60:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Introduce timeout mechanism in SDMMC_BLOCK_SD_lCheckDataCommandLines() <br>
  61:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  62:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2017-06-08
  63:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Fix SDMMC_BLOCK_SD_GetSectorCount() for Standard Capacity cards
  64:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  65:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @endcond
  66:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  67:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
  68:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  69:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #include "sdmmc_block_private_sd.h"
  70:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  71:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #ifdef SDMMC_BLOCK_SD
  72:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  73:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
  74:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * LOCAL ROUTINES
  75:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
  76:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  77:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
  78:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReset(SDMMC_BLOCK_t *const obj, uint32_t reset);
  79:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  80:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  81:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardCleanUp(SDMMC_BLOCK_t *const obj);
  82:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  83:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t
  84:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckDataCommandLines(SDMMC_BLOCK_t *const obj,
  85:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                       const XMC_SDMMC_COMMAND_t *cmd);
  86:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  87:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  88:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckArgumentError(const uint32_t *card_status, uint8_t *err);
  89:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  90:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  91:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckEraseError(const uint32_t *card_status, uint8_t *err);
  92:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  93:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  94:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckCardError(const uint32_t *card_status, uint8_t *err);
  95:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  96:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
  97:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckErrorInResponse(const uint32_t *card_status);
  98:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  99:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
 100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lGetCardLockState(SDMMC_BLOCK_t *const obj, uint32_t card_status, uint16_t cmd_index
 101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lTransferDelay(SDMMC_BLOCK_t *const obj, uint32_t delay);
 104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReadResponse(SDMMC_BLOCK_t *const obj,
 107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              const XMC_SDMMC_COMMAND_t *cmd,
 108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              void *resp);
 110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSendCommand(SDMMC_BLOCK_t *const obj,
 113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             const XMC_SDMMC_COMMAND_t *cmd,
 114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             uint32_t arg,
 115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             void *resp);
 117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSetVoltageWindow(SDMMC_BLOCK_t *const obj);
 120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lQueryOperatingCondition(SDMMC_BLOCK_t *const obj);
 123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lQueryVoltage(SDMMC_BLOCK_t *const obj, uint32_t arg);
 126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lAfterCardInitialize(SDMMC_BLOCK_t *const obj);
 129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lInitializeCard(SDMMC_BLOCK_t *const obj);
 132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lGetWriteProtect(SDMMC_BLOCK_t *const obj);
 135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer(SDMMC_BLOCK_t *const obj,
 138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              const XMC_SDMMC_COMMAND_t *cmd,
 139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              uint32_t arg,
 140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              uint16_t block_size);
 141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lMultiBlockTransfer(SDMMC_BLOCK_t *const obj,
 144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    uint32_t *addr,
 145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    uint32_t num_blocks,
 146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    const XMC_SDMMC_COMMAND_t *cmd,
 147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    uint32_t *buf,
 148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    SDMMC_BLOCK_SD_DATA_TRANSFER_t transfer_mode);
 149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckLockStatus(SDMMC_BLOCK_t *const obj, SDMMC_BLOCK_CARD_LOCK_STATUS_t mode);
 152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_SUPPORT_4_BUS_WIDTH
 154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSwitchBusWidth(SDMMC_BLOCK_t *const obj);
 156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSwitchSpeed(SDMMC_BLOCK_t *const obj);
 159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
 160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCommandDelay(SDMMC_BLOCK_t *const obj, uint32_t delay);
 163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSwitchToTransferState(SDMMC_BLOCK_t *const obj);
 166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
 168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lAcmdErrorRecovery(SDMMC_BLOCK_t *const obj);
 169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lStartTimer(SDMMC_BLOCK_t *const obj, uint32_t delay);
 172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckSectorBound(SDMMC_BLOCK_t *const obj,
 175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                  uint32_t sector_num,
 176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                  uint32_t sector_count);
 177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lLocalErase(SDMMC_BLOCK_t *const obj,
 180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                            uint32_t start_addr,
 181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                            uint32_t end_addr,
 182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                            uint32_t timeout);
 183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lHostControllerInit(SDMMC_BLOCK_t *const obj);
 186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lHostControllerDeInit(SDMMC_BLOCK_t *const obj);
 189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardReadMultipleBlocks(SDMMC_BLOCK_t *const obj,
 192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        uint32_t *read_buf,
 193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        uint32_t read_addr,
 194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        uint32_t num_blocks);
 195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardReadSingleBlock(SDMMC_BLOCK_t *const obj,
 198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t *read_buf,
 199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t read_addr);
 200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardWriteMultipleBlocks(SDMMC_BLOCK_t *const obj,
 203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                         const uint32_t *write_buf,
 204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                         uint32_t write_addr,
 205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                         uint32_t num_blocks);
 206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardWriteSingleBlock(SDMMC_BLOCK_t *const obj,
 209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                      const uint32_t *write_buf,
 210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                      uint32_t write_addr);
 211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lDelay(SDMMC_BLOCK_t *const obj, uint32_t delay);
 214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t
 216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lStopTimer(SDMMC_BLOCK_t *const obj);
 217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
 219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lWriteCardType(SDMMC_BLOCK_t *const obj);
 220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReadRca(SDMMC_BLOCK_t *const obj);
 223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReadCardRegisters(SDMMC_BLOCK_t *const obj);
 226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lDataTransfer(SDMMC_BLOCK_t *const obj,
 229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              uint32_t *buf,
 230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              SDMMC_BLOCK_SD_DATA_TRANSFER_t transfer_mode,
 231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              uint32_t quad_bytes);
 232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lErrorInterruptRecovery(SDMMC_BLOCK_t *const obj);
 237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSingleBlockTransfer(SDMMC_BLOCK_t *const obj,
 240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     const XMC_SDMMC_COMMAND_t *cmd,
 241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t arg,
 242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint16_t block_size,
 243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t *buf,
 244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     SDMMC_BLOCK_SD_DATA_TRANSFER_t transfer_mode);
 245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t
 247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_Start(SDMMC_BLOCK_t *const obj);
 248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t
 250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_NormalInterruptHandler(SDMMC_BLOCK_t *const obj, uint16_t int_status);
 251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t
 253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_ErrorInterruptHandler(SDMMC_BLOCK_t *const obj, uint16_t int_status);
 254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * MACROS
 257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * DATA STRUCTURES
 261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Command Structure defining SD, MMC and Application specific commands */
 264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** const XMC_SDMMC_COMMAND_t sdmmc_block_command[40] =
 265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start: SD card commands */
 267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{0U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_GO_IDLE_STATE}},        /* 0 */
 268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{1U, 1U, 0U, 0U, 0U, SDMMC_BLOCK_ALL_SEND_CID}},         /* 1 */
 269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SEND_RELATIVE_ADDR}},   /* 2 */
 270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{0U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_SET_DSR}},              /* 3 */
 271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SWITCH_FUNC}},          /* 4 */
 272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SELECT_DESELECT_CARD}}, /* 5 */
 273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SD_SEND_IF_COND}},      /* 6 */
 274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{1U, 1U, 0U, 0U, 0U, SDMMC_BLOCK_SEND_CSD}},             /* 7 */
 275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{1U, 1U, 0U, 0U, 0U, SDMMC_BLOCK_SEND_CID}},             /* 8 */
 276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_STOP_TRANSMISSION}},    /* 9 */
 277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SEND_STATUS}},          /* 10 */
 278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{0U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_GO_INACTIVE_STATE}},    /* 11 */
 279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_BLOCKLEN}},         /* 12 */
 280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_READ_SINGLE_BLOCK}},    /* 13 */
 281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_READ_MULTIPLE_BLOCK}},  /* 14 */
 282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_WRITE_BLOCK}},          /* 15 */
 283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_WRITE_MULTIPLE_BLOCK}}, /* 16 */
 284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_PROGRAM_CSD}},          /* 17 */
 285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_WRITE_PROT}},       /* 18 */
 286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_CLR_WRITE_PROT}},       /* 19 */
 287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SEND_WRITE_PROT}},      /* 20 */
 288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_WR_BLK_START}},   /* 21 */
 289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_WR_BLK_END}},     /* 22 */
 290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE}},                /* 23 */
 291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_LOCK_UNLOCK}},          /* 24 */
 292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_APP_CMD}},              /* 25 */
 293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_GEN_CMD}},              /* 26 */
 294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start: application specific commands */
 295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_BUS_WIDTH}},        /* 27 */
 296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SD_STATUS}},            /* 28 */
 297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SEND_NUM_WR_BLOCKS}},   /* 29 */
 298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_WR_BLK_ERASE_COUNT}}, /* 30 */
 299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_SD_SEND_OP_COND}},      /* 31 */
 300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_CLR_CARD_DETECT}},  /* 32 */
 301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SEND_SCR}},             /* 33 */
 302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start of SDMMC_MMC Card specific commands */
 303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 0U, 1U, 0U, 0U, SDMMC_BLOCK_MMC_SEND_OP_COND}},     /* 34 */
 304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_MMC_SLEEP_AWAKE}},      /* 35 */
 305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SWITCH_FUNC}},          /* 36 */
 306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_MMC_SEND_EXT_CSD}},     /* 37 */
 307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_GROUP_START}},    /* 38 */
 308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_GROUP_END}}       /* 39 */
 309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** };
 310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
 312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SD card command index hash table
 313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * It contains the index of the command structure
 314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
 315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Array index 0-57 is for general SD commands and array
 316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * index 58-64 is for application specific commands.
 317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
 318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** const uint8_t sdmmc_block_sd_hash_table[65] =
 319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x00, (uint8_t)0xFF, (uint8_t)0x01, (uint8_t)0x02,
 321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x03, (uint8_t)0xFF, (uint8_t)0x04, (uint8_t)0x05,
 322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x06, (uint8_t)0x07, (uint8_t)0x08, (uint8_t)0xFF,
 323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x09, (uint8_t)0x0A, (uint8_t)0xFF, (uint8_t)0x0B,
 324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x0C, (uint8_t)0x0D, (uint8_t)0x0E, (uint8_t)0xFF,
 325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF,
 326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x0F, (uint8_t)0x10, (uint8_t)0xFF, (uint8_t)0x11,
 327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x12, (uint8_t)0x13, (uint8_t)0x14, (uint8_t)0xFF,
 328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x15, (uint8_t)0x16, (uint8_t)0xFF, (uint8_t)0xFF,
 329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0x17, (uint8_t)0xFF,
 330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0x18, (uint8_t)0xFF,
 331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF,
 332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF,
 333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0x19,
 334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x1A, (uint8_t)0xFF, (uint8_t)0x1B, (uint8_t)0x1C,
 335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x1D, (uint8_t)0x1E, (uint8_t)0x1F, (uint8_t)0x20,
 336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x21
 337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** };
 338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * EXTERNAL REFERENCES
 341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * API DEFINITIONS
 345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Resets the Host Controller's register */
 348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReset(SDMMC_BLOCK_t *const obj, uint32_t reset)
 349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1597              	 .loc 3 349 0
 1598              	 .cfi_startproc
 1599              	 
 1600              	 
 1601 0000 80B5     	 push {r7,lr}
 1602              	.LCFI160:
 1603              	 .cfi_def_cfa_offset 8
 1604              	 .cfi_offset 7,-8
 1605              	 .cfi_offset 14,-4
 1606 0002 84B0     	 sub sp,sp,#16
 1607              	.LCFI161:
 1608              	 .cfi_def_cfa_offset 24
 1609 0004 00AF     	 add r7,sp,#0
 1610              	.LCFI162:
 1611              	 .cfi_def_cfa_register 7
 1612 0006 7860     	 str r0,[r7,#4]
 1613 0008 3960     	 str r1,[r7]
 350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1614              	 .loc 3 350 0
 1615 000a 0023     	 movs r3,#0
 1616 000c FB73     	 strb r3,[r7,#15]
 351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SetSWReset(obj->sdmmc_sd->sdmmc, reset);
 1617              	 .loc 3 352 0
 1618 000e 7B68     	 ldr r3,[r7,#4]
 1619 0010 1B68     	 ldr r3,[r3]
 1620 0012 1B68     	 ldr r3,[r3]
 1621 0014 1846     	 mov r0,r3
 1622 0016 3968     	 ldr r1,[r7]
 1623 0018 FFF7FEFF 	 bl XMC_SDMMC_SetSWReset
 353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_RESET_DELAY);
 1624              	 .loc 3 354 0
 1625 001c 7868     	 ldr r0,[r7,#4]
 1626 001e 1749     	 ldr r1,.L58
 1627 0020 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id != 0U)
 1628              	 .loc 3 355 0
 1629 0024 7B68     	 ldr r3,[r7,#4]
 1630 0026 1B68     	 ldr r3,[r3]
 1631 0028 5B6D     	 ldr r3,[r3,#84]
 1632 002a 002B     	 cmp r3,#0
 1633 002c 20D0     	 beq .L53
 1634              	.L56:
 356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
 358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 1635              	 .loc 3 359 0
 1636 002e 7B68     	 ldr r3,[r7,#4]
 1637 0030 1B68     	 ldr r3,[r3]
 1638 0032 93F85C30 	 ldrb r3,[r3,#92]
 1639 0036 DBB2     	 uxtb r3,r3
 1640 0038 83F00103 	 eor r3,r3,#1
 1641 003c DBB2     	 uxtb r3,r3
 1642 003e 002B     	 cmp r3,#0
 1643 0040 02D0     	 beq .L54
 360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 1644              	 .loc 3 361 0
 1645 0042 2E23     	 movs r3,#46
 1646 0044 FB73     	 strb r3,[r7,#15]
 362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 1647              	 .loc 3 362 0
 1648 0046 0AE0     	 b .L55
 1649              	.L54:
 363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while (((uint32_t)XMC_SDMMC_GetSWResetStatus(obj->sdmmc_sd->sdmmc)) & (reset));
 1650              	 .loc 3 364 0
 1651 0048 7B68     	 ldr r3,[r7,#4]
 1652 004a 1B68     	 ldr r3,[r3]
 1653 004c 1B68     	 ldr r3,[r3]
 1654 004e 1846     	 mov r0,r3
 1655 0050 FFF7FEFF 	 bl XMC_SDMMC_GetSWResetStatus
 1656 0054 0246     	 mov r2,r0
 1657 0056 3B68     	 ldr r3,[r7]
 1658 0058 1340     	 ands r3,r3,r2
 1659 005a 002B     	 cmp r3,#0
 1660 005c E7D1     	 bne .L56
 1661              	.L55:
 365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
 367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 1662              	 .loc 3 367 0
 1663 005e 7868     	 ldr r0,[r7,#4]
 1664 0060 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 1665              	 .loc 3 368 0
 1666 0064 7B68     	 ldr r3,[r7,#4]
 1667 0066 1B68     	 ldr r3,[r3]
 1668 0068 5B6D     	 ldr r3,[r3,#84]
 1669 006a 1846     	 mov r0,r3
 1670 006c FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 1671              	.L53:
 369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 1672              	 .loc 3 371 0
 1673 0070 FB7B     	 ldrb r3,[r7,#15]
 372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 1674              	 .loc 3 372 0
 1675 0072 1846     	 mov r0,r3
 1676 0074 1037     	 adds r7,r7,#16
 1677              	.LCFI163:
 1678              	 .cfi_def_cfa_offset 8
 1679 0076 BD46     	 mov sp,r7
 1680              	.LCFI164:
 1681              	 .cfi_def_cfa_register 13
 1682              	 
 1683 0078 80BD     	 pop {r7,pc}
 1684              	.L59:
 1685 007a 00BF     	 .align 2
 1686              	.L58:
 1687 007c 20A10700 	 .word 500000
 1688              	 .cfi_endproc
 1689              	.LFE229:
 1691              	 .section .text.SDMMC_BLOCK_SD_lCardCleanUp,"ax",%progbits
 1692              	 .align 2
 1693              	 .thumb
 1694              	 .thumb_func
 1696              	SDMMC_BLOCK_SD_lCardCleanUp:
 1697              	.LFB230:
 373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Clears card specific structures and stops the SD clock */
 375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCardCleanUp(SDMMC_BLOCK_t *const obj)
 376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1698              	 .loc 3 376 0
 1699              	 .cfi_startproc
 1700              	 
 1701              	 
 1702 0000 80B5     	 push {r7,lr}
 1703              	.LCFI165:
 1704              	 .cfi_def_cfa_offset 8
 1705              	 .cfi_offset 7,-8
 1706              	 .cfi_offset 14,-4
 1707 0002 82B0     	 sub sp,sp,#8
 1708              	.LCFI166:
 1709              	 .cfi_def_cfa_offset 16
 1710 0004 00AF     	 add r7,sp,#0
 1711              	.LCFI167:
 1712              	 .cfi_def_cfa_register 7
 1713 0006 7860     	 str r0,[r7,#4]
 377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   memset((void *)&obj->sdmmc_sd->card_info, 0, sizeof(SDMMC_BLOCK_SD_CARD_INFORMATION_t));
 1714              	 .loc 3 377 0
 1715 0008 7B68     	 ldr r3,[r7,#4]
 1716 000a 1B68     	 ldr r3,[r3]
 1717 000c 2033     	 adds r3,r3,#32
 1718 000e 1846     	 mov r0,r3
 1719 0010 0021     	 movs r1,#0
 1720 0012 3022     	 movs r2,#48
 1721 0014 FFF7FEFF 	 bl memset
 378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->card_type = (uint8_t)0;
 1722              	 .loc 3 378 0
 1723 0018 7B68     	 ldr r3,[r7,#4]
 1724 001a 0022     	 movs r2,#0
 1725 001c 5A72     	 strb r2,[r3,#9]
 379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->f8 = (uint8_t)0;
 1726              	 .loc 3 379 0
 1727 001e 7B68     	 ldr r3,[r7,#4]
 1728 0020 1B68     	 ldr r3,[r3]
 1729 0022 0022     	 movs r2,#0
 1730 0024 83F85020 	 strb r2,[r3,#80]
 380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1731              	 .loc 3 380 0
 1732 0028 7B68     	 ldr r3,[r7,#4]
 1733 002a 1B68     	 ldr r3,[r3]
 1734 002c 0122     	 movs r2,#1
 1735 002e 5A76     	 strb r2,[r3,#25]
 381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1736              	 .loc 3 381 0
 1737 0030 7B68     	 ldr r3,[r7,#4]
 1738 0032 1B68     	 ldr r3,[r3]
 1739 0034 0122     	 movs r2,#1
 1740 0036 1A76     	 strb r2,[r3,#24]
 382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->err_recovery_stat = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1741              	 .loc 3 382 0
 1742 0038 7B68     	 ldr r3,[r7,#4]
 1743 003a 1B68     	 ldr r3,[r3]
 1744 003c 0122     	 movs r2,#1
 1745 003e 1A77     	 strb r2,[r3,#28]
 383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1746              	 .loc 3 383 0
 1747 0040 7B68     	 ldr r3,[r7,#4]
 1748 0042 1B68     	 ldr r3,[r3]
 1749 0044 0122     	 movs r2,#1
 1750 0046 9A76     	 strb r2,[r3,#26]
 384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->card_state = (uint8_t)0U;
 1751              	 .loc 3 384 0
 1752 0048 7B68     	 ldr r3,[r7,#4]
 1753 004a 0022     	 movs r2,#0
 1754 004c 1A72     	 strb r2,[r3,#8]
 385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD clock disable */
 387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SDClockDisable(obj->sdmmc_sd->sdmmc);
 1755              	 .loc 3 387 0
 1756 004e 7B68     	 ldr r3,[r7,#4]
 1757 0050 1B68     	 ldr r3,[r3]
 1758 0052 1B68     	 ldr r3,[r3]
 1759 0054 1846     	 mov r0,r3
 1760 0056 FFF7FEFF 	 bl XMC_SDMMC_SDClockDisable
 388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 1761              	 .loc 3 388 0
 1762 005a 0837     	 adds r7,r7,#8
 1763              	.LCFI168:
 1764              	 .cfi_def_cfa_offset 8
 1765 005c BD46     	 mov sp,r7
 1766              	.LCFI169:
 1767              	 .cfi_def_cfa_register 13
 1768              	 
 1769 005e 80BD     	 pop {r7,pc}
 1770              	 .cfi_endproc
 1771              	.LFE230:
 1773              	 .section .text.SDMMC_BLOCK_SD_lCheckDataCommandLines,"ax",%progbits
 1774              	 .align 2
 1775              	 .thumb
 1776              	 .thumb_func
 1778              	SDMMC_BLOCK_SD_lCheckDataCommandLines:
 1779              	.LFB231:
 389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check if CMD and DAT lines are free before issuing a command */
 391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t SDMMC_BLOCK_SD_lCheckDataCommandLines(SDMMC_BLOCK_t *const obj, const XMC_SDMMC_COM
 392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1780              	 .loc 3 392 0
 1781              	 .cfi_startproc
 1782              	 
 1783              	 
 1784 0000 80B5     	 push {r7,lr}
 1785              	.LCFI170:
 1786              	 .cfi_def_cfa_offset 8
 1787              	 .cfi_offset 7,-8
 1788              	 .cfi_offset 14,-4
 1789 0002 84B0     	 sub sp,sp,#16
 1790              	.LCFI171:
 1791              	 .cfi_def_cfa_offset 24
 1792 0004 00AF     	 add r7,sp,#0
 1793              	.LCFI172:
 1794              	 .cfi_def_cfa_register 7
 1795 0006 7860     	 str r0,[r7,#4]
 1796 0008 3960     	 str r1,[r7]
 393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_CMD_LINE_BUSY;
 1797              	 .loc 3 393 0
 1798 000a 1A23     	 movs r3,#26
 1799 000c FB60     	 str r3,[r7,#12]
 394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, SDMMC_BLOCK_DELAY_IN_COMMAND);
 1800              	 .loc 3 395 0
 1801 000e 7868     	 ldr r0,[r7,#4]
 1802 0010 4249     	 ldr r1,.L72
 1803 0012 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 1804 0016 0346     	 mov r3,r0
 1805 0018 FB60     	 str r3,[r7,#12]
 396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id != 0U)
 1806              	 .loc 3 397 0
 1807 001a 7B68     	 ldr r3,[r7,#4]
 1808 001c 1B68     	 ldr r3,[r3]
 1809 001e 5B6D     	 ldr r3,[r3,#84]
 1810 0020 002B     	 cmp r3,#0
 1811 0022 27D0     	 beq .L62
 1812              	.L65:
 398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
 400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 1813              	 .loc 3 401 0
 1814 0024 7B68     	 ldr r3,[r7,#4]
 1815 0026 1B68     	 ldr r3,[r3]
 1816 0028 93F85C30 	 ldrb r3,[r3,#92]
 1817 002c DBB2     	 uxtb r3,r3
 1818 002e 83F00103 	 eor r3,r3,#1
 1819 0032 DBB2     	 uxtb r3,r3
 1820 0034 002B     	 cmp r3,#0
 1821 0036 02D0     	 beq .L63
 402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 1822              	 .loc 3 403 0
 1823 0038 2E23     	 movs r3,#46
 1824 003a FB60     	 str r3,[r7,#12]
 404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 1825              	 .loc 3 404 0
 1826 003c 11E0     	 b .L64
 1827              	.L63:
 405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) ||
 1828              	 .loc 3 406 0
 1829 003e 7B68     	 ldr r3,[r7,#4]
 1830 0040 1B68     	 ldr r3,[r3]
 1831 0042 1B68     	 ldr r3,[r3]
 1832 0044 1846     	 mov r0,r3
 1833 0046 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 1834 004a 0346     	 mov r3,r0
 407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 1835              	 .loc 3 407 0
 1836 004c 002B     	 cmp r3,#0
 1837 004e E9D1     	 bne .L65
 1838              	 .loc 3 407 0 is_stmt 0 discriminator 1
 1839 0050 7B68     	 ldr r3,[r7,#4]
 1840 0052 1B68     	 ldr r3,[r3]
 1841 0054 1B68     	 ldr r3,[r3]
 1842 0056 1846     	 mov r0,r3
 1843 0058 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 1844 005c 0346     	 mov r3,r0
 406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 1845              	 .loc 3 406 0 is_stmt 1 discriminator 1
 1846 005e 002B     	 cmp r3,#0
 1847 0060 E0D1     	 bne .L65
 1848              	.L64:
 408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
 410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 1849              	 .loc 3 410 0
 1850 0062 7868     	 ldr r0,[r7,#4]
 1851 0064 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 1852              	 .loc 3 411 0
 1853 0068 7B68     	 ldr r3,[r7,#4]
 1854 006a 1B68     	 ldr r3,[r3]
 1855 006c 5B6D     	 ldr r3,[r3,#84]
 1856 006e 1846     	 mov r0,r3
 1857 0070 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 1858              	.L62:
 412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if command line is not busy; then proceed */
 415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc) == false)
 1859              	 .loc 3 415 0
 1860 0074 7B68     	 ldr r3,[r7,#4]
 1861 0076 1B68     	 ldr r3,[r3]
 1862 0078 1B68     	 ldr r3,[r3]
 1863 007a 1846     	 mov r0,r3
 1864 007c FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 1865 0080 0346     	 mov r3,r0
 1866 0082 83F00103 	 eor r3,r3,#1
 1867 0086 DBB2     	 uxtb r3,r3
 1868 0088 002B     	 cmp r3,#0
 1869 008a 41D0     	 beq .L66
 416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1870              	 .loc 3 417 0
 1871 008c 0023     	 movs r3,#0
 1872 008e FB60     	 str r3,[r7,#12]
 418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)cmd->dat_present_sel == (uint32_t)1U) ||
 1873              	 .loc 3 418 0
 1874 0090 3B68     	 ldr r3,[r7]
 1875 0092 1B78     	 ldrb r3,[r3]
 1876 0094 03F02003 	 and r3,r3,#32
 1877 0098 DBB2     	 uxtb r3,r3
 1878 009a 002B     	 cmp r3,#0
 1879 009c 0DD1     	 bne .L67
 419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         ((uint32_t)cmd->cmd_index == (uint32_t)SDMMC_BLOCK_SEND_STATUS) ||
 1880              	 .loc 3 419 0 discriminator 1
 1881 009e 3B68     	 ldr r3,[r7]
 1882 00a0 5B78     	 ldrb r3,[r3,#1]
 1883 00a2 03F03F03 	 and r3,r3,#63
 1884 00a6 DBB2     	 uxtb r3,r3
 418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)cmd->dat_present_sel == (uint32_t)1U) ||
 1885              	 .loc 3 418 0 discriminator 1
 1886 00a8 0D2B     	 cmp r3,#13
 1887 00aa 06D0     	 beq .L67
 420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         ((uint32_t)cmd->response_type_sel == (uint32_t)3U))
 1888              	 .loc 3 420 0
 1889 00ac 3B68     	 ldr r3,[r7]
 1890 00ae 1B78     	 ldrb r3,[r3]
 1891 00b0 03F00303 	 and r3,r3,#3
 1892 00b4 DBB2     	 uxtb r3,r3
 419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         ((uint32_t)cmd->cmd_index == (uint32_t)SDMMC_BLOCK_SEND_STATUS) ||
 1893              	 .loc 3 419 0
 1894 00b6 032B     	 cmp r3,#3
 1895 00b8 20D1     	 bne .L68
 1896              	.L67:
 421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) != false)
 1897              	 .loc 3 422 0
 1898 00ba 7B68     	 ldr r3,[r7,#4]
 1899 00bc 1B68     	 ldr r3,[r3]
 1900 00be 1B68     	 ldr r3,[r3]
 1901 00c0 1846     	 mov r0,r3
 1902 00c2 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 1903 00c6 0346     	 mov r3,r0
 1904 00c8 002B     	 cmp r3,#0
 1905 00ca 02D0     	 beq .L69
 423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_DATA_LINE_BUSY;
 1906              	 .loc 3 424 0
 1907 00cc 1B23     	 movs r3,#27
 1908 00ce FB60     	 str r3,[r7,#12]
 1909 00d0 14E0     	 b .L68
 1910              	.L69:
 425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
 427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (((uint32_t)cmd->dat_present_sel == (uint32_t)1U) || ((uint32_t)cmd->response_type_sel =
 1911              	 .loc 3 428 0
 1912 00d2 3B68     	 ldr r3,[r7]
 1913 00d4 1B78     	 ldrb r3,[r3]
 1914 00d6 03F02003 	 and r3,r3,#32
 1915 00da DBB2     	 uxtb r3,r3
 1916 00dc 002B     	 cmp r3,#0
 1917 00de 06D1     	 bne .L70
 1918              	 .loc 3 428 0 is_stmt 0 discriminator 1
 1919 00e0 3B68     	 ldr r3,[r7]
 1920 00e2 1B78     	 ldrb r3,[r3]
 1921 00e4 03F00303 	 and r3,r3,#3
 1922 00e8 DBB2     	 uxtb r3,r3
 1923 00ea 032B     	 cmp r3,#3
 1924 00ec 06D1     	 bne .L68
 1925              	.L70:
 429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Update data line state to active */
 431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 1926              	 .loc 3 431 0 is_stmt 1
 1927 00ee 7B68     	 ldr r3,[r7,#4]
 1928 00f0 1B7A     	 ldrb r3,[r3,#8]
 1929 00f2 43F02003 	 orr r3,r3,#32
 1930 00f6 DAB2     	 uxtb r2,r3
 1931 00f8 7B68     	 ldr r3,[r7,#4]
 1932 00fa 1A72     	 strb r2,[r3,#8]
 1933              	.L68:
 432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == (uint32_t)SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1934              	 .loc 3 436 0
 1935 00fc FB68     	 ldr r3,[r7,#12]
 1936 00fe 002B     	 cmp r3,#0
 1937 0100 06D1     	 bne .L66
 437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Update command line state to active */
 439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 1938              	 .loc 3 439 0
 1939 0102 7B68     	 ldr r3,[r7,#4]
 1940 0104 1B7A     	 ldrb r3,[r3,#8]
 1941 0106 43F01003 	 orr r3,r3,#16
 1942 010a DAB2     	 uxtb r2,r3
 1943 010c 7B68     	 ldr r3,[r7,#4]
 1944 010e 1A72     	 strb r2,[r3,#8]
 1945              	.L66:
 440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 1946              	 .loc 3 443 0
 1947 0110 FB68     	 ldr r3,[r7,#12]
 444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 1948              	 .loc 3 444 0
 1949 0112 1846     	 mov r0,r3
 1950 0114 1037     	 adds r7,r7,#16
 1951              	.LCFI173:
 1952              	 .cfi_def_cfa_offset 8
 1953 0116 BD46     	 mov sp,r7
 1954              	.LCFI174:
 1955              	 .cfi_def_cfa_register 13
 1956              	 
 1957 0118 80BD     	 pop {r7,pc}
 1958              	.L73:
 1959 011a 00BF     	 .align 2
 1960              	.L72:
 1961 011c 40420F00 	 .word 1000000
 1962              	 .cfi_endproc
 1963              	.LFE231:
 1965              	 .section .text.SDMMC_BLOCK_SD_lCheckArgumentError,"ax",%progbits
 1966              	 .align 2
 1967              	 .thumb
 1968              	 .thumb_func
 1970              	SDMMC_BLOCK_SD_lCheckArgumentError:
 1971              	.LFB232:
 445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check response error types in command's arguments category */
 447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCheckArgumentError(const uint32_t *card_status, uint8_t *err)
 448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1972              	 .loc 3 448 0
 1973              	 .cfi_startproc
 1974              	 
 1975              	 
 1976              	 
 1977 0000 80B4     	 push {r7}
 1978              	.LCFI175:
 1979              	 .cfi_def_cfa_offset 4
 1980              	 .cfi_offset 7,-4
 1981 0002 83B0     	 sub sp,sp,#12
 1982              	.LCFI176:
 1983              	 .cfi_def_cfa_offset 16
 1984 0004 00AF     	 add r7,sp,#0
 1985              	.LCFI177:
 1986              	 .cfi_def_cfa_register 7
 1987 0006 7860     	 str r0,[r7,#4]
 1988 0008 3960     	 str r1,[r7]
 449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_OUT_OF_RANGE_BITMASK) != (uint32_t)0U)
 1989              	 .loc 3 449 0
 1990 000a 7B68     	 ldr r3,[r7,#4]
 1991 000c 1B68     	 ldr r3,[r3]
 1992 000e 002B     	 cmp r3,#0
 1993 0010 02DA     	 bge .L75
 450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 1994              	 .loc 3 451 0
 1995 0012 3B68     	 ldr r3,[r7]
 1996 0014 0122     	 movs r2,#1
 1997 0016 1A70     	 strb r2,[r3]
 1998              	.L75:
 452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Out of range error");
 453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ADDRESS_ERROR_BITMASK) != (uint32_t)0U)
 1999              	 .loc 3 455 0
 2000 0018 7B68     	 ldr r3,[r7,#4]
 2001 001a 1B68     	 ldr r3,[r3]
 2002 001c 03F08043 	 and r3,r3,#1073741824
 2003 0020 002B     	 cmp r3,#0
 2004 0022 02D0     	 beq .L76
 456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2005              	 .loc 3 457 0
 2006 0024 3B68     	 ldr r3,[r7]
 2007 0026 0122     	 movs r2,#1
 2008 0028 1A70     	 strb r2,[r3]
 2009              	.L76:
 458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Address error");
 459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_BLOCK_LEN_ERROR_BITMASK) != (uint32_t)0U)
 2010              	 .loc 3 461 0
 2011 002a 7B68     	 ldr r3,[r7,#4]
 2012 002c 1B68     	 ldr r3,[r3]
 2013 002e 03F00053 	 and r3,r3,#536870912
 2014 0032 002B     	 cmp r3,#0
 2015 0034 02D0     	 beq .L77
 462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2016              	 .loc 3 463 0
 2017 0036 3B68     	 ldr r3,[r7]
 2018 0038 0122     	 movs r2,#1
 2019 003a 1A70     	 strb r2,[r3]
 2020              	.L77:
 464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Block length error");
 465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_WP_VIOLATION_BITMASK) != (uint32_t)0U)
 2021              	 .loc 3 467 0
 2022 003c 7B68     	 ldr r3,[r7,#4]
 2023 003e 1B68     	 ldr r3,[r3]
 2024 0040 03F08063 	 and r3,r3,#67108864
 2025 0044 002B     	 cmp r3,#0
 2026 0046 02D0     	 beq .L74
 468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2027              	 .loc 3 469 0
 2028 0048 3B68     	 ldr r3,[r7]
 2029 004a 0122     	 movs r2,#1
 2030 004c 1A70     	 strb r2,[r3]
 2031              	.L74:
 470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Write protection violation error");
 471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2032              	 .loc 3 472 0
 2033 004e 0C37     	 adds r7,r7,#12
 2034              	.LCFI178:
 2035              	 .cfi_def_cfa_offset 4
 2036 0050 BD46     	 mov sp,r7
 2037              	.LCFI179:
 2038              	 .cfi_def_cfa_register 13
 2039              	 
 2040 0052 5DF8047B 	 ldr r7,[sp],#4
 2041              	.LCFI180:
 2042              	 .cfi_restore 7
 2043              	 .cfi_def_cfa_offset 0
 2044 0056 7047     	 bx lr
 2045              	 .cfi_endproc
 2046              	.LFE232:
 2048              	 .section .text.SDMMC_BLOCK_SD_lCheckEraseError,"ax",%progbits
 2049              	 .align 2
 2050              	 .thumb
 2051              	 .thumb_func
 2053              	SDMMC_BLOCK_SD_lCheckEraseError:
 2054              	.LFB233:
 473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Checks response error types in erase category */
 475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCheckEraseError(const uint32_t *card_status, uint8_t *err)
 476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2055              	 .loc 3 476 0
 2056              	 .cfi_startproc
 2057              	 
 2058              	 
 2059              	 
 2060 0000 80B4     	 push {r7}
 2061              	.LCFI181:
 2062              	 .cfi_def_cfa_offset 4
 2063              	 .cfi_offset 7,-4
 2064 0002 83B0     	 sub sp,sp,#12
 2065              	.LCFI182:
 2066              	 .cfi_def_cfa_offset 16
 2067 0004 00AF     	 add r7,sp,#0
 2068              	.LCFI183:
 2069              	 .cfi_def_cfa_register 7
 2070 0006 7860     	 str r0,[r7,#4]
 2071 0008 3960     	 str r1,[r7]
 477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* An error in the sequence of erase commands occurred.*/
 478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ERASE_SEQ_ERROR_BITMASK) != (uint32_t)0)
 2072              	 .loc 3 478 0
 2073 000a 7B68     	 ldr r3,[r7,#4]
 2074 000c 1B68     	 ldr r3,[r3]
 2075 000e 03F08053 	 and r3,r3,#268435456
 2076 0012 002B     	 cmp r3,#0
 2077 0014 02D0     	 beq .L80
 479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2078              	 .loc 3 480 0
 2079 0016 3B68     	 ldr r3,[r7]
 2080 0018 0122     	 movs r2,#1
 2081 001a 1A70     	 strb r2,[r3]
 2082              	.L80:
 481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckEraseError: Sequential erase error");
 482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* An invalid selection of write-blocks for erase occurred */
 485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ERASE_PARAM_BITMASK) != (uint32_t)0)
 2083              	 .loc 3 485 0
 2084 001c 7B68     	 ldr r3,[r7,#4]
 2085 001e 1B68     	 ldr r3,[r3]
 2086 0020 03F00063 	 and r3,r3,#134217728
 2087 0024 002B     	 cmp r3,#0
 2088 0026 02D0     	 beq .L81
 486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2089              	 .loc 3 487 0
 2090 0028 3B68     	 ldr r3,[r7]
 2091 002a 0122     	 movs r2,#1
 2092 002c 1A70     	 strb r2,[r3]
 2093              	.L81:
 488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckEraseError: Parameter erase error");
 489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
 492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Set when only partial address space was erased due to existing
 493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * write protected blocks OR the temporary/permanent write protected card
 494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * was erased
 495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
 496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_WP_ERASE_SKIP_BITMASK) != (uint32_t)0)
 2094              	 .loc 3 496 0
 2095 002e 7B68     	 ldr r3,[r7,#4]
 2096 0030 1B68     	 ldr r3,[r3]
 2097 0032 03F40043 	 and r3,r3,#32768
 2098 0036 002B     	 cmp r3,#0
 2099 0038 02D0     	 beq .L79
 497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2100              	 .loc 3 498 0
 2101 003a 3B68     	 ldr r3,[r7]
 2102 003c 0122     	 movs r2,#1
 2103 003e 1A70     	 strb r2,[r3]
 2104              	.L79:
 499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckEraseError: Write protection erase skip error");
 500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2105              	 .loc 3 501 0
 2106 0040 0C37     	 adds r7,r7,#12
 2107              	.LCFI184:
 2108              	 .cfi_def_cfa_offset 4
 2109 0042 BD46     	 mov sp,r7
 2110              	.LCFI185:
 2111              	 .cfi_def_cfa_register 13
 2112              	 
 2113 0044 5DF8047B 	 ldr r7,[sp],#4
 2114              	.LCFI186:
 2115              	 .cfi_restore 7
 2116              	 .cfi_def_cfa_offset 0
 2117 0048 7047     	 bx lr
 2118              	 .cfi_endproc
 2119              	.LFE233:
 2121 004a 00BF     	 .section .text.SDMMC_BLOCK_SD_lCheckCardError,"ax",%progbits
 2122              	 .align 2
 2123              	 .thumb
 2124              	 .thumb_func
 2126              	SDMMC_BLOCK_SD_lCheckCardError:
 2127              	.LFB234:
 502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check response error types in card's internal error category */
 504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCheckCardError(const uint32_t *card_status, uint8_t *err)
 505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2128              	 .loc 3 505 0
 2129              	 .cfi_startproc
 2130              	 
 2131              	 
 2132              	 
 2133 0000 80B4     	 push {r7}
 2134              	.LCFI187:
 2135              	 .cfi_def_cfa_offset 4
 2136              	 .cfi_offset 7,-4
 2137 0002 83B0     	 sub sp,sp,#12
 2138              	.LCFI188:
 2139              	 .cfi_def_cfa_offset 16
 2140 0004 00AF     	 add r7,sp,#0
 2141              	.LCFI189:
 2142              	 .cfi_def_cfa_register 7
 2143 0006 7860     	 str r0,[r7,#4]
 2144 0008 3960     	 str r1,[r7]
 506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Card internal ECC was applied but failed to correct the data */
 507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CARD_ECC_FAILED_BITMASK) != (uint32_t)0U)
 2145              	 .loc 3 507 0
 2146 000a 7B68     	 ldr r3,[r7,#4]
 2147 000c 1B68     	 ldr r3,[r3]
 2148 000e 03F40013 	 and r3,r3,#2097152
 2149 0012 002B     	 cmp r3,#0
 2150 0014 02D0     	 beq .L84
 508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2151              	 .loc 3 509 0
 2152 0016 3B68     	 ldr r3,[r7]
 2153 0018 0122     	 movs r2,#1
 2154 001a 1A70     	 strb r2,[r3]
 2155              	.L84:
 510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckCardError: Card ECC error");
 511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Internal card controller error */
 514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CC_ERROR_BITMASK) != (uint32_t)0)
 2156              	 .loc 3 514 0
 2157 001c 7B68     	 ldr r3,[r7,#4]
 2158 001e 1B68     	 ldr r3,[r3]
 2159 0020 03F48013 	 and r3,r3,#1048576
 2160 0024 002B     	 cmp r3,#0
 2161 0026 02D0     	 beq .L85
 515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2162              	 .loc 3 516 0
 2163 0028 3B68     	 ldr r3,[r7]
 2164 002a 0122     	 movs r2,#1
 2165 002c 1A70     	 strb r2,[r3]
 2166              	.L85:
 517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckCardError: Internal card controller error");
 518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* A general or an unknown error occurred during the operation */
 521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ERROR_BITMASK) != (uint32_t)0)
 2167              	 .loc 3 521 0
 2168 002e 7B68     	 ldr r3,[r7,#4]
 2169 0030 1B68     	 ldr r3,[r3]
 2170 0032 03F40023 	 and r3,r3,#524288
 2171 0036 002B     	 cmp r3,#0
 2172 0038 02D0     	 beq .L83
 522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2173              	 .loc 3 523 0
 2174 003a 3B68     	 ldr r3,[r7]
 2175 003c 0122     	 movs r2,#1
 2176 003e 1A70     	 strb r2,[r3]
 2177              	.L83:
 524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckCardError: Unknown error");
 525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2178              	 .loc 3 526 0
 2179 0040 0C37     	 adds r7,r7,#12
 2180              	.LCFI190:
 2181              	 .cfi_def_cfa_offset 4
 2182 0042 BD46     	 mov sp,r7
 2183              	.LCFI191:
 2184              	 .cfi_def_cfa_register 13
 2185              	 
 2186 0044 5DF8047B 	 ldr r7,[sp],#4
 2187              	.LCFI192:
 2188              	 .cfi_restore 7
 2189              	 .cfi_def_cfa_offset 0
 2190 0048 7047     	 bx lr
 2191              	 .cfi_endproc
 2192              	.LFE234:
 2194 004a 00BF     	 .section .text.SDMMC_BLOCK_SD_lCheckErrorInResponse,"ax",%progbits
 2195              	 .align 2
 2196              	 .thumb
 2197              	 .thumb_func
 2199              	SDMMC_BLOCK_SD_lCheckErrorInResponse:
 2200              	.LFB235:
 527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check for any error in the command's (received) response */
 529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCheckErrorInResponse(const uint32_t *card_status)
 530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2201              	 .loc 3 530 0
 2202              	 .cfi_startproc
 2203              	 
 2204              	 
 2205 0000 80B5     	 push {r7,lr}
 2206              	.LCFI193:
 2207              	 .cfi_def_cfa_offset 8
 2208              	 .cfi_offset 7,-8
 2209              	 .cfi_offset 14,-4
 2210 0002 84B0     	 sub sp,sp,#16
 2211              	.LCFI194:
 2212              	 .cfi_def_cfa_offset 24
 2213 0004 00AF     	 add r7,sp,#0
 2214              	.LCFI195:
 2215              	 .cfi_def_cfa_register 7
 2216 0006 7860     	 str r0,[r7,#4]
 531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2217              	 .loc 3 531 0
 2218 0008 0023     	 movs r3,#0
 2219 000a FB73     	 strb r3,[r7,#15]
 532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t err = (uint8_t)0; /* No error */
 2220              	 .loc 3 532 0
 2221 000c 0023     	 movs r3,#0
 2222 000e BB73     	 strb r3,[r7,#14]
 533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check errors in arguments */
 535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SD_lCheckArgumentError(card_status, &err);
 2223              	 .loc 3 535 0
 2224 0010 07F10E03 	 add r3,r7,#14
 2225 0014 7868     	 ldr r0,[r7,#4]
 2226 0016 1946     	 mov r1,r3
 2227 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckArgumentError
 536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check errors specific to erase operation */
 538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SD_lCheckEraseError(card_status, &err);
 2228              	 .loc 3 538 0
 2229 001c 07F10E03 	 add r3,r7,#14
 2230 0020 7868     	 ldr r0,[r7,#4]
 2231 0022 1946     	 mov r1,r3
 2232 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckEraseError
 539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check errors specific to the card */
 541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SD_lCheckCardError(card_status, &err);
 2233              	 .loc 3 541 0
 2234 0028 07F10E03 	 add r3,r7,#14
 2235 002c 7868     	 ldr r0,[r7,#4]
 2236 002e 1946     	 mov r1,r3
 2237 0030 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckCardError
 542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
 544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Set when a sequence or password error has been detected in
 545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * lock/unlock card command
 546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
 547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_LOCK_UNLOCK_FAILED_BITMASK) != (uint32_t)0)
 2238              	 .loc 3 547 0
 2239 0034 7B68     	 ldr r3,[r7,#4]
 2240 0036 1B68     	 ldr r3,[r3]
 2241 0038 03F08073 	 and r3,r3,#16777216
 2242 003c 002B     	 cmp r3,#0
 2243 003e 01D0     	 beq .L88
 548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     err = (uint8_t)1;
 2244              	 .loc 3 549 0
 2245 0040 0123     	 movs r3,#1
 2246 0042 BB73     	 strb r3,[r7,#14]
 2247              	.L88:
 550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckErrorInResponse: Lock/unlock error");
 551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
 554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Can be one of the following errors:
 555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * 1) The read only section of the CSD does not match the card content
 556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * 2) An attempt to reverse the copy or permanent WP bits was made
 557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
 558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CSD_OVERWRITE_BITMASK) != (uint32_t)0)
 2248              	 .loc 3 558 0
 2249 0044 7B68     	 ldr r3,[r7,#4]
 2250 0046 1B68     	 ldr r3,[r3]
 2251 0048 03F48033 	 and r3,r3,#65536
 2252 004c 002B     	 cmp r3,#0
 2253 004e 01D0     	 beq .L89
 559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     err = (uint8_t)1;
 2254              	 .loc 3 560 0
 2255 0050 0123     	 movs r3,#1
 2256 0052 BB73     	 strb r3,[r7,#14]
 2257              	.L89:
 561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckErrorInResponse: CSD overwrite error");
 562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Error in the sequence of the authentication process */
 565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ASK_SEQ_ERROR_BITMASK) != (uint32_t)0)
 2258              	 .loc 3 565 0
 2259 0054 7B68     	 ldr r3,[r7,#4]
 2260 0056 1B68     	 ldr r3,[r3]
 2261 0058 03F00803 	 and r3,r3,#8
 2262 005c 002B     	 cmp r3,#0
 2263 005e 01D0     	 beq .L90
 566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     err = (uint8_t)1;
 2264              	 .loc 3 567 0
 2265 0060 0123     	 movs r3,#1
 2266 0062 BB73     	 strb r3,[r7,#14]
 2267              	.L90:
 568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckErrorInResponse: Authentication sequence error");
 569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Some SD cards treat CMD55 as an illegal command */
 572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (err == 1U)
 2268              	 .loc 3 572 0
 2269 0064 BB7B     	 ldrb r3,[r7,#14]
 2270 0066 012B     	 cmp r3,#1
 2271 0068 01D1     	 bne .L91
 573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2272              	 .loc 3 574 0
 2273 006a 0123     	 movs r3,#1
 2274 006c FB73     	 strb r3,[r7,#15]
 2275              	.L91:
 575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2276              	 .loc 3 577 0
 2277 006e FB7B     	 ldrb r3,[r7,#15]
 578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2278              	 .loc 3 578 0
 2279 0070 1846     	 mov r0,r3
 2280 0072 1037     	 adds r7,r7,#16
 2281              	.LCFI196:
 2282              	 .cfi_def_cfa_offset 8
 2283 0074 BD46     	 mov sp,r7
 2284              	.LCFI197:
 2285              	 .cfi_def_cfa_register 13
 2286              	 
 2287 0076 80BD     	 pop {r7,pc}
 2288              	 .cfi_endproc
 2289              	.LFE235:
 2291              	 .section .text.SDMMC_BLOCK_SD_lGetCardLockState,"ax",%progbits
 2292              	 .align 2
 2293              	 .thumb
 2294              	 .thumb_func
 2296              	SDMMC_BLOCK_SD_lGetCardLockState:
 2297              	.LFB236:
 579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check for lock status of SD card */
 581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lGetCardLockState(SDMMC_BLOCK_t *const obj, uint32_t card_status, uint16
 582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2298              	 .loc 3 582 0
 2299              	 .cfi_startproc
 2300              	 
 2301              	 
 2302              	 
 2303 0000 80B4     	 push {r7}
 2304              	.LCFI198:
 2305              	 .cfi_def_cfa_offset 4
 2306              	 .cfi_offset 7,-4
 2307 0002 85B0     	 sub sp,sp,#20
 2308              	.LCFI199:
 2309              	 .cfi_def_cfa_offset 24
 2310 0004 00AF     	 add r7,sp,#0
 2311              	.LCFI200:
 2312              	 .cfi_def_cfa_register 7
 2313 0006 F860     	 str r0,[r7,#12]
 2314 0008 B960     	 str r1,[r7,#8]
 2315 000a 1346     	 mov r3,r2
 2316 000c FB80     	 strh r3,[r7,#6]
 583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CARD_IS_LOCKED_BITMASK) != (uint32_t)0) &&
 2317              	 .loc 3 583 0
 2318 000e BB68     	 ldr r3,[r7,#8]
 2319 0010 03F00073 	 and r3,r3,#33554432
 2320 0014 002B     	 cmp r3,#0
 2321 0016 0AD0     	 beq .L94
 2322              	 .loc 3 583 0 is_stmt 0 discriminator 1
 2323 0018 FB88     	 ldrh r3,[r7,#6]
 2324 001a 032B     	 cmp r3,#3
 2325 001c 07D0     	 beq .L94
 584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (cmd_index != (uint32_t)SDMMC_BLOCK_SEND_RELATIVE_ADDR))
 585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED;
 2326              	 .loc 3 586 0 is_stmt 1
 2327 001e FB68     	 ldr r3,[r7,#12]
 2328 0020 1B7A     	 ldrb r3,[r3,#8]
 2329 0022 43F00803 	 orr r3,r3,#8
 2330 0026 DAB2     	 uxtb r2,r3
 2331 0028 FB68     	 ldr r3,[r7,#12]
 2332 002a 1A72     	 strb r2,[r3,#8]
 2333 002c 06E0     	 b .L93
 2334              	.L94:
 587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED;
 2335              	 .loc 3 590 0
 2336 002e FB68     	 ldr r3,[r7,#12]
 2337 0030 1B7A     	 ldrb r3,[r3,#8]
 2338 0032 23F00803 	 bic r3,r3,#8
 2339 0036 DAB2     	 uxtb r2,r3
 2340 0038 FB68     	 ldr r3,[r7,#12]
 2341 003a 1A72     	 strb r2,[r3,#8]
 2342              	.L93:
 591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2343              	 .loc 3 592 0
 2344 003c 1437     	 adds r7,r7,#20
 2345              	.LCFI201:
 2346              	 .cfi_def_cfa_offset 4
 2347 003e BD46     	 mov sp,r7
 2348              	.LCFI202:
 2349              	 .cfi_def_cfa_register 13
 2350              	 
 2351 0040 5DF8047B 	 ldr r7,[sp],#4
 2352              	.LCFI203:
 2353              	 .cfi_restore 7
 2354              	 .cfi_def_cfa_offset 0
 2355 0044 7047     	 bx lr
 2356              	 .cfi_endproc
 2357              	.LFE236:
 2359 0046 00BF     	 .section .text.SDMMC_BLOCK_SD_lTransferDelay,"ax",%progbits
 2360              	 .align 2
 2361              	 .thumb
 2362              	 .thumb_func
 2364              	SDMMC_BLOCK_SD_lTransferDelay:
 2365              	.LFB237:
 593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Provide transfer delay */
 595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lTransferDelay(SDMMC_BLOCK_t *const obj, uint32_t d
 596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2366              	 .loc 3 596 0
 2367              	 .cfi_startproc
 2368              	 
 2369              	 
 2370 0000 80B5     	 push {r7,lr}
 2371              	.LCFI204:
 2372              	 .cfi_def_cfa_offset 8
 2373              	 .cfi_offset 7,-8
 2374              	 .cfi_offset 14,-4
 2375 0002 84B0     	 sub sp,sp,#16
 2376              	.LCFI205:
 2377              	 .cfi_def_cfa_offset 24
 2378 0004 00AF     	 add r7,sp,#0
 2379              	.LCFI206:
 2380              	 .cfi_def_cfa_register 7
 2381 0006 7860     	 str r0,[r7,#4]
 2382 0008 3960     	 str r1,[r7]
 597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2383              	 .loc 3 597 0
 2384 000a 0023     	 movs r3,#0
 2385 000c FB73     	 strb r3,[r7,#15]
 598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1;
 2386              	 .loc 3 598 0
 2387 000e 7B68     	 ldr r3,[r7,#4]
 2388 0010 1B68     	 ldr r3,[r3]
 2389 0012 0122     	 movs r2,#1
 2390 0014 83F85C20 	 strb r2,[r3,#92]
 599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start timer */
 601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lStartTimer(obj, delay);
 2391              	 .loc 3 601 0
 2392 0018 7868     	 ldr r0,[r7,#4]
 2393 001a 3968     	 ldr r1,[r7]
 2394 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id == 0U)
 2395              	 .loc 3 602 0
 2396 0020 7B68     	 ldr r3,[r7,#4]
 2397 0022 1B68     	 ldr r3,[r3]
 2398 0024 5B6D     	 ldr r3,[r3,#84]
 2399 0026 002B     	 cmp r3,#0
 2400 0028 01D1     	 bne .L97
 603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED;
 2401              	 .loc 3 604 0
 2402 002a 3123     	 movs r3,#49
 2403 002c FB73     	 strb r3,[r7,#15]
 2404              	.L97:
 605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status != SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED)
 2405              	 .loc 3 607 0
 2406 002e FB7B     	 ldrb r3,[r7,#15]
 2407 0030 312B     	 cmp r3,#49
 2408 0032 1ED0     	 beq .L98
 2409              	.L101:
 608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
 610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 2410              	 .loc 3 611 0
 2411 0034 7B68     	 ldr r3,[r7,#4]
 2412 0036 1B68     	 ldr r3,[r3]
 2413 0038 93F85C30 	 ldrb r3,[r3,#92]
 2414 003c DBB2     	 uxtb r3,r3
 2415 003e 83F00103 	 eor r3,r3,#1
 2416 0042 DBB2     	 uxtb r3,r3
 2417 0044 002B     	 cmp r3,#0
 2418 0046 02D0     	 beq .L99
 612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 2419              	 .loc 3 613 0
 2420 0048 2E23     	 movs r3,#46
 2421 004a FB73     	 strb r3,[r7,#15]
 614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2422              	 .loc 3 614 0
 2423 004c 04E0     	 b .L100
 2424              	.L99:
 615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while (obj->sdmmc_sd->isr_context.transfer_flag == (uint8_t)0U);
 2425              	 .loc 3 616 0
 2426 004e 7B68     	 ldr r3,[r7,#4]
 2427 0050 1B68     	 ldr r3,[r3]
 2428 0052 1B7A     	 ldrb r3,[r3,#8]
 2429 0054 002B     	 cmp r3,#0
 2430 0056 EDD0     	 beq .L101
 2431              	.L100:
 617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.transfer_flag = (uint8_t)0U;
 2432              	 .loc 3 618 0
 2433 0058 7B68     	 ldr r3,[r7,#4]
 2434 005a 1B68     	 ldr r3,[r3]
 2435 005c 0022     	 movs r2,#0
 2436 005e 1A72     	 strb r2,[r3,#8]
 619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
 621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 2437              	 .loc 3 621 0
 2438 0060 7868     	 ldr r0,[r7,#4]
 2439 0062 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 2440              	 .loc 3 622 0
 2441 0066 7B68     	 ldr r3,[r7,#4]
 2442 0068 1B68     	 ldr r3,[r3]
 2443 006a 5B6D     	 ldr r3,[r3,#84]
 2444 006c 1846     	 mov r0,r3
 2445 006e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 2446              	.L98:
 623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->transfer_int_err != SDMMC_BLOCK_MODE_STATUS_TRANSFER_COMPLETE)
 2447              	 .loc 3 625 0
 2448 0072 7B68     	 ldr r3,[r7,#4]
 2449 0074 1B68     	 ldr r3,[r3]
 2450 0076 9B7E     	 ldrb r3,[r3,#26]
 2451 0078 1F2B     	 cmp r3,#31
 2452 007a 03D0     	 beq .L102
 626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->data_int_err;
 2453              	 .loc 3 627 0
 2454 007c 7B68     	 ldr r3,[r7,#4]
 2455 007e 1B68     	 ldr r3,[r3]
 2456 0080 1B7E     	 ldrb r3,[r3,#24]
 2457 0082 FB73     	 strb r3,[r7,#15]
 2458              	.L102:
 628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2459              	 .loc 3 630 0
 2460 0084 FB7B     	 ldrb r3,[r7,#15]
 631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2461              	 .loc 3 631 0
 2462 0086 1846     	 mov r0,r3
 2463 0088 1037     	 adds r7,r7,#16
 2464              	.LCFI207:
 2465              	 .cfi_def_cfa_offset 8
 2466 008a BD46     	 mov sp,r7
 2467              	.LCFI208:
 2468              	 .cfi_def_cfa_register 13
 2469              	 
 2470 008c 80BD     	 pop {r7,pc}
 2471              	 .cfi_endproc
 2472              	.LFE237:
 2474 008e 00BF     	 .section .text.SDMMC_BLOCK_SD_lReadResponse,"ax",%progbits
 2475              	 .align 2
 2476              	 .thumb
 2477              	 .thumb_func
 2479              	SDMMC_BLOCK_SD_lReadResponse:
 2480              	.LFB238:
 632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read response received for the command issued */
 634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReadResponse(SDMMC_BLOCK_t *const obj,
 635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               const XMC_SDMMC_COMMAND_t *cmd,
 636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               void *resp)
 638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2481              	 .loc 3 638 0
 2482              	 .cfi_startproc
 2483              	 
 2484              	 
 2485 0000 80B5     	 push {r7,lr}
 2486              	.LCFI209:
 2487              	 .cfi_def_cfa_offset 8
 2488              	 .cfi_offset 7,-8
 2489              	 .cfi_offset 14,-4
 2490 0002 8AB0     	 sub sp,sp,#40
 2491              	.LCFI210:
 2492              	 .cfi_def_cfa_offset 48
 2493 0004 00AF     	 add r7,sp,#0
 2494              	.LCFI211:
 2495              	 .cfi_def_cfa_register 7
 2496 0006 F860     	 str r0,[r7,#12]
 2497 0008 B960     	 str r1,[r7,#8]
 2498 000a 3B60     	 str r3,[r7]
 2499 000c 1346     	 mov r3,r2
 2500 000e FB71     	 strb r3,[r7,#7]
 639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t *ptr;
 640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 2501              	 .loc 3 640 0
 2502 0010 0023     	 movs r3,#0
 2503 0012 BB61     	 str r3,[r7,#24]
 641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t err_status = 0U;
 2504              	 .loc 3 641 0
 2505 0014 0023     	 movs r3,#0
 2506 0016 7B61     	 str r3,[r7,#20]
 642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2507              	 .loc 3 642 0
 2508 0018 0023     	 movs r3,#0
 2509 001a 87F82730 	 strb r3,[r7,#39]
 643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* To mask high byte from response register */
 644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t resp_high_mask = 0;  
 2510              	 .loc 3 644 0
 2511 001e 0023     	 movs r3,#0
 2512 0020 3B62     	 str r3,[r7,#32]
 645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check for no-response type commands */
 647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_GO_IDLE_STATE) ||
 2513              	 .loc 3 647 0
 2514 0022 BB68     	 ldr r3,[r7,#8]
 2515 0024 5B78     	 ldrb r3,[r3,#1]
 2516 0026 03F03F03 	 and r3,r3,#63
 2517 002a DBB2     	 uxtb r3,r3
 2518 002c 002B     	 cmp r3,#0
 2519 002e 06D0     	 beq .L105
 648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_GO_INACTIVE_STATE))
 2520              	 .loc 3 648 0 discriminator 1
 2521 0030 BB68     	 ldr r3,[r7,#8]
 2522 0032 5B78     	 ldrb r3,[r3,#1]
 2523 0034 03F03F03 	 and r3,r3,#63
 2524 0038 DBB2     	 uxtb r3,r3
 647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_GO_INACTIVE_STATE))
 2525              	 .loc 3 647 0 discriminator 1
 2526 003a 0F2B     	 cmp r3,#15
 2527 003c 03D1     	 bne .L106
 2528              	.L105:
 649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2529              	 .loc 3 650 0
 2530 003e 0023     	 movs r3,#0
 2531 0040 87F82730 	 strb r3,[r7,#39]
 2532 0044 96E0     	 b .L107
 2533              	.L106:
 651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     ptr = (uint32_t *)resp;
 2534              	 .loc 3 654 0
 2535 0046 3B68     	 ldr r3,[r7]
 2536 0048 FB61     	 str r3,[r7,#28]
 655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     card_status = (uint32_t)obj->sdmmc_sd->sdmmc->RESPONSE[0];
 2537              	 .loc 3 655 0
 2538 004a FB68     	 ldr r3,[r7,#12]
 2539 004c 1B68     	 ldr r3,[r3]
 2540 004e 1B68     	 ldr r3,[r3]
 2541 0050 1B69     	 ldr r3,[r3,#16]
 2542 0052 BB61     	 str r3,[r7,#24]
 656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check Lock Status */
 658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SD_lGetCardLockState(obj, card_status, (uint16_t)cmd->cmd_index);
 2543              	 .loc 3 658 0
 2544 0054 BA69     	 ldr r2,[r7,#24]
 2545 0056 BB68     	 ldr r3,[r7,#8]
 2546 0058 5B78     	 ldrb r3,[r3,#1]
 2547 005a C3F30503 	 ubfx r3,r3,#0,#6
 2548 005e DBB2     	 uxtb r3,r3
 2549 0060 9BB2     	 uxth r3,r3
 2550 0062 F868     	 ldr r0,[r7,#12]
 2551 0064 1146     	 mov r1,r2
 2552 0066 1A46     	 mov r2,r3
 2553 0068 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lGetCardLockState
 659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check response type */
 661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     switch (resp_type)
 2554              	 .loc 3 661 0
 2555 006c FB79     	 ldrb r3,[r7,#7]
 2556 006e 062B     	 cmp r3,#6
 2557 0070 7CD8     	 bhi .L108
 2558 0072 01A2     	 adr r2,.L110
 2559 0074 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2560              	 .p2align 2
 2561              	.L110:
 2562 0078 65010000 	 .word .L109+1
 2563 007c 95000000 	 .word .L111+1
 2564 0080 AD000000 	 .word .L112+1
 2565 0084 DB000000 	 .word .L113+1
 2566 0088 35010000 	 .word .L114+1
 2567 008c 45010000 	 .word .L115+1
 2568 0090 3D010000 	 .word .L116+1
 2569              	 .p2align 1
 2570              	.L111:
 662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R1 */
 664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R1:
 665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* check the error bits in the response */
 666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2571              	 .loc 3 666 0
 2572 0094 BA69     	 ldr r2,[r7,#24]
 2573 0096 FB69     	 ldr r3,[r7,#28]
 2574 0098 1A60     	 str r2,[r3]
 667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckErrorInResponse(&card_status);
 2575              	 .loc 3 667 0
 2576 009a 07F11803 	 add r3,r7,#24
 2577 009e 1846     	 mov r0,r3
 2578 00a0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckErrorInResponse
 2579 00a4 0346     	 mov r3,r0
 2580 00a6 87F82730 	 strb r3,[r7,#39]
 668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2581              	 .loc 3 668 0
 2582 00aa 63E0     	 b .L107
 2583              	.L112:
 669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R1b */
 671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R1b:
 672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2584              	 .loc 3 672 0
 2585 00ac BA69     	 ldr r2,[r7,#24]
 2586 00ae FB69     	 ldr r3,[r7,#28]
 2587 00b0 1A60     	 str r2,[r3]
 673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckErrorInResponse(&card_status);
 2588              	 .loc 3 674 0
 2589 00b2 07F11803 	 add r3,r7,#24
 2590 00b6 1846     	 mov r0,r3
 2591 00b8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckErrorInResponse
 2592 00bc 0346     	 mov r3,r0
 2593 00be 87F82730 	 strb r3,[r7,#39]
 675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2594              	 .loc 3 675 0
 2595 00c2 97F82730 	 ldrb r3,[r7,#39]
 2596 00c6 002B     	 cmp r3,#0
 2597 00c8 06D0     	 beq .L117
 676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Wait for transfer complete interrupt */
 678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lTransferDelay(obj, (uint32_t)SDMMC_BLOCK_DELAY_IN_TRANSFER);
 2598              	 .loc 3 678 0
 2599 00ca F868     	 ldr r0,[r7,#12]
 2600 00cc 2C49     	 ldr r1,.L119
 2601 00ce FFF7FEFF 	 bl SDMMC_BLOCK_SD_lTransferDelay
 2602 00d2 0346     	 mov r3,r0
 2603 00d4 87F82730 	 strb r3,[r7,#39]
 2604              	.L117:
 679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
 681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_ReadResponse: For R1b, SDMMC_BLOCK_TransferDelay failed");
 682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
 683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2605              	 .loc 3 685 0
 2606 00d8 4CE0     	 b .L107
 2607              	.L113:
 686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R2: response register R0-R7 */
 688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R2:
 689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)((uint32_t)XMC_SDMMC->RESPONSE[0] << 8U); ptr++;
 2608              	 .loc 3 689 0
 2609 00da 2A4B     	 ldr r3,.L119+4
 2610 00dc 1B69     	 ldr r3,[r3,#16]
 2611 00de 1A02     	 lsls r2,r3,#8
 2612 00e0 FB69     	 ldr r3,[r7,#28]
 2613 00e2 1A60     	 str r2,[r3]
 2614 00e4 FB69     	 ldr r3,[r7,#28]
 2615 00e6 0433     	 adds r3,r3,#4
 2616 00e8 FB61     	 str r3,[r7,#28]
 690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         resp_high_mask = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[0] & 0xFF000000) >> 24U);
 2617              	 .loc 3 690 0
 2618 00ea 264B     	 ldr r3,.L119+4
 2619 00ec 1B69     	 ldr r3,[r3,#16]
 2620 00ee 1B0E     	 lsrs r3,r3,#24
 2621 00f0 3B62     	 str r3,[r7,#32]
 691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[1] << 8U) | resp_high_mask); ptr++;
 2622              	 .loc 3 692 0
 2623 00f2 244B     	 ldr r3,.L119+4
 2624 00f4 5B69     	 ldr r3,[r3,#20]
 2625 00f6 1A02     	 lsls r2,r3,#8
 2626 00f8 3B6A     	 ldr r3,[r7,#32]
 2627 00fa 1A43     	 orrs r2,r2,r3
 2628 00fc FB69     	 ldr r3,[r7,#28]
 2629 00fe 1A60     	 str r2,[r3]
 2630 0100 FB69     	 ldr r3,[r7,#28]
 2631 0102 0433     	 adds r3,r3,#4
 2632 0104 FB61     	 str r3,[r7,#28]
 693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         resp_high_mask = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[1] & 0xFF000000) >> 24U);
 2633              	 .loc 3 693 0
 2634 0106 1F4B     	 ldr r3,.L119+4
 2635 0108 5B69     	 ldr r3,[r3,#20]
 2636 010a 1B0E     	 lsrs r3,r3,#24
 2637 010c 3B62     	 str r3,[r7,#32]
 694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[2] << 8U) | resp_high_mask);
 2638              	 .loc 3 695 0
 2639 010e 1D4B     	 ldr r3,.L119+4
 2640 0110 9B69     	 ldr r3,[r3,#24]
 2641 0112 1A02     	 lsls r2,r3,#8
 2642 0114 3B6A     	 ldr r3,[r7,#32]
 2643 0116 1A43     	 orrs r2,r2,r3
 2644 0118 FB69     	 ldr r3,[r7,#28]
 2645 011a 1A60     	 str r2,[r3]
 696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         resp_high_mask = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[2] & 0xFF000000) >> 24U);
 2646              	 .loc 3 696 0
 2647 011c 194B     	 ldr r3,.L119+4
 2648 011e 9B69     	 ldr r3,[r3,#24]
 2649 0120 1B0E     	 lsrs r3,r3,#24
 2650 0122 3B62     	 str r3,[r7,#32]
 697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[3] << 8U) | resp_high_mask);
 2651              	 .loc 3 698 0
 2652 0124 174B     	 ldr r3,.L119+4
 2653 0126 DB69     	 ldr r3,[r3,#28]
 2654 0128 1A02     	 lsls r2,r3,#8
 2655 012a 3B6A     	 ldr r3,[r7,#32]
 2656 012c 1A43     	 orrs r2,r2,r3
 2657 012e FB69     	 ldr r3,[r7,#28]
 2658 0130 1A60     	 str r2,[r3]
 699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2659              	 .loc 3 699 0
 2660 0132 1FE0     	 b .L107
 2661              	.L114:
 700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Responses R3 and R7 */
 702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R3:
 703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2662              	 .loc 3 703 0
 2663 0134 BA69     	 ldr r2,[r7,#24]
 2664 0136 FB69     	 ldr r3,[r7,#28]
 2665 0138 1A60     	 str r2,[r3]
 704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2666              	 .loc 3 704 0
 2667 013a 1BE0     	 b .L107
 2668              	.L116:
 705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R7:
 707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2669              	 .loc 3 707 0
 2670 013c BA69     	 ldr r2,[r7,#24]
 2671 013e FB69     	 ldr r3,[r7,#28]
 2672 0140 1A60     	 str r2,[r3]
 708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2673              	 .loc 3 708 0
 2674 0142 17E0     	 b .L107
 2675              	.L115:
 709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R6 */
 711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R6:
 712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         err_status = card_status & (uint32_t)SDMMC_RESPONSE0_RESPONSE0_Msk;
 2676              	 .loc 3 712 0
 2677 0144 BB69     	 ldr r3,[r7,#24]
 2678 0146 9BB2     	 uxth r3,r3
 2679 0148 7B61     	 str r3,[r7,#20]
 713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckErrorInResponse(&err_status);
 2680              	 .loc 3 713 0
 2681 014a 07F11403 	 add r3,r7,#20
 2682 014e 1846     	 mov r0,r3
 2683 0150 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckErrorInResponse
 2684 0154 0346     	 mov r3,r0
 2685 0156 87F82730 	 strb r3,[r7,#39]
 714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Read 16-bit RCA received in response R1 register */
 716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = ((uint32_t)(card_status & (uint32_t)SDMMC_RESPONSE0_RESPONSE1_Msk) >> SDMMC_BLOCK_HC
 2686              	 .loc 3 716 0
 2687 015a BB69     	 ldr r3,[r7,#24]
 2688 015c 1A0C     	 lsrs r2,r3,#16
 2689 015e FB69     	 ldr r3,[r7,#28]
 2690 0160 1A60     	 str r2,[r3]
 717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2691              	 .loc 3 717 0
 2692 0162 07E0     	 b .L107
 2693              	.L109:
 718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* No response */
 720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_NO_RESPONSE:
 721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2694              	 .loc 3 721 0
 2695 0164 0023     	 movs r3,#0
 2696 0166 87F82730 	 strb r3,[r7,#39]
 722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2697              	 .loc 3 722 0
 2698 016a 03E0     	 b .L107
 2699              	.L108:
 723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       default:
 725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2700              	 .loc 3 725 0
 2701 016c 0123     	 movs r3,#1
 2702 016e 87F82730 	 strb r3,[r7,#39]
 726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2703              	 .loc 3 726 0
 2704 0172 00BF     	 nop
 2705              	.L107:
 727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2706              	 .loc 3 730 0
 2707 0174 97F82730 	 ldrb r3,[r7,#39]
 731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2708              	 .loc 3 731 0
 2709 0178 1846     	 mov r0,r3
 2710 017a 2837     	 adds r7,r7,#40
 2711              	.LCFI212:
 2712              	 .cfi_def_cfa_offset 8
 2713 017c BD46     	 mov sp,r7
 2714              	.LCFI213:
 2715              	 .cfi_def_cfa_register 13
 2716              	 
 2717 017e 80BD     	 pop {r7,pc}
 2718              	.L120:
 2719              	 .align 2
 2720              	.L119:
 2721 0180 40420F00 	 .word 1000000
 2722 0184 00C00148 	 .word 1208074240
 2723              	 .cfi_endproc
 2724              	.LFE238:
 2726              	 .section .text.SDMMC_BLOCK_SD_lSendCommand,"ax",%progbits
 2727              	 .align 2
 2728              	 .thumb
 2729              	 .thumb_func
 2731              	SDMMC_BLOCK_SD_lSendCommand:
 2732              	.LFB239:
 732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Send command */
 734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSendCommand(SDMMC_BLOCK_t *const obj,
 735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              const XMC_SDMMC_COMMAND_t *cmd,
 736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              uint32_t arg,
 737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              void *resp)
 739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2733              	 .loc 3 739 0
 2734              	 .cfi_startproc
 2735              	 
 2736              	 
 2737 0000 80B5     	 push {r7,lr}
 2738              	.LCFI214:
 2739              	 .cfi_def_cfa_offset 8
 2740              	 .cfi_offset 7,-8
 2741              	 .cfi_offset 14,-4
 2742 0002 86B0     	 sub sp,sp,#24
 2743              	.LCFI215:
 2744              	 .cfi_def_cfa_offset 32
 2745 0004 00AF     	 add r7,sp,#0
 2746              	.LCFI216:
 2747              	 .cfi_def_cfa_register 7
 2748 0006 F860     	 str r0,[r7,#12]
 2749 0008 B960     	 str r1,[r7,#8]
 2750 000a 7A60     	 str r2,[r7,#4]
 2751 000c FB70     	 strb r3,[r7,#3]
 740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2752              	 .loc 3 740 0
 2753 000e 0123     	 movs r3,#1
 2754 0010 FB75     	 strb r3,[r7,#23]
 741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->issue_abort = (uint8_t)0U;
 2755              	 .loc 3 742 0
 2756 0012 FB68     	 ldr r3,[r7,#12]
 2757 0014 1B68     	 ldr r3,[r3]
 2758 0016 0022     	 movs r2,#0
 2759 0018 83F85120 	 strb r2,[r3,#81]
 743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2760              	 .loc 3 743 0
 2761 001c FB68     	 ldr r3,[r7,#12]
 2762 001e 1B68     	 ldr r3,[r3]
 2763 0020 0122     	 movs r2,#1
 2764 0022 5A76     	 strb r2,[r3,#25]
 744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2765              	 .loc 3 744 0
 2766 0024 FB68     	 ldr r3,[r7,#12]
 2767 0026 1B68     	 ldr r3,[r3]
 2768 0028 0122     	 movs r2,#1
 2769 002a 1A76     	 strb r2,[r3,#24]
 745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data or command line free? */
 747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = (SDMMC_BLOCK_MODE_STATUS_t)SDMMC_BLOCK_SD_lCheckDataCommandLines(obj, cmd);
 2770              	 .loc 3 747 0
 2771 002c F868     	 ldr r0,[r7,#12]
 2772 002e B968     	 ldr r1,[r7,#8]
 2773 0030 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckDataCommandLines
 2774 0034 0346     	 mov r3,r0
 2775 0036 FB75     	 strb r3,[r7,#23]
 748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (!((status == SDMMC_BLOCK_MODE_STATUS_DATA_LINE_BUSY) ||
 2776              	 .loc 3 748 0
 2777 0038 FB7D     	 ldrb r3,[r7,#23]
 2778 003a 1B2B     	 cmp r3,#27
 2779 003c 5DD0     	 beq .L122
 2780              	 .loc 3 748 0 is_stmt 0 discriminator 1
 2781 003e FB7D     	 ldrb r3,[r7,#23]
 2782 0040 1A2B     	 cmp r3,#26
 2783 0042 5AD0     	 beq .L122
 749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        (status == SDMMC_BLOCK_MODE_STATUS_CMD_LINE_BUSY)))
 750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send command */
 752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)XMC_SDMMC_SendCommand(obj->sdmmc_sd->sdmmc, cmd, arg);
 2784              	 .loc 3 752 0 is_stmt 1
 2785 0044 FB68     	 ldr r3,[r7,#12]
 2786 0046 1B68     	 ldr r3,[r3]
 2787 0048 1B68     	 ldr r3,[r3]
 2788 004a 1846     	 mov r0,r3
 2789 004c B968     	 ldr r1,[r7,#8]
 2790 004e 7A68     	 ldr r2,[r7,#4]
 2791 0050 FFF7FEFF 	 bl XMC_SDMMC_SendCommand
 753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Block until any of the bit in the interrupt status register gets set */
 755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_DELAY_IN_COMMAND) == SDMMC_BLOCK_MODE
 2792              	 .loc 3 755 0
 2793 0054 F868     	 ldr r0,[r7,#12]
 2794 0056 2B49     	 ldr r1,.L130
 2795 0058 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 2796 005c 0346     	 mov r3,r0
 2797 005e 002B     	 cmp r3,#0
 2798 0060 4BD1     	 bne .L122
 2799              	.L125:
 756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       do
 758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (obj->sdmmc_sd->tmr_expire == (bool)0)
 2800              	 .loc 3 759 0
 2801 0062 FB68     	 ldr r3,[r7,#12]
 2802 0064 1B68     	 ldr r3,[r3]
 2803 0066 93F85C30 	 ldrb r3,[r3,#92]
 2804 006a DBB2     	 uxtb r3,r3
 2805 006c 83F00103 	 eor r3,r3,#1
 2806 0070 DBB2     	 uxtb r3,r3
 2807 0072 002B     	 cmp r3,#0
 2808 0074 00D0     	 beq .L123
 760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           XMC_DEBUG("SDMMC_BLOCK_SendCommand: Timeout occured");
 762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           break;
 2809              	 .loc 3 762 0
 2810 0076 04E0     	 b .L124
 2811              	.L123:
 763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       } while ((uint8_t)obj->sdmmc_sd->isr_context.cmd_flag == (uint8_t)0U);
 2812              	 .loc 3 764 0
 2813 0078 FB68     	 ldr r3,[r7,#12]
 2814 007a 1B68     	 ldr r3,[r3]
 2815 007c 9B79     	 ldrb r3,[r3,#6]
 2816 007e 002B     	 cmp r3,#0
 2817 0080 EFD0     	 beq .L125
 2818              	.L124:
 765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->isr_context.cmd_flag = (uint8_t)0;
 2819              	 .loc 3 766 0
 2820 0082 FB68     	 ldr r3,[r7,#12]
 2821 0084 1B68     	 ldr r3,[r3]
 2822 0086 0022     	 movs r2,#0
 2823 0088 9A71     	 strb r2,[r3,#6]
 767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Stop timer and delete it */
 769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 2824              	 .loc 3 769 0
 2825 008a F868     	 ldr r0,[r7,#12]
 2826 008c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SYSTIMER_DeleteTimer((uint32_t)obj->sdmmc_sd->tmr_id);
 2827              	 .loc 3 770 0
 2828 0090 FB68     	 ldr r3,[r7,#12]
 2829 0092 1B68     	 ldr r3,[r3]
 2830 0094 5B6D     	 ldr r3,[r3,#84]
 2831 0096 1846     	 mov r0,r3
 2832 0098 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Check for possible errors */
 773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if ((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->cmd_int_err == SDMMC_BLOCK_MODE_STATUS_COMMAND_
 2833              	 .loc 3 773 0
 2834 009c FB68     	 ldr r3,[r7,#12]
 2835 009e 1B68     	 ldr r3,[r3]
 2836 00a0 5B7E     	 ldrb r3,[r3,#25]
 2837 00a2 1C2B     	 cmp r3,#28
 2838 00a4 09D1     	 bne .L126
 774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Read response received */
 776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lReadResponse(obj, cmd, resp_type, resp);
 2839              	 .loc 3 776 0
 2840 00a6 FB78     	 ldrb r3,[r7,#3]
 2841 00a8 F868     	 ldr r0,[r7,#12]
 2842 00aa B968     	 ldr r1,[r7,#8]
 2843 00ac 1A46     	 mov r2,r3
 2844 00ae 3B6A     	 ldr r3,[r7,#32]
 2845 00b0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReadResponse
 2846 00b4 0346     	 mov r3,r0
 2847 00b6 FB75     	 strb r3,[r7,#23]
 2848 00b8 1FE0     	 b .L122
 2849              	.L126:
 777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* For cmd8, check for cmd timeout interrupt */
 779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else if (((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->cmd_int_err == SDMMC_BLOCK_MODE_STATUS_CO
 2850              	 .loc 3 779 0
 2851 00ba FB68     	 ldr r3,[r7,#12]
 2852 00bc 1B68     	 ldr r3,[r3]
 2853 00be 5B7E     	 ldrb r3,[r3,#25]
 2854 00c0 022B     	 cmp r3,#2
 2855 00c2 09D1     	 bne .L127
 780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_SD_SEND_IF_COND))
 2856              	 .loc 3 780 0 discriminator 1
 2857 00c4 BB68     	 ldr r3,[r7,#8]
 2858 00c6 5B78     	 ldrb r3,[r3,#1]
 2859 00c8 03F03F03 	 and r3,r3,#63
 2860 00cc DBB2     	 uxtb r3,r3
 779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_SD_SEND_IF_COND))
 2861              	 .loc 3 779 0 discriminator 1
 2862 00ce 082B     	 cmp r3,#8
 2863 00d0 02D1     	 bne .L127
 781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 2864              	 .loc 3 782 0
 2865 00d2 0223     	 movs r3,#2
 2866 00d4 FB75     	 strb r3,[r7,#23]
 2867 00d6 10E0     	 b .L122
 2868              	.L127:
 783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
 785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((uint16_t)cmd->dat_present_sel == (uint16_t)1)
 2869              	 .loc 3 786 0
 2870 00d8 BB68     	 ldr r3,[r7,#8]
 2871 00da 1B78     	 ldrb r3,[r3]
 2872 00dc 03F02003 	 and r3,r3,#32
 2873 00e0 DBB2     	 uxtb r3,r3
 2874 00e2 002B     	 cmp r3,#0
 2875 00e4 04D0     	 beq .L128
 787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           obj->sdmmc_sd->issue_abort = (uint8_t)1;
 2876              	 .loc 3 788 0
 2877 00e6 FB68     	 ldr r3,[r7,#12]
 2878 00e8 1B68     	 ldr r3,[r3]
 2879 00ea 0122     	 movs r2,#1
 2880 00ec 83F85120 	 strb r2,[r3,#81]
 2881              	.L128:
 789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Error Recovery for the failed command  */
 792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lErrorInterruptRecovery(obj);
 2882              	 .loc 3 792 0
 2883 00f0 F868     	 ldr r0,[r7,#12]
 2884 00f2 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lErrorInterruptRecovery
 2885 00f6 0346     	 mov r3,r0
 2886 00f8 FB75     	 strb r3,[r7,#23]
 2887              	.L122:
 793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2888              	 .loc 3 797 0
 2889 00fa FB7D     	 ldrb r3,[r7,#23]
 798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2890              	 .loc 3 798 0
 2891 00fc 1846     	 mov r0,r3
 2892 00fe 1837     	 adds r7,r7,#24
 2893              	.LCFI217:
 2894              	 .cfi_def_cfa_offset 8
 2895 0100 BD46     	 mov sp,r7
 2896              	.LCFI218:
 2897              	 .cfi_def_cfa_register 13
 2898              	 
 2899 0102 80BD     	 pop {r7,pc}
 2900              	.L131:
 2901              	 .align 2
 2902              	.L130:
 2903 0104 40420F00 	 .word 1000000
 2904              	 .cfi_endproc
 2905              	.LFE239:
 2907              	 .section .text.SDMMC_BLOCK_SD_lSetVoltageWindow,"ax",%progbits
 2908              	 .align 2
 2909              	 .thumb
 2910              	 .thumb_func
 2912              	SDMMC_BLOCK_SD_lSetVoltageWindow:
 2913              	.LFB240:
 799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Set voltage window in the OCR register */
 801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSetVoltageWindow(SDMMC_BLOCK_t *const obj)
 802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2914              	 .loc 3 802 0
 2915              	 .cfi_startproc
 2916              	 
 2917              	 
 2918 0000 80B5     	 push {r7,lr}
 2919              	.LCFI219:
 2920              	 .cfi_def_cfa_offset 8
 2921              	 .cfi_offset 7,-8
 2922              	 .cfi_offset 14,-4
 2923 0002 88B0     	 sub sp,sp,#32
 2924              	.LCFI220:
 2925              	 .cfi_def_cfa_offset 40
 2926 0004 02AF     	 add r7,sp,#8
 2927              	.LCFI221:
 2928              	 .cfi_def_cfa 7,32
 2929 0006 7860     	 str r0,[r7,#4]
 803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2930              	 .loc 3 803 0
 2931 0008 0123     	 movs r3,#1
 2932 000a FB75     	 strb r3,[r7,#23]
 804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 2933              	 .loc 3 804 0
 2934 000c 0023     	 movs r3,#0
 2935 000e BB60     	 str r3,[r7,#8]
 805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t loop_count = 0U;
 2936              	 .loc 3 805 0
 2937 0010 0023     	 movs r3,#0
 2938 0012 3B61     	 str r3,[r7,#16]
 806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 2939              	 .loc 3 806 0
 2940 0014 0023     	 movs r3,#0
 2941 0016 FB60     	 str r3,[r7,#12]
 807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->f8 == (uint8_t)0U)
 2942              	 .loc 3 808 0
 2943 0018 7B68     	 ldr r3,[r7,#4]
 2944 001a 1B68     	 ldr r3,[r3]
 2945 001c 93F85030 	 ldrb r3,[r3,#80]
 2946 0020 002B     	 cmp r3,#0
 2947 0022 03D1     	 bne .L133
 809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg = SDMMC_BLOCK_SD_ACMD41_F80_ARG; /* Set HCS=0 for standard cards */
 2948              	 .loc 3 810 0
 2949 0024 4FF48013 	 mov r3,#1048576
 2950 0028 FB60     	 str r3,[r7,#12]
 2951 002a 01E0     	 b .L134
 2952              	.L133:
 811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg = SDMMC_BLOCK_SD_ACMD41_F81_ARG; /* Set HCS=1 for high capacity cards */
 2953              	 .loc 3 814 0
 2954 002c 214B     	 ldr r3,.L140
 2955 002e FB60     	 str r3,[r7,#12]
 2956              	.L134:
 815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 817:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   do
 818:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 819:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD55 for application specific commands (default RCA: 0) */
 820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
 821:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 2957              	 .loc 3 821 0
 2958 0030 1923     	 movs r3,#25
 820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 2959              	 .loc 3 820 0
 2960 0032 5B00     	 lsls r3,r3,#1
 2961 0034 204A     	 ldr r2,.L140+4
 2962 0036 1A44     	 add r2,r2,r3
 2963 0038 07F10803 	 add r3,r7,#8
 2964 003c 0093     	 str r3,[sp]
 2965 003e 7868     	 ldr r0,[r7,#4]
 2966 0040 1146     	 mov r1,r2
 2967 0042 0022     	 movs r2,#0
 2968 0044 0123     	 movs r3,#1
 2969 0046 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 2970 004a 0346     	 mov r3,r0
 2971 004c FB75     	 strb r3,[r7,#23]
 822:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          SDMMC_BLOCK_ARGUMENT0,
 823:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
 824:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
 825:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 826:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2972              	 .loc 3 826 0
 2973 004e FB7D     	 ldrb r3,[r7,#23]
 2974 0050 002B     	 cmp r3,#0
 2975 0052 1ED1     	 bne .L135
 827:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 828:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send ACMD41 to set card's voltage window */
 829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
 830:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_SD_COMMAND(62)),
 2976              	 .loc 3 830 0
 2977 0054 1F23     	 movs r3,#31
 829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_SD_COMMAND(62)),
 2978              	 .loc 3 829 0
 2979 0056 5B00     	 lsls r3,r3,#1
 2980 0058 174A     	 ldr r2,.L140+4
 2981 005a 1A44     	 add r2,r2,r3
 831:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            arg,
 832:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R3,
 833:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(obj->sdmmc_sd->card_info.ocr));
 2982              	 .loc 3 833 0
 2983 005c 7B68     	 ldr r3,[r7,#4]
 2984 005e 1B68     	 ldr r3,[r3]
 2985 0060 2033     	 adds r3,r3,#32
 829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_SD_COMMAND(62)),
 2986              	 .loc 3 829 0
 2987 0062 0093     	 str r3,[sp]
 2988 0064 7868     	 ldr r0,[r7,#4]
 2989 0066 1146     	 mov r1,r2
 2990 0068 FA68     	 ldr r2,[r7,#12]
 2991 006a 0423     	 movs r3,#4
 2992 006c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 2993 0070 0346     	 mov r3,r0
 2994 0072 FB75     	 strb r3,[r7,#23]
 834:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 835:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if ((status != SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 2995              	 .loc 3 835 0
 2996 0074 FB7D     	 ldrb r3,[r7,#23]
 2997 0076 002B     	 cmp r3,#0
 2998 0078 03D0     	 beq .L136
 2999              	 .loc 3 835 0 is_stmt 0 discriminator 1
 3000 007a FB7D     	 ldrb r3,[r7,#23]
 3001 007c 122B     	 cmp r3,#18
 3002 007e 00D0     	 beq .L136
 836:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           (status != SDMMC_BLOCK_MODE_STATUS_ILLEGAL_COMMAND_ERROR))
 837:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 3003              	 .loc 3 838 0 is_stmt 1
 3004 0080 13E0     	 b .L137
 3005              	.L136:
 839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 840:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3006              	 .loc 3 840 0
 3007 0082 0023     	 movs r3,#0
 3008 0084 FB75     	 strb r3,[r7,#23]
 841:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 842:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Card takes some time to set power status bit. Card must respond in a second */
 843:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SDMMC_BLOCK_SD_lDelay(obj, (uint32_t)SDMMC_BLOCK_CARD_POWER_DELAY);
 3009              	 .loc 3 843 0
 3010 0086 7868     	 ldr r0,[r7,#4]
 3011 0088 44F62061 	 movw r1,#20000
 3012 008c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lDelay
 3013 0090 01E0     	 b .L138
 3014              	.L135:
 844:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 845:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
 846:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 847:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       loop_count = 100U;
 3015              	 .loc 3 847 0
 3016 0092 6423     	 movs r3,#100
 3017 0094 3B61     	 str r3,[r7,#16]
 3018              	.L138:
 848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   } while (((loop_count++) < (uint32_t)50U) &&
 3019              	 .loc 3 849 0
 3020 0096 3B69     	 ldr r3,[r7,#16]
 3021 0098 5A1C     	 adds r2,r3,#1
 3022 009a 3A61     	 str r2,[r7,#16]
 850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (!(((uint32_t)obj->sdmmc_sd->card_info.ocr &
 851:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (uint32_t)SDMMC_BLOCK_OCR_POWER_STATUS_BITMASK)!= (uint32_t)0UL)));
 3023              	 .loc 3 851 0
 3024 009c 312B     	 cmp r3,#49
 3025 009e 04D8     	 bhi .L137
 850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (!(((uint32_t)obj->sdmmc_sd->card_info.ocr &
 3026              	 .loc 3 850 0
 3027 00a0 7B68     	 ldr r3,[r7,#4]
 3028 00a2 1B68     	 ldr r3,[r3]
 3029 00a4 1B6A     	 ldr r3,[r3,#32]
 849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (!(((uint32_t)obj->sdmmc_sd->card_info.ocr &
 3030              	 .loc 3 849 0
 3031 00a6 002B     	 cmp r3,#0
 3032 00a8 C2DA     	 bge .L134
 3033              	.L137:
 852:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 853:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3034              	 .loc 3 853 0
 3035 00aa FB7D     	 ldrb r3,[r7,#23]
 854:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3036              	 .loc 3 854 0
 3037 00ac 1846     	 mov r0,r3
 3038 00ae 1837     	 adds r7,r7,#24
 3039              	.LCFI222:
 3040              	 .cfi_def_cfa_offset 8
 3041 00b0 BD46     	 mov sp,r7
 3042              	.LCFI223:
 3043              	 .cfi_def_cfa_register 13
 3044              	 
 3045 00b2 80BD     	 pop {r7,pc}
 3046              	.L141:
 3047              	 .align 2
 3048              	.L140:
 3049 00b4 00001040 	 .word 1074790400
 3050 00b8 00000000 	 .word sdmmc_block_command
 3051              	 .cfi_endproc
 3052              	.LFE240:
 3054              	 .section .text.SDMMC_BLOCK_SD_lQueryOperatingCondition,"ax",%progbits
 3055              	 .align 2
 3056              	 .thumb
 3057              	 .thumb_func
 3059              	SDMMC_BLOCK_SD_lQueryOperatingCondition:
 3060              	.LFB241:
 855:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 856:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Query voltage operating condition of the card */
 857:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lQueryOperatingCondition(SDMMC_BLOCK_t *const obj)
 858:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3061              	 .loc 3 858 0
 3062              	 .cfi_startproc
 3063              	 
 3064              	 
 3065 0000 80B5     	 push {r7,lr}
 3066              	.LCFI224:
 3067              	 .cfi_def_cfa_offset 8
 3068              	 .cfi_offset 7,-8
 3069              	 .cfi_offset 14,-4
 3070 0002 86B0     	 sub sp,sp,#24
 3071              	.LCFI225:
 3072              	 .cfi_def_cfa_offset 32
 3073 0004 02AF     	 add r7,sp,#8
 3074              	.LCFI226:
 3075              	 .cfi_def_cfa 7,24
 3076 0006 7860     	 str r0,[r7,#4]
 859:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t resp_data = 0U;
 3077              	 .loc 3 859 0
 3078 0008 0023     	 movs r3,#0
 3079 000a BB60     	 str r3,[r7,#8]
 860:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 861:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 862:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Query voltage operating condition (cmd8) */
 863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
 864:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(8)),
 3080              	 .loc 3 864 0
 3081 000c 0623     	 movs r3,#6
 863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(8)),
 3082              	 .loc 3 863 0
 3083 000e 5B00     	 lsls r3,r3,#1
 3084 0010 1C4A     	 ldr r2,.L149
 3085 0012 1A44     	 add r2,r2,r3
 3086 0014 07F10803 	 add r3,r7,#8
 3087 0018 0093     	 str r3,[sp]
 3088 001a 7868     	 ldr r0,[r7,#4]
 3089 001c 1146     	 mov r1,r2
 3090 001e 4FF4D572 	 mov r2,#426
 3091 0022 0623     	 movs r3,#6
 3092 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3093 0028 0346     	 mov r3,r0
 3094 002a FB73     	 strb r3,[r7,#15]
 865:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        SDMMC_BLOCK_SD_CMD8_ARG,
 866:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R7,
 867:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &resp_data);
 868:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 869:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3095              	 .loc 3 869 0
 3096 002c FB7B     	 ldrb r3,[r7,#15]
 3097 002e 002B     	 cmp r3,#0
 3098 0030 16D1     	 bne .L143
 870:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 871:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if pattern matches in both the argument and response */
 872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((resp_data >> SDMMC_BLOCK_SD_CMD8_CHECK_PATTERN_BITPOS) & SDMMC_BLOCK_SD_CMD8_CHECK_PATTER
 3099              	 .loc 3 872 0
 3100 0032 BB68     	 ldr r3,[r7,#8]
 3101 0034 DBB2     	 uxtb r3,r3
 3102 0036 AA2B     	 cmp r3,#170
 3103 0038 02D0     	 beq .L144
 873:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (SDMMC_BLOCK_SD_CMD8_CHECK_PATTERN_VALUE))
 874:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 875:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_BAD_RESPONSE;
 3104              	 .loc 3 875 0
 3105 003a 1923     	 movs r3,#25
 3106 003c FB73     	 strb r3,[r7,#15]
 3107 003e 1BE0     	 b .L147
 3108              	.L144:
 876:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 877:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if input voltage accepted by the card in the response  */
 878:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if (((uint8_t)(resp_data >> SDMMC_BLOCK_SD_CMD8_VHS_BITPOS) & SDMMC_BLOCK_SD_CMD8_VHS_BITM
 3109              	 .loc 3 878 0
 3110 0040 BB68     	 ldr r3,[r7,#8]
 3111 0042 1B0A     	 lsrs r3,r3,#8
 3112 0044 DBB2     	 uxtb r3,r3
 3113 0046 03F00F03 	 and r3,r3,#15
 3114 004a 012B     	 cmp r3,#1
 3115 004c 02D0     	 beq .L146
 879:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (SDMMC_BLOCK_SD_VHS_PATTERN_2_7_3_6_VALUE))
 880:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 881:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_BAD_RESPONSE;
 3116              	 .loc 3 881 0
 3117 004e 1923     	 movs r3,#25
 3118 0050 FB73     	 strb r3,[r7,#15]
 3119 0052 11E0     	 b .L147
 3120              	.L146:
 882:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 883:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
 884:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 885:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set Flag f8 */
 886:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->f8 = (uint8_t)1U;
 3121              	 .loc 3 886 0
 3122 0054 7B68     	 ldr r3,[r7,#4]
 3123 0056 1B68     	 ldr r3,[r3]
 3124 0058 0122     	 movs r2,#1
 3125 005a 83F85020 	 strb r2,[r3,#80]
 3126 005e 0BE0     	 b .L147
 3127              	.L143:
 887:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 888:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Response received; High capacity cards */
 890:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 891:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 892:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /*  No response is received for Standard Capacity SD cards or MMC card. */
 893:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->cmd_int_err == SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR)
 3128              	 .loc 3 893 0
 3129 0060 7B68     	 ldr r3,[r7,#4]
 3130 0062 1B68     	 ldr r3,[r3]
 3131 0064 5B7E     	 ldrb r3,[r3,#25]
 3132 0066 022B     	 cmp r3,#2
 3133 0068 06D1     	 bne .L147
 894:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 895:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->f8 = (uint8_t)0U;
 3134              	 .loc 3 895 0
 3135 006a 7B68     	 ldr r3,[r7,#4]
 3136 006c 1B68     	 ldr r3,[r3]
 3137 006e 0022     	 movs r2,#0
 3138 0070 83F85020 	 strb r2,[r3,#80]
 896:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3139              	 .loc 3 896 0
 3140 0074 0023     	 movs r3,#0
 3141 0076 FB73     	 strb r3,[r7,#15]
 3142              	.L147:
 897:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 898:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 899:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 900:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3143              	 .loc 3 900 0
 3144 0078 FB7B     	 ldrb r3,[r7,#15]
 901:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3145              	 .loc 3 901 0
 3146 007a 1846     	 mov r0,r3
 3147 007c 1037     	 adds r7,r7,#16
 3148              	.LCFI227:
 3149              	 .cfi_def_cfa_offset 8
 3150 007e BD46     	 mov sp,r7
 3151              	.LCFI228:
 3152              	 .cfi_def_cfa_register 13
 3153              	 
 3154 0080 80BD     	 pop {r7,pc}
 3155              	.L150:
 3156 0082 00BF     	 .align 2
 3157              	.L149:
 3158 0084 00000000 	 .word sdmmc_block_command
 3159              	 .cfi_endproc
 3160              	.LFE241:
 3162              	 .section .text.SDMMC_BLOCK_SD_lQueryVoltage,"ax",%progbits
 3163              	 .align 2
 3164              	 .thumb
 3165              	 .thumb_func
 3167              	SDMMC_BLOCK_SD_lQueryVoltage:
 3168              	.LFB242:
 902:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 903:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Query voltage supported from the card */
 904:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lQueryVoltage(SDMMC_BLOCK_t *const obj, uint32_t ar
 905:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3169              	 .loc 3 905 0
 3170              	 .cfi_startproc
 3171              	 
 3172              	 
 3173 0000 80B5     	 push {r7,lr}
 3174              	.LCFI229:
 3175              	 .cfi_def_cfa_offset 8
 3176              	 .cfi_offset 7,-8
 3177              	 .cfi_offset 14,-4
 3178 0002 86B0     	 sub sp,sp,#24
 3179              	.LCFI230:
 3180              	 .cfi_def_cfa_offset 32
 3181 0004 02AF     	 add r7,sp,#8
 3182              	.LCFI231:
 3183              	 .cfi_def_cfa 7,24
 3184 0006 7860     	 str r0,[r7,#4]
 3185 0008 3960     	 str r1,[r7]
 906:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 3186              	 .loc 3 906 0
 3187 000a 0023     	 movs r3,#0
 3188 000c BB60     	 str r3,[r7,#8]
 907:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 908:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send CMD55 for application specific commands with 0 as the default RCA */
 910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
 911:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3189              	 .loc 3 911 0
 3190 000e 1923     	 movs r3,#25
 910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3191              	 .loc 3 910 0
 3192 0010 5B00     	 lsls r3,r3,#1
 3193 0012 1F4A     	 ldr r2,.L157
 3194 0014 1A44     	 add r2,r2,r3
 3195 0016 07F10803 	 add r3,r7,#8
 3196 001a 0093     	 str r3,[sp]
 3197 001c 7868     	 ldr r0,[r7,#4]
 3198 001e 1146     	 mov r1,r2
 3199 0020 3A68     	 ldr r2,[r7]
 3200 0022 0123     	 movs r3,#1
 3201 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3202 0028 0346     	 mov r3,r0
 3203 002a FB73     	 strb r3,[r7,#15]
 912:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
 913:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
 914:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
 915:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 916:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((obj->sdmmc_sd->f8 == (uint8_t)0U) && (status == SDMMC_BLOCK_MODE_STATUS_ILLEGAL_COMMAND_ERR
 3204              	 .loc 3 916 0
 3205 002c 7B68     	 ldr r3,[r7,#4]
 3206 002e 1B68     	 ldr r3,[r3]
 3207 0030 93F85030 	 ldrb r3,[r3,#80]
 3208 0034 002B     	 cmp r3,#0
 3209 0036 02D1     	 bne .L152
 3210              	 .loc 3 916 0 is_stmt 0 discriminator 1
 3211 0038 FB7B     	 ldrb r3,[r7,#15]
 3212 003a 122B     	 cmp r3,#18
 3213 003c 02D0     	 beq .L153
 3214              	.L152:
 3215              	 .loc 3 916 0 discriminator 3
 3216 003e FB7B     	 ldrb r3,[r7,#15]
 3217 0040 002B     	 cmp r3,#0
 3218 0042 20D1     	 bne .L154
 3219              	.L153:
 917:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS))
 918:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 919:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send ACMD41 to query the card's voltage window */
 920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
 921:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(62)),
 3220              	 .loc 3 921 0 is_stmt 1
 3221 0044 1F23     	 movs r3,#31
 920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(62)),
 3222              	 .loc 3 920 0
 3223 0046 5B00     	 lsls r3,r3,#1
 3224 0048 114A     	 ldr r2,.L157
 3225 004a 1A44     	 add r2,r2,r3
 922:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          arg,
 923:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R3,
 924:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(obj->sdmmc_sd->card_info.ocr));
 3226              	 .loc 3 924 0
 3227 004c 7B68     	 ldr r3,[r7,#4]
 3228 004e 1B68     	 ldr r3,[r3]
 3229 0050 2033     	 adds r3,r3,#32
 920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(62)),
 3230              	 .loc 3 920 0
 3231 0052 0093     	 str r3,[sp]
 3232 0054 7868     	 ldr r0,[r7,#4]
 3233 0056 1146     	 mov r1,r2
 3234 0058 3A68     	 ldr r2,[r7]
 3235 005a 0423     	 movs r3,#4
 3236 005c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3237 0060 0346     	 mov r3,r0
 3238 0062 FB73     	 strb r3,[r7,#15]
 925:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 926:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_ILLEGAL_COMMAND_ERROR) ||
 3239              	 .loc 3 926 0
 3240 0064 FB7B     	 ldrb r3,[r7,#15]
 3241 0066 122B     	 cmp r3,#18
 3242 0068 02D0     	 beq .L155
 3243              	 .loc 3 926 0 is_stmt 0 discriminator 1
 3244 006a FB7B     	 ldrb r3,[r7,#15]
 3245 006c 002B     	 cmp r3,#0
 3246 006e 0AD1     	 bne .L154
 3247              	.L155:
 927:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS))
 928:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 929:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send ACMD41 with voltage window argument set */
 930:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSetVoltageWindow(obj);
 3248              	 .loc 3 930 0 is_stmt 1
 3249 0070 7868     	 ldr r0,[r7,#4]
 3250 0072 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSetVoltageWindow
 3251 0076 0346     	 mov r3,r0
 3252 0078 FB73     	 strb r3,[r7,#15]
 931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3253              	 .loc 3 931 0
 3254 007a FB7B     	 ldrb r3,[r7,#15]
 3255 007c 002B     	 cmp r3,#0
 3256 007e 02D1     	 bne .L154
 932:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 933:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* SD Card Type */
 934:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         SDMMC_BLOCK_SD_lWriteCardType(obj);
 3257              	 .loc 3 934 0
 3258 0080 7868     	 ldr r0,[r7,#4]
 3259 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lWriteCardType
 3260              	.L154:
 935:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 936:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 937:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 938:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 939:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3261              	 .loc 3 939 0
 3262 0086 FB7B     	 ldrb r3,[r7,#15]
 940:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3263              	 .loc 3 940 0
 3264 0088 1846     	 mov r0,r3
 3265 008a 1037     	 adds r7,r7,#16
 3266              	.LCFI232:
 3267              	 .cfi_def_cfa_offset 8
 3268 008c BD46     	 mov sp,r7
 3269              	.LCFI233:
 3270              	 .cfi_def_cfa_register 13
 3271              	 
 3272 008e 80BD     	 pop {r7,pc}
 3273              	.L158:
 3274              	 .align 2
 3275              	.L157:
 3276 0090 00000000 	 .word sdmmc_block_command
 3277              	 .cfi_endproc
 3278              	.LFE242:
 3280              	 .section .text.SDMMC_BLOCK_SD_lAfterCardInitialize,"ax",%progbits
 3281              	 .align 2
 3282              	 .thumb
 3283              	 .thumb_func
 3285              	SDMMC_BLOCK_SD_lAfterCardInitialize:
 3286              	.LFB243:
 941:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 942:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read card registers after the card initialization */
 943:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lAfterCardInitialize(SDMMC_BLOCK_t *const obj)
 944:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3287              	 .loc 3 944 0
 3288              	 .cfi_startproc
 3289              	 
 3290              	 
 3291 0000 80B5     	 push {r7,lr}
 3292              	.LCFI234:
 3293              	 .cfi_def_cfa_offset 8
 3294              	 .cfi_offset 7,-8
 3295              	 .cfi_offset 14,-4
 3296 0002 86B0     	 sub sp,sp,#24
 3297              	.LCFI235:
 3298              	 .cfi_def_cfa_offset 32
 3299 0004 02AF     	 add r7,sp,#8
 3300              	.LCFI236:
 3301              	 .cfi_def_cfa 7,24
 3302 0006 7860     	 str r0,[r7,#4]
 945:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3303              	 .loc 3 945 0
 3304 0008 0123     	 movs r3,#1
 3305 000a FB73     	 strb r3,[r7,#15]
 946:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t card_lock = (obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED);
 3306              	 .loc 3 946 0
 3307 000c 7B68     	 ldr r3,[r7,#4]
 3308 000e 1B7A     	 ldrb r3,[r3,#8]
 3309 0010 03F00803 	 and r3,r3,#8
 3310 0014 BB73     	 strb r3,[r7,#14]
 947:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status;
 948:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 949:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Read CSD & SCR register & card write protection flags */
 950:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lReadCardRegisters(obj);
 3311              	 .loc 3 950 0
 3312 0016 7868     	 ldr r0,[r7,#4]
 3313 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReadCardRegisters
 3314 001c 0346     	 mov r3,r0
 3315 001e FB73     	 strb r3,[r7,#15]
 951:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Explicitly set block size as 512 */
 953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3316              	 .loc 3 953 0
 3317 0020 FB7B     	 ldrb r3,[r7,#15]
 3318 0022 002B     	 cmp r3,#0
 3319 0024 0FD1     	 bne .L160
 954:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
 956:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 3320              	 .loc 3 956 0
 3321 0026 0C23     	 movs r3,#12
 955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 3322              	 .loc 3 955 0
 3323 0028 5B00     	 lsls r3,r3,#1
 3324 002a 1C4A     	 ldr r2,.L164
 3325 002c 1A44     	 add r2,r2,r3
 3326 002e 07F10803 	 add r3,r7,#8
 3327 0032 0093     	 str r3,[sp]
 3328 0034 7868     	 ldr r0,[r7,#4]
 3329 0036 1146     	 mov r1,r2
 3330 0038 4FF40072 	 mov r2,#512
 3331 003c 0123     	 movs r3,#1
 3332 003e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3333 0042 0346     	 mov r3,r0
 3334 0044 FB73     	 strb r3,[r7,#15]
 3335              	.L160:
 957:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          512U,
 958:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
 959:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
 960:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 961:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 962:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (card_lock == (uint8_t)0U))
 3336              	 .loc 3 962 0
 3337 0046 FB7B     	 ldrb r3,[r7,#15]
 3338 0048 002B     	 cmp r3,#0
 3339 004a 21D1     	 bne .L161
 3340              	 .loc 3 962 0 is_stmt 0 discriminator 1
 3341 004c BB7B     	 ldrb r3,[r7,#14]
 3342 004e 002B     	 cmp r3,#0
 3343 0050 1ED1     	 bne .L161
 963:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 964:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_SUPPORT_4_BUS_WIDTH
 965:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Switch to 4-bit bus width if supported */
 966:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchBusWidth(obj);
 3344              	 .loc 3 966 0 is_stmt 1
 3345 0052 7868     	 ldr r0,[r7,#4]
 3346 0054 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchBusWidth
 3347 0058 0346     	 mov r3,r0
 3348 005a FB73     	 strb r3,[r7,#15]
 967:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 968:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3349              	 .loc 3 968 0
 3350 005c FB7B     	 ldrb r3,[r7,#15]
 3351 005e 002B     	 cmp r3,#0
 3352 0060 06D0     	 beq .L162
 969:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 970:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Switch to default (1-bit) bus width */
 971:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferWidth(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_LINES_1);
 3353              	 .loc 3 971 0
 3354 0062 7B68     	 ldr r3,[r7,#4]
 3355 0064 1B68     	 ldr r3,[r3]
 3356 0066 1B68     	 ldr r3,[r3]
 3357 0068 1846     	 mov r0,r3
 3358 006a 0021     	 movs r1,#0
 3359 006c FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferWidth
 3360              	.L162:
 972:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 973:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 974:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Switch to high speed mode */
 975:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchSpeed(obj);
 3361              	 .loc 3 975 0
 3362 0070 7868     	 ldr r0,[r7,#4]
 3363 0072 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchSpeed
 3364 0076 0346     	 mov r3,r0
 3365 0078 FB73     	 strb r3,[r7,#15]
 976:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3366              	 .loc 3 976 0
 3367 007a FB7B     	 ldrb r3,[r7,#15]
 3368 007c 002B     	 cmp r3,#0
 3369 007e 07D0     	 beq .L161
 977:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 978:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Switch host controller to normal (default) speed mode */
 979:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_DisableHighSpeed(obj->sdmmc_sd->sdmmc);
 3370              	 .loc 3 979 0
 3371 0080 7B68     	 ldr r3,[r7,#4]
 3372 0082 1B68     	 ldr r3,[r3]
 3373 0084 1B68     	 ldr r3,[r3]
 3374 0086 1846     	 mov r0,r3
 3375 0088 FFF7FEFF 	 bl XMC_SDMMC_DisableHighSpeed
 980:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3376              	 .loc 3 980 0
 3377 008c 0023     	 movs r3,#0
 3378 008e FB73     	 strb r3,[r7,#15]
 3379              	.L161:
 981:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 982:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
 983:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 984:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 985:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3380              	 .loc 3 985 0
 3381 0090 FB7B     	 ldrb r3,[r7,#15]
 986:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3382              	 .loc 3 986 0
 3383 0092 1846     	 mov r0,r3
 3384 0094 1037     	 adds r7,r7,#16
 3385              	.LCFI237:
 3386              	 .cfi_def_cfa_offset 8
 3387 0096 BD46     	 mov sp,r7
 3388              	.LCFI238:
 3389              	 .cfi_def_cfa_register 13
 3390              	 
 3391 0098 80BD     	 pop {r7,pc}
 3392              	.L165:
 3393 009a 00BF     	 .align 2
 3394              	.L164:
 3395 009c 00000000 	 .word sdmmc_block_command
 3396              	 .cfi_endproc
 3397              	.LFE243:
 3399              	 .section .text.SDMMC_BLOCK_SD_lInitializeCard,"ax",%progbits
 3400              	 .align 2
 3401              	 .thumb
 3402              	 .thumb_func
 3404              	SDMMC_BLOCK_SD_lInitializeCard:
 3405              	.LFB244:
 987:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 988:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Initialize the SD card */
 989:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lInitializeCard(SDMMC_BLOCK_t *const obj)
 990:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3406              	 .loc 3 990 0
 3407              	 .cfi_startproc
 3408              	 
 3409              	 
 3410 0000 80B5     	 push {r7,lr}
 3411              	.LCFI239:
 3412              	 .cfi_def_cfa_offset 8
 3413              	 .cfi_offset 7,-8
 3414              	 .cfi_offset 14,-4
 3415 0002 86B0     	 sub sp,sp,#24
 3416              	.LCFI240:
 3417              	 .cfi_def_cfa_offset 32
 3418 0004 02AF     	 add r7,sp,#8
 3419              	.LCFI241:
 3420              	 .cfi_def_cfa 7,24
 3421 0006 7860     	 str r0,[r7,#4]
 991:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 992:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_CARD_LOCK_STATUS_t lock_status;
 993:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t count = (uint8_t)0U;
 3422              	 .loc 3 993 0
 3423 0008 0023     	 movs r3,#0
 3424 000a BB73     	 strb r3,[r7,#14]
 3425              	.L169:
 994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Repeat the below steps 2 times if bad response is received */
 996:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   do
 997:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 998:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Reset the card (CMD0) */
 999:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
1000:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(0)),
 3426              	 .loc 3 1000 0
 3427 000c 0023     	 movs r3,#0
 999:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(0)),
 3428              	 .loc 3 999 0
 3429 000e 5B00     	 lsls r3,r3,#1
 3430 0010 324A     	 ldr r2,.L173
 3431 0012 1A44     	 add r2,r2,r3
 3432 0014 0023     	 movs r3,#0
 3433 0016 0093     	 str r3,[sp]
 3434 0018 7868     	 ldr r0,[r7,#4]
 3435 001a 1146     	 mov r1,r2
 3436 001c 0022     	 movs r2,#0
 3437 001e 0023     	 movs r3,#0
 3438 0020 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3439 0024 0346     	 mov r3,r0
 3440 0026 FB73     	 strb r3,[r7,#15]
1001:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          SDMMC_BLOCK_ARGUMENT0,
1002:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_NO_RESPONSE,
1003:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          NULL);
1004:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1005:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3441              	 .loc 3 1005 0
 3442 0028 FB7B     	 ldrb r3,[r7,#15]
 3443 002a 002B     	 cmp r3,#0
 3444 002c 00D0     	 beq .L167
1006:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1007:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       break;
 3445              	 .loc 3 1007 0
 3446 002e 0DE0     	 b .L168
 3447              	.L167:
1008:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1009:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1010:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Query card's operation condition */
1011:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lQueryOperatingCondition(obj);
 3448              	 .loc 3 1011 0
 3449 0030 7868     	 ldr r0,[r7,#4]
 3450 0032 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lQueryOperatingCondition
 3451 0036 0346     	 mov r3,r0
 3452 0038 FB73     	 strb r3,[r7,#15]
1012:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1013:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     count++;
 3453              	 .loc 3 1013 0
 3454 003a BB7B     	 ldrb r3,[r7,#14]
 3455 003c 0133     	 adds r3,r3,#1
 3456 003e BB73     	 strb r3,[r7,#14]
1014:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   } while ((count < (uint8_t)SDMMC_BLOCK_NUM_CARD_RESET_RETRIES) &&
1015:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (status == SDMMC_BLOCK_MODE_STATUS_BAD_RESPONSE));
 3457              	 .loc 3 1015 0
 3458 0040 BB7B     	 ldrb r3,[r7,#14]
 3459 0042 012B     	 cmp r3,#1
 3460 0044 02D8     	 bhi .L168
1014:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   } while ((count < (uint8_t)SDMMC_BLOCK_NUM_CARD_RESET_RETRIES) &&
 3461              	 .loc 3 1014 0
 3462 0046 FB7B     	 ldrb r3,[r7,#15]
 3463 0048 192B     	 cmp r3,#25
 3464 004a DFD0     	 beq .L169
 3465              	.L168:
1016:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1017:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3466              	 .loc 3 1017 0
 3467 004c FB7B     	 ldrb r3,[r7,#15]
 3468 004e 002B     	 cmp r3,#0
 3469 0050 3ED1     	 bne .L170
1018:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1019:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Query and set voltage window  */
1020:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lQueryVoltage(obj, (uint32_t)obj->sdmmc_sd->card_info.rca);
 3470              	 .loc 3 1020 0
 3471 0052 7B68     	 ldr r3,[r7,#4]
 3472 0054 1B68     	 ldr r3,[r3]
 3473 0056 B3F84C30 	 ldrh r3,[r3,#76]
 3474 005a 7868     	 ldr r0,[r7,#4]
 3475 005c 1946     	 mov r1,r3
 3476 005e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lQueryVoltage
 3477 0062 0346     	 mov r3,r0
 3478 0064 FB73     	 strb r3,[r7,#15]
1021:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1022:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3479              	 .loc 3 1022 0
 3480 0066 FB7B     	 ldrb r3,[r7,#15]
 3481 0068 002B     	 cmp r3,#0
 3482 006a 31D1     	 bne .L170
1023:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1024:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Read CID */
1025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1026:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(2)),
 3483              	 .loc 3 1026 0
 3484 006c 0123     	 movs r3,#1
1025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(2)),
 3485              	 .loc 3 1025 0
 3486 006e 5B00     	 lsls r3,r3,#1
 3487 0070 1A4A     	 ldr r2,.L173
 3488 0072 1A44     	 add r2,r2,r3
1027:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            SDMMC_BLOCK_ARGUMENT0,
1028:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R2,
1029:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            (void *)obj->sdmmc_sd->card_info.cid);
 3489              	 .loc 3 1029 0
 3490 0074 7B68     	 ldr r3,[r7,#4]
 3491 0076 1B68     	 ldr r3,[r3]
 3492 0078 2433     	 adds r3,r3,#36
1025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(2)),
 3493              	 .loc 3 1025 0
 3494 007a 0093     	 str r3,[sp]
 3495 007c 7868     	 ldr r0,[r7,#4]
 3496 007e 1146     	 mov r1,r2
 3497 0080 0022     	 movs r2,#0
 3498 0082 0323     	 movs r3,#3
 3499 0084 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3500 0088 0346     	 mov r3,r0
 3501 008a FB73     	 strb r3,[r7,#15]
1030:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1031:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3502              	 .loc 3 1031 0
 3503 008c FB7B     	 ldrb r3,[r7,#15]
 3504 008e 002B     	 cmp r3,#0
 3505 0090 1ED1     	 bne .L170
1032:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1033:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Read RCA */
1034:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lReadRca(obj);
 3506              	 .loc 3 1034 0
 3507 0092 7868     	 ldr r0,[r7,#4]
 3508 0094 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReadRca
 3509 0098 0346     	 mov r3,r0
 3510 009a FB73     	 strb r3,[r7,#15]
1035:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3511              	 .loc 3 1035 0
 3512 009c FB7B     	 ldrb r3,[r7,#15]
 3513 009e 002B     	 cmp r3,#0
 3514 00a0 16D1     	 bne .L170
1036:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1037:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Check card lock/unlock status */
1038:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_GetLockStatus(obj, &lock_status);
 3515              	 .loc 3 1038 0
 3516 00a2 07F10D03 	 add r3,r7,#13
 3517 00a6 7868     	 ldr r0,[r7,#4]
 3518 00a8 1946     	 mov r1,r3
 3519 00aa FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetLockStatus
 3520 00ae 0346     	 mov r3,r0
 3521 00b0 FB73     	 strb r3,[r7,#15]
1039:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3522              	 .loc 3 1039 0
 3523 00b2 FB7B     	 ldrb r3,[r7,#15]
 3524 00b4 002B     	 cmp r3,#0
 3525 00b6 0BD1     	 bne .L170
1040:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1041:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             if (lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED)
 3526              	 .loc 3 1041 0
 3527 00b8 7B7B     	 ldrb r3,[r7,#13]
 3528 00ba 012B     	 cmp r3,#1
 3529 00bc 01D1     	 bne .L171
1042:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             {
1043:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               status = SDMMC_BLOCK_MODE_STATUS_INITIALIZED_BUT_LOCKED;
 3530              	 .loc 3 1043 0
 3531 00be 2B23     	 movs r3,#43
 3532 00c0 FB73     	 strb r3,[r7,#15]
 3533              	.L171:
1044:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             }
1045:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1046:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /* Update card initialization status */
1047:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             obj->card_state &= (uint8_t)~((uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED |
 3534              	 .loc 3 1047 0
 3535 00c2 7B68     	 ldr r3,[r7,#4]
 3536 00c4 1B7A     	 ldrb r3,[r3,#8]
 3537 00c6 23F00303 	 bic r3,r3,#3
 3538 00ca DAB2     	 uxtb r2,r3
 3539 00cc 7B68     	 ldr r3,[r7,#4]
 3540 00ce 1A72     	 strb r2,[r3,#8]
 3541              	.L170:
1048:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                           (uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD);
1049:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1050:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1051:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1052:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1053:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1054:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1055:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3542              	 .loc 3 1055 0
 3543 00d0 FB7B     	 ldrb r3,[r7,#15]
1056:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3544              	 .loc 3 1056 0
 3545 00d2 1846     	 mov r0,r3
 3546 00d4 1037     	 adds r7,r7,#16
 3547              	.LCFI242:
 3548              	 .cfi_def_cfa_offset 8
 3549 00d6 BD46     	 mov sp,r7
 3550              	.LCFI243:
 3551              	 .cfi_def_cfa_register 13
 3552              	 
 3553 00d8 80BD     	 pop {r7,pc}
 3554              	.L174:
 3555 00da 00BF     	 .align 2
 3556              	.L173:
 3557 00dc 00000000 	 .word sdmmc_block_command
 3558              	 .cfi_endproc
 3559              	.LFE244:
 3561              	 .section .text.SDMMC_BLOCK_SD_lWriteCardType,"ax",%progbits
 3562              	 .align 2
 3563              	 .thumb
 3564              	 .thumb_func
 3566              	SDMMC_BLOCK_SD_lWriteCardType:
 3567              	.LFB245:
1057:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1058:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1059:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get card type */
1060:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lWriteCardType(SDMMC_BLOCK_t *const obj)
1061:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3568              	 .loc 3 1061 0
 3569              	 .cfi_startproc
 3570              	 
 3571              	 
 3572              	 
 3573 0000 80B4     	 push {r7}
 3574              	.LCFI244:
 3575              	 .cfi_def_cfa_offset 4
 3576              	 .cfi_offset 7,-4
 3577 0002 83B0     	 sub sp,sp,#12
 3578              	.LCFI245:
 3579              	 .cfi_def_cfa_offset 16
 3580 0004 00AF     	 add r7,sp,#0
 3581              	.LCFI246:
 3582              	 .cfi_def_cfa_register 7
 3583 0006 7860     	 str r0,[r7,#4]
1062:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If F8=0; standard capacity v1 card */
1063:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->f8 == (uint8_t)0U)
 3584              	 .loc 3 1063 0
 3585 0008 7B68     	 ldr r3,[r7,#4]
 3586 000a 1B68     	 ldr r3,[r3]
 3587 000c 93F85030 	 ldrb r3,[r3,#80]
 3588 0010 002B     	 cmp r3,#0
 3589 0012 07D1     	 bne .L176
1064:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1065:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_type |= (uint8_t)SDMMC_BLOCK_CARD_TYPE_STANDARD_CAPACITY_V1X;
 3590              	 .loc 3 1065 0
 3591 0014 7B68     	 ldr r3,[r7,#4]
 3592 0016 5B7A     	 ldrb r3,[r3,#9]
 3593 0018 43F00203 	 orr r3,r3,#2
 3594 001c DAB2     	 uxtb r2,r3
 3595 001e 7B68     	 ldr r3,[r7,#4]
 3596 0020 5A72     	 strb r2,[r3,#9]
 3597 0022 15E0     	 b .L175
 3598              	.L176:
1066:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1067:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If F8=1; standard capacity v2 or high capacity card */
1068:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1069:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1070:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check CCS bit in the OCR register; CCS=1 implies a high capacity card */
1071:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)obj->sdmmc_sd->card_info.ocr & (uint32_t)SDMMC_BLOCK_OCR_CCS_BITMASK) != (uint32
 3599              	 .loc 3 1071 0
 3600 0024 7B68     	 ldr r3,[r7,#4]
 3601 0026 1B68     	 ldr r3,[r3]
 3602 0028 1B6A     	 ldr r3,[r3,#32]
 3603 002a 03F08043 	 and r3,r3,#1073741824
 3604 002e 002B     	 cmp r3,#0
 3605 0030 07D0     	 beq .L178
1072:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1073:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_type |= (uint8_t)((uint8_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY |
 3606              	 .loc 3 1073 0
 3607 0032 7B68     	 ldr r3,[r7,#4]
 3608 0034 5B7A     	 ldrb r3,[r3,#9]
 3609 0036 43F00C03 	 orr r3,r3,#12
 3610 003a DAB2     	 uxtb r2,r3
 3611 003c 7B68     	 ldr r3,[r7,#4]
 3612 003e 5A72     	 strb r2,[r3,#9]
 3613 0040 06E0     	 b .L175
 3614              	.L178:
1074:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                   (uint8_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING);
1075:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1076:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1077:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1078:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* CCS=0 implies standard capacity v2 */
1079:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_type |= (uint8_t)SDMMC_BLOCK_CARD_TYPE_STANDARD_CAPACITY_V2;
 3615              	 .loc 3 1079 0
 3616 0042 7B68     	 ldr r3,[r7,#4]
 3617 0044 5B7A     	 ldrb r3,[r3,#9]
 3618 0046 43F00103 	 orr r3,r3,#1
 3619 004a DAB2     	 uxtb r2,r3
 3620 004c 7B68     	 ldr r3,[r7,#4]
 3621 004e 5A72     	 strb r2,[r3,#9]
 3622              	.L175:
1080:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1081:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1082:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3623              	 .loc 3 1082 0
 3624 0050 0C37     	 adds r7,r7,#12
 3625              	.LCFI247:
 3626              	 .cfi_def_cfa_offset 4
 3627 0052 BD46     	 mov sp,r7
 3628              	.LCFI248:
 3629              	 .cfi_def_cfa_register 13
 3630              	 
 3631 0054 5DF8047B 	 ldr r7,[sp],#4
 3632              	.LCFI249:
 3633              	 .cfi_restore 7
 3634              	 .cfi_def_cfa_offset 0
 3635 0058 7047     	 bx lr
 3636              	 .cfi_endproc
 3637              	.LFE245:
 3639 005a 00BF     	 .section .text.SDMMC_BLOCK_SD_lGetWriteProtect,"ax",%progbits
 3640              	 .align 2
 3641              	 .thumb
 3642              	 .thumb_func
 3644              	SDMMC_BLOCK_SD_lGetWriteProtect:
 3645              	.LFB246:
1083:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1084:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check write protection status of card */
1085:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lGetWriteProtect(SDMMC_BLOCK_t *const obj)
1086:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3646              	 .loc 3 1086 0
 3647              	 .cfi_startproc
 3648              	 
 3649              	 
 3650 0000 80B5     	 push {r7,lr}
 3651              	.LCFI250:
 3652              	 .cfi_def_cfa_offset 8
 3653              	 .cfi_offset 7,-8
 3654              	 .cfi_offset 14,-4
 3655 0002 94B0     	 sub sp,sp,#80
 3656              	.LCFI251:
 3657              	 .cfi_def_cfa_offset 88
 3658 0004 00AF     	 add r7,sp,#0
 3659              	.LCFI252:
 3660              	 .cfi_def_cfa_register 7
 3661 0006 7860     	 str r0,[r7,#4]
1087:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sd_status[16] = {0U};
 3662              	 .loc 3 1087 0
 3663 0008 07F10803 	 add r3,r7,#8
 3664 000c 4022     	 movs r2,#64
 3665 000e 1846     	 mov r0,r3
 3666 0010 0021     	 movs r1,#0
 3667 0012 FFF7FEFF 	 bl memset
1088:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t write_protect;
1089:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3668              	 .loc 3 1089 0
 3669 0016 0123     	 movs r3,#1
 3670 0018 87F84F30 	 strb r3,[r7,#79]
1090:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1091:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_GetSdStatus(obj, (void *)&(sd_status[0]));
 3671              	 .loc 3 1091 0
 3672 001c 07F10803 	 add r3,r7,#8
 3673 0020 7868     	 ldr r0,[r7,#4]
 3674 0022 1946     	 mov r1,r3
 3675 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetSdStatus
 3676 0028 0346     	 mov r3,r0
 3677 002a 87F84F30 	 strb r3,[r7,#79]
1092:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3678              	 .loc 3 1092 0
 3679 002e 97F84F30 	 ldrb r3,[r7,#79]
 3680 0032 002B     	 cmp r3,#0
 3681 0034 13D1     	 bne .L180
1093:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1094:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Bits 480:495 in the SD status provides write protection information */
1095:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     write_protect = ((sd_status[0] & 0xFF000000U) >> 24U) | (((sd_status[0] & 0x00FF0000U) >> 16U) 
 3682              	 .loc 3 1095 0
 3683 0036 BB68     	 ldr r3,[r7,#8]
 3684 0038 1A0E     	 lsrs r2,r3,#24
 3685 003a BB68     	 ldr r3,[r7,#8]
 3686 003c 03F47F03 	 and r3,r3,#16711680
 3687 0040 1B0C     	 lsrs r3,r3,#16
 3688 0042 1B02     	 lsls r3,r3,#8
 3689 0044 1343     	 orrs r3,r3,r2
 3690 0046 BB64     	 str r3,[r7,#72]
1096:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((write_protect & SDMMC_BLOCK_SD_CARD_TYPE_BITMASK) != 0U)
 3691              	 .loc 3 1096 0
 3692 0048 BB6C     	 ldr r3,[r7,#72]
 3693 004a 9BB2     	 uxth r3,r3
 3694 004c 002B     	 cmp r3,#0
 3695 004e 06D0     	 beq .L180
1097:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1098:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED;
 3696              	 .loc 3 1098 0
 3697 0050 7B68     	 ldr r3,[r7,#4]
 3698 0052 1B7A     	 ldrb r3,[r3,#8]
 3699 0054 43F00403 	 orr r3,r3,#4
 3700 0058 DAB2     	 uxtb r2,r3
 3701 005a 7B68     	 ldr r3,[r7,#4]
 3702 005c 1A72     	 strb r2,[r3,#8]
 3703              	.L180:
1099:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3704              	 .loc 3 1102 0
 3705 005e 97F84F30 	 ldrb r3,[r7,#79]
1103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3706              	 .loc 3 1103 0
 3707 0062 1846     	 mov r0,r3
 3708 0064 5037     	 adds r7,r7,#80
 3709              	.LCFI253:
 3710              	 .cfi_def_cfa_offset 8
 3711 0066 BD46     	 mov sp,r7
 3712              	.LCFI254:
 3713              	 .cfi_def_cfa_register 13
 3714              	 
 3715 0068 80BD     	 pop {r7,pc}
 3716              	 .cfi_endproc
 3717              	.LFE246:
 3719 006a 00BF     	 .section .text.SDMMC_BLOCK_SD_lReadRca,"ax",%progbits
 3720              	 .align 2
 3721              	 .thumb
 3722              	 .thumb_func
 3724              	SDMMC_BLOCK_SD_lReadRca:
 3725              	.LFB247:
1104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Reads RCA (relative card address) of the card */
1106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReadRca(SDMMC_BLOCK_t *const obj)
1107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3726              	 .loc 3 1107 0
 3727              	 .cfi_startproc
 3728              	 
 3729              	 
 3730 0000 80B5     	 push {r7,lr}
 3731              	.LCFI255:
 3732              	 .cfi_def_cfa_offset 8
 3733              	 .cfi_offset 7,-8
 3734              	 .cfi_offset 14,-4
 3735 0002 86B0     	 sub sp,sp,#24
 3736              	.LCFI256:
 3737              	 .cfi_def_cfa_offset 32
 3738 0004 02AF     	 add r7,sp,#8
 3739              	.LCFI257:
 3740              	 .cfi_def_cfa 7,24
 3741 0006 7860     	 str r0,[r7,#4]
1108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
1111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(3)),
 3742              	 .loc 3 1111 0
 3743 0008 0223     	 movs r3,#2
1110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(3)),
 3744              	 .loc 3 1110 0
 3745 000a 5B00     	 lsls r3,r3,#1
 3746 000c 094A     	 ldr r2,.L184
 3747 000e 1A44     	 add r2,r2,r3
1112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        SDMMC_BLOCK_ARGUMENT0,
1113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R6,
1114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(obj->sdmmc_sd->card_info.rca));
 3748              	 .loc 3 1114 0
 3749 0010 7B68     	 ldr r3,[r7,#4]
 3750 0012 1B68     	 ldr r3,[r3]
 3751 0014 4C33     	 adds r3,r3,#76
1110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(3)),
 3752              	 .loc 3 1110 0
 3753 0016 0093     	 str r3,[sp]
 3754 0018 7868     	 ldr r0,[r7,#4]
 3755 001a 1146     	 mov r1,r2
 3756 001c 0022     	 movs r2,#0
 3757 001e 0523     	 movs r3,#5
 3758 0020 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3759 0024 0346     	 mov r3,r0
 3760 0026 FB73     	 strb r3,[r7,#15]
1115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3761              	 .loc 3 1115 0
 3762 0028 FB7B     	 ldrb r3,[r7,#15]
1116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3763              	 .loc 3 1116 0
 3764 002a 1846     	 mov r0,r3
 3765 002c 1037     	 adds r7,r7,#16
 3766              	.LCFI258:
 3767              	 .cfi_def_cfa_offset 8
 3768 002e BD46     	 mov sp,r7
 3769              	.LCFI259:
 3770              	 .cfi_def_cfa_register 13
 3771              	 
 3772 0030 80BD     	 pop {r7,pc}
 3773              	.L185:
 3774 0032 00BF     	 .align 2
 3775              	.L184:
 3776 0034 00000000 	 .word sdmmc_block_command
 3777              	 .cfi_endproc
 3778              	.LFE247:
 3780              	 .section .text.SDMMC_BLOCK_SD_lReadCardRegisters,"ax",%progbits
 3781              	 .align 2
 3782              	 .thumb
 3783              	 .thumb_func
 3785              	SDMMC_BLOCK_SD_lReadCardRegisters:
 3786              	.LFB248:
1117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read the CSD, SCR and Write protection status of the card */
1119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReadCardRegisters(SDMMC_BLOCK_t *const obj)
1120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3787              	 .loc 3 1120 0
 3788              	 .cfi_startproc
 3789              	 
 3790              	 
 3791 0000 80B5     	 push {r7,lr}
 3792              	.LCFI260:
 3793              	 .cfi_def_cfa_offset 8
 3794              	 .cfi_offset 7,-8
 3795              	 .cfi_offset 14,-4
 3796 0002 8AB0     	 sub sp,sp,#40
 3797              	.LCFI261:
 3798              	 .cfi_def_cfa_offset 48
 3799 0004 02AF     	 add r7,sp,#8
 3800              	.LCFI262:
 3801              	 .cfi_def_cfa 7,40
 3802 0006 7860     	 str r0,[r7,#4]
1121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 3803              	 .loc 3 1121 0
 3804 0008 0023     	 movs r3,#0
 3805 000a BB61     	 str r3,[r7,#24]
1122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 3806              	 .loc 3 1122 0
 3807 000c 0023     	 movs r3,#0
 3808 000e 3B61     	 str r3,[r7,#16]
1123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SCR_t scr_content = {0U};
 3809              	 .loc 3 1124 0
 3810 0010 0023     	 movs r3,#0
 3811 0012 BB60     	 str r3,[r7,#8]
 3812 0014 0023     	 movs r3,#0
 3813 0016 FB60     	 str r3,[r7,#12]
1125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t card_lock = (obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED);
 3814              	 .loc 3 1125 0
 3815 0018 7B68     	 ldr r3,[r7,#4]
 3816 001a 1B7A     	 ldrb r3,[r3,#8]
 3817 001c 03F00803 	 and r3,r3,#8
 3818 0020 FB75     	 strb r3,[r7,#23]
1126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Read CSD Register  */
1128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint16_t)SDMMC_BLOCK_ARG_RCA_BITPOS)
 3819              	 .loc 3 1128 0
 3820 0022 7B68     	 ldr r3,[r7,#4]
 3821 0024 1B68     	 ldr r3,[r3]
 3822 0026 B3F84C30 	 ldrh r3,[r3,#76]
 3823 002a 1B04     	 lsls r3,r3,#16
 3824 002c BA69     	 ldr r2,[r7,#24]
 3825 002e 1343     	 orrs r3,r3,r2
 3826 0030 BB61     	 str r3,[r7,#24]
1129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
1131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(9)),
 3827              	 .loc 3 1131 0
 3828 0032 0723     	 movs r3,#7
1130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(9)),
 3829              	 .loc 3 1130 0
 3830 0034 5B00     	 lsls r3,r3,#1
 3831 0036 3C4A     	 ldr r2,.L191
 3832 0038 1A44     	 add r2,r2,r3
1132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
1133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R2,
1134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        (void *)obj->sdmmc_sd->card_info.csd);
 3833              	 .loc 3 1134 0
 3834 003a 7B68     	 ldr r3,[r7,#4]
 3835 003c 1B68     	 ldr r3,[r3]
 3836 003e 3433     	 adds r3,r3,#52
1130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(9)),
 3837              	 .loc 3 1130 0
 3838 0040 0093     	 str r3,[sp]
 3839 0042 7868     	 ldr r0,[r7,#4]
 3840 0044 1146     	 mov r1,r2
 3841 0046 BA69     	 ldr r2,[r7,#24]
 3842 0048 0323     	 movs r3,#3
 3843 004a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3844 004e 0346     	 mov r3,r0
 3845 0050 FB77     	 strb r3,[r7,#31]
1135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (card_lock == (uint8_t)0U))
 3846              	 .loc 3 1136 0
 3847 0052 FB7F     	 ldrb r3,[r7,#31]
 3848 0054 002B     	 cmp r3,#0
 3849 0056 55D1     	 bne .L187
 3850              	 .loc 3 1136 0 is_stmt 0 discriminator 1
 3851 0058 FB7D     	 ldrb r3,[r7,#23]
 3852 005a 002B     	 cmp r3,#0
 3853 005c 52D1     	 bne .L187
1137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set write protection flags */
1139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lGetWriteProtect(obj);
 3854              	 .loc 3 1139 0 is_stmt 1
 3855 005e 7868     	 ldr r0,[r7,#4]
 3856 0060 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lGetWriteProtect
 3857 0064 0346     	 mov r3,r0
 3858 0066 FB77     	 strb r3,[r7,#31]
1140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3859              	 .loc 3 1141 0
 3860 0068 FB7F     	 ldrb r3,[r7,#31]
 3861 006a 002B     	 cmp r3,#0
 3862 006c 49D1     	 bne .L188
1142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Read SCR register for SD card */
1144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (((uint8_t)obj->card_type & (uint8_t)SDMMC_BLOCK_CARD_TYPE_MMC) == 0U)
 3863              	 .loc 3 1144 0
 3864 006e 7B68     	 ldr r3,[r7,#4]
 3865 0070 5B7A     	 ldrb r3,[r3,#9]
 3866 0072 03F01003 	 and r3,r3,#16
 3867 0076 002B     	 cmp r3,#0
 3868 0078 43D1     	 bne .L188
1145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Switch to Transferring State. */
1147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 3869              	 .loc 3 1147 0
 3870 007a 7868     	 ldr r0,[r7,#4]
 3871 007c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 3872 0080 0346     	 mov r3,r0
 3873 0082 FB77     	 strb r3,[r7,#31]
1148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3874              	 .loc 3 1149 0
 3875 0084 FB7F     	 ldrb r3,[r7,#31]
 3876 0086 002B     	 cmp r3,#0
 3877 0088 3BD1     	 bne .L188
1150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Send application specific command CMD55 */
1152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA
 3878              	 .loc 3 1152 0
 3879 008a 7B68     	 ldr r3,[r7,#4]
 3880 008c 1B68     	 ldr r3,[r3]
 3881 008e B3F84C30 	 ldrh r3,[r3,#76]
 3882 0092 1B04     	 lsls r3,r3,#16
 3883 0094 BA69     	 ldr r2,[r7,#24]
 3884 0096 1343     	 orrs r3,r3,r2
 3885 0098 BB61     	 str r3,[r7,#24]
1153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lSendCommand(obj,
1155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3886              	 .loc 3 1155 0
 3887 009a 1923     	 movs r3,#25
1154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3888              	 .loc 3 1154 0
 3889 009c 5B00     	 lsls r3,r3,#1
 3890 009e 224A     	 ldr r2,.L191
 3891 00a0 1A44     	 add r2,r2,r3
 3892 00a2 07F11003 	 add r3,r7,#16
 3893 00a6 0093     	 str r3,[sp]
 3894 00a8 7868     	 ldr r0,[r7,#4]
 3895 00aa 1146     	 mov r1,r2
 3896 00ac BA69     	 ldr r2,[r7,#24]
 3897 00ae 0123     	 movs r3,#1
 3898 00b0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3899 00b4 0346     	 mov r3,r0
 3900 00b6 FB77     	 strb r3,[r7,#31]
1156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                arg,
1157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                XMC_SDMMC_RESPONSE_TYPE_R1,
1158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                &card_status);
1159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3901              	 .loc 3 1160 0
 3902 00b8 FB7F     	 ldrb r3,[r7,#31]
 3903 00ba 002B     	 cmp r3,#0
 3904 00bc 21D1     	 bne .L188
1161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /* Set direction select bit */
1163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_T
 3905              	 .loc 3 1163 0
 3906 00be 7B68     	 ldr r3,[r7,#4]
 3907 00c0 1B68     	 ldr r3,[r3]
 3908 00c2 1B68     	 ldr r3,[r3]
 3909 00c4 1846     	 mov r0,r3
 3910 00c6 0121     	 movs r1,#1
 3911 00c8 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
1164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /* Read the transferred SCR data */
1166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
1167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          &(SDMMC_BLOCK_SD_COMMAND(64)),
 3912              	 .loc 3 1167 0
 3913 00cc 2123     	 movs r3,#33
1166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          &(SDMMC_BLOCK_SD_COMMAND(64)),
 3914              	 .loc 3 1166 0
 3915 00ce 5B00     	 lsls r3,r3,#1
 3916 00d0 154A     	 ldr r2,.L191
 3917 00d2 1A44     	 add r2,r2,r3
 3918 00d4 07F10803 	 add r3,r7,#8
 3919 00d8 0093     	 str r3,[sp]
 3920 00da 0123     	 movs r3,#1
 3921 00dc 0193     	 str r3,[sp,#4]
 3922 00de 7868     	 ldr r0,[r7,#4]
 3923 00e0 1146     	 mov r1,r2
 3924 00e2 0022     	 movs r2,#0
 3925 00e4 0823     	 movs r3,#8
 3926 00e6 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 3927 00ea 0346     	 mov r3,r0
 3928 00ec FB77     	 strb r3,[r7,#31]
1168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          (uint32_t)SDMMC_BLOCK_ARGUMENT0,
1169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          (uint16_t)8U,
1170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          (uint32_t *)&scr_content,
1171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
1172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             obj->sdmmc_sd->card_info.scr = scr_content;
 3929              	 .loc 3 1173 0
 3930 00ee 7B68     	 ldr r3,[r7,#4]
 3931 00f0 1B68     	 ldr r3,[r3]
 3932 00f2 4433     	 adds r3,r3,#68
 3933 00f4 07F10802 	 add r2,r7,#8
 3934 00f8 92E80300 	 ldmia r2,{r0,r1}
 3935 00fc 83E80300 	 stmia r3,{r0,r1}
1141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 3936              	 .loc 3 1141 0
 3937 0100 0CE0     	 b .L189
 3938              	.L188:
 3939 0102 0BE0     	 b .L189
 3940              	.L187:
1174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 3941              	 .loc 3 1181 0
 3942 0104 7868     	 ldr r0,[r7,#4]
 3943 0106 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 3944 010a 0346     	 mov r3,r0
 3945 010c FB77     	 strb r3,[r7,#31]
1182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST);
 3946              	 .loc 3 1182 0
 3947 010e 7B68     	 ldr r3,[r7,#4]
 3948 0110 1B68     	 ldr r3,[r3]
 3949 0112 1B68     	 ldr r3,[r3]
 3950 0114 1846     	 mov r0,r3
 3951 0116 0121     	 movs r1,#1
 3952 0118 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
 3953              	.L189:
1183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3954              	 .loc 3 1185 0
 3955 011c FB7F     	 ldrb r3,[r7,#31]
1186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3956              	 .loc 3 1186 0
 3957 011e 1846     	 mov r0,r3
 3958 0120 2037     	 adds r7,r7,#32
 3959              	.LCFI263:
 3960              	 .cfi_def_cfa_offset 8
 3961 0122 BD46     	 mov sp,r7
 3962              	.LCFI264:
 3963              	 .cfi_def_cfa_register 13
 3964              	 
 3965 0124 80BD     	 pop {r7,pc}
 3966              	.L192:
 3967 0126 00BF     	 .align 2
 3968              	.L191:
 3969 0128 00000000 	 .word sdmmc_block_command
 3970              	 .cfi_endproc
 3971              	.LFE248:
 3973              	 .section .text.SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer,"ax",%progbits
 3974              	 .align 2
 3975              	 .thumb
 3976              	 .thumb_func
 3978              	SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer:
 3979              	.LFB249:
1187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Configure the registers for a single block transfer */
1189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer(SDMMC_BLOCK_t *const 
1190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                               const XMC_SDMMC_COMMA
1191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                               uint32_t arg,
1192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                               uint16_t block_size)
1193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3980              	 .loc 3 1193 0
 3981              	 .cfi_startproc
 3982              	 
 3983              	 
 3984 0000 80B5     	 push {r7,lr}
 3985              	.LCFI265:
 3986              	 .cfi_def_cfa_offset 8
 3987              	 .cfi_offset 7,-8
 3988              	 .cfi_offset 14,-4
 3989 0002 8CB0     	 sub sp,sp,#48
 3990              	.LCFI266:
 3991              	 .cfi_def_cfa_offset 56
 3992 0004 02AF     	 add r7,sp,#8
 3993              	.LCFI267:
 3994              	 .cfi_def_cfa 7,48
 3995 0006 F860     	 str r0,[r7,#12]
 3996 0008 B960     	 str r1,[r7,#8]
 3997 000a 7A60     	 str r2,[r7,#4]
 3998 000c 7B80     	 strh r3,[r7,#2]
1194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3999              	 .loc 3 1194 0
 4000 000e 0123     	 movs r3,#1
 4001 0010 87F82730 	 strb r3,[r7,#39]
1195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 4002              	 .loc 3 1195 0
 4003 0014 0023     	 movs r3,#0
 4004 0016 3B62     	 str r3,[r7,#32]
1196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_TRANSFER_MODE_t response;
1197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.block_size = block_size;
 4005              	 .loc 3 1198 0
 4006 0018 7B88     	 ldrh r3,[r7,#2]
 4007 001a 7B61     	 str r3,[r7,#20]
1199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.type = XMC_SDMMC_TRANSFER_MODE_TYPE_SINGLE;
 4008              	 .loc 3 1199 0
 4009 001c 0023     	 movs r3,#0
 4010 001e 3B77     	 strb r3,[r7,#28]
1200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.auto_cmd = XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_DISABLED;
 4011              	 .loc 3 1200 0
 4012 0020 0023     	 movs r3,#0
 4013 0022 7B77     	 strb r3,[r7,#29]
1201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SetDataTransferMode(obj->sdmmc_sd->sdmmc, &response);
 4014              	 .loc 3 1202 0
 4015 0024 FB68     	 ldr r3,[r7,#12]
 4016 0026 1B68     	 ldr r3,[r3]
 4017 0028 1A68     	 ldr r2,[r3]
 4018 002a 07F11403 	 add r3,r7,#20
 4019 002e 1046     	 mov r0,r2
 4020 0030 1946     	 mov r1,r3
 4021 0032 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferMode
1203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj, cmd, arg, XMC_SDMMC_RESPONSE_TYPE_R1, &card_status);
 4022              	 .loc 3 1204 0
 4023 0036 07F12003 	 add r3,r7,#32
 4024 003a 0093     	 str r3,[sp]
 4025 003c F868     	 ldr r0,[r7,#12]
 4026 003e B968     	 ldr r1,[r7,#8]
 4027 0040 7A68     	 ldr r2,[r7,#4]
 4028 0042 0123     	 movs r3,#1
 4029 0044 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4030 0048 0346     	 mov r3,r0
 4031 004a 87F82730 	 strb r3,[r7,#39]
1205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4032              	 .loc 3 1206 0
 4033 004e 97F82730 	 ldrb r3,[r7,#39]
1207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4034              	 .loc 3 1207 0
 4035 0052 1846     	 mov r0,r3
 4036 0054 2837     	 adds r7,r7,#40
 4037              	.LCFI268:
 4038              	 .cfi_def_cfa_offset 8
 4039 0056 BD46     	 mov sp,r7
 4040              	.LCFI269:
 4041              	 .cfi_def_cfa_register 13
 4042              	 
 4043 0058 80BD     	 pop {r7,pc}
 4044              	 .cfi_endproc
 4045              	.LFE249:
 4047 005a 00BF     	 .section .text.SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer,"ax",%progbits
 4048              	 .align 2
 4049              	 .thumb
 4050              	 .thumb_func
 4052              	SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer:
 4053              	.LFB250:
1208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Configure the registers for a multi-block transfer */
1210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer(SDMMC_BLOCK_t *const o
1211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                              uint32_t *arg,
1212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                              uint32_t num_blocks,
1213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                              const XMC_SDMMC_COMMAN
1214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4054              	 .loc 3 1214 0
 4055              	 .cfi_startproc
 4056              	 
 4057              	 
 4058 0000 80B5     	 push {r7,lr}
 4059              	.LCFI270:
 4060              	 .cfi_def_cfa_offset 8
 4061              	 .cfi_offset 7,-8
 4062              	 .cfi_offset 14,-4
 4063 0002 8CB0     	 sub sp,sp,#48
 4064              	.LCFI271:
 4065              	 .cfi_def_cfa_offset 56
 4066 0004 02AF     	 add r7,sp,#8
 4067              	.LCFI272:
 4068              	 .cfi_def_cfa 7,48
 4069 0006 F860     	 str r0,[r7,#12]
 4070 0008 B960     	 str r1,[r7,#8]
 4071 000a 7A60     	 str r2,[r7,#4]
 4072 000c 3B60     	 str r3,[r7]
1215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 4073              	 .loc 3 1216 0
 4074 000e 0023     	 movs r3,#0
 4075 0010 3B62     	 str r3,[r7,#32]
1217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_TRANSFER_MODE_t response;
1218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Block addressing */
1220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint8_t)obj->card_type & (uint8_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint8_t)0U)
 4076              	 .loc 3 1220 0
 4077 0012 FB68     	 ldr r3,[r7,#12]
 4078 0014 5B7A     	 ldrb r3,[r3,#9]
 4079 0016 03F00803 	 and r3,r3,#8
 4080 001a 002B     	 cmp r3,#0
 4081 001c 04D1     	 bne .L196
1221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *arg *= (uint32_t)512U;
 4082              	 .loc 3 1222 0
 4083 001e BB68     	 ldr r3,[r7,#8]
 4084 0020 1B68     	 ldr r3,[r3]
 4085 0022 5A02     	 lsls r2,r3,#9
 4086 0024 BB68     	 ldr r3,[r7,#8]
 4087 0026 1A60     	 str r2,[r3]
 4088              	.L196:
1223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.block_size = SDMMC_BLOCK_TX_BLOCK_SIZE_VALUE;
 4089              	 .loc 3 1225 0
 4090 0028 4FF40073 	 mov r3,#512
 4091 002c 7B61     	 str r3,[r7,#20]
1226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.num_blocks = num_blocks;
 4092              	 .loc 3 1226 0
 4093 002e 7B68     	 ldr r3,[r7,#4]
 4094 0030 BB61     	 str r3,[r7,#24]
1227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.type = XMC_SDMMC_TRANSFER_MODE_TYPE_MULTIPLE;
 4095              	 .loc 3 1227 0
 4096 0032 2223     	 movs r3,#34
 4097 0034 3B77     	 strb r3,[r7,#28]
1228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.auto_cmd = XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_12;
 4098              	 .loc 3 1228 0
 4099 0036 0123     	 movs r3,#1
 4100 0038 7B77     	 strb r3,[r7,#29]
1229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SetDataTransferMode(obj->sdmmc_sd->sdmmc, &response);
 4101              	 .loc 3 1230 0
 4102 003a FB68     	 ldr r3,[r7,#12]
 4103 003c 1B68     	 ldr r3,[r3]
 4104 003e 1A68     	 ldr r2,[r3]
 4105 0040 07F11403 	 add r3,r7,#20
 4106 0044 1046     	 mov r0,r2
 4107 0046 1946     	 mov r1,r3
 4108 0048 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferMode
1231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable ACMD 12 interrupt signal */
1233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_EnableEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_ACMD_ERR);
 4109              	 .loc 3 1233 0
 4110 004c FB68     	 ldr r3,[r7,#12]
 4111 004e 1B68     	 ldr r3,[r3]
 4112 0050 1B68     	 ldr r3,[r3]
 4113 0052 1846     	 mov r0,r3
 4114 0054 4FF08071 	 mov r1,#16777216
 4115 0058 FFF7FEFF 	 bl XMC_SDMMC_EnableEvent
1234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send multiple block transfer command */
1236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj, cmd, *arg, XMC_SDMMC_RESPONSE_TYPE_R1, &card_status);
 4116              	 .loc 3 1236 0
 4117 005c BB68     	 ldr r3,[r7,#8]
 4118 005e 1A68     	 ldr r2,[r3]
 4119 0060 07F12003 	 add r3,r7,#32
 4120 0064 0093     	 str r3,[sp]
 4121 0066 F868     	 ldr r0,[r7,#12]
 4122 0068 3968     	 ldr r1,[r7]
 4123 006a 0123     	 movs r3,#1
 4124 006c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4125 0070 0346     	 mov r3,r0
 4126 0072 87F82730 	 strb r3,[r7,#39]
1237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4127              	 .loc 3 1238 0
 4128 0076 97F82730 	 ldrb r3,[r7,#39]
1239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4129              	 .loc 3 1239 0
 4130 007a 1846     	 mov r0,r3
 4131 007c 2837     	 adds r7,r7,#40
 4132              	.LCFI273:
 4133              	 .cfi_def_cfa_offset 8
 4134 007e BD46     	 mov sp,r7
 4135              	.LCFI274:
 4136              	 .cfi_def_cfa_register 13
 4137              	 
 4138 0080 80BD     	 pop {r7,pc}
 4139              	 .cfi_endproc
 4140              	.LFE250:
 4142 0082 00BF     	 .section .text.SDMMC_BLOCK_SD_lMultiBlockTransfer,"ax",%progbits
 4143              	 .align 2
 4144              	 .thumb
 4145              	 .thumb_func
 4147              	SDMMC_BLOCK_SD_lMultiBlockTransfer:
 4148              	.LFB251:
1240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Transfer multiple blocks of data */
1242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lMultiBlockTransfer(SDMMC_BLOCK_t *const obj,
1243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     uint32_t *addr,
1244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     uint32_t num_blocks,
1245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     const XMC_SDMMC_COMMAND_t *cmd,
1246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     uint32_t *buf,
1247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     SDMMC_BLOCK_SD_DATA_TRANSFER_t 
1248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4149              	 .loc 3 1248 0
 4150              	 .cfi_startproc
 4151              	 
 4152              	 
 4153 0000 80B5     	 push {r7,lr}
 4154              	.LCFI275:
 4155              	 .cfi_def_cfa_offset 8
 4156              	 .cfi_offset 7,-8
 4157              	 .cfi_offset 14,-4
 4158 0002 86B0     	 sub sp,sp,#24
 4159              	.LCFI276:
 4160              	 .cfi_def_cfa_offset 32
 4161 0004 00AF     	 add r7,sp,#0
 4162              	.LCFI277:
 4163              	 .cfi_def_cfa_register 7
 4164 0006 F860     	 str r0,[r7,#12]
 4165 0008 B960     	 str r1,[r7,#8]
 4166 000a 7A60     	 str r2,[r7,#4]
 4167 000c 3B60     	 str r3,[r7]
1249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4168              	 .loc 3 1250 0
 4169 000e FB68     	 ldr r3,[r7,#12]
 4170 0010 1B68     	 ldr r3,[r3]
 4171 0012 0122     	 movs r2,#1
 4172 0014 9A76     	 strb r2,[r3,#26]
1251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Configure registers for Multi block transfer*/
1253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer(obj, addr, (uint32_t)num_blocks, cmd);
 4173              	 .loc 3 1253 0
 4174 0016 F868     	 ldr r0,[r7,#12]
 4175 0018 B968     	 ldr r1,[r7,#8]
 4176 001a 7A68     	 ldr r2,[r7,#4]
 4177 001c 3B68     	 ldr r3,[r7]
 4178 001e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer
 4179 0022 0346     	 mov r3,r0
 4180 0024 FB75     	 strb r3,[r7,#23]
1254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4181              	 .loc 3 1254 0
 4182 0026 FB7D     	 ldrb r3,[r7,#23]
 4183 0028 002B     	 cmp r3,#0
 4184 002a 2CD1     	 bne .L199
1255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Read/write block data */
1257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     while ((uint32_t)num_blocks > 0U)
 4185              	 .loc 3 1257 0
 4186 002c 14E0     	 b .L200
 4187              	.L203:
1258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Perform Transfer */
1260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lDataTransfer(obj, buf, transfer_mode, SDMMC_BLOCK_NUM_QUADLETS_IN_BL
 4188              	 .loc 3 1260 0
 4189 002e 97F82430 	 ldrb r3,[r7,#36]
 4190 0032 F868     	 ldr r0,[r7,#12]
 4191 0034 396A     	 ldr r1,[r7,#32]
 4192 0036 1A46     	 mov r2,r3
 4193 0038 8023     	 movs r3,#128
 4194 003a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lDataTransfer
 4195 003e 0346     	 mov r3,r0
 4196 0040 FB75     	 strb r3,[r7,#23]
1261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4197              	 .loc 3 1261 0
 4198 0042 FB7D     	 ldrb r3,[r7,#23]
 4199 0044 002B     	 cmp r3,#0
 4200 0046 00D0     	 beq .L201
1262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 4201              	 .loc 3 1263 0
 4202 0048 09E0     	 b .L202
 4203              	.L201:
1264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Decrement number of blocks */
1266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       num_blocks--;
 4204              	 .loc 3 1266 0
 4205 004a 7B68     	 ldr r3,[r7,#4]
 4206 004c 013B     	 subs r3,r3,#1
 4207 004e 7B60     	 str r3,[r7,#4]
1267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Pointer pointing to the next block pointer */
1268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       buf += (uint32_t)SDMMC_BLOCK_NUM_QUADLETS_IN_BLOCK;
 4208              	 .loc 3 1268 0
 4209 0050 3B6A     	 ldr r3,[r7,#32]
 4210 0052 03F50073 	 add r3,r3,#512
 4211 0056 3B62     	 str r3,[r7,#32]
 4212              	.L200:
1257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 4213              	 .loc 3 1257 0
 4214 0058 7B68     	 ldr r3,[r7,#4]
 4215 005a 002B     	 cmp r3,#0
 4216 005c E7D1     	 bne .L203
 4217              	.L202:
1269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4218              	 .loc 3 1271 0
 4219 005e FB7D     	 ldrb r3,[r7,#23]
 4220 0060 002B     	 cmp r3,#0
 4221 0062 10D1     	 bne .L199
1272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Block on transfer complete interrupt */
1274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Timeout: 5ms */
1275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lTransferDelay(obj, SDMMC_BLOCK_DELAY_IN_TRANSFER);
 4222              	 .loc 3 1275 0
 4223 0064 F868     	 ldr r0,[r7,#12]
 4224 0066 0A49     	 ldr r1,.L205
 4225 0068 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lTransferDelay
 4226 006c 0346     	 mov r3,r0
 4227 006e FB75     	 strb r3,[r7,#23]
1276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4228              	 .loc 3 1276 0
 4229 0070 FB7D     	 ldrb r3,[r7,#23]
 4230 0072 002B     	 cmp r3,#0
 4231 0074 07D1     	 bne .L199
1277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Check if transfer happened successfully; Check ACMD status */
1279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->acmd_int_err == SDMMC_BLOCK_MODE_STATUS_ACMD1
 4232              	 .loc 3 1279 0
 4233 0076 FB68     	 ldr r3,[r7,#12]
 4234 0078 1B68     	 ldr r3,[r3]
 4235 007a DB7E     	 ldrb r3,[r3,#27]
 4236 007c 092B     	 cmp r3,#9
 4237 007e 02D1     	 bne .L199
1280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Call ACMD12 error recovery */
1282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           SDMMC_BLOCK_SD_lAcmdErrorRecovery(obj);
 4238              	 .loc 3 1282 0
 4239 0080 F868     	 ldr r0,[r7,#12]
 4240 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lAcmdErrorRecovery
 4241              	.L199:
1283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4242              	 .loc 3 1287 0
 4243 0086 FB7D     	 ldrb r3,[r7,#23]
1288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4244              	 .loc 3 1288 0
 4245 0088 1846     	 mov r0,r3
 4246 008a 1837     	 adds r7,r7,#24
 4247              	.LCFI278:
 4248              	 .cfi_def_cfa_offset 8
 4249 008c BD46     	 mov sp,r7
 4250              	.LCFI279:
 4251              	 .cfi_def_cfa_register 13
 4252              	 
 4253 008e 80BD     	 pop {r7,pc}
 4254              	.L206:
 4255              	 .align 2
 4256              	.L205:
 4257 0090 40420F00 	 .word 1000000
 4258              	 .cfi_endproc
 4259              	.LFE251:
 4261              	 .section .text.SDMMC_BLOCK_SD_lSingleBlockTransfer,"ax",%progbits
 4262              	 .align 2
 4263              	 .thumb
 4264              	 .thumb_func
 4266              	SDMMC_BLOCK_SD_lSingleBlockTransfer:
 4267              	.LFB252:
1289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Performs single block transfer */
1291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSingleBlockTransfer(SDMMC_BLOCK_t *const obj,
1292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      const XMC_SDMMC_COMMAND_t *cmd
1293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t arg,
1294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint16_t block_size,
1295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t *buf,
1296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      SDMMC_BLOCK_SD_DATA_TRANSFER_t
1297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4268              	 .loc 3 1297 0
 4269              	 .cfi_startproc
 4270              	 
 4271              	 
 4272 0000 80B5     	 push {r7,lr}
 4273              	.LCFI280:
 4274              	 .cfi_def_cfa_offset 8
 4275              	 .cfi_offset 7,-8
 4276              	 .cfi_offset 14,-4
 4277 0002 86B0     	 sub sp,sp,#24
 4278              	.LCFI281:
 4279              	 .cfi_def_cfa_offset 32
 4280 0004 00AF     	 add r7,sp,#0
 4281              	.LCFI282:
 4282              	 .cfi_def_cfa_register 7
 4283 0006 F860     	 str r0,[r7,#12]
 4284 0008 B960     	 str r1,[r7,#8]
 4285 000a 7A60     	 str r2,[r7,#4]
 4286 000c 7B80     	 strh r3,[r7,#2]
1298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t qbytes = (uint32_t)(((((uint32_t)block_size + 3UL) >> 2U) << 2U) >> 2U);
 4287              	 .loc 3 1299 0
 4288 000e 7B88     	 ldrh r3,[r7,#2]
 4289 0010 0333     	 adds r3,r3,#3
 4290 0012 9B08     	 lsrs r3,r3,#2
 4291 0014 3B61     	 str r3,[r7,#16]
1300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer(obj, cmd, arg, block_size);
 4292              	 .loc 3 1301 0
 4293 0016 7B88     	 ldrh r3,[r7,#2]
 4294 0018 F868     	 ldr r0,[r7,#12]
 4295 001a B968     	 ldr r1,[r7,#8]
 4296 001c 7A68     	 ldr r2,[r7,#4]
 4297 001e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer
 4298 0022 0346     	 mov r3,r0
 4299 0024 FB75     	 strb r3,[r7,#23]
1302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4300              	 .loc 3 1302 0
 4301 0026 FB7D     	 ldrb r3,[r7,#23]
 4302 0028 002B     	 cmp r3,#0
 4303 002a 49D1     	 bne .L208
1303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Perform data transfer */
1305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lDataTransfer(obj, buf, transfer_mode, qbytes);
 4304              	 .loc 3 1305 0
 4305 002c 97F82430 	 ldrb r3,[r7,#36]
 4306 0030 F868     	 ldr r0,[r7,#12]
 4307 0032 396A     	 ldr r1,[r7,#32]
 4308 0034 1A46     	 mov r2,r3
 4309 0036 3B69     	 ldr r3,[r7,#16]
 4310 0038 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lDataTransfer
 4311 003c 0346     	 mov r3,r0
 4312 003e FB75     	 strb r3,[r7,#23]
1306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4313              	 .loc 3 1306 0
 4314 0040 FB7D     	 ldrb r3,[r7,#23]
 4315 0042 002B     	 cmp r3,#0
 4316 0044 3CD1     	 bne .L208
1307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Block on transfer complete interrupt */
1309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lStartTimer(obj, SDMMC_BLOCK_DELAY_IN_TRANSFER);
 4317              	 .loc 3 1309 0
 4318 0046 F868     	 ldr r0,[r7,#12]
 4319 0048 2049     	 ldr r1,.L214
 4320 004a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 4321 004e 0346     	 mov r3,r0
 4322 0050 FB75     	 strb r3,[r7,#23]
1310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4323              	 .loc 3 1310 0
 4324 0052 FB7D     	 ldrb r3,[r7,#23]
 4325 0054 002B     	 cmp r3,#0
 4326 0056 02D0     	 beq .L209
1311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 4327              	 .loc 3 1312 0
 4328 0058 2E23     	 movs r3,#46
 4329 005a FB75     	 strb r3,[r7,#23]
 4330 005c 30E0     	 b .L208
 4331              	.L209:
1313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
1315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         do
1317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 4332              	 .loc 3 1318 0
 4333 005e FB68     	 ldr r3,[r7,#12]
 4334 0060 1B68     	 ldr r3,[r3]
 4335 0062 93F85C30 	 ldrb r3,[r3,#92]
 4336 0066 DBB2     	 uxtb r3,r3
 4337 0068 83F00103 	 eor r3,r3,#1
 4338 006c DBB2     	 uxtb r3,r3
 4339 006e 002B     	 cmp r3,#0
 4340 0070 02D0     	 beq .L210
1319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 4341              	 .loc 3 1320 0
 4342 0072 2E23     	 movs r3,#46
 4343 0074 FB75     	 strb r3,[r7,#23]
1321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             break;
 4344              	 .loc 3 1321 0
 4345 0076 04E0     	 b .L211
 4346              	.L210:
1322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         } while ((uint8_t)obj->sdmmc_sd->isr_context.transfer_flag == (uint8_t)0U);
 4347              	 .loc 3 1323 0
 4348 0078 FB68     	 ldr r3,[r7,#12]
 4349 007a 1B68     	 ldr r3,[r3]
 4350 007c 1B7A     	 ldrb r3,[r3,#8]
 4351 007e 002B     	 cmp r3,#0
 4352 0080 EDD0     	 beq .L209
 4353              	.L211:
1324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Stop timer and delete it */
1326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 4354              	 .loc 3 1326 0
 4355 0082 F868     	 ldr r0,[r7,#12]
 4356 0084 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
1327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (void)SYSTIMER_DeleteTimer((uint32_t)obj->sdmmc_sd->tmr_id);
 4357              	 .loc 3 1327 0
 4358 0088 FB68     	 ldr r3,[r7,#12]
 4359 008a 1B68     	 ldr r3,[r3]
 4360 008c 5B6D     	 ldr r3,[r3,#84]
 4361 008e 1846     	 mov r0,r3
 4362 0090 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
1328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         obj->sdmmc_sd->isr_context.transfer_flag = (uint8_t)0U;
 4363              	 .loc 3 1329 0
 4364 0094 FB68     	 ldr r3,[r7,#12]
 4365 0096 1B68     	 ldr r3,[r3]
 4366 0098 0022     	 movs r2,#0
 4367 009a 1A72     	 strb r2,[r3,#8]
1330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Check transfer complete status */
1332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->transfer_int_err == SDMMC_BLOCK_MODE_STATUS_T
 4368              	 .loc 3 1332 0
 4369 009c FB68     	 ldr r3,[r7,#12]
 4370 009e 1B68     	 ldr r3,[r3]
 4371 00a0 9B7E     	 ldrb r3,[r3,#26]
 4372 00a2 1F2B     	 cmp r3,#31
 4373 00a4 02D1     	 bne .L212
1333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4374              	 .loc 3 1334 0
 4375 00a6 0023     	 movs r3,#0
 4376 00a8 FB75     	 strb r3,[r7,#23]
 4377 00aa 09E0     	 b .L208
 4378              	.L212:
1335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         else
1337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           obj->sdmmc_sd->issue_abort = (uint8_t)1U;
 4379              	 .loc 3 1338 0
 4380 00ac FB68     	 ldr r3,[r7,#12]
 4381 00ae 1B68     	 ldr r3,[r3]
 4382 00b0 0122     	 movs r2,#1
 4383 00b2 83F85120 	 strb r2,[r3,#81]
1339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lErrorInterruptRecovery(obj);
 4384              	 .loc 3 1339 0
 4385 00b6 F868     	 ldr r0,[r7,#12]
 4386 00b8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lErrorInterruptRecovery
 4387 00bc 0346     	 mov r3,r0
 4388 00be FB75     	 strb r3,[r7,#23]
 4389              	.L208:
1340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4390              	 .loc 3 1345 0
 4391 00c0 FB7D     	 ldrb r3,[r7,#23]
1346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4392              	 .loc 3 1346 0
 4393 00c2 1846     	 mov r0,r3
 4394 00c4 1837     	 adds r7,r7,#24
 4395              	.LCFI283:
 4396              	 .cfi_def_cfa_offset 8
 4397 00c6 BD46     	 mov sp,r7
 4398              	.LCFI284:
 4399              	 .cfi_def_cfa_register 13
 4400              	 
 4401 00c8 80BD     	 pop {r7,pc}
 4402              	.L215:
 4403 00ca 00BF     	 .align 2
 4404              	.L214:
 4405 00cc 40420F00 	 .word 1000000
 4406              	 .cfi_endproc
 4407              	.LFE252:
 4409              	 .section .text.SDMMC_BLOCK_SD_lCheckLockStatus,"ax",%progbits
 4410              	 .align 2
 4411              	 .thumb
 4412              	 .thumb_func
 4414              	SDMMC_BLOCK_SD_lCheckLockStatus:
 4415              	.LFB253:
1347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check lock status */
1349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCheckLockStatus(SDMMC_BLOCK_t *const obj,
1350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                  SDMMC_BLOCK_CARD_LOCK_STATUS_t mod
1351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4416              	 .loc 3 1351 0
 4417              	 .cfi_startproc
 4418              	 
 4419              	 
 4420 0000 80B5     	 push {r7,lr}
 4421              	.LCFI285:
 4422              	 .cfi_def_cfa_offset 8
 4423              	 .cfi_offset 7,-8
 4424              	 .cfi_offset 14,-4
 4425 0002 84B0     	 sub sp,sp,#16
 4426              	.LCFI286:
 4427              	 .cfi_def_cfa_offset 24
 4428 0004 00AF     	 add r7,sp,#0
 4429              	.LCFI287:
 4430              	 .cfi_def_cfa_register 7
 4431 0006 7860     	 str r0,[r7,#4]
 4432 0008 0B46     	 mov r3,r1
 4433 000a FB70     	 strb r3,[r7,#3]
1352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_CARD_LOCK_STATUS_t lock_status;
1354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_GetLockStatus(obj, &lock_status);
 4434              	 .loc 3 1355 0
 4435 000c 07F10E03 	 add r3,r7,#14
 4436 0010 7868     	 ldr r0,[r7,#4]
 4437 0012 1946     	 mov r1,r3
 4438 0014 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetLockStatus
 4439 0018 0346     	 mov r3,r0
 4440 001a FB73     	 strb r3,[r7,#15]
1356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* For lock, card state must be "locked" */
1357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4441              	 .loc 3 1357 0
 4442 001c FB7B     	 ldrb r3,[r7,#15]
 4443 001e 002B     	 cmp r3,#0
 4444 0020 13D1     	 bne .L217
1358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED) && (mode == SDMMC_BLOCK_CARD_LOCK_STAT
 4445              	 .loc 3 1359 0
 4446 0022 BB7B     	 ldrb r3,[r7,#14]
 4447 0024 012B     	 cmp r3,#1
 4448 0026 05D1     	 bne .L218
 4449              	 .loc 3 1359 0 is_stmt 0 discriminator 1
 4450 0028 FB78     	 ldrb r3,[r7,#3]
 4451 002a 012B     	 cmp r3,#1
 4452 002c 02D1     	 bne .L218
1360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4453              	 .loc 3 1361 0 is_stmt 1
 4454 002e 0023     	 movs r3,#0
 4455 0030 FB73     	 strb r3,[r7,#15]
 4456 0032 0AE0     	 b .L217
 4457              	.L218:
1362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* For unlock, card state must be "unlocked" */
1364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if ((lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED) && (mode == SDMMC_BLOCK_CARD_LO
 4458              	 .loc 3 1364 0
 4459 0034 BB7B     	 ldrb r3,[r7,#14]
 4460 0036 002B     	 cmp r3,#0
 4461 0038 05D1     	 bne .L219
 4462              	 .loc 3 1364 0 is_stmt 0 discriminator 1
 4463 003a FB78     	 ldrb r3,[r7,#3]
 4464 003c 002B     	 cmp r3,#0
 4465 003e 02D1     	 bne .L219
1365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4466              	 .loc 3 1366 0 is_stmt 1
 4467 0040 0023     	 movs r3,#0
 4468 0042 FB73     	 strb r3,[r7,#15]
 4469 0044 01E0     	 b .L217
 4470              	.L219:
1367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_LOCK_UNLOCK_ERROR;
 4471              	 .loc 3 1370 0
 4472 0046 1023     	 movs r3,#16
 4473 0048 FB73     	 strb r3,[r7,#15]
 4474              	.L217:
1371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4475              	 .loc 3 1374 0
 4476 004a FB7B     	 ldrb r3,[r7,#15]
1375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4477              	 .loc 3 1375 0
 4478 004c 1846     	 mov r0,r3
 4479 004e 1037     	 adds r7,r7,#16
 4480              	.LCFI288:
 4481              	 .cfi_def_cfa_offset 8
 4482 0050 BD46     	 mov sp,r7
 4483              	.LCFI289:
 4484              	 .cfi_def_cfa_register 13
 4485              	 
 4486 0052 80BD     	 pop {r7,pc}
 4487              	 .cfi_endproc
 4488              	.LFE253:
 4490              	 .section .text.SDMMC_BLOCK_SD_lSwitchBusWidth,"ax",%progbits
 4491              	 .align 2
 4492              	 .thumb
 4493              	 .thumb_func
 4495              	SDMMC_BLOCK_SD_lSwitchBusWidth:
 4496              	.LFB254:
1376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_SUPPORT_4_BUS_WIDTH
1378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Switch bus width to 4-bit if supported */
1380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSwitchBusWidth(SDMMC_BLOCK_t *const obj)
1381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4497              	 .loc 3 1381 0
 4498              	 .cfi_startproc
 4499              	 
 4500              	 
 4501 0000 80B5     	 push {r7,lr}
 4502              	.LCFI290:
 4503              	 .cfi_def_cfa_offset 8
 4504              	 .cfi_offset 7,-8
 4505              	 .cfi_offset 14,-4
 4506 0002 88B0     	 sub sp,sp,#32
 4507              	.LCFI291:
 4508              	 .cfi_def_cfa_offset 40
 4509 0004 02AF     	 add r7,sp,#8
 4510              	.LCFI292:
 4511              	 .cfi_def_cfa 7,32
 4512 0006 7860     	 str r0,[r7,#4]
1382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 4513              	 .loc 3 1382 0
 4514 0008 0023     	 movs r3,#0
 4515 000a 3B61     	 str r3,[r7,#16]
1383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4516              	 .loc 3 1383 0
 4517 000c 0123     	 movs r3,#1
 4518 000e FB75     	 strb r3,[r7,#23]
1384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 4519              	 .loc 3 1384 0
 4520 0010 0023     	 movs r3,#0
 4521 0012 FB60     	 str r3,[r7,#12]
1385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Switch to transfer state (CMD7) */
1387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 4522              	 .loc 3 1387 0
 4523 0014 7868     	 ldr r0,[r7,#4]
 4524 0016 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 4525 001a 0346     	 mov r3,r0
 4526 001c FB75     	 strb r3,[r7,#23]
1388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4527              	 .loc 3 1389 0
 4528 001e FB7D     	 ldrb r3,[r7,#23]
 4529 0020 002B     	 cmp r3,#0
 4530 0022 44D1     	 bne .L222
1390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Disable card insertion interrupt */
1392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_DisableEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CARD_INS);
 4531              	 .loc 3 1392 0
 4532 0024 7B68     	 ldr r3,[r7,#4]
 4533 0026 1B68     	 ldr r3,[r3]
 4534 0028 1B68     	 ldr r3,[r3]
 4535 002a 1846     	 mov r0,r3
 4536 002c 4021     	 movs r1,#64
 4537 002e FFF7FEFF 	 bl XMC_SDMMC_DisableEvent
1393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check data transfer width supported in SCR register */
1395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((obj->sdmmc_sd->card_info.scr.sd_bus_width & SDMMC_BLOCK_SCR_BUS_WIDTH4_BITMASK))
 4538              	 .loc 3 1395 0
 4539 0032 7B68     	 ldr r3,[r7,#4]
 4540 0034 1B68     	 ldr r3,[r3]
 4541 0036 93F84530 	 ldrb r3,[r3,#69]
 4542 003a C3F30303 	 ubfx r3,r3,#0,#4
 4543 003e DBB2     	 uxtb r3,r3
 4544 0040 03F00403 	 and r3,r3,#4
 4545 0044 002B     	 cmp r3,#0
 4546 0046 28D0     	 beq .L223
1396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set the argument */
1398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       arg |= ((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPOS);
 4547              	 .loc 3 1398 0
 4548 0048 7B68     	 ldr r3,[r7,#4]
 4549 004a 1B68     	 ldr r3,[r3]
 4550 004c B3F84C30 	 ldrh r3,[r3,#76]
 4551 0050 1B04     	 lsls r3,r3,#16
 4552 0052 3A69     	 ldr r2,[r7,#16]
 4553 0054 1343     	 orrs r3,r3,r2
 4554 0056 3B61     	 str r3,[r7,#16]
1399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send application specific command */
1401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 4555              	 .loc 3 1402 0
 4556 0058 1923     	 movs r3,#25
1401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 4557              	 .loc 3 1401 0
 4558 005a 5B00     	 lsls r3,r3,#1
 4559 005c 164A     	 ldr r2,.L225
 4560 005e 1A44     	 add r2,r2,r3
 4561 0060 07F10C03 	 add r3,r7,#12
 4562 0064 0093     	 str r3,[sp]
 4563 0066 7868     	 ldr r0,[r7,#4]
 4564 0068 1146     	 mov r1,r2
 4565 006a 3A69     	 ldr r2,[r7,#16]
 4566 006c 0123     	 movs r3,#1
 4567 006e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4568 0072 0346     	 mov r3,r0
 4569 0074 FB75     	 strb r3,[r7,#23]
1403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            arg,
1404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
1405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4570              	 .loc 3 1407 0
 4571 0076 FB7D     	 ldrb r3,[r7,#23]
 4572 0078 002B     	 cmp r3,#0
 4573 007a 0ED1     	 bne .L223
1408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Send ACMD6 to switch the bus width */
1410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lSendCommand(obj,
1411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              &(SDMMC_BLOCK_SD_COMMAND(58)),
 4574              	 .loc 3 1411 0
 4575 007c 1B23     	 movs r3,#27
1410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              &(SDMMC_BLOCK_SD_COMMAND(58)),
 4576              	 .loc 3 1410 0
 4577 007e 5B00     	 lsls r3,r3,#1
 4578 0080 0D4A     	 ldr r2,.L225
 4579 0082 1A44     	 add r2,r2,r3
 4580 0084 07F10C03 	 add r3,r7,#12
 4581 0088 0093     	 str r3,[sp]
 4582 008a 7868     	 ldr r0,[r7,#4]
 4583 008c 1146     	 mov r1,r2
 4584 008e 0222     	 movs r2,#2
 4585 0090 0123     	 movs r3,#1
 4586 0092 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4587 0096 0346     	 mov r3,r0
 4588 0098 FB75     	 strb r3,[r7,#23]
 4589              	.L223:
1412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              SDMMC_BLOCK_SD_4BUS_WIDTH_ARG,
1413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              XMC_SDMMC_RESPONSE_TYPE_R1,
1414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              &card_status);
1415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4590              	 .loc 3 1418 0
 4591 009a FB7D     	 ldrb r3,[r7,#23]
 4592 009c 002B     	 cmp r3,#0
 4593 009e 06D1     	 bne .L222
1419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set data transfer width */
1421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferWidth(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_LINES_4);
 4594              	 .loc 3 1421 0
 4595 00a0 7B68     	 ldr r3,[r7,#4]
 4596 00a2 1B68     	 ldr r3,[r3]
 4597 00a4 1B68     	 ldr r3,[r3]
 4598 00a6 1846     	 mov r0,r3
 4599 00a8 0221     	 movs r1,#2
 4600 00aa FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferWidth
 4601              	.L222:
1422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4602              	 .loc 3 1425 0
 4603 00ae FB7D     	 ldrb r3,[r7,#23]
1426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4604              	 .loc 3 1426 0
 4605 00b0 1846     	 mov r0,r3
 4606 00b2 1837     	 adds r7,r7,#24
 4607              	.LCFI293:
 4608              	 .cfi_def_cfa_offset 8
 4609 00b4 BD46     	 mov sp,r7
 4610              	.LCFI294:
 4611              	 .cfi_def_cfa_register 13
 4612              	 
 4613 00b6 80BD     	 pop {r7,pc}
 4614              	.L226:
 4615              	 .align 2
 4616              	.L225:
 4617 00b8 00000000 	 .word sdmmc_block_command
 4618              	 .cfi_endproc
 4619              	.LFE254:
 4621              	 .section .text.SDMMC_BLOCK_SD_lSwitchSpeed,"ax",%progbits
 4622              	 .align 2
 4623              	 .thumb
 4624              	 .thumb_func
 4626              	SDMMC_BLOCK_SD_lSwitchSpeed:
 4627              	.LFB255:
1427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Switch the card speed mode to high speed if supported */
1429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSwitchSpeed(SDMMC_BLOCK_t *const obj)
1430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4628              	 .loc 3 1430 0
 4629              	 .cfi_startproc
 4630              	 
 4631              	 
 4632 0000 80B5     	 push {r7,lr}
 4633              	.LCFI295:
 4634              	 .cfi_def_cfa_offset 8
 4635              	 .cfi_offset 7,-8
 4636              	 .cfi_offset 14,-4
 4637 0002 96B0     	 sub sp,sp,#88
 4638              	.LCFI296:
 4639              	 .cfi_def_cfa_offset 96
 4640 0004 02AF     	 add r7,sp,#8
 4641              	.LCFI297:
 4642              	 .cfi_def_cfa 7,88
 4643 0006 7860     	 str r0,[r7,#4]
1431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t switch_status[16] = {0U};
 4644              	 .loc 3 1431 0
 4645 0008 07F10C03 	 add r3,r7,#12
 4646 000c 4022     	 movs r2,#64
 4647 000e 1846     	 mov r0,r3
 4648 0010 0021     	 movs r1,#0
 4649 0012 FFF7FEFF 	 bl memset
1432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4650              	 .loc 3 1432 0
 4651 0016 0123     	 movs r3,#1
 4652 0018 87F84F30 	 strb r3,[r7,#79]
1433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check CMD6 support in SCR register */
1435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->card_info.scr.sd_spec != 0UL)
 4653              	 .loc 3 1435 0
 4654 001c 7B68     	 ldr r3,[r7,#4]
 4655 001e 1B68     	 ldr r3,[r3]
 4656 0020 93F84430 	 ldrb r3,[r3,#68]
 4657 0024 03F00F03 	 and r3,r3,#15
 4658 0028 DBB2     	 uxtb r3,r3
 4659 002a 002B     	 cmp r3,#0
 4660 002c 31D0     	 beq .L228
1436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Switch to transfer state (CMD7) */
1438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 4661              	 .loc 3 1438 0
 4662 002e 7868     	 ldr r0,[r7,#4]
 4663 0030 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 4664 0034 0346     	 mov r3,r0
 4665 0036 87F84F30 	 strb r3,[r7,#79]
1439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4666              	 .loc 3 1440 0
 4667 003a 97F84F30 	 ldrb r3,[r7,#79]
 4668 003e 002B     	 cmp r3,#0
 4669 0040 27D1     	 bne .L228
1441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
1443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * Send the Switch function command and read the transferred block of
1444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * data from the card
1445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
1446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
1447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(6)),
 4670              	 .loc 3 1447 0
 4671 0042 0423     	 movs r3,#4
1446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(6)),
 4672              	 .loc 3 1446 0
 4673 0044 5B00     	 lsls r3,r3,#1
 4674 0046 164A     	 ldr r2,.L231
 4675 0048 1A44     	 add r2,r2,r3
 4676 004a 07F10C03 	 add r3,r7,#12
 4677 004e 0093     	 str r3,[sp]
 4678 0050 0123     	 movs r3,#1
 4679 0052 0193     	 str r3,[sp,#4]
 4680 0054 7868     	 ldr r0,[r7,#4]
 4681 0056 1146     	 mov r1,r2
 4682 0058 124A     	 ldr r2,.L231+4
 4683 005a 4023     	 movs r3,#64
 4684 005c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 4685 0060 0346     	 mov r3,r0
 4686 0062 87F84F30 	 strb r3,[r7,#79]
1448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_HIGH_SPEED_ARG,
1449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    64U,
1450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)switch_status,
1451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
1452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4687              	 .loc 3 1453 0
 4688 0066 97F84F30 	 ldrb r3,[r7,#79]
 4689 006a 002B     	 cmp r3,#0
 4690 006c 07D1     	 bne .L229
1454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (((switch_status[4] & (uint32_t)SDMMC_BLOCK_SWITCH_FUNC_GRP1_STATUS_BITMASK) >>
 4691              	 .loc 3 1455 0
 4692 006e FB69     	 ldr r3,[r7,#28]
 4693 0070 03F00F03 	 and r3,r3,#15
 4694 0074 012B     	 cmp r3,#1
 4695 0076 02D0     	 beq .L229
1456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (uint32_t)SDMMC_BLOCK_SWITCH_FUNC_GRP1_STATUS_BITPOS) != (uint32_t)1U)
1457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4696              	 .loc 3 1458 0
 4697 0078 0123     	 movs r3,#1
 4698 007a 87F84F30 	 strb r3,[r7,#79]
 4699              	.L229:
1459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4700              	 .loc 3 1462 0
 4701 007e 97F84F30 	 ldrb r3,[r7,#79]
 4702 0082 002B     	 cmp r3,#0
 4703 0084 05D1     	 bne .L228
1463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Change speed mode (high speed) in the host controller */
1465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         XMC_SDMMC_EnableHighSpeed(obj->sdmmc_sd->sdmmc);
 4704              	 .loc 3 1465 0
 4705 0086 7B68     	 ldr r3,[r7,#4]
 4706 0088 1B68     	 ldr r3,[r3]
 4707 008a 1B68     	 ldr r3,[r3]
 4708 008c 1846     	 mov r0,r3
 4709 008e FFF7FEFF 	 bl XMC_SDMMC_EnableHighSpeed
 4710              	.L228:
1466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4711              	 .loc 3 1470 0
 4712 0092 97F84F30 	 ldrb r3,[r7,#79]
1471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4713              	 .loc 3 1471 0
 4714 0096 1846     	 mov r0,r3
 4715 0098 5037     	 adds r7,r7,#80
 4716              	.LCFI298:
 4717              	 .cfi_def_cfa_offset 8
 4718 009a BD46     	 mov sp,r7
 4719              	.LCFI299:
 4720              	 .cfi_def_cfa_register 13
 4721              	 
 4722 009c 80BD     	 pop {r7,pc}
 4723              	.L232:
 4724 009e 00BF     	 .align 2
 4725              	.L231:
 4726 00a0 00000000 	 .word sdmmc_block_command
 4727 00a4 01000080 	 .word -2147483647
 4728              	 .cfi_endproc
 4729              	.LFE255:
 4731              	 .section .text.SDMMC_BLOCK_SD_lCommandDelay,"ax",%progbits
 4732              	 .align 2
 4733              	 .thumb
 4734              	 .thumb_func
 4736              	SDMMC_BLOCK_SD_lCommandDelay:
 4737              	.LFB256:
1472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
1474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Provides delay in command execution */
1476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCommandDelay(SDMMC_BLOCK_t *const obj, uint32_t de
1477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4738              	 .loc 3 1477 0
 4739              	 .cfi_startproc
 4740              	 
 4741              	 
 4742 0000 80B5     	 push {r7,lr}
 4743              	.LCFI300:
 4744              	 .cfi_def_cfa_offset 8
 4745              	 .cfi_offset 7,-8
 4746              	 .cfi_offset 14,-4
 4747 0002 84B0     	 sub sp,sp,#16
 4748              	.LCFI301:
 4749              	 .cfi_def_cfa_offset 24
 4750 0004 00AF     	 add r7,sp,#0
 4751              	.LCFI302:
 4752              	 .cfi_def_cfa_register 7
 4753 0006 7860     	 str r0,[r7,#4]
 4754 0008 3960     	 str r1,[r7]
1478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4755              	 .loc 3 1478 0
 4756 000a 0023     	 movs r3,#0
 4757 000c FB73     	 strb r3,[r7,#15]
1479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1U;
 4758              	 .loc 3 1479 0
 4759 000e 7B68     	 ldr r3,[r7,#4]
 4760 0010 1B68     	 ldr r3,[r3]
 4761 0012 0122     	 movs r2,#1
 4762 0014 83F85C20 	 strb r2,[r3,#92]
1480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, delay);
 4763              	 .loc 3 1481 0
 4764 0018 7868     	 ldr r0,[r7,#4]
 4765 001a 3968     	 ldr r1,[r7]
 4766 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 4767 0020 0346     	 mov r3,r0
 4768 0022 FB73     	 strb r3,[r7,#15]
1482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4769              	 .loc 3 1482 0
 4770 0024 FB7B     	 ldrb r3,[r7,#15]
 4771 0026 002B     	 cmp r3,#0
 4772 0028 21D0     	 beq .L234
 4773              	.L236:
1483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
1485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 4774              	 .loc 3 1486 0
 4775 002a 7B68     	 ldr r3,[r7,#4]
 4776 002c 1B68     	 ldr r3,[r3]
 4777 002e 93F85C30 	 ldrb r3,[r3,#92]
 4778 0032 DBB2     	 uxtb r3,r3
 4779 0034 83F00103 	 eor r3,r3,#1
 4780 0038 DBB2     	 uxtb r3,r3
 4781 003a 002B     	 cmp r3,#0
 4782 003c 02D0     	 beq .L235
1487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 4783              	 .loc 3 1488 0
 4784 003e 2E23     	 movs r3,#46
 4785 0040 FB73     	 strb r3,[r7,#15]
1489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 4786              	 .loc 3 1489 0
 4787 0042 14E0     	 b .L234
 4788              	.L235:
1490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while ((!((obj->sdmmc_sd->isr_context.cmd_flag == 1U) ||
 4789              	 .loc 3 1491 0
 4790 0044 7B68     	 ldr r3,[r7,#4]
 4791 0046 1B68     	 ldr r3,[r3]
 4792 0048 9B79     	 ldrb r3,[r3,#6]
1492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
1493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              ((XMC_SDMMC_GetEvent(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CARD_ERR) != 0U)));
 4793              	 .loc 3 1493 0
 4794 004a 012B     	 cmp r3,#1
 4795 004c 0FD0     	 beq .L234
1492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
 4796              	 .loc 3 1492 0
 4797 004e 7B68     	 ldr r3,[r7,#4]
 4798 0050 1B68     	 ldr r3,[r3]
 4799 0052 DB79     	 ldrb r3,[r3,#7]
1491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
 4800              	 .loc 3 1491 0
 4801 0054 012B     	 cmp r3,#1
 4802 0056 0AD0     	 beq .L234
 4803              	 .loc 3 1493 0
 4804 0058 7B68     	 ldr r3,[r7,#4]
 4805 005a 1B68     	 ldr r3,[r3]
 4806 005c 1B68     	 ldr r3,[r3]
 4807 005e 1846     	 mov r0,r3
 4808 0060 4FF40041 	 mov r1,#32768
 4809 0064 FFF7FEFF 	 bl XMC_SDMMC_GetEvent
 4810 0068 0346     	 mov r3,r0
1492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
 4811              	 .loc 3 1492 0
 4812 006a 002B     	 cmp r3,#0
 4813 006c DDD1     	 bne .L236
 4814              	.L234:
1494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Stop timer and delete it */
1497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 4815              	 .loc 3 1497 0
 4816 006e 7868     	 ldr r0,[r7,#4]
 4817 0070 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
1498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 4818              	 .loc 3 1498 0
 4819 0074 7B68     	 ldr r3,[r7,#4]
 4820 0076 1B68     	 ldr r3,[r3]
 4821 0078 5B6D     	 ldr r3,[r3,#84]
 4822 007a 1846     	 mov r0,r3
 4823 007c FFF7FEFF 	 bl SYSTIMER_DeleteTimer
1499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->isr_context.cmd_flag = (uint8_t)0U;
 4824              	 .loc 3 1500 0
 4825 0080 7B68     	 ldr r3,[r7,#4]
 4826 0082 1B68     	 ldr r3,[r3]
 4827 0084 0022     	 movs r2,#0
 4828 0086 9A71     	 strb r2,[r3,#6]
1501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->isr_context.data_flag = (uint8_t)0U;
 4829              	 .loc 3 1501 0
 4830 0088 7B68     	 ldr r3,[r7,#4]
 4831 008a 1B68     	 ldr r3,[r3]
 4832 008c 0022     	 movs r2,#0
 4833 008e DA71     	 strb r2,[r3,#7]
1502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4834              	 .loc 3 1503 0
 4835 0090 FB7B     	 ldrb r3,[r7,#15]
1504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4836              	 .loc 3 1504 0
 4837 0092 1846     	 mov r0,r3
 4838 0094 1037     	 adds r7,r7,#16
 4839              	.LCFI303:
 4840              	 .cfi_def_cfa_offset 8
 4841 0096 BD46     	 mov sp,r7
 4842              	.LCFI304:
 4843              	 .cfi_def_cfa_register 13
 4844              	 
 4845 0098 80BD     	 pop {r7,pc}
 4846              	 .cfi_endproc
 4847              	.LFE256:
 4849 009a 00BF     	 .section .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery,"ax",%progbits
 4850              	 .align 2
 4851              	 .thumb
 4852              	 .thumb_func
 4854              	SDMMC_BLOCK_SD_lErrorInterruptRecovery:
 4855              	.LFB257:
1505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Recovery task for error interrupts */
1507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lErrorInterruptRecovery(SDMMC_BLOCK_t *const obj)
1508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4856              	 .loc 3 1508 0
 4857              	 .cfi_startproc
 4858              	 
 4859              	 
 4860 0000 80B5     	 push {r7,lr}
 4861              	.LCFI305:
 4862              	 .cfi_def_cfa_offset 8
 4863              	 .cfi_offset 7,-8
 4864              	 .cfi_offset 14,-4
 4865 0002 86B0     	 sub sp,sp,#24
 4866              	.LCFI306:
 4867              	 .cfi_def_cfa_offset 32
 4868 0004 00AF     	 add r7,sp,#0
 4869              	.LCFI307:
 4870              	 .cfi_def_cfa_register 7
 4871 0006 7860     	 str r0,[r7,#4]
1509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_COMMAND_t *cmd = (XMC_SDMMC_COMMAND_t *)&(SDMMC_BLOCK_COMMON_COMMAND(12));
 4872              	 .loc 3 1509 0
 4873 0008 0923     	 movs r3,#9
 4874 000a 5B00     	 lsls r3,r3,#1
 4875 000c 614A     	 ldr r2,.L250
 4876 000e 1344     	 add r3,r3,r2
 4877 0010 3B61     	 str r3,[r7,#16]
1510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 4878              	 .loc 3 1510 0
 4879 0012 2523     	 movs r3,#37
 4880 0014 FB75     	 strb r3,[r7,#23]
1511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t normal_events = 0U;
 4881              	 .loc 3 1511 0
 4882 0016 0023     	 movs r3,#0
 4883 0018 FB60     	 str r3,[r7,#12]
1512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t error_events = 0U;
 4884              	 .loc 3 1512 0
 4885 001a 0023     	 movs r3,#0
 4886 001c BB60     	 str r3,[r7,#8]
1513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   error_events = ((uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR)   |
 4887              	 .loc 3 1514 0
 4888 001e 5E4B     	 ldr r3,.L250+4
 4889 0020 BB60     	 str r3,[r7,#8]
1515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_CRC_ERR)       |
1516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_END_BIT_ERR)   |
1517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_IND_ERR)       |
1518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR)  |
1519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_CRC_ERR)      |
1520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_END_BIT_ERR)  |
1521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CURRENT_LIMIT_ERR) |
1522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_TARGET_RESP_ERR);
1523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Disable all error events */
1525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_DisableEvent(obj->sdmmc_sd->sdmmc, error_events);
 4890              	 .loc 3 1525 0
 4891 0022 7B68     	 ldr r3,[r7,#4]
 4892 0024 1B68     	 ldr r3,[r3]
 4893 0026 1B68     	 ldr r3,[r3]
 4894 0028 1846     	 mov r0,r3
 4895 002a B968     	 ldr r1,[r7,#8]
 4896 002c FFF7FEFF 	 bl XMC_SDMMC_DisableEvent
1526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check error interrupt status bits D0-D3 for CMD line errors */
1528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((((uint32_t)obj->sdmmc_sd->isr_context.int_status_shadow &
 4897              	 .loc 3 1528 0
 4898 0030 7B68     	 ldr r3,[r7,#4]
 4899 0032 1B68     	 ldr r3,[r3]
 4900 0034 9B88     	 ldrh r3,[r3,#4]
 4901 0036 03F00F03 	 and r3,r3,#15
 4902 003a 002B     	 cmp r3,#0
 4903 003c 08D1     	 bne .L239
1529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_CMD_STATUS_BITMASK) != (uint32_t)0U) ||
1530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc) == true))
 4904              	 .loc 3 1530 0
 4905 003e 7B68     	 ldr r3,[r7,#4]
 4906 0040 1B68     	 ldr r3,[r3]
 4907 0042 1B68     	 ldr r3,[r3]
 4908 0044 1846     	 mov r0,r3
 4909 0046 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 4910 004a 0346     	 mov r3,r0
1529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_CMD_STATUS_BITMASK) != (uint32_t)0U) ||
 4911              	 .loc 3 1529 0
 4912 004c 002B     	 cmp r3,#0
 4913 004e 05D0     	 beq .L240
 4914              	.L239:
1531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set software reset for CMD line */
1533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_CMD_LINE);
 4915              	 .loc 3 1533 0
 4916 0050 7868     	 ldr r0,[r7,#4]
 4917 0052 0221     	 movs r1,#2
 4918 0054 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 4919 0058 0346     	 mov r3,r0
 4920 005a FB75     	 strb r3,[r7,#23]
 4921              	.L240:
1534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check error interrupt status bits D4-D6 for data line errors */
1537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((((uint32_t)obj->sdmmc_sd->isr_context.int_status_shadow &
 4922              	 .loc 3 1537 0
 4923 005c 7B68     	 ldr r3,[r7,#4]
 4924 005e 1B68     	 ldr r3,[r3]
 4925 0060 9B88     	 ldrh r3,[r3,#4]
 4926 0062 03F07003 	 and r3,r3,#112
 4927 0066 002B     	 cmp r3,#0
 4928 0068 08D1     	 bne .L241
1538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_DATA_STATUS_BITMASK) != (uint32_t)0U) ||
1539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) == true))
 4929              	 .loc 3 1539 0
 4930 006a 7B68     	 ldr r3,[r7,#4]
 4931 006c 1B68     	 ldr r3,[r3]
 4932 006e 1B68     	 ldr r3,[r3]
 4933 0070 1846     	 mov r0,r3
 4934 0072 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 4935 0076 0346     	 mov r3,r0
1538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_DATA_STATUS_BITMASK) != (uint32_t)0U) ||
 4936              	 .loc 3 1538 0
 4937 0078 002B     	 cmp r3,#0
 4938 007a 05D0     	 beq .L242
 4939              	.L241:
1540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set software reset for data line */
1542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE);
 4940              	 .loc 3 1542 0
 4941 007c 7868     	 ldr r0,[r7,#4]
 4942 007e 0421     	 movs r1,#4
 4943 0080 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 4944 0084 0346     	 mov r3,r0
 4945 0086 FB75     	 strb r3,[r7,#23]
 4946              	.L242:
1543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   error_events = ((uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR)   |
 4947              	 .loc 3 1545 0
 4948 0088 444B     	 ldr r3,.L250+8
 4949 008a BB60     	 str r3,[r7,#8]
1546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_CRC_ERR)       |
1547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_END_BIT_ERR)   |
1548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_IND_ERR)       |
1549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR)  |
1550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_CRC_ERR)      |
1551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_END_BIT_ERR)  |
1552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CURRENT_LIMIT_ERR) |
1553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CARD_ERR);
1554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, error_events);
 4950              	 .loc 3 1555 0
 4951 008c 7B68     	 ldr r3,[r7,#4]
 4952 008e 1B68     	 ldr r3,[r3]
 4953 0090 1B68     	 ldr r3,[r3]
 4954 0092 1846     	 mov r0,r3
 4955 0094 B968     	 ldr r1,[r7,#8]
 4956 0096 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->issue_abort == (uint8_t)1U)
 4957              	 .loc 3 1557 0
 4958 009a 7B68     	 ldr r3,[r7,#4]
 4959 009c 1B68     	 ldr r3,[r3]
 4960 009e 93F85130 	 ldrb r3,[r3,#81]
 4961 00a2 012B     	 cmp r3,#1
 4962 00a4 48D1     	 bne .L243
1558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Issue abort command. Set argument register */
1560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)XMC_SDMMC_SendCommand(obj->sdmmc_sd->sdmmc, cmd, SDMMC_BLOCK_ARGUMENT0);
 4963              	 .loc 3 1560 0
 4964 00a6 7B68     	 ldr r3,[r7,#4]
 4965 00a8 1B68     	 ldr r3,[r3]
 4966 00aa 1B68     	 ldr r3,[r3]
 4967 00ac 1846     	 mov r0,r3
 4968 00ae 3969     	 ldr r1,[r7,#16]
 4969 00b0 0022     	 movs r2,#0
 4970 00b2 FFF7FEFF 	 bl XMC_SDMMC_SendCommand
1561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Wait for any interrupt status bit to be set */
1563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Timeout of 5ms */
1565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCommandDelay(obj, (uint32_t)SDMMC_BLOCK_DELAY_IN_COMMAND);
 4971              	 .loc 3 1565 0
 4972 00b6 7868     	 ldr r0,[r7,#4]
 4973 00b8 3949     	 ldr r1,.L250+12
 4974 00ba FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCommandDelay
 4975 00be 0346     	 mov r3,r0
 4976 00c0 FB75     	 strb r3,[r7,#23]
1566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((SDMMC_BLOCK_MODE_STATUS_t)status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4977              	 .loc 3 1566 0
 4978 00c2 FB7D     	 ldrb r3,[r7,#23]
 4979 00c4 002B     	 cmp r3,#0
 4980 00c6 1CD1     	 bne .L244
1567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* If error status bit is set in the status register */
1569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsAnyErrorEvent(obj->sdmmc_sd->sdmmc) == true)
 4981              	 .loc 3 1569 0
 4982 00c8 7B68     	 ldr r3,[r7,#4]
 4983 00ca 1B68     	 ldr r3,[r3]
 4984 00cc 1B68     	 ldr r3,[r3]
 4985 00ce 1846     	 mov r0,r3
 4986 00d0 FFF7FEFF 	 bl XMC_SDMMC_IsAnyErrorEvent
 4987 00d4 0346     	 mov r3,r0
 4988 00d6 002B     	 cmp r3,#0
 4989 00d8 13D0     	 beq .L244
1570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 4990              	 .loc 3 1571 0
 4991 00da 2523     	 movs r3,#37
 4992 00dc FB75     	 strb r3,[r7,#23]
1572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, normal_events);
 4993              	 .loc 3 1573 0
 4994 00de 7B68     	 ldr r3,[r7,#4]
 4995 00e0 1B68     	 ldr r3,[r3]
 4996 00e2 1B68     	 ldr r3,[r3]
 4997 00e4 1846     	 mov r0,r3
 4998 00e6 F968     	 ldr r1,[r7,#12]
 4999 00e8 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, error_events);
 5000              	 .loc 3 1574 0
 5001 00ec 7B68     	 ldr r3,[r7,#4]
 5002 00ee 1B68     	 ldr r3,[r3]
 5003 00f0 1B68     	 ldr r3,[r3]
 5004 00f2 1846     	 mov r0,r3
 5005 00f4 B968     	 ldr r1,[r7,#8]
 5006 00f6 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Set software reset for CMD line and data line */
1577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (void)SDMMC_BLOCK_SD_lReset(obj, (uint32_t)((uint32_t)XMC_SDMMC_SW_RST_CMD_LINE |
 5007              	 .loc 3 1577 0
 5008 00fa 7868     	 ldr r0,[r7,#4]
 5009 00fc 0621     	 movs r1,#6
 5010 00fe FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5011              	.L244:
1578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                     (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE));
1579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check Data lines status in present status register */
1583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (XMC_SDMMC_IsAnyErrorEvent(obj->sdmmc_sd->sdmmc) == false)
 5012              	 .loc 3 1583 0
 5013 0102 7B68     	 ldr r3,[r7,#4]
 5014 0104 1B68     	 ldr r3,[r3]
 5015 0106 1B68     	 ldr r3,[r3]
 5016 0108 1846     	 mov r0,r3
 5017 010a FFF7FEFF 	 bl XMC_SDMMC_IsAnyErrorEvent
 5018 010e 0346     	 mov r3,r0
 5019 0110 83F00103 	 eor r3,r3,#1
 5020 0114 DBB2     	 uxtb r3,r3
 5021 0116 002B     	 cmp r3,#0
 5022 0118 28D0     	 beq .L247
1584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsAllDataLinesHigh(obj->sdmmc_sd->sdmmc) == true)
 5023              	 .loc 3 1585 0
 5024 011a 7B68     	 ldr r3,[r7,#4]
 5025 011c 1B68     	 ldr r3,[r3]
 5026 011e 1B68     	 ldr r3,[r3]
 5027 0120 1846     	 mov r0,r3
 5028 0122 FFF7FEFF 	 bl XMC_SDMMC_IsAllDataLinesHigh
 5029 0126 0346     	 mov r3,r0
 5030 0128 002B     	 cmp r3,#0
 5031 012a 02D0     	 beq .L246
1586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_RECOVERABLE_ERROR;
 5032              	 .loc 3 1587 0
 5033 012c 2423     	 movs r3,#36
 5034 012e FB75     	 strb r3,[r7,#23]
 5035 0130 1CE0     	 b .L247
 5036              	.L246:
1588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
1590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 5037              	 .loc 3 1591 0
 5038 0132 2523     	 movs r3,#37
 5039 0134 FB75     	 strb r3,[r7,#23]
 5040 0136 19E0     	 b .L247
 5041              	.L243:
1592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (XMC_SDMMC_IsAnyErrorEvent(obj->sdmmc_sd->sdmmc) == false)
 5042              	 .loc 3 1597 0
 5043 0138 7B68     	 ldr r3,[r7,#4]
 5044 013a 1B68     	 ldr r3,[r3]
 5045 013c 1B68     	 ldr r3,[r3]
 5046 013e 1846     	 mov r0,r3
 5047 0140 FFF7FEFF 	 bl XMC_SDMMC_IsAnyErrorEvent
 5048 0144 0346     	 mov r3,r0
 5049 0146 83F00103 	 eor r3,r3,#1
 5050 014a DBB2     	 uxtb r3,r3
 5051 014c 002B     	 cmp r3,#0
 5052 014e 0DD0     	 beq .L247
1598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsAllDataLinesHigh(obj->sdmmc_sd->sdmmc) == true)
 5053              	 .loc 3 1599 0
 5054 0150 7B68     	 ldr r3,[r7,#4]
 5055 0152 1B68     	 ldr r3,[r3]
 5056 0154 1B68     	 ldr r3,[r3]
 5057 0156 1846     	 mov r0,r3
 5058 0158 FFF7FEFF 	 bl XMC_SDMMC_IsAllDataLinesHigh
 5059 015c 0346     	 mov r3,r0
 5060 015e 002B     	 cmp r3,#0
 5061 0160 02D0     	 beq .L248
1600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_RECOVERABLE_ERROR;
 5062              	 .loc 3 1601 0
 5063 0162 2423     	 movs r3,#36
 5064 0164 FB75     	 strb r3,[r7,#23]
 5065 0166 01E0     	 b .L247
 5066              	.L248:
1602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
1604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 5067              	 .loc 3 1605 0
 5068 0168 2523     	 movs r3,#37
 5069 016a FB75     	 strb r3,[r7,#23]
 5070              	.L247:
1606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable the error interrupt signal */
1611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   error_events |= (uint32_t)XMC_SDMMC_TARGET_RESP_ERR;
 5071              	 .loc 3 1611 0
 5072 016c BB68     	 ldr r3,[r7,#8]
 5073 016e 43F08053 	 orr r3,r3,#268435456
 5074 0172 BB60     	 str r3,[r7,#8]
1612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_EnableEvent(obj->sdmmc_sd->sdmmc, error_events);
 5075              	 .loc 3 1612 0
 5076 0174 7B68     	 ldr r3,[r7,#4]
 5077 0176 1B68     	 ldr r3,[r3]
 5078 0178 1B68     	 ldr r3,[r3]
 5079 017a 1846     	 mov r0,r3
 5080 017c B968     	 ldr r1,[r7,#8]
 5081 017e FFF7FEFF 	 bl XMC_SDMMC_EnableEvent
1613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Global error recovery variable */
1615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->err_recovery_stat = status;
 5082              	 .loc 3 1615 0
 5083 0182 7B68     	 ldr r3,[r7,#4]
 5084 0184 1B68     	 ldr r3,[r3]
 5085 0186 FA7D     	 ldrb r2,[r7,#23]
 5086 0188 1A77     	 strb r2,[r3,#28]
1616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5087              	 .loc 3 1617 0
 5088 018a FB7D     	 ldrb r3,[r7,#23]
1618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5089              	 .loc 3 1618 0
 5090 018c 1846     	 mov r0,r3
 5091 018e 1837     	 adds r7,r7,#24
 5092              	.LCFI308:
 5093              	 .cfi_def_cfa_offset 8
 5094 0190 BD46     	 mov sp,r7
 5095              	.LCFI309:
 5096              	 .cfi_def_cfa_register 13
 5097              	 
 5098 0192 80BD     	 pop {r7,pc}
 5099              	.L251:
 5100              	 .align 2
 5101              	.L250:
 5102 0194 00000000 	 .word sdmmc_block_command
 5103 0198 0000FF10 	 .word 285147136
 5104 019c 0080FF00 	 .word 16744448
 5105 01a0 40420F00 	 .word 1000000
 5106              	 .cfi_endproc
 5107              	.LFE257:
 5109              	 .section .text.SDMMC_BLOCK_SD_NormalInterruptHandler,"ax",%progbits
 5110              	 .align 2
 5111              	 .global SDMMC_BLOCK_SD_NormalInterruptHandler
 5112              	 .thumb
 5113              	 .thumb_func
 5115              	SDMMC_BLOCK_SD_NormalInterruptHandler:
 5116              	.LFB258:
1619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Handles interrupts in normal interrupt status register */
1621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_NormalInterruptHandler(SDMMC_BLOCK_t *const obj, uint16_t 
1622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5117              	 .loc 3 1622 0
 5118              	 .cfi_startproc
 5119              	 
 5120              	 
 5121 0000 80B5     	 push {r7,lr}
 5122              	.LCFI310:
 5123              	 .cfi_def_cfa_offset 8
 5124              	 .cfi_offset 7,-8
 5125              	 .cfi_offset 14,-4
 5126 0002 84B0     	 sub sp,sp,#16
 5127              	.LCFI311:
 5128              	 .cfi_def_cfa_offset 24
 5129 0004 00AF     	 add r7,sp,#0
 5130              	.LCFI312:
 5131              	 .cfi_def_cfa_register 7
 5132 0006 7860     	 str r0,[r7,#4]
 5133 0008 0B46     	 mov r3,r1
 5134 000a 7B80     	 strh r3,[r7,#2]
1623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5135              	 .loc 3 1623 0
 5136 000c 0023     	 movs r3,#0
 5137 000e FB73     	 strb r3,[r7,#15]
1624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_CARD_DETECTION_SUPPORT
1626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   bool pstate;
1627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Card removal interrupt */
1629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((int_status & (uint32_t)XMC_SDMMC_CARD_REMOVAL) != 0U)
1630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->card_detect_state |= ((uint32_t)1U << SDMMC_BLOCK_SD_INTERRUPT_CARD_REMOVAL);
1632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Clear the interrupt status bit */
1633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CARD_REMOVAL);
1634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Card insertion interrupt */
1637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((int_status & (uint32_t)XMC_SDMMC_CARD_INS) != 0U)
1638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->card_detect_state |= ((uint32_t)1U << SDMMC_BLOCK_SD_INTERRUPT_CARD_INSERTION);
1640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Clear the interrupt status bit */
1641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CARD_INS);
1642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Invoke a callback function if a user has registered one */
1645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((obj->sdmmc_sd->callback != NULL) && (obj->sdmmc_sd->card_detect_state != 0U))
1646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->card_detect_state = 0U;
1648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     pstate = (bool)(SDMMC_BLOCK_0.sdmmc_sd->sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_CARD_INSERTE
1649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->callback((SDMMC_BLOCK_SD_INTERRUPT_t)pstate);
1650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_NULL_POINTER;
1654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
1656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Buffer read ready interrupt */
1658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_BUFFER_READ_READY) != (uint32_t)0)
 5138              	 .loc 3 1658 0
 5139 0010 7B88     	 ldrh r3,[r7,#2]
 5140 0012 03F02003 	 and r3,r3,#32
 5141 0016 002B     	 cmp r3,#0
 5142 0018 0ED0     	 beq .L253
1659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_BUFFER_READY;
 5143              	 .loc 3 1660 0
 5144 001a 7B68     	 ldr r3,[r7,#4]
 5145 001c 1B68     	 ldr r3,[r3]
 5146 001e 1E22     	 movs r2,#30
 5147 0020 1A76     	 strb r2,[r3,#24]
1661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_BUFFER_READ_READY);
 5148              	 .loc 3 1661 0
 5149 0022 7B68     	 ldr r3,[r7,#4]
 5150 0024 1B68     	 ldr r3,[r3]
 5151 0026 1B68     	 ldr r3,[r3]
 5152 0028 1846     	 mov r0,r3
 5153 002a 2021     	 movs r1,#32
 5154 002c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = (uint8_t)1U;
 5155              	 .loc 3 1662 0
 5156 0030 7B68     	 ldr r3,[r7,#4]
 5157 0032 1B68     	 ldr r3,[r3]
 5158 0034 0122     	 movs r2,#1
 5159 0036 DA71     	 strb r2,[r3,#7]
 5160              	.L253:
1663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Buffer write ready interrupt */
1666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_BUFFER_WRITE_READY) != (uint32_t)0)
 5161              	 .loc 3 1666 0
 5162 0038 7B88     	 ldrh r3,[r7,#2]
 5163 003a 03F01003 	 and r3,r3,#16
 5164 003e 002B     	 cmp r3,#0
 5165 0040 0ED0     	 beq .L254
1667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_BUFFER_READY;
 5166              	 .loc 3 1668 0
 5167 0042 7B68     	 ldr r3,[r7,#4]
 5168 0044 1B68     	 ldr r3,[r3]
 5169 0046 1E22     	 movs r2,#30
 5170 0048 1A76     	 strb r2,[r3,#24]
1669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_BUFFER_WRITE_READY);
 5171              	 .loc 3 1669 0
 5172 004a 7B68     	 ldr r3,[r7,#4]
 5173 004c 1B68     	 ldr r3,[r3]
 5174 004e 1B68     	 ldr r3,[r3]
 5175 0050 1846     	 mov r0,r3
 5176 0052 1021     	 movs r1,#16
 5177 0054 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = (uint8_t)1U;
 5178              	 .loc 3 1670 0
 5179 0058 7B68     	 ldr r3,[r7,#4]
 5180 005a 1B68     	 ldr r3,[r3]
 5181 005c 0122     	 movs r2,#1
 5182 005e DA71     	 strb r2,[r3,#7]
 5183              	.L254:
1671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Transfer complete interrupt */
1674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_TX_COMPLETE) != (uint32_t)0)
 5184              	 .loc 3 1674 0
 5185 0060 7B88     	 ldrh r3,[r7,#2]
 5186 0062 03F00203 	 and r3,r3,#2
 5187 0066 002B     	 cmp r3,#0
 5188 0068 15D0     	 beq .L255
1675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_TRANSFER_COMPLETE;
 5189              	 .loc 3 1676 0
 5190 006a 7B68     	 ldr r3,[r7,#4]
 5191 006c 1B68     	 ldr r3,[r3]
 5192 006e 1F22     	 movs r2,#31
 5193 0070 9A76     	 strb r2,[r3,#26]
1677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_TX_COMPLETE);
 5194              	 .loc 3 1677 0
 5195 0072 7B68     	 ldr r3,[r7,#4]
 5196 0074 1B68     	 ldr r3,[r3]
 5197 0076 1B68     	 ldr r3,[r3]
 5198 0078 1846     	 mov r0,r3
 5199 007a 0221     	 movs r1,#2
 5200 007c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5201              	 .loc 3 1678 0
 5202 0080 7B68     	 ldr r3,[r7,#4]
 5203 0082 1B7A     	 ldrb r3,[r3,#8]
 5204 0084 23F02003 	 bic r3,r3,#32
 5205 0088 DAB2     	 uxtb r2,r3
 5206 008a 7B68     	 ldr r3,[r7,#4]
 5207 008c 1A72     	 strb r2,[r3,#8]
1679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.transfer_flag = (uint8_t)1U;
 5208              	 .loc 3 1679 0
 5209 008e 7B68     	 ldr r3,[r7,#4]
 5210 0090 1B68     	 ldr r3,[r3]
 5211 0092 0122     	 movs r2,#1
 5212 0094 1A72     	 strb r2,[r3,#8]
 5213              	.L255:
1680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command complete interrupt */
1683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_CMD_COMPLETE) != (uint32_t)0)
 5214              	 .loc 3 1683 0
 5215 0096 7B88     	 ldrh r3,[r7,#2]
 5216 0098 03F00103 	 and r3,r3,#1
 5217 009c 002B     	 cmp r3,#0
 5218 009e 15D0     	 beq .L256
1684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_COMPLETE;
 5219              	 .loc 3 1685 0
 5220 00a0 7B68     	 ldr r3,[r7,#4]
 5221 00a2 1B68     	 ldr r3,[r3]
 5222 00a4 1C22     	 movs r2,#28
 5223 00a6 5A76     	 strb r2,[r3,#25]
1686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_COMPLETE);
 5224              	 .loc 3 1686 0
 5225 00a8 7B68     	 ldr r3,[r7,#4]
 5226 00aa 1B68     	 ldr r3,[r3]
 5227 00ac 1B68     	 ldr r3,[r3]
 5228 00ae 1846     	 mov r0,r3
 5229 00b0 0121     	 movs r1,#1
 5230 00b2 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5231              	 .loc 3 1687 0
 5232 00b6 7B68     	 ldr r3,[r7,#4]
 5233 00b8 1B7A     	 ldrb r3,[r3,#8]
 5234 00ba 23F01003 	 bic r3,r3,#16
 5235 00be DAB2     	 uxtb r2,r3
 5236 00c0 7B68     	 ldr r3,[r7,#4]
 5237 00c2 1A72     	 strb r2,[r3,#8]
1688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = (uint8_t)1;
 5238              	 .loc 3 1688 0
 5239 00c4 7B68     	 ldr r3,[r7,#4]
 5240 00c6 1B68     	 ldr r3,[r3]
 5241 00c8 0122     	 movs r2,#1
 5242 00ca 9A71     	 strb r2,[r3,#6]
 5243              	.L256:
1689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5244              	 .loc 3 1691 0
 5245 00cc FB7B     	 ldrb r3,[r7,#15]
1692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5246              	 .loc 3 1692 0
 5247 00ce 1846     	 mov r0,r3
 5248 00d0 1037     	 adds r7,r7,#16
 5249              	.LCFI313:
 5250              	 .cfi_def_cfa_offset 8
 5251 00d2 BD46     	 mov sp,r7
 5252              	.LCFI314:
 5253              	 .cfi_def_cfa_register 13
 5254              	 
 5255 00d4 80BD     	 pop {r7,pc}
 5256              	 .cfi_endproc
 5257              	.LFE258:
 5259 00d6 00BF     	 .section .text.SDMMC_BLOCK_SD_ErrorInterruptHandler,"ax",%progbits
 5260              	 .align 2
 5261              	 .global SDMMC_BLOCK_SD_ErrorInterruptHandler
 5262              	 .thumb
 5263              	 .thumb_func
 5265              	SDMMC_BLOCK_SD_ErrorInterruptHandler:
 5266              	.LFB259:
1693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Handles interrupt in error interrupt status register */
1695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_ErrorInterruptHandler(SDMMC_BLOCK_t *const obj,
1696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                uint16_t int_status)
1697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5267              	 .loc 3 1697 0
 5268              	 .cfi_startproc
 5269              	 
 5270              	 
 5271 0000 80B5     	 push {r7,lr}
 5272              	.LCFI315:
 5273              	 .cfi_def_cfa_offset 8
 5274              	 .cfi_offset 7,-8
 5275              	 .cfi_offset 14,-4
 5276 0002 84B0     	 sub sp,sp,#16
 5277              	.LCFI316:
 5278              	 .cfi_def_cfa_offset 24
 5279 0004 00AF     	 add r7,sp,#0
 5280              	.LCFI317:
 5281              	 .cfi_def_cfa_register 7
 5282 0006 7860     	 str r0,[r7,#4]
 5283 0008 0B46     	 mov r3,r1
 5284 000a 7B80     	 strh r3,[r7,#2]
1698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 5285              	 .loc 3 1698 0
 5286 000c 0123     	 movs r3,#1
 5287 000e FB73     	 strb r3,[r7,#15]
1699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->isr_context.int_status_shadow = int_status;
 5288              	 .loc 3 1699 0
 5289 0010 7B68     	 ldr r3,[r7,#4]
 5290 0012 1B68     	 ldr r3,[r3]
 5291 0014 7A88     	 ldrh r2,[r7,#2]
 5292 0016 9A80     	 strh r2,[r3,#4]
1700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command timeout error interrupt */
1702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR >> 16U)) != (uint32_t)0)
 5293              	 .loc 3 1702 0
 5294 0018 7B88     	 ldrh r3,[r7,#2]
 5295 001a 03F00103 	 and r3,r3,#1
 5296 001e 002B     	 cmp r3,#0
 5297 0020 16D0     	 beq .L259
1703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 5298              	 .loc 3 1704 0
 5299 0022 7B68     	 ldr r3,[r7,#4]
 5300 0024 1B68     	 ldr r3,[r3]
 5301 0026 0222     	 movs r2,#2
 5302 0028 5A76     	 strb r2,[r3,#25]
1705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5303              	 .loc 3 1705 0
 5304 002a 7B68     	 ldr r3,[r7,#4]
 5305 002c 1B7A     	 ldrb r3,[r3,#8]
 5306 002e 23F01003 	 bic r3,r3,#16
 5307 0032 DAB2     	 uxtb r2,r3
 5308 0034 7B68     	 ldr r3,[r7,#4]
 5309 0036 1A72     	 strb r2,[r3,#8]
1706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR);
 5310              	 .loc 3 1706 0
 5311 0038 7B68     	 ldr r3,[r7,#4]
 5312 003a 1B68     	 ldr r3,[r3]
 5313 003c 1B68     	 ldr r3,[r3]
 5314 003e 1846     	 mov r0,r3
 5315 0040 4FF48031 	 mov r1,#65536
 5316 0044 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5317              	 .loc 3 1707 0
 5318 0048 7B68     	 ldr r3,[r7,#4]
 5319 004a 1B68     	 ldr r3,[r3]
 5320 004c 0122     	 movs r2,#1
 5321 004e 9A71     	 strb r2,[r3,#6]
 5322              	.L259:
1708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command CRC error interrupt */
1711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_CRC_ERR >> 16U)) != (uint32_t)0)
 5323              	 .loc 3 1711 0
 5324 0050 7B88     	 ldrh r3,[r7,#2]
 5325 0052 03F00203 	 and r3,r3,#2
 5326 0056 002B     	 cmp r3,#0
 5327 0058 16D0     	 beq .L260
1712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_CRC_ERROR;
 5328              	 .loc 3 1713 0
 5329 005a 7B68     	 ldr r3,[r7,#4]
 5330 005c 1B68     	 ldr r3,[r3]
 5331 005e 0322     	 movs r2,#3
 5332 0060 5A76     	 strb r2,[r3,#25]
1714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5333              	 .loc 3 1714 0
 5334 0062 7B68     	 ldr r3,[r7,#4]
 5335 0064 1B7A     	 ldrb r3,[r3,#8]
 5336 0066 23F01003 	 bic r3,r3,#16
 5337 006a DAB2     	 uxtb r2,r3
 5338 006c 7B68     	 ldr r3,[r7,#4]
 5339 006e 1A72     	 strb r2,[r3,#8]
1715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_CRC_ERR);
 5340              	 .loc 3 1715 0
 5341 0070 7B68     	 ldr r3,[r7,#4]
 5342 0072 1B68     	 ldr r3,[r3]
 5343 0074 1B68     	 ldr r3,[r3]
 5344 0076 1846     	 mov r0,r3
 5345 0078 4FF40031 	 mov r1,#131072
 5346 007c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5347              	 .loc 3 1716 0
 5348 0080 7B68     	 ldr r3,[r7,#4]
 5349 0082 1B68     	 ldr r3,[r3]
 5350 0084 0122     	 movs r2,#1
 5351 0086 9A71     	 strb r2,[r3,#6]
 5352              	.L260:
1717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command end bit error interrupt */
1720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_END_BIT_ERR >> 16U)) != (uint32_t)0)
 5353              	 .loc 3 1720 0
 5354 0088 7B88     	 ldrh r3,[r7,#2]
 5355 008a 03F00403 	 and r3,r3,#4
 5356 008e 002B     	 cmp r3,#0
 5357 0090 16D0     	 beq .L261
1721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_ENDBIT_ERROR;
 5358              	 .loc 3 1722 0
 5359 0092 7B68     	 ldr r3,[r7,#4]
 5360 0094 1B68     	 ldr r3,[r3]
 5361 0096 0422     	 movs r2,#4
 5362 0098 5A76     	 strb r2,[r3,#25]
1723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5363              	 .loc 3 1723 0
 5364 009a 7B68     	 ldr r3,[r7,#4]
 5365 009c 1B7A     	 ldrb r3,[r3,#8]
 5366 009e 23F01003 	 bic r3,r3,#16
 5367 00a2 DAB2     	 uxtb r2,r3
 5368 00a4 7B68     	 ldr r3,[r7,#4]
 5369 00a6 1A72     	 strb r2,[r3,#8]
1724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_END_BIT_ERR);
 5370              	 .loc 3 1724 0
 5371 00a8 7B68     	 ldr r3,[r7,#4]
 5372 00aa 1B68     	 ldr r3,[r3]
 5373 00ac 1B68     	 ldr r3,[r3]
 5374 00ae 1846     	 mov r0,r3
 5375 00b0 4FF48021 	 mov r1,#262144
 5376 00b4 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5377              	 .loc 3 1725 0
 5378 00b8 7B68     	 ldr r3,[r7,#4]
 5379 00ba 1B68     	 ldr r3,[r3]
 5380 00bc 0122     	 movs r2,#1
 5381 00be 9A71     	 strb r2,[r3,#6]
 5382              	.L261:
1726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command index error interrupt */
1729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_IND_ERR >> 16U)) != (uint32_t)0)
 5383              	 .loc 3 1729 0
 5384 00c0 7B88     	 ldrh r3,[r7,#2]
 5385 00c2 03F00803 	 and r3,r3,#8
 5386 00c6 002B     	 cmp r3,#0
 5387 00c8 16D0     	 beq .L262
1730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_INDEX_ERROR;
 5388              	 .loc 3 1731 0
 5389 00ca 7B68     	 ldr r3,[r7,#4]
 5390 00cc 1B68     	 ldr r3,[r3]
 5391 00ce 0522     	 movs r2,#5
 5392 00d0 5A76     	 strb r2,[r3,#25]
1732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5393              	 .loc 3 1732 0
 5394 00d2 7B68     	 ldr r3,[r7,#4]
 5395 00d4 1B7A     	 ldrb r3,[r3,#8]
 5396 00d6 23F01003 	 bic r3,r3,#16
 5397 00da DAB2     	 uxtb r2,r3
 5398 00dc 7B68     	 ldr r3,[r7,#4]
 5399 00de 1A72     	 strb r2,[r3,#8]
1733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_IND_ERR);
 5400              	 .loc 3 1733 0
 5401 00e0 7B68     	 ldr r3,[r7,#4]
 5402 00e2 1B68     	 ldr r3,[r3]
 5403 00e4 1B68     	 ldr r3,[r3]
 5404 00e6 1846     	 mov r0,r3
 5405 00e8 4FF40021 	 mov r1,#524288
 5406 00ec FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5407              	 .loc 3 1734 0
 5408 00f0 7B68     	 ldr r3,[r7,#4]
 5409 00f2 1B68     	 ldr r3,[r3]
 5410 00f4 0122     	 movs r2,#1
 5411 00f6 9A71     	 strb r2,[r3,#6]
 5412              	.L262:
1735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data timeout error interrupt */
1738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR >> 16U)) != (uint32_t)0)
 5413              	 .loc 3 1738 0
 5414 00f8 7B88     	 ldrh r3,[r7,#2]
 5415 00fa 03F01003 	 and r3,r3,#16
 5416 00fe 002B     	 cmp r3,#0
 5417 0100 16D0     	 beq .L263
1739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_DATA_TIMEOUT_ERROR;
 5418              	 .loc 3 1740 0
 5419 0102 7B68     	 ldr r3,[r7,#4]
 5420 0104 1B68     	 ldr r3,[r3]
 5421 0106 0622     	 movs r2,#6
 5422 0108 1A76     	 strb r2,[r3,#24]
1741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5423              	 .loc 3 1741 0
 5424 010a 7B68     	 ldr r3,[r7,#4]
 5425 010c 1B7A     	 ldrb r3,[r3,#8]
 5426 010e 23F02003 	 bic r3,r3,#32
 5427 0112 DAB2     	 uxtb r2,r3
 5428 0114 7B68     	 ldr r3,[r7,#4]
 5429 0116 1A72     	 strb r2,[r3,#8]
1742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR);
 5430              	 .loc 3 1742 0
 5431 0118 7B68     	 ldr r3,[r7,#4]
 5432 011a 1B68     	 ldr r3,[r3]
 5433 011c 1B68     	 ldr r3,[r3]
 5434 011e 1846     	 mov r0,r3
 5435 0120 4FF48011 	 mov r1,#1048576
 5436 0124 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = 1U;
 5437              	 .loc 3 1743 0
 5438 0128 7B68     	 ldr r3,[r7,#4]
 5439 012a 1B68     	 ldr r3,[r3]
 5440 012c 0122     	 movs r2,#1
 5441 012e DA71     	 strb r2,[r3,#7]
 5442              	.L263:
1744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data CRC error interrupt */
1747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_DATA_CRC_ERR >> 16U)) != (uint32_t)0)
 5443              	 .loc 3 1747 0
 5444 0130 7B88     	 ldrh r3,[r7,#2]
 5445 0132 03F02003 	 and r3,r3,#32
 5446 0136 002B     	 cmp r3,#0
 5447 0138 16D0     	 beq .L264
1748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_DATA_CRC_ERROR;
 5448              	 .loc 3 1749 0
 5449 013a 7B68     	 ldr r3,[r7,#4]
 5450 013c 1B68     	 ldr r3,[r3]
 5451 013e 0722     	 movs r2,#7
 5452 0140 1A76     	 strb r2,[r3,#24]
1750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5453              	 .loc 3 1750 0
 5454 0142 7B68     	 ldr r3,[r7,#4]
 5455 0144 1B7A     	 ldrb r3,[r3,#8]
 5456 0146 23F02003 	 bic r3,r3,#32
 5457 014a DAB2     	 uxtb r2,r3
 5458 014c 7B68     	 ldr r3,[r7,#4]
 5459 014e 1A72     	 strb r2,[r3,#8]
1751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_DATA_CRC_ERR);
 5460              	 .loc 3 1751 0
 5461 0150 7B68     	 ldr r3,[r7,#4]
 5462 0152 1B68     	 ldr r3,[r3]
 5463 0154 1B68     	 ldr r3,[r3]
 5464 0156 1846     	 mov r0,r3
 5465 0158 4FF40011 	 mov r1,#2097152
 5466 015c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = 1U;
 5467              	 .loc 3 1752 0
 5468 0160 7B68     	 ldr r3,[r7,#4]
 5469 0162 1B68     	 ldr r3,[r3]
 5470 0164 0122     	 movs r2,#1
 5471 0166 DA71     	 strb r2,[r3,#7]
 5472              	.L264:
1753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data end bit error interrupt */
1756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_DATA_END_BIT_ERR >> 16U)) != (uint32_t)0)
 5473              	 .loc 3 1756 0
 5474 0168 7B88     	 ldrh r3,[r7,#2]
 5475 016a 03F04003 	 and r3,r3,#64
 5476 016e 002B     	 cmp r3,#0
 5477 0170 16D0     	 beq .L265
1757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_DATA_ENDBIT_ERROR;
 5478              	 .loc 3 1758 0
 5479 0172 7B68     	 ldr r3,[r7,#4]
 5480 0174 1B68     	 ldr r3,[r3]
 5481 0176 0822     	 movs r2,#8
 5482 0178 1A76     	 strb r2,[r3,#24]
1759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5483              	 .loc 3 1759 0
 5484 017a 7B68     	 ldr r3,[r7,#4]
 5485 017c 1B7A     	 ldrb r3,[r3,#8]
 5486 017e 23F02003 	 bic r3,r3,#32
 5487 0182 DAB2     	 uxtb r2,r3
 5488 0184 7B68     	 ldr r3,[r7,#4]
 5489 0186 1A72     	 strb r2,[r3,#8]
1760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_DATA_END_BIT_ERR);
 5490              	 .loc 3 1760 0
 5491 0188 7B68     	 ldr r3,[r7,#4]
 5492 018a 1B68     	 ldr r3,[r3]
 5493 018c 1B68     	 ldr r3,[r3]
 5494 018e 1846     	 mov r0,r3
 5495 0190 4FF48001 	 mov r1,#4194304
 5496 0194 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = 1U;
 5497              	 .loc 3 1761 0
 5498 0198 7B68     	 ldr r3,[r7,#4]
 5499 019a 1B68     	 ldr r3,[r3]
 5500 019c 0122     	 movs r2,#1
 5501 019e DA71     	 strb r2,[r3,#7]
 5502              	.L265:
1762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* ACMD12 error interrupt */
1765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_ACMD_ERR >> 16U)) != (uint32_t)0)
 5503              	 .loc 3 1765 0
 5504 01a0 7B88     	 ldrh r3,[r7,#2]
 5505 01a2 03F48073 	 and r3,r3,#256
 5506 01a6 002B     	 cmp r3,#0
 5507 01a8 1DD0     	 beq .L266
1766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->acmd_int_err = SDMMC_BLOCK_MODE_STATUS_ACMD12_ERROR;
 5508              	 .loc 3 1767 0
 5509 01aa 7B68     	 ldr r3,[r7,#4]
 5510 01ac 1B68     	 ldr r3,[r3]
 5511 01ae 0922     	 movs r2,#9
 5512 01b0 DA76     	 strb r2,[r3,#27]
1768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5513              	 .loc 3 1768 0
 5514 01b2 7B68     	 ldr r3,[r7,#4]
 5515 01b4 1B7A     	 ldrb r3,[r3,#8]
 5516 01b6 23F01003 	 bic r3,r3,#16
 5517 01ba DAB2     	 uxtb r2,r3
 5518 01bc 7B68     	 ldr r3,[r7,#4]
 5519 01be 1A72     	 strb r2,[r3,#8]
1769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5520              	 .loc 3 1769 0
 5521 01c0 7B68     	 ldr r3,[r7,#4]
 5522 01c2 1B7A     	 ldrb r3,[r3,#8]
 5523 01c4 23F02003 	 bic r3,r3,#32
 5524 01c8 DAB2     	 uxtb r2,r3
 5525 01ca 7B68     	 ldr r3,[r7,#4]
 5526 01cc 1A72     	 strb r2,[r3,#8]
1770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_ACMD_ERR);
 5527              	 .loc 3 1770 0
 5528 01ce 7B68     	 ldr r3,[r7,#4]
 5529 01d0 1B68     	 ldr r3,[r3]
 5530 01d2 1B68     	 ldr r3,[r3]
 5531 01d4 1846     	 mov r0,r3
 5532 01d6 4FF08071 	 mov r1,#16777216
 5533 01da FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5534              	 .loc 3 1771 0
 5535 01de 7B68     	 ldr r3,[r7,#4]
 5536 01e0 1B68     	 ldr r3,[r3]
 5537 01e2 0122     	 movs r2,#1
 5538 01e4 9A71     	 strb r2,[r3,#6]
 5539              	.L266:
1772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5540              	 .loc 3 1774 0
 5541 01e6 FB7B     	 ldrb r3,[r7,#15]
1775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5542              	 .loc 3 1775 0
 5543 01e8 1846     	 mov r0,r3
 5544 01ea 1037     	 adds r7,r7,#16
 5545              	.LCFI318:
 5546              	 .cfi_def_cfa_offset 8
 5547 01ec BD46     	 mov sp,r7
 5548              	.LCFI319:
 5549              	 .cfi_def_cfa_register 13
 5550              	 
 5551 01ee 80BD     	 pop {r7,pc}
 5552              	 .cfi_endproc
 5553              	.LFE259:
 5555              	 .section .text.SDMMC_BLOCK_SD_lSwitchToTransferState,"ax",%progbits
 5556              	 .align 2
 5557              	 .thumb
 5558              	 .thumb_func
 5560              	SDMMC_BLOCK_SD_lSwitchToTransferState:
 5561              	.LFB260:
1776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Switch the card state to transferring state if it isn't */
1778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSwitchToTransferState(SDMMC_BLOCK_t *const obj)
1779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5562              	 .loc 3 1779 0
 5563              	 .cfi_startproc
 5564              	 
 5565              	 
 5566 0000 80B5     	 push {r7,lr}
 5567              	.LCFI320:
 5568              	 .cfi_def_cfa_offset 8
 5569              	 .cfi_offset 7,-8
 5570              	 .cfi_offset 14,-4
 5571 0002 88B0     	 sub sp,sp,#32
 5572              	.LCFI321:
 5573              	 .cfi_def_cfa_offset 40
 5574 0004 02AF     	 add r7,sp,#8
 5575              	.LCFI322:
 5576              	 .cfi_def_cfa 7,32
 5577 0006 7860     	 str r0,[r7,#4]
1780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 5578              	 .loc 3 1780 0
 5579 0008 0123     	 movs r3,#1
 5580 000a FB75     	 strb r3,[r7,#23]
1781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0UL;
 5581              	 .loc 3 1781 0
 5582 000c 0023     	 movs r3,#0
 5583 000e 3B61     	 str r3,[r7,#16]
1782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 5584              	 .loc 3 1782 0
 5585 0010 0023     	 movs r3,#0
 5586 0012 FB60     	 str r3,[r7,#12]
1783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check the current state of the card */
1785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPOS)
 5587              	 .loc 3 1785 0
 5588 0014 7B68     	 ldr r3,[r7,#4]
 5589 0016 1B68     	 ldr r3,[r3]
 5590 0018 B3F84C30 	 ldrh r3,[r3,#76]
 5591 001c 1B04     	 lsls r3,r3,#16
 5592 001e 3A69     	 ldr r2,[r7,#16]
 5593 0020 1343     	 orrs r3,r3,r2
 5594 0022 3B61     	 str r3,[r7,#16]
1786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send CMD13 to read card status */
1788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
1789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 5595              	 .loc 3 1789 0
 5596 0024 0A23     	 movs r3,#10
1788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 5597              	 .loc 3 1788 0
 5598 0026 5B00     	 lsls r3,r3,#1
 5599 0028 164A     	 ldr r2,.L272
 5600 002a 1A44     	 add r2,r2,r3
 5601 002c 07F10C03 	 add r3,r7,#12
 5602 0030 0093     	 str r3,[sp]
 5603 0032 7868     	 ldr r0,[r7,#4]
 5604 0034 1146     	 mov r1,r2
 5605 0036 3A69     	 ldr r2,[r7,#16]
 5606 0038 0123     	 movs r3,#1
 5607 003a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5608 003e 0346     	 mov r3,r0
 5609 0040 FB75     	 strb r3,[r7,#23]
1790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
1791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
1792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
1793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5610              	 .loc 3 1794 0
 5611 0042 FB7D     	 ldrb r3,[r7,#23]
 5612 0044 002B     	 cmp r3,#0
 5613 0046 17D1     	 bne .L269
1795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if it is in transferring state */
1797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((card_status & SDMMC_BLOCK_SD_CSR_CURRENT_STATE_BITMASK) >> SDMMC_BLOCK_SD_CSR_CURRENT_STA
 5614              	 .loc 3 1797 0
 5615 0048 FB68     	 ldr r3,[r7,#12]
 5616 004a 03F4E853 	 and r3,r3,#7424
 5617 004e 5B0A     	 lsrs r3,r3,#9
 5618 0050 042B     	 cmp r3,#4
 5619 0052 02D1     	 bne .L270
1798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         SDMMC_BLOCK_SD_CSR_CURRENT_STATE_TRANS_VALUE)
1799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5620              	 .loc 3 1800 0
 5621 0054 0023     	 movs r3,#0
 5622 0056 FB75     	 strb r3,[r7,#23]
 5623 0058 0EE0     	 b .L269
 5624              	.L270:
1801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Switch to transfer state (CMD7) */
1805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(7)),
 5625              	 .loc 3 1806 0
 5626 005a 0523     	 movs r3,#5
1805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(7)),
 5627              	 .loc 3 1805 0
 5628 005c 5B00     	 lsls r3,r3,#1
 5629 005e 094A     	 ldr r2,.L272
 5630 0060 1A44     	 add r2,r2,r3
 5631 0062 07F10C03 	 add r3,r7,#12
 5632 0066 0093     	 str r3,[sp]
 5633 0068 7868     	 ldr r0,[r7,#4]
 5634 006a 1146     	 mov r1,r2
 5635 006c 3A69     	 ldr r2,[r7,#16]
 5636 006e 0223     	 movs r3,#2
 5637 0070 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5638 0074 0346     	 mov r3,r0
 5639 0076 FB75     	 strb r3,[r7,#23]
 5640              	.L269:
1807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            arg,
1808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1b,
1809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5641              	 .loc 3 1813 0
 5642 0078 FB7D     	 ldrb r3,[r7,#23]
1814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5643              	 .loc 3 1814 0
 5644 007a 1846     	 mov r0,r3
 5645 007c 1837     	 adds r7,r7,#24
 5646              	.LCFI323:
 5647              	 .cfi_def_cfa_offset 8
 5648 007e BD46     	 mov sp,r7
 5649              	.LCFI324:
 5650              	 .cfi_def_cfa_register 13
 5651              	 
 5652 0080 80BD     	 pop {r7,pc}
 5653              	.L273:
 5654 0082 00BF     	 .align 2
 5655              	.L272:
 5656 0084 00000000 	 .word sdmmc_block_command
 5657              	 .cfi_endproc
 5658              	.LFE260:
 5660              	 .section .text.SDMMC_BLOCK_SD_lDataTransfer,"ax",%progbits
 5661              	 .align 2
 5662              	 .thumb
 5663              	 .thumb_func
 5665              	SDMMC_BLOCK_SD_lDataTransfer:
 5666              	.LFB261:
1815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Do data transfer to OR from card */
1817:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lDataTransfer(SDMMC_BLOCK_t *const obj,
1818:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               uint32_t *buf,
1819:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               SDMMC_BLOCK_SD_DATA_TRANSFER_t transf
1820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               uint32_t quad_bytes)
1821:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5667              	 .loc 3 1821 0
 5668              	 .cfi_startproc
 5669              	 
 5670              	 
 5671 0000 80B5     	 push {r7,lr}
 5672              	.LCFI325:
 5673              	 .cfi_def_cfa_offset 8
 5674              	 .cfi_offset 7,-8
 5675              	 .cfi_offset 14,-4
 5676 0002 86B0     	 sub sp,sp,#24
 5677              	.LCFI326:
 5678              	 .cfi_def_cfa_offset 32
 5679 0004 00AF     	 add r7,sp,#0
 5680              	.LCFI327:
 5681              	 .cfi_def_cfa_register 7
 5682 0006 F860     	 str r0,[r7,#12]
 5683 0008 B960     	 str r1,[r7,#8]
 5684 000a 3B60     	 str r3,[r7]
 5685 000c 1346     	 mov r3,r2
 5686 000e FB71     	 strb r3,[r7,#7]
1822:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 5687              	 .loc 3 1822 0
 5688 0010 0123     	 movs r3,#1
 5689 0012 FB75     	 strb r3,[r7,#23]
1823:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t count = 0U;
 5690              	 .loc 3 1823 0
 5691 0014 0023     	 movs r3,#0
 5692 0016 3B61     	 str r3,[r7,#16]
1824:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1825:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Block on buffer read/write ready interrupt */
1826:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_RESET_IN_DATA_TRANSFER);
 5693              	 .loc 3 1826 0
 5694 0018 F868     	 ldr r0,[r7,#12]
 5695 001a 3049     	 ldr r1,.L285
 5696 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 5697 0020 0346     	 mov r3,r0
 5698 0022 FB75     	 strb r3,[r7,#23]
1827:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5699              	 .loc 3 1827 0
 5700 0024 FB7D     	 ldrb r3,[r7,#23]
 5701 0026 002B     	 cmp r3,#0
 5702 0028 53D1     	 bne .L275
 5703              	.L278:
1828:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
1830:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1831:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 5704              	 .loc 3 1831 0
 5705 002a FB68     	 ldr r3,[r7,#12]
 5706 002c 1B68     	 ldr r3,[r3]
 5707 002e 93F85C30 	 ldrb r3,[r3,#92]
 5708 0032 DBB2     	 uxtb r3,r3
 5709 0034 83F00103 	 eor r3,r3,#1
 5710 0038 DBB2     	 uxtb r3,r3
 5711 003a 002B     	 cmp r3,#0
 5712 003c 02D0     	 beq .L276
1832:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1833:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 5713              	 .loc 3 1833 0
 5714 003e 2E23     	 movs r3,#46
 5715 0040 FB75     	 strb r3,[r7,#23]
1834:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 5716              	 .loc 3 1834 0
 5717 0042 04E0     	 b .L277
 5718              	.L276:
1835:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1836:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while (obj->sdmmc_sd->isr_context.data_flag == 0U);
 5719              	 .loc 3 1836 0
 5720 0044 FB68     	 ldr r3,[r7,#12]
 5721 0046 1B68     	 ldr r3,[r3]
 5722 0048 DB79     	 ldrb r3,[r3,#7]
 5723 004a 002B     	 cmp r3,#0
 5724 004c EDD0     	 beq .L278
 5725              	.L277:
1837:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
1839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 5726              	 .loc 3 1839 0
 5727 004e F868     	 ldr r0,[r7,#12]
 5728 0050 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
1840:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 5729              	 .loc 3 1840 0
 5730 0054 FB68     	 ldr r3,[r7,#12]
 5731 0056 1B68     	 ldr r3,[r3]
 5732 0058 5B6D     	 ldr r3,[r3,#84]
 5733 005a 1846     	 mov r0,r3
 5734 005c FFF7FEFF 	 bl SYSTIMER_DeleteTimer
1841:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1842:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = (uint8_t)0U;
 5735              	 .loc 3 1842 0
 5736 0060 FB68     	 ldr r3,[r7,#12]
 5737 0062 1B68     	 ldr r3,[r3]
 5738 0064 0022     	 movs r2,#0
 5739 0066 DA71     	 strb r2,[r3,#7]
1843:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1844:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if buffer is ready */
1845:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->data_int_err == SDMMC_BLOCK_MODE_STATUS_BUFFER_READY)
 5740              	 .loc 3 1845 0
 5741 0068 FB68     	 ldr r3,[r7,#12]
 5742 006a 1B68     	 ldr r3,[r3]
 5743 006c 1B7E     	 ldrb r3,[r3,#24]
 5744 006e 1E2B     	 cmp r3,#30
 5745 0070 25D1     	 bne .L279
1846:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1847:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* 4 bytes data transmission in each iteration */
1848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       for (count = 0U; count < quad_bytes; count++)
 5746              	 .loc 3 1848 0
 5747 0072 0023     	 movs r3,#0
 5748 0074 3B61     	 str r3,[r7,#16]
 5749 0076 1BE0     	 b .L280
 5750              	.L283:
1849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (transfer_mode == SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER)
 5751              	 .loc 3 1850 0
 5752 0078 FB79     	 ldrb r3,[r7,#7]
 5753 007a 012B     	 cmp r3,#1
 5754 007c 08D1     	 bne .L281
1851:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1852:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           *buf = (uint32_t)XMC_SDMMC_ReadFIFO(obj->sdmmc_sd->sdmmc);
 5755              	 .loc 3 1852 0
 5756 007e FB68     	 ldr r3,[r7,#12]
 5757 0080 1B68     	 ldr r3,[r3]
 5758 0082 1B68     	 ldr r3,[r3]
 5759 0084 1846     	 mov r0,r3
 5760 0086 FFF7FEFF 	 bl XMC_SDMMC_ReadFIFO
 5761 008a 0246     	 mov r2,r0
 5762 008c BB68     	 ldr r3,[r7,#8]
 5763 008e 1A60     	 str r2,[r3]
 5764              	.L281:
1853:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1854:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1855:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (transfer_mode == SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER)
 5765              	 .loc 3 1855 0
 5766 0090 FB79     	 ldrb r3,[r7,#7]
 5767 0092 022B     	 cmp r3,#2
 5768 0094 06D1     	 bne .L282
1856:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1857:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           XMC_SDMMC_WriteFIFO(obj->sdmmc_sd->sdmmc, buf);
 5769              	 .loc 3 1857 0
 5770 0096 FB68     	 ldr r3,[r7,#12]
 5771 0098 1B68     	 ldr r3,[r3]
 5772 009a 1B68     	 ldr r3,[r3]
 5773 009c 1846     	 mov r0,r3
 5774 009e B968     	 ldr r1,[r7,#8]
 5775 00a0 FFF7FEFF 	 bl XMC_SDMMC_WriteFIFO
 5776              	.L282:
1858:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1859:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1860:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         buf++;
 5777              	 .loc 3 1860 0 discriminator 2
 5778 00a4 BB68     	 ldr r3,[r7,#8]
 5779 00a6 0433     	 adds r3,r3,#4
 5780 00a8 BB60     	 str r3,[r7,#8]
1848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 5781              	 .loc 3 1848 0 discriminator 2
 5782 00aa 3B69     	 ldr r3,[r7,#16]
 5783 00ac 0133     	 adds r3,r3,#1
 5784 00ae 3B61     	 str r3,[r7,#16]
 5785              	.L280:
1848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 5786              	 .loc 3 1848 0 is_stmt 0 discriminator 1
 5787 00b0 3A69     	 ldr r2,[r7,#16]
 5788 00b2 3B68     	 ldr r3,[r7]
 5789 00b4 9A42     	 cmp r2,r3
 5790 00b6 DFD3     	 bcc .L283
1861:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1862:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5791              	 .loc 3 1862 0 is_stmt 1
 5792 00b8 0023     	 movs r3,#0
 5793 00ba FB75     	 strb r3,[r7,#23]
 5794 00bc 09E0     	 b .L275
 5795              	.L279:
1863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1864:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1865:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1866:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->issue_abort = (uint8_t)1U;
 5796              	 .loc 3 1866 0
 5797 00be FB68     	 ldr r3,[r7,#12]
 5798 00c0 1B68     	 ldr r3,[r3]
 5799 00c2 0122     	 movs r2,#1
 5800 00c4 83F85120 	 strb r2,[r3,#81]
1867:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lErrorInterruptRecovery(obj);
 5801              	 .loc 3 1867 0
 5802 00c8 F868     	 ldr r0,[r7,#12]
 5803 00ca FFF7FEFF 	 bl SDMMC_BLOCK_SD_lErrorInterruptRecovery
 5804 00ce 0346     	 mov r3,r0
 5805 00d0 FB75     	 strb r3,[r7,#23]
 5806              	.L275:
1868:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1869:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1870:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1871:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5807              	 .loc 3 1871 0
 5808 00d2 FB7D     	 ldrb r3,[r7,#23]
1872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5809              	 .loc 3 1872 0
 5810 00d4 1846     	 mov r0,r3
 5811 00d6 1837     	 adds r7,r7,#24
 5812              	.LCFI328:
 5813              	 .cfi_def_cfa_offset 8
 5814 00d8 BD46     	 mov sp,r7
 5815              	.LCFI329:
 5816              	 .cfi_def_cfa_register 13
 5817              	 
 5818 00da 80BD     	 pop {r7,pc}
 5819              	.L286:
 5820              	 .align 2
 5821              	.L285:
 5822 00dc 40420F00 	 .word 1000000
 5823              	 .cfi_endproc
 5824              	.LFE261:
 5826              	 .section .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery,"ax",%progbits
 5827              	 .align 2
 5828              	 .thumb
 5829              	 .thumb_func
 5831              	SDMMC_BLOCK_SD_lAcmdErrorRecovery:
 5832              	.LFB262:
1873:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1874:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Performs the ACMD error recovery */
1875:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lAcmdErrorRecovery(SDMMC_BLOCK_t *const obj)
1876:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5833              	 .loc 3 1876 0
 5834              	 .cfi_startproc
 5835              	 
 5836              	 
 5837 0000 80B5     	 push {r7,lr}
 5838              	.LCFI330:
 5839              	 .cfi_def_cfa_offset 8
 5840              	 .cfi_offset 7,-8
 5841              	 .cfi_offset 14,-4
 5842 0002 88B0     	 sub sp,sp,#32
 5843              	.LCFI331:
 5844              	 .cfi_def_cfa_offset 40
 5845 0004 02AF     	 add r7,sp,#8
 5846              	.LCFI332:
 5847              	 .cfi_def_cfa 7,32
 5848 0006 7860     	 str r0,[r7,#4]
1877:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5849              	 .loc 3 1877 0
 5850 0008 0023     	 movs r3,#0
 5851 000a FB75     	 strb r3,[r7,#23]
1878:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t pcmd_flag = 0U;
 5852              	 .loc 3 1878 0
 5853 000c 0023     	 movs r3,#0
 5854 000e 3B61     	 str r3,[r7,#16]
1879:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 5855              	 .loc 3 1879 0
 5856 0010 0023     	 movs r3,#0
 5857 0012 FB60     	 str r3,[r7,#12]
1880:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1881:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check ACMD12 "Not executed err" in Auto CMD12 error status register */
1882:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (XMC_SDMMC_GetACMDErrStatus(obj->sdmmc_sd->sdmmc, XMC_SDMMC_ACMD12_NOT_EXEC_ERR) == true)
 5858              	 .loc 3 1882 0
 5859 0014 7B68     	 ldr r3,[r7,#4]
 5860 0016 1B68     	 ldr r3,[r3]
 5861 0018 1B68     	 ldr r3,[r3]
 5862 001a 1846     	 mov r0,r3
 5863 001c 0121     	 movs r1,#1
 5864 001e FFF7FEFF 	 bl XMC_SDMMC_GetACMDErrStatus
 5865 0022 0346     	 mov r3,r0
 5866 0024 002B     	 cmp r3,#0
 5867 0026 2CD0     	 beq .L288
1883:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1884:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     pcmd_flag = 1U;
 5868              	 .loc 3 1884 0
 5869 0028 0123     	 movs r3,#1
 5870 002a 3B61     	 str r3,[r7,#16]
1885:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check Return Status of Recovery function of CMD_wo_DAT command */
1886:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->err_recovery_stat == SDMMC_BLOCK_MODE_STATUS_RECOVERABLE_ERROR)
 5871              	 .loc 3 1886 0
 5872 002c 7B68     	 ldr r3,[r7,#4]
 5873 002e 1B68     	 ldr r3,[r3]
 5874 0030 1B7F     	 ldrb r3,[r3,#28]
 5875 0032 242B     	 cmp r3,#36
 5876 0034 0ED1     	 bne .L289
1887:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1888:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* For recoverable error, issue CMD12 */
1889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1890:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5877              	 .loc 3 1890 0
 5878 0036 0923     	 movs r3,#9
1889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5879              	 .loc 3 1889 0
 5880 0038 5B00     	 lsls r3,r3,#1
 5881 003a 294A     	 ldr r2,.L291
 5882 003c 1A44     	 add r2,r2,r3
 5883 003e 07F10C03 	 add r3,r7,#12
 5884 0042 0093     	 str r3,[sp]
 5885 0044 7868     	 ldr r0,[r7,#4]
 5886 0046 1146     	 mov r1,r2
 5887 0048 0022     	 movs r2,#0
 5888 004a 0123     	 movs r3,#1
 5889 004c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5890 0050 0346     	 mov r3,r0
 5891 0052 FB75     	 strb r3,[r7,#23]
 5892              	.L289:
1891:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            SDMMC_BLOCK_ARGUMENT0,
1892:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
1893:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1894:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1895:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((status != SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (status != SDMMC_BLOCK_MODE_STATUS_NONRECOVE
 5893              	 .loc 3 1895 0
 5894 0054 FB7D     	 ldrb r3,[r7,#23]
 5895 0056 002B     	 cmp r3,#0
 5896 0058 3ED0     	 beq .L287
 5897              	 .loc 3 1895 0 is_stmt 0 discriminator 1
 5898 005a FB7D     	 ldrb r3,[r7,#23]
 5899 005c 252B     	 cmp r3,#37
 5900 005e 3BD0     	 beq .L287
1896:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1897:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set software reset for data line */
1898:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE);
 5901              	 .loc 3 1898 0 is_stmt 1
 5902 0060 7868     	 ldr r0,[r7,#4]
 5903 0062 0421     	 movs r1,#4
 5904 0064 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5905 0068 0346     	 mov r3,r0
 5906 006a FB75     	 strb r3,[r7,#23]
1899:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5907              	 .loc 3 1899 0
 5908 006c FB7D     	 ldrb r3,[r7,#23]
 5909 006e 002B     	 cmp r3,#0
 5910 0070 32D1     	 bne .L287
1900:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1901:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Check for XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR */
1902:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (XMC_SDMMC_GetACMDErrStatus(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR
 5911              	 .loc 3 1902 0
 5912 0072 7B68     	 ldr r3,[r7,#4]
 5913 0074 1B68     	 ldr r3,[r3]
 5914 0076 1B68     	 ldr r3,[r3]
 5915 0078 1846     	 mov r0,r3
 5916 007a 8021     	 movs r1,#128
 5917 007c FFF7FEFF 	 bl XMC_SDMMC_GetACMDErrStatus
 5918 0080 2AE0     	 b .L287
 5919              	.L288:
1903:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1904:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           XMC_DEBUG("SDMMC_BLOCK_ACMDErrorRecovery: SDMMC_BLOCK_ACMD_CMD_wo_DAT_NOT_ISSUED");
1905:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1906:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         else
1907:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1908:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /*
1909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            * Check pcmd_flag. If 1, an error occurred in CMD_wo_DAT,
1910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            * and also in the SD memory transfer
1911:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            */
1912:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (pcmd_flag == 1U)
1913:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1914:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD both error");
1915:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1916:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           else
1917:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1918:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD SD transfer error");
1919:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1921:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1922:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1923:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1924:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1925:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1926:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set software reset for CMD line */
1927:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_CMD_LINE);
 5920              	 .loc 3 1927 0
 5921 0082 7868     	 ldr r0,[r7,#4]
 5922 0084 0221     	 movs r1,#2
 5923 0086 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5924 008a 0346     	 mov r3,r0
 5925 008c FB75     	 strb r3,[r7,#23]
1928:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5926              	 .loc 3 1928 0
 5927 008e FB7D     	 ldrb r3,[r7,#23]
 5928 0090 002B     	 cmp r3,#0
 5929 0092 21D1     	 bne .L287
1929:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1930:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Issue CMD12 */
1931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1932:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5930              	 .loc 3 1932 0
 5931 0094 0923     	 movs r3,#9
1931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5932              	 .loc 3 1931 0
 5933 0096 5B00     	 lsls r3,r3,#1
 5934 0098 114A     	 ldr r2,.L291
 5935 009a 1A44     	 add r2,r2,r3
 5936 009c 07F10C03 	 add r3,r7,#12
 5937 00a0 0093     	 str r3,[sp]
 5938 00a2 7868     	 ldr r0,[r7,#4]
 5939 00a4 1146     	 mov r1,r2
 5940 00a6 0022     	 movs r2,#0
 5941 00a8 0123     	 movs r3,#1
 5942 00aa FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5943 00ae 0346     	 mov r3,r0
 5944 00b0 FB75     	 strb r3,[r7,#23]
1933:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            SDMMC_BLOCK_ARGUMENT0,
1934:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
1935:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1936:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status != SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR)
 5945              	 .loc 3 1936 0
 5946 00b2 FB7D     	 ldrb r3,[r7,#23]
 5947 00b4 252B     	 cmp r3,#37
 5948 00b6 0FD0     	 beq .L287
1937:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1938:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /*Set Software Reset for  Data line*/
1939:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE);
 5949              	 .loc 3 1939 0
 5950 00b8 7868     	 ldr r0,[r7,#4]
 5951 00ba 0421     	 movs r1,#4
 5952 00bc FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5953 00c0 0346     	 mov r3,r0
 5954 00c2 FB75     	 strb r3,[r7,#23]
1940:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5955              	 .loc 3 1940 0
 5956 00c4 FB7D     	 ldrb r3,[r7,#23]
 5957 00c6 002B     	 cmp r3,#0
 5958 00c8 06D1     	 bne .L287
1941:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1942:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Check XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR */
1943:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (XMC_SDMMC_GetACMDErrStatus(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_E
 5959              	 .loc 3 1943 0
 5960 00ca 7B68     	 ldr r3,[r7,#4]
 5961 00cc 1B68     	 ldr r3,[r3]
 5962 00ce 1B68     	 ldr r3,[r3]
 5963 00d0 1846     	 mov r0,r3
 5964 00d2 8021     	 movs r1,#128
 5965 00d4 FFF7FEFF 	 bl XMC_SDMMC_GetACMDErrStatus
 5966              	.L287:
1944:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1945:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_ACMDErrorRecovery: SDMMC_BLOCK_ACMD_CMD_wo_DAT_NOT_ISSUED");
1946:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1947:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           else
1948:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1949:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /*
1950:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              * Check PCMD flag. If 1, an error occurred in CMD_wo_DAT,
1951:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              * and also in the SD memory transfer
1952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              */
1953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             if (pcmd_flag == 1U)
1954:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             {
1955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD both error");
1956:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             }
1957:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             else
1958:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             {
1959:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD SD transfer error");
1960:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             }
1961:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1962:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1963:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1964:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1965:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1966:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5967              	 .loc 3 1966 0
 5968 00d8 1837     	 adds r7,r7,#24
 5969              	.LCFI333:
 5970              	 .cfi_def_cfa_offset 8
 5971 00da BD46     	 mov sp,r7
 5972              	.LCFI334:
 5973              	 .cfi_def_cfa_register 13
 5974              	 
 5975 00dc 80BD     	 pop {r7,pc}
 5976              	.L292:
 5977 00de 00BF     	 .align 2
 5978              	.L291:
 5979 00e0 00000000 	 .word sdmmc_block_command
 5980              	 .cfi_endproc
 5981              	.LFE262:
 5983              	 .section .text.SDMMC_BLOCK_SD_TimerCallback,"ax",%progbits
 5984              	 .align 2
 5985              	 .thumb
 5986              	 .thumb_func
 5988              	SDMMC_BLOCK_SD_TimerCallback:
 5989              	.LFB263:
1967:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1968:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Timer callback function */
1969:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_TimerCallback(void *arg)
1970:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5990              	 .loc 3 1970 0
 5991              	 .cfi_startproc
 5992              	 
 5993              	 
 5994              	 
 5995 0000 80B4     	 push {r7}
 5996              	.LCFI335:
 5997              	 .cfi_def_cfa_offset 4
 5998              	 .cfi_offset 7,-4
 5999 0002 85B0     	 sub sp,sp,#20
 6000              	.LCFI336:
 6001              	 .cfi_def_cfa_offset 24
 6002 0004 00AF     	 add r7,sp,#0
 6003              	.LCFI337:
 6004              	 .cfi_def_cfa_register 7
 6005 0006 7860     	 str r0,[r7,#4]
1971:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (arg != NULL)
 6006              	 .loc 3 1971 0
 6007 0008 7B68     	 ldr r3,[r7,#4]
 6008 000a 002B     	 cmp r3,#0
 6009 000c 06D0     	 beq .L293
 6010              	.LBB2:
1972:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1973:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_t *obj = (SDMMC_BLOCK_t *)arg;
 6011              	 .loc 3 1973 0
 6012 000e 7B68     	 ldr r3,[r7,#4]
 6013 0010 FB60     	 str r3,[r7,#12]
1974:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_expire = (bool)0U;
 6014              	 .loc 3 1974 0
 6015 0012 FB68     	 ldr r3,[r7,#12]
 6016 0014 1B68     	 ldr r3,[r3]
 6017 0016 0022     	 movs r2,#0
 6018 0018 83F85C20 	 strb r2,[r3,#92]
 6019              	.L293:
 6020              	.LBE2:
1975:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1976:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6021              	 .loc 3 1976 0
 6022 001c 1437     	 adds r7,r7,#20
 6023              	.LCFI338:
 6024              	 .cfi_def_cfa_offset 4
 6025 001e BD46     	 mov sp,r7
 6026              	.LCFI339:
 6027              	 .cfi_def_cfa_register 13
 6028              	 
 6029 0020 5DF8047B 	 ldr r7,[sp],#4
 6030              	.LCFI340:
 6031              	 .cfi_restore 7
 6032              	 .cfi_def_cfa_offset 0
 6033 0024 7047     	 bx lr
 6034              	 .cfi_endproc
 6035              	.LFE263:
 6037 0026 00BF     	 .section .text.SDMMC_BLOCK_SD_lDelay,"ax",%progbits
 6038              	 .align 2
 6039              	 .thumb
 6040              	 .thumb_func
 6042              	SDMMC_BLOCK_SD_lDelay:
 6043              	.LFB264:
1977:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1978:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Delay function */
1979:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lDelay(SDMMC_BLOCK_t *const obj, uint32_t delay)
1980:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6044              	 .loc 3 1980 0
 6045              	 .cfi_startproc
 6046              	 
 6047              	 
 6048 0000 80B5     	 push {r7,lr}
 6049              	.LCFI341:
 6050              	 .cfi_def_cfa_offset 8
 6051              	 .cfi_offset 7,-8
 6052              	 .cfi_offset 14,-4
 6053 0002 84B0     	 sub sp,sp,#16
 6054              	.LCFI342:
 6055              	 .cfi_def_cfa_offset 24
 6056 0004 00AF     	 add r7,sp,#0
 6057              	.LCFI343:
 6058              	 .cfi_def_cfa_register 7
 6059 0006 7860     	 str r0,[r7,#4]
 6060 0008 3960     	 str r1,[r7]
1981:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmr_id = 0U;
 6061              	 .loc 3 1981 0
 6062 000a 0023     	 movs r3,#0
 6063 000c BB60     	 str r3,[r7,#8]
1982:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_CREATE_TIMER_FAILED;
 6064              	 .loc 3 1982 0
 6065 000e 2F23     	 movs r3,#47
 6066 0010 FB73     	 strb r3,[r7,#15]
1983:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1984:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1U;
 6067              	 .loc 3 1984 0
 6068 0012 7B68     	 ldr r3,[r7,#4]
 6069 0014 1B68     	 ldr r3,[r3]
 6070 0016 0122     	 movs r2,#1
 6071 0018 83F85C20 	 strb r2,[r3,#92]
1985:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_id = tmr_id;
 6072              	 .loc 3 1985 0
 6073 001c 7B68     	 ldr r3,[r7,#4]
 6074 001e 1B68     	 ldr r3,[r3]
 6075 0020 BA68     	 ldr r2,[r7,#8]
 6076 0022 5A65     	 str r2,[r3,#84]
1986:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1987:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   tmr_id = SYSTIMER_CreateTimer(delay, SYSTIMER_MODE_ONE_SHOT, &SDMMC_BLOCK_SD_TimerCallback, (void
 6077              	 .loc 3 1987 0
 6078 0024 3868     	 ldr r0,[r7]
 6079 0026 0021     	 movs r1,#0
 6080 0028 184A     	 ldr r2,.L302
 6081 002a 7B68     	 ldr r3,[r7,#4]
 6082 002c FFF7FEFF 	 bl SYSTIMER_CreateTimer
 6083 0030 B860     	 str r0,[r7,#8]
1988:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (tmr_id > 0U)
 6084              	 .loc 3 1988 0
 6085 0032 BB68     	 ldr r3,[r7,#8]
 6086 0034 002B     	 cmp r3,#0
 6087 0036 1ED0     	 beq .L296
1989:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1990:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = tmr_id;
 6088              	 .loc 3 1990 0
 6089 0038 7B68     	 ldr r3,[r7,#4]
 6090 003a 1B68     	 ldr r3,[r3]
 6091 003c BA68     	 ldr r2,[r7,#8]
 6092 003e 5A65     	 str r2,[r3,#84]
1991:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1992:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (SDMMC_BLOCK_MODE_STATUS_t)SYSTIMER_StartTimer(tmr_id);
 6093              	 .loc 3 1992 0
 6094 0040 B868     	 ldr r0,[r7,#8]
 6095 0042 FFF7FEFF 	 bl SYSTIMER_StartTimer
 6096 0046 0346     	 mov r3,r0
 6097 0048 FB73     	 strb r3,[r7,#15]
1993:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Is timer started successfully? */
1995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == (SDMMC_BLOCK_MODE_STATUS_t)SYSTIMER_STATUS_SUCCESS)
 6098              	 .loc 3 1995 0
 6099 004a FB7B     	 ldrb r3,[r7,#15]
 6100 004c 002B     	 cmp r3,#0
 6101 004e 10D1     	 bne .L297
1996:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1997:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Wait infinitely until timer expires */
1998:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       while (obj->sdmmc_sd->tmr_expire)
 6102              	 .loc 3 1998 0
 6103 0050 00BF     	 nop
 6104              	.L298:
 6105              	 .loc 3 1998 0 is_stmt 0 discriminator 1
 6106 0052 7B68     	 ldr r3,[r7,#4]
 6107 0054 1B68     	 ldr r3,[r3]
 6108 0056 93F85C30 	 ldrb r3,[r3,#92]
 6109 005a DBB2     	 uxtb r3,r3
 6110 005c 002B     	 cmp r3,#0
 6111 005e F8D1     	 bne .L298
1999:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2000:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2001:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2002:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Stop the timer */
2003:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (SYSTIMER_StopTimer(tmr_id) == SYSTIMER_STATUS_SUCCESS)
 6112              	 .loc 3 2003 0 is_stmt 1
 6113 0060 B868     	 ldr r0,[r7,#8]
 6114 0062 FFF7FEFF 	 bl SYSTIMER_StopTimer
 6115 0066 0346     	 mov r3,r0
 6116 0068 002B     	 cmp r3,#0
 6117 006a 04D1     	 bne .L296
2004:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2005:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 6118              	 .loc 3 2005 0
 6119 006c 0023     	 movs r3,#0
 6120 006e FB73     	 strb r3,[r7,#15]
 6121 0070 01E0     	 b .L296
 6122              	.L297:
2006:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2007:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2008:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2009:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2010:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED;
 6123              	 .loc 3 2010 0
 6124 0072 3123     	 movs r3,#49
 6125 0074 FB73     	 strb r3,[r7,#15]
 6126              	.L296:
2011:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2012:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2013:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2014:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6127              	 .loc 3 2014 0
 6128 0076 FB7B     	 ldrb r3,[r7,#15]
 6129 0078 002B     	 cmp r3,#0
 6130 007a 02D1     	 bne .L300
2015:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2016:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Delete the timer */
2017:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(tmr_id);
 6131              	 .loc 3 2017 0
 6132 007c B868     	 ldr r0,[r7,#8]
 6133 007e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 6134              	.L300:
2018:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2019:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2020:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6135              	 .loc 3 2020 0
 6136 0082 FB7B     	 ldrb r3,[r7,#15]
2021:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6137              	 .loc 3 2021 0
 6138 0084 1846     	 mov r0,r3
 6139 0086 1037     	 adds r7,r7,#16
 6140              	.LCFI344:
 6141              	 .cfi_def_cfa_offset 8
 6142 0088 BD46     	 mov sp,r7
 6143              	.LCFI345:
 6144              	 .cfi_def_cfa_register 13
 6145              	 
 6146 008a 80BD     	 pop {r7,pc}
 6147              	.L303:
 6148              	 .align 2
 6149              	.L302:
 6150 008c 00000000 	 .word SDMMC_BLOCK_SD_TimerCallback
 6151              	 .cfi_endproc
 6152              	.LFE264:
 6154              	 .section .text.SDMMC_BLOCK_SD_CardIdentificationProcess,"ax",%progbits
 6155              	 .align 2
 6156              	 .global SDMMC_BLOCK_SD_CardIdentificationProcess
 6157              	 .thumb
 6158              	 .thumb_func
 6160              	SDMMC_BLOCK_SD_CardIdentificationProcess:
 6161              	.LFB265:
2022:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2023:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
2024:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Perform host controller initialization and card initialization.
2025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Also, reading card registers
2026:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
2027:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_CardIdentificationProcess(SDMMC_BLOCK_t *const obj)
2028:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6162              	 .loc 3 2028 0
 6163              	 .cfi_startproc
 6164              	 
 6165              	 
 6166 0000 80B5     	 push {r7,lr}
 6167              	.LCFI346:
 6168              	 .cfi_def_cfa_offset 8
 6169              	 .cfi_offset 7,-8
 6170              	 .cfi_offset 14,-4
 6171 0002 84B0     	 sub sp,sp,#16
 6172              	.LCFI347:
 6173              	 .cfi_def_cfa_offset 24
 6174 0004 00AF     	 add r7,sp,#0
 6175              	.LCFI348:
 6176              	 .cfi_def_cfa_register 7
 6177 0006 7860     	 str r0,[r7,#4]
2029:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2030:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2031:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait until the internal clock is stable */
2032:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_CLOCK_STABLE_DELAY);
 6178              	 .loc 3 2032 0
 6179 0008 7868     	 ldr r0,[r7,#4]
 6180 000a 3049     	 ldr r1,.L311
 6181 000c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 6182 0010 0346     	 mov r3,r0
 6183 0012 FB73     	 strb r3,[r7,#15]
2033:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2034:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id != 0U)
 6184              	 .loc 3 2034 0
 6185 0014 7B68     	 ldr r3,[r7,#4]
 6186 0016 1B68     	 ldr r3,[r3]
 6187 0018 5B6D     	 ldr r3,[r3,#84]
 6188 001a 002B     	 cmp r3,#0
 6189 001c 51D0     	 beq .L305
 6190              	.L308:
2035:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2036:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
2037:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2038:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 6191              	 .loc 3 2038 0
 6192 001e 7B68     	 ldr r3,[r7,#4]
 6193 0020 1B68     	 ldr r3,[r3]
 6194 0022 93F85C30 	 ldrb r3,[r3,#92]
 6195 0026 DBB2     	 uxtb r3,r3
 6196 0028 83F00103 	 eor r3,r3,#1
 6197 002c DBB2     	 uxtb r3,r3
 6198 002e 002B     	 cmp r3,#0
 6199 0030 02D0     	 beq .L306
2039:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2040:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 6200              	 .loc 3 2040 0
 6201 0032 2E23     	 movs r3,#46
 6202 0034 FB73     	 strb r3,[r7,#15]
2041:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 6203              	 .loc 3 2041 0
 6204 0036 0BE0     	 b .L307
 6205              	.L306:
2042:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2043:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while ((XMC_SDMMC_GetClockStability(obj->sdmmc_sd->sdmmc) == false));
 6206              	 .loc 3 2043 0
 6207 0038 7B68     	 ldr r3,[r7,#4]
 6208 003a 1B68     	 ldr r3,[r3]
 6209 003c 1B68     	 ldr r3,[r3]
 6210 003e 1846     	 mov r0,r3
 6211 0040 FFF7FEFF 	 bl XMC_SDMMC_GetClockStability
 6212 0044 0346     	 mov r3,r0
 6213 0046 83F00103 	 eor r3,r3,#1
 6214 004a DBB2     	 uxtb r3,r3
 6215 004c 002B     	 cmp r3,#0
 6216 004e E6D1     	 bne .L308
 6217              	.L307:
2044:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2045:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
2046:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 6218              	 .loc 3 2046 0
 6219 0050 7868     	 ldr r0,[r7,#4]
 6220 0052 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
2047:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 6221              	 .loc 3 2047 0
 6222 0056 7B68     	 ldr r3,[r7,#4]
 6223 0058 1B68     	 ldr r3,[r3]
 6224 005a 5B6D     	 ldr r3,[r3,#84]
 6225 005c 1846     	 mov r0,r3
 6226 005e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
2048:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2049:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED)
 6227              	 .loc 3 2049 0
 6228 0062 FB7B     	 ldrb r3,[r7,#15]
 6229 0064 2E2B     	 cmp r3,#46
 6230 0066 2CD0     	 beq .L305
2050:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2051:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Enable the SD clock */
2052:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SDClockEnable(obj->sdmmc_sd->sdmmc);
 6231              	 .loc 3 2052 0
 6232 0068 7B68     	 ldr r3,[r7,#4]
 6233 006a 1B68     	 ldr r3,[r3]
 6234 006c 1B68     	 ldr r3,[r3]
 6235 006e 1846     	 mov r0,r3
 6236 0070 FFF7FEFF 	 bl XMC_SDMMC_SDClockEnable
2053:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2054:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Turn the bus power on */
2055:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_BusPowerOn(obj->sdmmc_sd->sdmmc);
 6237              	 .loc 3 2055 0
 6238 0074 7B68     	 ldr r3,[r7,#4]
 6239 0076 1B68     	 ldr r3,[r3]
 6240 0078 1B68     	 ldr r3,[r3]
 6241 007a 1846     	 mov r0,r3
 6242 007c FFF7FEFF 	 bl XMC_SDMMC_BusPowerOn
2056:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2057:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->mode_init_flag == false)
 6243              	 .loc 3 2057 0
 6244 0080 7B68     	 ldr r3,[r7,#4]
 6245 0082 1B68     	 ldr r3,[r3]
 6246 0084 93F85E30 	 ldrb r3,[r3,#94]
 6247 0088 83F00103 	 eor r3,r3,#1
 6248 008c DBB2     	 uxtb r3,r3
 6249 008e 002B     	 cmp r3,#0
 6250 0090 17D0     	 beq .L305
2058:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2059:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lInitializeCard(obj);
 6251              	 .loc 3 2059 0
 6252 0092 7868     	 ldr r0,[r7,#4]
 6253 0094 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lInitializeCard
 6254 0098 0346     	 mov r3,r0
 6255 009a FB73     	 strb r3,[r7,#15]
2060:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) ||
 6256              	 .loc 3 2060 0
 6257 009c FB7B     	 ldrb r3,[r7,#15]
 6258 009e 002B     	 cmp r3,#0
 6259 00a0 02D0     	 beq .L309
 6260              	 .loc 3 2060 0 is_stmt 0 discriminator 1
 6261 00a2 FB7B     	 ldrb r3,[r7,#15]
 6262 00a4 2B2B     	 cmp r3,#43
 6263 00a6 0CD1     	 bne .L305
 6264              	.L309:
2061:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             (status == SDMMC_BLOCK_MODE_STATUS_INITIALIZED_BUT_LOCKED))
2062:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2063:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lAfterCardInitialize(obj);
 6265              	 .loc 3 2063 0 is_stmt 1
 6266 00a8 7868     	 ldr r0,[r7,#4]
 6267 00aa FFF7FEFF 	 bl SDMMC_BLOCK_SD_lAfterCardInitialize
 6268 00ae 0346     	 mov r3,r0
 6269 00b0 FB73     	 strb r3,[r7,#15]
2064:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6270              	 .loc 3 2064 0
 6271 00b2 FB7B     	 ldrb r3,[r7,#15]
 6272 00b4 002B     	 cmp r3,#0
 6273 00b6 04D1     	 bne .L305
2065:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
2066:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             obj->sdmmc_sd->mode_init_flag = 1U;
 6274              	 .loc 3 2066 0
 6275 00b8 7B68     	 ldr r3,[r7,#4]
 6276 00ba 1B68     	 ldr r3,[r3]
 6277 00bc 0122     	 movs r2,#1
 6278 00be 83F85E20 	 strb r2,[r3,#94]
 6279              	.L305:
2067:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
2068:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2069:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2070:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2071:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2072:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2073:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6280              	 .loc 3 2073 0
 6281 00c2 FB7B     	 ldrb r3,[r7,#15]
2074:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6282              	 .loc 3 2074 0
 6283 00c4 1846     	 mov r0,r3
 6284 00c6 1037     	 adds r7,r7,#16
 6285              	.LCFI349:
 6286              	 .cfi_def_cfa_offset 8
 6287 00c8 BD46     	 mov sp,r7
 6288              	.LCFI350:
 6289              	 .cfi_def_cfa_register 13
 6290              	 
 6291 00ca 80BD     	 pop {r7,pc}
 6292              	.L312:
 6293              	 .align 2
 6294              	.L311:
 6295 00cc 40420F00 	 .word 1000000
 6296              	 .cfi_endproc
 6297              	.LFE265:
 6299              	 .section .text.SDMMC_BLOCK_SD_lStartTimer,"ax",%progbits
 6300              	 .align 2
 6301              	 .thumb
 6302              	 .thumb_func
 6304              	SDMMC_BLOCK_SD_lStartTimer:
 6305              	.LFB266:
2075:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2076:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Create and start timer in a non-RTOS environment */
2077:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lStartTimer(SDMMC_BLOCK_t *const obj, uint32_t dela
2078:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6306              	 .loc 3 2078 0
 6307              	 .cfi_startproc
 6308              	 
 6309              	 
 6310 0000 80B5     	 push {r7,lr}
 6311              	.LCFI351:
 6312              	 .cfi_def_cfa_offset 8
 6313              	 .cfi_offset 7,-8
 6314              	 .cfi_offset 14,-4
 6315 0002 84B0     	 sub sp,sp,#16
 6316              	.LCFI352:
 6317              	 .cfi_def_cfa_offset 24
 6318 0004 00AF     	 add r7,sp,#0
 6319              	.LCFI353:
 6320              	 .cfi_def_cfa_register 7
 6321 0006 7860     	 str r0,[r7,#4]
 6322 0008 3960     	 str r1,[r7]
2079:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmr_id = 0U;
 6323              	 .loc 3 2079 0
 6324 000a 0023     	 movs r3,#0
 6325 000c BB60     	 str r3,[r7,#8]
2080:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 6326              	 .loc 3 2080 0
 6327 000e 0023     	 movs r3,#0
 6328 0010 FB73     	 strb r3,[r7,#15]
2081:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1U;
 6329              	 .loc 3 2081 0
 6330 0012 7B68     	 ldr r3,[r7,#4]
 6331 0014 1B68     	 ldr r3,[r3]
 6332 0016 0122     	 movs r2,#1
 6333 0018 83F85C20 	 strb r2,[r3,#92]
2082:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2083:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   tmr_id = SYSTIMER_CreateTimer(delay, SYSTIMER_MODE_ONE_SHOT, &SDMMC_BLOCK_SD_TimerCallback, (void
 6334              	 .loc 3 2083 0
 6335 001c 3868     	 ldr r0,[r7]
 6336 001e 0021     	 movs r1,#0
 6337 0020 134A     	 ldr r2,.L318
 6338 0022 7B68     	 ldr r3,[r7,#4]
 6339 0024 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 6340 0028 B860     	 str r0,[r7,#8]
2084:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (tmr_id != (uint32_t)SYSTIMER_STATUS_FAILURE)
 6341              	 .loc 3 2084 0
 6342 002a BB68     	 ldr r3,[r7,#8]
 6343 002c 012B     	 cmp r3,#1
 6344 002e 13D0     	 beq .L314
2085:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2086:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Timer creation successful */
2087:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (SYSTIMER_StartTimer(tmr_id) != SYSTIMER_STATUS_SUCCESS)
 6345              	 .loc 3 2087 0
 6346 0030 B868     	 ldr r0,[r7,#8]
 6347 0032 FFF7FEFF 	 bl SYSTIMER_StartTimer
 6348 0036 0346     	 mov r3,r0
 6349 0038 002B     	 cmp r3,#0
 6350 003a 08D0     	 beq .L315
2088:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2089:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Remove timer; it can't be used */
2090:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SYSTIMER_DeleteTimer(tmr_id);
 6351              	 .loc 3 2090 0
 6352 003c B868     	 ldr r0,[r7,#8]
 6353 003e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
2091:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->tmr_id = 0U;
 6354              	 .loc 3 2091 0
 6355 0042 7B68     	 ldr r3,[r7,#4]
 6356 0044 1B68     	 ldr r3,[r3]
 6357 0046 0022     	 movs r2,#0
 6358 0048 5A65     	 str r2,[r3,#84]
2092:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED;
 6359              	 .loc 3 2092 0
 6360 004a 3123     	 movs r3,#49
 6361 004c FB73     	 strb r3,[r7,#15]
 6362              	.L315:
2093:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2094:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = tmr_id;
 6363              	 .loc 3 2094 0
 6364 004e 7B68     	 ldr r3,[r7,#4]
 6365 0050 1B68     	 ldr r3,[r3]
 6366 0052 BA68     	 ldr r2,[r7,#8]
 6367 0054 5A65     	 str r2,[r3,#84]
 6368 0056 05E0     	 b .L316
 6369              	.L314:
2095:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2096:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2097:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2098:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Timer creation failed! */
2099:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = 0U;
 6370              	 .loc 3 2099 0
 6371 0058 7B68     	 ldr r3,[r7,#4]
 6372 005a 1B68     	 ldr r3,[r3]
 6373 005c 0022     	 movs r2,#0
 6374 005e 5A65     	 str r2,[r3,#84]
2100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_CREATE_TIMER_FAILED;
 6375              	 .loc 3 2100 0
 6376 0060 2F23     	 movs r3,#47
 6377 0062 FB73     	 strb r3,[r7,#15]
 6378              	.L316:
2101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6379              	 .loc 3 2103 0
 6380 0064 FB7B     	 ldrb r3,[r7,#15]
2104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6381              	 .loc 3 2104 0
 6382 0066 1846     	 mov r0,r3
 6383 0068 1037     	 adds r7,r7,#16
 6384              	.LCFI354:
 6385              	 .cfi_def_cfa_offset 8
 6386 006a BD46     	 mov sp,r7
 6387              	.LCFI355:
 6388              	 .cfi_def_cfa_register 13
 6389              	 
 6390 006c 80BD     	 pop {r7,pc}
 6391              	.L319:
 6392 006e 00BF     	 .align 2
 6393              	.L318:
 6394 0070 00000000 	 .word SDMMC_BLOCK_SD_TimerCallback
 6395              	 .cfi_endproc
 6396              	.LFE266:
 6398              	 .section .text.SDMMC_BLOCK_SD_lStopTimer,"ax",%progbits
 6399              	 .align 2
 6400              	 .thumb
 6401              	 .thumb_func
 6403              	SDMMC_BLOCK_SD_lStopTimer:
 6404              	.LFB267:
2105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Stop timer in a non-RTOS environment */
2107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t SDMMC_BLOCK_SD_lStopTimer(SDMMC_BLOCK_t *const obj)
2108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6405              	 .loc 3 2108 0
 6406              	 .cfi_startproc
 6407              	 
 6408              	 
 6409 0000 80B5     	 push {r7,lr}
 6410              	.LCFI356:
 6411              	 .cfi_def_cfa_offset 8
 6412              	 .cfi_offset 7,-8
 6413              	 .cfi_offset 14,-4
 6414 0002 84B0     	 sub sp,sp,#16
 6415              	.LCFI357:
 6416              	 .cfi_def_cfa_offset 24
 6417 0004 00AF     	 add r7,sp,#0
 6418              	.LCFI358:
 6419              	 .cfi_def_cfa_register 7
 6420 0006 7860     	 str r0,[r7,#4]
2109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmr_id = obj->sdmmc_sd->tmr_id;
 6421              	 .loc 3 2109 0
 6422 0008 7B68     	 ldr r3,[r7,#4]
 6423 000a 1B68     	 ldr r3,[r3]
 6424 000c 5B6D     	 ldr r3,[r3,#84]
 6425 000e BB60     	 str r3,[r7,#8]
2110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t status;
2111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = (uint32_t)SYSTIMER_StopTimer(tmr_id);
 6426              	 .loc 3 2112 0
 6427 0010 B868     	 ldr r0,[r7,#8]
 6428 0012 FFF7FEFF 	 bl SYSTIMER_StopTimer
 6429 0016 0346     	 mov r3,r0
 6430 0018 FB60     	 str r3,[r7,#12]
2113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status != (uint32_t)SYSTIMER_STATUS_SUCCESS)
 6431              	 .loc 3 2113 0
 6432 001a FB68     	 ldr r3,[r7,#12]
 6433 001c 002B     	 cmp r3,#0
 6434 001e 08D0     	 beq .L321
2114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Remove timer; it can't be used */
2116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(tmr_id);
 6435              	 .loc 3 2116 0
 6436 0020 B868     	 ldr r0,[r7,#8]
 6437 0022 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
2117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_STOP_TIMER_FAILED;
 6438              	 .loc 3 2117 0
 6439 0026 3223     	 movs r3,#50
 6440 0028 FB60     	 str r3,[r7,#12]
2118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = 0U;
 6441              	 .loc 3 2118 0
 6442 002a 7B68     	 ldr r3,[r7,#4]
 6443 002c 1B68     	 ldr r3,[r3]
 6444 002e 0022     	 movs r2,#0
 6445 0030 5A65     	 str r2,[r3,#84]
 6446              	.L321:
2119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6447              	 .loc 3 2121 0
 6448 0032 FB68     	 ldr r3,[r7,#12]
2122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6449              	 .loc 3 2122 0
 6450 0034 1846     	 mov r0,r3
 6451 0036 1037     	 adds r7,r7,#16
 6452              	.LCFI359:
 6453              	 .cfi_def_cfa_offset 8
 6454 0038 BD46     	 mov sp,r7
 6455              	.LCFI360:
 6456              	 .cfi_def_cfa_register 13
 6457              	 
 6458 003a 80BD     	 pop {r7,pc}
 6459              	 .cfi_endproc
 6460              	.LFE267:
 6462              	 .section .text.SDMMC_BLOCK_SD_lCheckSectorBound,"ax",%progbits
 6463              	 .align 2
 6464              	 .thumb
 6465              	 .thumb_func
 6467              	SDMMC_BLOCK_SD_lCheckSectorBound:
 6468              	.LFB268:
2123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check if the sector address is out of bound */
2125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCheckSectorBound(SDMMC_BLOCK_t *const obj,
2126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                   uint32_t sector_num,
2127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                   uint32_t sector_count)
2128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6469              	 .loc 3 2128 0
 6470              	 .cfi_startproc
 6471              	 
 6472              	 
 6473 0000 80B5     	 push {r7,lr}
 6474              	.LCFI361:
 6475              	 .cfi_def_cfa_offset 8
 6476              	 .cfi_offset 7,-8
 6477              	 .cfi_offset 14,-4
 6478 0002 86B0     	 sub sp,sp,#24
 6479              	.LCFI362:
 6480              	 .cfi_def_cfa_offset 32
 6481 0004 00AF     	 add r7,sp,#0
 6482              	.LCFI363:
 6483              	 .cfi_def_cfa_register 7
 6484 0006 F860     	 str r0,[r7,#12]
 6485 0008 B960     	 str r1,[r7,#8]
 6486 000a 7A60     	 str r2,[r7,#4]
2129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t local_sector_count = 0U;
 6487              	 .loc 3 2130 0
 6488 000c 0023     	 movs r3,#0
 6489 000e 3B61     	 str r3,[r7,#16]
2131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Get sector count function */
2133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_GetSectorCount(obj, (void *)&local_sector_count);
 6490              	 .loc 3 2133 0
 6491 0010 07F11003 	 add r3,r7,#16
 6492 0014 F868     	 ldr r0,[r7,#12]
 6493 0016 1946     	 mov r1,r3
 6494 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetSectorCount
 6495 001c 0346     	 mov r3,r0
 6496 001e FB75     	 strb r3,[r7,#23]
2134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6497              	 .loc 3 2134 0
 6498 0020 FB7D     	 ldrb r3,[r7,#23]
 6499 0022 002B     	 cmp r3,#0
 6500 0024 07D1     	 bne .L324
2135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check the sector count limit */
2137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((sector_num + sector_count) > local_sector_count)
 6501              	 .loc 3 2137 0
 6502 0026 BA68     	 ldr r2,[r7,#8]
 6503 0028 7B68     	 ldr r3,[r7,#4]
 6504 002a 1A44     	 add r2,r2,r3
 6505 002c 3B69     	 ldr r3,[r7,#16]
 6506 002e 9A42     	 cmp r2,r3
 6507 0030 01D9     	 bls .L324
2138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SECTOR_OUT_OF_BOUND;
 6508              	 .loc 3 2139 0
 6509 0032 3323     	 movs r3,#51
 6510 0034 FB75     	 strb r3,[r7,#23]
 6511              	.L324:
2140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6512              	 .loc 3 2143 0
 6513 0036 FB7D     	 ldrb r3,[r7,#23]
2144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6514              	 .loc 3 2144 0
 6515 0038 1846     	 mov r0,r3
 6516 003a 1837     	 adds r7,r7,#24
 6517              	.LCFI364:
 6518              	 .cfi_def_cfa_offset 8
 6519 003c BD46     	 mov sp,r7
 6520              	.LCFI365:
 6521              	 .cfi_def_cfa_register 13
 6522              	 
 6523 003e 80BD     	 pop {r7,pc}
 6524              	 .cfi_endproc
 6525              	.LFE268:
 6527              	 .section .text.SDMMC_BLOCK_SD_lLocalErase,"ax",%progbits
 6528              	 .align 2
 6529              	 .thumb
 6530              	 .thumb_func
 6532              	SDMMC_BLOCK_SD_lLocalErase:
 6533              	.LFB269:
2145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Perform erase operation */
2147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lLocalErase(SDMMC_BLOCK_t *const obj,
2148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                             uint32_t start_addr,
2149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                             uint32_t end_addr,
2150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                             uint32_t timeout)
2151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6534              	 .loc 3 2151 0
 6535              	 .cfi_startproc
 6536              	 
 6537              	 
 6538 0000 80B5     	 push {r7,lr}
 6539              	.LCFI366:
 6540              	 .cfi_def_cfa_offset 8
 6541              	 .cfi_offset 7,-8
 6542              	 .cfi_offset 14,-4
 6543 0002 88B0     	 sub sp,sp,#32
 6544              	.LCFI367:
 6545              	 .cfi_def_cfa_offset 40
 6546 0004 02AF     	 add r7,sp,#8
 6547              	.LCFI368:
 6548              	 .cfi_def_cfa 7,32
 6549 0006 F860     	 str r0,[r7,#12]
 6550 0008 B960     	 str r1,[r7,#8]
 6551 000a 7A60     	 str r2,[r7,#4]
 6552 000c 3B60     	 str r3,[r7]
2152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Stores the response received */
2153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 6553              	 .loc 3 2153 0
 6554 000e 0023     	 movs r3,#0
 6555 0010 3B61     	 str r3,[r7,#16]
2154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6556              	 .loc 3 2154 0
 6557 0012 0123     	 movs r3,#1
 6558 0014 FB75     	 strb r3,[r7,#23]
2155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint32_t)0U
 6559              	 .loc 3 2156 0
 6560 0016 FB68     	 ldr r3,[r7,#12]
 6561 0018 5B7A     	 ldrb r3,[r3,#9]
 6562 001a 03F00803 	 and r3,r3,#8
 6563 001e 002B     	 cmp r3,#0
 6564 0020 05D1     	 bne .L327
2157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     start_addr *= (uint32_t)512U;
 6565              	 .loc 3 2158 0
 6566 0022 BB68     	 ldr r3,[r7,#8]
 6567 0024 5B02     	 lsls r3,r3,#9
 6568 0026 BB60     	 str r3,[r7,#8]
2159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     end_addr *= (uint32_t)512U;
 6569              	 .loc 3 2159 0
 6570 0028 7B68     	 ldr r3,[r7,#4]
 6571 002a 5B02     	 lsls r3,r3,#9
 6572 002c 7B60     	 str r3,[r7,#4]
 6573              	.L327:
2160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD erase start command */
2163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
2164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(32)),
 6574              	 .loc 3 2164 0
 6575 002e 1523     	 movs r3,#21
2163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(32)),
 6576              	 .loc 3 2163 0
 6577 0030 5B00     	 lsls r3,r3,#1
 6578 0032 364A     	 ldr r2,.L334
 6579 0034 1A44     	 add r2,r2,r3
 6580 0036 07F11003 	 add r3,r7,#16
 6581 003a 0093     	 str r3,[sp]
 6582 003c F868     	 ldr r0,[r7,#12]
 6583 003e 1146     	 mov r1,r2
 6584 0040 BA68     	 ldr r2,[r7,#8]
 6585 0042 0123     	 movs r3,#1
 6586 0044 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 6587 0048 0346     	 mov r3,r0
 6588 004a FB75     	 strb r3,[r7,#23]
2165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        start_addr,
2166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
2167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
2168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6589              	 .loc 3 2169 0
 6590 004c FB7D     	 ldrb r3,[r7,#23]
 6591 004e 002B     	 cmp r3,#0
 6592 0050 0ED1     	 bne .L328
2170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* SD Erase End Command */
2172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(33)),
 6593              	 .loc 3 2173 0
 6594 0052 1623     	 movs r3,#22
2172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(33)),
 6595              	 .loc 3 2172 0
 6596 0054 5B00     	 lsls r3,r3,#1
 6597 0056 2D4A     	 ldr r2,.L334
 6598 0058 1A44     	 add r2,r2,r3
 6599 005a 07F11003 	 add r3,r7,#16
 6600 005e 0093     	 str r3,[sp]
 6601 0060 F868     	 ldr r0,[r7,#12]
 6602 0062 1146     	 mov r1,r2
 6603 0064 7A68     	 ldr r2,[r7,#4]
 6604 0066 0123     	 movs r3,#1
 6605 0068 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 6606 006c 0346     	 mov r3,r0
 6607 006e FB75     	 strb r3,[r7,#23]
 6608              	.L328:
2174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          end_addr,
2175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
2176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6609              	 .loc 3 2179 0
 6610 0070 FB7D     	 ldrb r3,[r7,#23]
 6611 0072 002B     	 cmp r3,#0
 6612 0074 45D1     	 bne .L329
2180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(38)),
 6613              	 .loc 3 2182 0
 6614 0076 1723     	 movs r3,#23
2181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(38)),
 6615              	 .loc 3 2181 0
 6616 0078 5B00     	 lsls r3,r3,#1
 6617 007a 244A     	 ldr r2,.L334
 6618 007c 1A44     	 add r2,r2,r3
 6619 007e 07F11003 	 add r3,r7,#16
 6620 0082 0093     	 str r3,[sp]
 6621 0084 F868     	 ldr r0,[r7,#12]
 6622 0086 1146     	 mov r1,r2
 6623 0088 0022     	 movs r2,#0
 6624 008a 0223     	 movs r3,#2
 6625 008c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 6626 0090 0346     	 mov r3,r0
 6627 0092 FB75     	 strb r3,[r7,#23]
2183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          SDMMC_BLOCK_ARGUMENT0,
2184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1b,
2185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lStartTimer(obj, (timeout * (uint32_t)1000000U));
 6628              	 .loc 3 2187 0
 6629 0094 3B68     	 ldr r3,[r7]
 6630 0096 1E4A     	 ldr r2,.L334+4
 6631 0098 02FB03F3 	 mul r3,r2,r3
 6632 009c F868     	 ldr r0,[r7,#12]
 6633 009e 1946     	 mov r1,r3
 6634 00a0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 6635 00a4 0346     	 mov r3,r0
 6636 00a6 FB75     	 strb r3,[r7,#23]
2188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->tmr_id != 0U)
 6637              	 .loc 3 2189 0
 6638 00a8 FB68     	 ldr r3,[r7,#12]
 6639 00aa 1B68     	 ldr r3,[r3]
 6640 00ac 5B6D     	 ldr r3,[r3,#84]
 6641 00ae 002B     	 cmp r3,#0
 6642 00b0 27D0     	 beq .L329
 6643              	.L332:
2190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       do
2192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 6644              	 .loc 3 2193 0
 6645 00b2 FB68     	 ldr r3,[r7,#12]
 6646 00b4 1B68     	 ldr r3,[r3]
 6647 00b6 93F85C30 	 ldrb r3,[r3,#92]
 6648 00ba DBB2     	 uxtb r3,r3
 6649 00bc 83F00103 	 eor r3,r3,#1
 6650 00c0 DBB2     	 uxtb r3,r3
 6651 00c2 002B     	 cmp r3,#0
 6652 00c4 02D0     	 beq .L330
2194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 6653              	 .loc 3 2195 0
 6654 00c6 2E23     	 movs r3,#46
 6655 00c8 FB75     	 strb r3,[r7,#23]
2196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           break;
 6656              	 .loc 3 2196 0
 6657 00ca 11E0     	 b .L331
 6658              	.L330:
2197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       } while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) ||
 6659              	 .loc 3 2198 0
 6660 00cc FB68     	 ldr r3,[r7,#12]
 6661 00ce 1B68     	 ldr r3,[r3]
 6662 00d0 1B68     	 ldr r3,[r3]
 6663 00d2 1846     	 mov r0,r3
 6664 00d4 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 6665 00d8 0346     	 mov r3,r0
2199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 6666              	 .loc 3 2199 0
 6667 00da 002B     	 cmp r3,#0
 6668 00dc E9D1     	 bne .L332
 6669              	 .loc 3 2199 0 is_stmt 0 discriminator 1
 6670 00de FB68     	 ldr r3,[r7,#12]
 6671 00e0 1B68     	 ldr r3,[r3]
 6672 00e2 1B68     	 ldr r3,[r3]
 6673 00e4 1846     	 mov r0,r3
 6674 00e6 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 6675 00ea 0346     	 mov r3,r0
2198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 6676              	 .loc 3 2198 0 is_stmt 1 discriminator 1
 6677 00ec 002B     	 cmp r3,#0
 6678 00ee E0D1     	 bne .L332
 6679              	.L331:
2200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Stop timer and delete it */
2202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 6680              	 .loc 3 2202 0
 6681 00f0 F868     	 ldr r0,[r7,#12]
 6682 00f2 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
2203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 6683              	 .loc 3 2203 0
 6684 00f6 FB68     	 ldr r3,[r7,#12]
 6685 00f8 1B68     	 ldr r3,[r3]
 6686 00fa 5B6D     	 ldr r3,[r3,#84]
 6687 00fc 1846     	 mov r0,r3
 6688 00fe FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 6689              	.L329:
2204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6690              	 .loc 3 2207 0
 6691 0102 FB7D     	 ldrb r3,[r7,#23]
2208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6692              	 .loc 3 2208 0
 6693 0104 1846     	 mov r0,r3
 6694 0106 1837     	 adds r7,r7,#24
 6695              	.LCFI369:
 6696              	 .cfi_def_cfa_offset 8
 6697 0108 BD46     	 mov sp,r7
 6698              	.LCFI370:
 6699              	 .cfi_def_cfa_register 13
 6700              	 
 6701 010a 80BD     	 pop {r7,pc}
 6702              	.L335:
 6703              	 .align 2
 6704              	.L334:
 6705 010c 00000000 	 .word sdmmc_block_command
 6706 0110 40420F00 	 .word 1000000
 6707              	 .cfi_endproc
 6708              	.LFE269:
 6710              	 .section .text.SDMMC_BLOCK_SD_lHostControllerInit,"ax",%progbits
 6711              	 .align 2
 6712              	 .thumb
 6713              	 .thumb_func
 6715              	SDMMC_BLOCK_SD_lHostControllerInit:
 6716              	.LFB270:
2209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
2211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * PUBLIC FUNCTIONS
2212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
2213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Initialize host controller */
2215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lHostControllerInit(SDMMC_BLOCK_t *const obj)
2216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6717              	 .loc 3 2216 0
 6718              	 .cfi_startproc
 6719              	 
 6720              	 
 6721 0000 80B5     	 push {r7,lr}
 6722              	.LCFI371:
 6723              	 .cfi_def_cfa_offset 8
 6724              	 .cfi_offset 7,-8
 6725              	 .cfi_offset 14,-4
 6726 0002 84B0     	 sub sp,sp,#16
 6727              	.LCFI372:
 6728              	 .cfi_def_cfa_offset 24
 6729 0004 00AF     	 add r7,sp,#0
 6730              	.LCFI373:
 6731              	 .cfi_def_cfa_register 7
 6732 0006 7860     	 str r0,[r7,#4]
2217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_HOST_CONTROLLER_INITIALIZED;
 6733              	 .loc 3 2217 0
 6734 0008 2C23     	 movs r3,#44
 6735 000a FB73     	 strb r3,[r7,#15]
2218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if host controller is initialized */
2220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_state & (uint32_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED) == (uint32_t)0U
 6736              	 .loc 3 2220 0
 6737 000c 7B68     	 ldr r3,[r7,#4]
 6738 000e 1B7A     	 ldrb r3,[r3,#8]
 6739 0010 03F04003 	 and r3,r3,#64
 6740 0014 002B     	 cmp r3,#0
 6741 0016 50D1     	 bne .L337
2221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Reset the registers to default values */
2223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RESET_ALL);
 6742              	 .loc 3 2223 0
 6743 0018 7868     	 ldr r0,[r7,#4]
 6744 001a 0121     	 movs r1,#1
 6745 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 6746 0020 0346     	 mov r3,r0
 6747 0022 FB73     	 strb r3,[r7,#15]
2224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6748              	 .loc 3 2224 0
 6749 0024 FB7B     	 ldrb r3,[r7,#15]
 6750 0026 002B     	 cmp r3,#0
 6751 0028 47D1     	 bne .L337
2225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
2227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * The internal clock should be disabled before
2228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * updating frequency clock select (Please see
2229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * section 2.2.14 -> Clock Control Register)
2230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
2231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_Stop(obj->sdmmc_sd->sdmmc);
 6752              	 .loc 3 2231 0
 6753 002a 7B68     	 ldr r3,[r7,#4]
 6754 002c 1B68     	 ldr r3,[r3]
 6755 002e 1B68     	 ldr r3,[r3]
 6756 0030 1846     	 mov r0,r3
 6757 0032 FFF7FEFF 	 bl XMC_SDMMC_Stop
2232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Select SD clock frequency */
2234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SDClockFreqSelect(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CLK_DIV_2);
 6758              	 .loc 3 2234 0
 6759 0036 7B68     	 ldr r3,[r7,#4]
 6760 0038 1B68     	 ldr r3,[r3]
 6761 003a 1B68     	 ldr r3,[r3]
 6762 003c 1846     	 mov r0,r3
 6763 003e 0121     	 movs r1,#1
 6764 0040 FFF7FEFF 	 bl XMC_SDMMC_SDClockFreqSelect
2235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Internal clock enable */
2237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_Start(obj->sdmmc_sd->sdmmc);
 6765              	 .loc 3 2237 0
 6766 0044 7B68     	 ldr r3,[r7,#4]
 6767 0046 1B68     	 ldr r3,[r3]
 6768 0048 1B68     	 ldr r3,[r3]
 6769 004a 1846     	 mov r0,r3
 6770 004c FFF7FEFF 	 bl XMC_SDMMC_Start
2238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
2240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * Enable all normal interrupt status bits except block-gap
2241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * event, card interrupt event, DMA int., ADMA and auto cmd
2242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * errors. Enable the status and the events themselves.
2243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
2244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_STATUS_NORM = SDMMC_BLOCK_NORMAL_INT_STATUS_ENABLE;
 6771              	 .loc 3 2244 0
 6772 0050 7B68     	 ldr r3,[r7,#4]
 6773 0052 1B68     	 ldr r3,[r3]
 6774 0054 1B68     	 ldr r3,[r3]
 6775 0056 F322     	 movs r2,#243
 6776 0058 9A86     	 strh r2,[r3,#52]
2245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_STATUS_ERR = SDMMC_BLOCK_ERROR_INT_STATUS_ENABLE;
 6777              	 .loc 3 2245 0
 6778 005a 7B68     	 ldr r3,[r7,#4]
 6779 005c 1B68     	 ldr r3,[r3]
 6780 005e 1B68     	 ldr r3,[r3]
 6781 0060 4EF2FF02 	 movw r2,#57599
 6782 0064 DA86     	 strh r2,[r3,#54]
2246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_SIGNAL_NORM = SDMMC_BLOCK_NORMAL_INT_SIGNAL_ENABLE;
 6783              	 .loc 3 2246 0
 6784 0066 7B68     	 ldr r3,[r7,#4]
 6785 0068 1B68     	 ldr r3,[r3]
 6786 006a 1B68     	 ldr r3,[r3]
 6787 006c 3322     	 movs r2,#51
 6788 006e 1A87     	 strh r2,[r3,#56]
2247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_SIGNAL_ERR = SDMMC_BLOCK_ERROR_INT_SIGNAL_ENABLE;
 6789              	 .loc 3 2247 0
 6790 0070 7B68     	 ldr r3,[r7,#4]
 6791 0072 1B68     	 ldr r3,[r3]
 6792 0074 1B68     	 ldr r3,[r3]
 6793 0076 4EF2FF02 	 movw r2,#57599
 6794 007a 5A87     	 strh r2,[r3,#58]
2248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_CARD_DETECTION_SUPPORT
2250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_EnableEvent(obj->sdmmc_sd->sdmmc, ((uint32_t)XMC_SDMMC_CARD_REMOVAL) |
2251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   ((uint32_t)XMC_SDMMC_CARD_INS) |
2252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   ((uint32_t)XMC_SDMMC_CARD_INT));
2253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
2254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set data-line timeout */
2256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataLineTimeout(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27);
 6795              	 .loc 3 2256 0
 6796 007c 7B68     	 ldr r3,[r7,#4]
 6797 007e 1B68     	 ldr r3,[r3]
 6798 0080 1B68     	 ldr r3,[r3]
 6799 0082 1846     	 mov r0,r3
 6800 0084 0E21     	 movs r1,#14
 6801 0086 FFF7FEFF 	 bl XMC_SDMMC_SetDataLineTimeout
2257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set bus voltage in the power control register: flattop 3.3 volts */
2259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetBusVoltage(obj->sdmmc_sd->sdmmc, XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS);
 6802              	 .loc 3 2259 0
 6803 008a 7B68     	 ldr r3,[r7,#4]
 6804 008c 1B68     	 ldr r3,[r3]
 6805 008e 1B68     	 ldr r3,[r3]
 6806 0090 1846     	 mov r0,r3
 6807 0092 0721     	 movs r1,#7
 6808 0094 FFF7FEFF 	 bl XMC_SDMMC_SetBusVoltage
2260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Update the state status to card initialized */
2262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)((uint8_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED |
 6809              	 .loc 3 2262 0
 6810 0098 7B68     	 ldr r3,[r7,#4]
 6811 009a 1B7A     	 ldrb r3,[r3,#8]
 6812 009c 43F04303 	 orr r3,r3,#67
 6813 00a0 DAB2     	 uxtb r2,r3
 6814 00a2 7B68     	 ldr r3,[r7,#4]
 6815 00a4 1A72     	 strb r2,[r3,#8]
 6816              	.LBB3:
2263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    (uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD |
2264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED);
2265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* A stub of delay for initialization */
2267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       for (volatile uint32_t i = 0; (uint32_t)i < (uint32_t)100000U; i++)
 6817              	 .loc 3 2267 0
 6818 00a6 0023     	 movs r3,#0
 6819 00a8 BB60     	 str r3,[r7,#8]
 6820 00aa 02E0     	 b .L338
 6821              	.L339:
 6822              	 .loc 3 2267 0 is_stmt 0 discriminator 3
 6823 00ac BB68     	 ldr r3,[r7,#8]
 6824 00ae 0133     	 adds r3,r3,#1
 6825 00b0 BB60     	 str r3,[r7,#8]
 6826              	.L338:
 6827              	 .loc 3 2267 0 discriminator 1
 6828 00b2 BB68     	 ldr r3,[r7,#8]
 6829 00b4 034A     	 ldr r2,.L341
 6830 00b6 9342     	 cmp r3,r2
 6831 00b8 F8D9     	 bls .L339
 6832              	.L337:
 6833              	.LBE3:
2268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6834              	 .loc 3 2273 0 is_stmt 1
 6835 00ba FB7B     	 ldrb r3,[r7,#15]
2274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6836              	 .loc 3 2274 0
 6837 00bc 1846     	 mov r0,r3
 6838 00be 1037     	 adds r7,r7,#16
 6839              	.LCFI374:
 6840              	 .cfi_def_cfa_offset 8
 6841 00c0 BD46     	 mov sp,r7
 6842              	.LCFI375:
 6843              	 .cfi_def_cfa_register 13
 6844              	 
 6845 00c2 80BD     	 pop {r7,pc}
 6846              	.L342:
 6847              	 .align 2
 6848              	.L341:
 6849 00c4 9F860100 	 .word 99999
 6850              	 .cfi_endproc
 6851              	.LFE270:
 6853              	 .section .text.SDMMC_BLOCK_SD_lHostControllerDeInit,"ax",%progbits
 6854              	 .align 2
 6855              	 .thumb
 6856              	 .thumb_func
 6858              	SDMMC_BLOCK_SD_lHostControllerDeInit:
 6859              	.LFB271:
2275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* De-initialize the host controller */
2277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lHostControllerDeInit(SDMMC_BLOCK_t *const obj)
2278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6860              	 .loc 3 2278 0
 6861              	 .cfi_startproc
 6862              	 
 6863              	 
 6864 0000 80B5     	 push {r7,lr}
 6865              	.LCFI376:
 6866              	 .cfi_def_cfa_offset 8
 6867              	 .cfi_offset 7,-8
 6868              	 .cfi_offset 14,-4
 6869 0002 84B0     	 sub sp,sp,#16
 6870              	.LCFI377:
 6871              	 .cfi_def_cfa_offset 24
 6872 0004 00AF     	 add r7,sp,#0
 6873              	.LCFI378:
 6874              	 .cfi_def_cfa_register 7
 6875 0006 7860     	 str r0,[r7,#4]
2279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6876              	 .loc 3 2279 0
 6877 0008 0123     	 movs r3,#1
 6878 000a FB73     	 strb r3,[r7,#15]
2280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if the host controller is initialized */
2282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_state & (uint32_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED) != (uint32_t)0U
 6879              	 .loc 3 2282 0
 6880 000c 7B68     	 ldr r3,[r7,#4]
 6881 000e 1B7A     	 ldrb r3,[r3,#8]
 6882 0010 03F04003 	 and r3,r3,#64
 6883 0014 002B     	 cmp r3,#0
 6884 0016 08D0     	 beq .L344
2283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Cleanup the card */
2285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SD_lCardCleanUp(obj);
 6885              	 .loc 3 2285 0
 6886 0018 7868     	 ldr r0,[r7,#4]
 6887 001a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardCleanUp
2286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Reset host controller's registers */
2288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RESET_ALL);
 6888              	 .loc 3 2288 0
 6889 001e 7868     	 ldr r0,[r7,#4]
 6890 0020 0121     	 movs r1,#1
 6891 0022 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 6892 0026 0346     	 mov r3,r0
 6893 0028 FB73     	 strb r3,[r7,#15]
 6894              	.L344:
2289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6895              	 .loc 3 2291 0
 6896 002a FB7B     	 ldrb r3,[r7,#15]
2292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6897              	 .loc 3 2292 0
 6898 002c 1846     	 mov r0,r3
 6899 002e 1037     	 adds r7,r7,#16
 6900              	.LCFI379:
 6901              	 .cfi_def_cfa_offset 8
 6902 0030 BD46     	 mov sp,r7
 6903              	.LCFI380:
 6904              	 .cfi_def_cfa_register 13
 6905              	 
 6906 0032 80BD     	 pop {r7,pc}
 6907              	 .cfi_endproc
 6908              	.LFE271:
 6910              	 .section .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks,"ax",%progbits
 6911              	 .align 2
 6912              	 .thumb
 6913              	 .thumb_func
 6915              	SDMMC_BLOCK_SD_lCardReadMultipleBlocks:
 6916              	.LFB272:
2293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read multiple blocks of data from the card */
2295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardReadMultipleBlocks(SDMMC_BLOCK_t *const obj,
2296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                         uint32_t *read_buf,
2297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                         uint32_t read_addr,
2298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                         uint32_t num_blocks)
2299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6917              	 .loc 3 2299 0
 6918              	 .cfi_startproc
 6919              	 
 6920              	 
 6921 0000 90B5     	 push {r4,r7,lr}
 6922              	.LCFI381:
 6923              	 .cfi_def_cfa_offset 12
 6924              	 .cfi_offset 4,-12
 6925              	 .cfi_offset 7,-8
 6926              	 .cfi_offset 14,-4
 6927 0002 89B0     	 sub sp,sp,#36
 6928              	.LCFI382:
 6929              	 .cfi_def_cfa_offset 48
 6930 0004 02AF     	 add r7,sp,#8
 6931              	.LCFI383:
 6932              	 .cfi_def_cfa 7,40
 6933 0006 F860     	 str r0,[r7,#12]
 6934 0008 B960     	 str r1,[r7,#8]
 6935 000a 7A60     	 str r2,[r7,#4]
 6936 000c 3B60     	 str r3,[r7]
2300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 6937              	 .loc 3 2300 0
 6938 000e 2A23     	 movs r3,#42
 6939 0010 FB75     	 strb r3,[r7,#23]
2301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6940              	 .loc 3 2301 0
 6941 0012 FB68     	 ldr r3,[r7,#12]
 6942 0014 1B68     	 ldr r3,[r3]
 6943 0016 0122     	 movs r2,#1
 6944 0018 5A76     	 strb r2,[r3,#25]
2302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6945              	 .loc 3 2302 0
 6946 001a FB68     	 ldr r3,[r7,#12]
 6947 001c 1B68     	 ldr r3,[r3]
 6948 001e 0122     	 movs r2,#1
 6949 0020 1A76     	 strb r2,[r3,#24]
2303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6950              	 .loc 3 2303 0
 6951 0022 FB68     	 ldr r3,[r7,#12]
 6952 0024 1B68     	 ldr r3,[r3]
 6953 0026 0122     	 movs r2,#1
 6954 0028 9A76     	 strb r2,[r3,#26]
2304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization is successful */
2306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 6955              	 .loc 3 2306 0
 6956 002a FB68     	 ldr r3,[r7,#12]
 6957 002c 1B68     	 ldr r3,[r3]
 6958 002e 93F85E30 	 ldrb r3,[r3,#94]
 6959 0032 002B     	 cmp r3,#0
 6960 0034 22D0     	 beq .L347
2307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Ensure that sector number is not out of bound */
2309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, read_addr, num_blocks);
 6961              	 .loc 3 2309 0
 6962 0036 7B68     	 ldr r3,[r7,#4]
 6963 0038 F868     	 ldr r0,[r7,#12]
 6964 003a 1946     	 mov r1,r3
 6965 003c 3A68     	 ldr r2,[r7]
 6966 003e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 6967 0042 0346     	 mov r3,r0
 6968 0044 FB75     	 strb r3,[r7,#23]
2310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6969              	 .loc 3 2311 0
 6970 0046 FB7D     	 ldrb r3,[r7,#23]
 6971 0048 002B     	 cmp r3,#0
 6972 004a 17D1     	 bne .L347
2312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set transfer direction select in the Transfer Mode Register */
2314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST
 6973              	 .loc 3 2314 0
 6974 004c FB68     	 ldr r3,[r7,#12]
 6975 004e 1B68     	 ldr r3,[r3]
 6976 0050 1B68     	 ldr r3,[r3]
 6977 0052 1846     	 mov r0,r3
 6978 0054 0121     	 movs r1,#1
 6979 0056 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send Multiple Block  Read Command i.e CMD18 */
2317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lMultiBlockTransfer(obj,
2318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &read_addr,
2319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   num_blocks,
2320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &(SDMMC_BLOCK_COMMON_COMMAND(18)),
 6980              	 .loc 3 2320 0
 6981 005a 0E23     	 movs r3,#14
2317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &read_addr,
 6982              	 .loc 3 2317 0
 6983 005c 5B00     	 lsls r3,r3,#1
 6984 005e 0A4A     	 ldr r2,.L349
 6985 0060 9C18     	 adds r4,r3,r2
 6986 0062 3A1D     	 adds r2,r7,#4
 6987 0064 BB68     	 ldr r3,[r7,#8]
 6988 0066 0093     	 str r3,[sp]
 6989 0068 0123     	 movs r3,#1
 6990 006a 0193     	 str r3,[sp,#4]
 6991 006c F868     	 ldr r0,[r7,#12]
 6992 006e 1146     	 mov r1,r2
 6993 0070 3A68     	 ldr r2,[r7]
 6994 0072 2346     	 mov r3,r4
 6995 0074 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lMultiBlockTransfer
 6996 0078 0346     	 mov r3,r0
 6997 007a FB75     	 strb r3,[r7,#23]
 6998              	.L347:
2321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   read_buf,
2322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
2323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6999              	 .loc 3 2326 0
 7000 007c FB7D     	 ldrb r3,[r7,#23]
2327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7001              	 .loc 3 2327 0
 7002 007e 1846     	 mov r0,r3
 7003 0080 1C37     	 adds r7,r7,#28
 7004              	.LCFI384:
 7005              	 .cfi_def_cfa_offset 12
 7006 0082 BD46     	 mov sp,r7
 7007              	.LCFI385:
 7008              	 .cfi_def_cfa_register 13
 7009              	 
 7010 0084 90BD     	 pop {r4,r7,pc}
 7011              	.L350:
 7012 0086 00BF     	 .align 2
 7013              	.L349:
 7014 0088 00000000 	 .word sdmmc_block_command
 7015              	 .cfi_endproc
 7016              	.LFE272:
 7018              	 .section .text.SDMMC_BLOCK_SD_lCardReadSingleBlock,"ax",%progbits
 7019              	 .align 2
 7020              	 .thumb
 7021              	 .thumb_func
 7023              	SDMMC_BLOCK_SD_lCardReadSingleBlock:
 7024              	.LFB273:
2328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read single block of data from the card */
2330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardReadSingleBlock(SDMMC_BLOCK_t *const obj,
2331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t *read_buf,
2332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t read_addr)
2333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7025              	 .loc 3 2333 0
 7026              	 .cfi_startproc
 7027              	 
 7028              	 
 7029 0000 80B5     	 push {r7,lr}
 7030              	.LCFI386:
 7031              	 .cfi_def_cfa_offset 8
 7032              	 .cfi_offset 7,-8
 7033              	 .cfi_offset 14,-4
 7034 0002 88B0     	 sub sp,sp,#32
 7035              	.LCFI387:
 7036              	 .cfi_def_cfa_offset 40
 7037 0004 02AF     	 add r7,sp,#8
 7038              	.LCFI388:
 7039              	 .cfi_def_cfa 7,32
 7040 0006 F860     	 str r0,[r7,#12]
 7041 0008 B960     	 str r1,[r7,#8]
 7042 000a 7A60     	 str r2,[r7,#4]
2334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7043              	 .loc 3 2334 0
 7044 000c 2A23     	 movs r3,#42
 7045 000e FB75     	 strb r3,[r7,#23]
2335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sector_count = 1U;
 7046              	 .loc 3 2335 0
 7047 0010 0123     	 movs r3,#1
 7048 0012 3B61     	 str r3,[r7,#16]
2336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization successful */
2338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 7049              	 .loc 3 2338 0
 7050 0014 FB68     	 ldr r3,[r7,#12]
 7051 0016 1B68     	 ldr r3,[r3]
 7052 0018 93F85E30 	 ldrb r3,[r3,#94]
 7053 001c 002B     	 cmp r3,#0
 7054 001e 2AD0     	 beq .L352
2339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Ensure that the sector number is not out of bound */
2341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, read_addr, sector_count);
 7055              	 .loc 3 2341 0
 7056 0020 F868     	 ldr r0,[r7,#12]
 7057 0022 7968     	 ldr r1,[r7,#4]
 7058 0024 3A69     	 ldr r2,[r7,#16]
 7059 0026 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7060 002a 0346     	 mov r3,r0
 7061 002c FB75     	 strb r3,[r7,#23]
2342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7062              	 .loc 3 2342 0
 7063 002e FB7D     	 ldrb r3,[r7,#23]
 7064 0030 002B     	 cmp r3,#0
 7065 0032 20D1     	 bne .L352
2343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Block addressing or byte addressing */
2345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint32_
 7066              	 .loc 3 2345 0
 7067 0034 FB68     	 ldr r3,[r7,#12]
 7068 0036 5B7A     	 ldrb r3,[r3,#9]
 7069 0038 03F00803 	 and r3,r3,#8
 7070 003c 002B     	 cmp r3,#0
 7071 003e 02D1     	 bne .L353
2346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         read_addr = (uint32_t)(read_addr * 512UL);
 7072              	 .loc 3 2347 0
 7073 0040 7B68     	 ldr r3,[r7,#4]
 7074 0042 5B02     	 lsls r3,r3,#9
 7075 0044 7B60     	 str r3,[r7,#4]
 7076              	.L353:
2348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST
 7077              	 .loc 3 2350 0
 7078 0046 FB68     	 ldr r3,[r7,#12]
 7079 0048 1B68     	 ldr r3,[r3]
 7080 004a 1B68     	 ldr r3,[r3]
 7081 004c 1846     	 mov r0,r3
 7082 004e 0121     	 movs r1,#1
 7083 0050 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* SDMMC->TRANSFER_MODE |= (uint16_t)((uint32_t)1U << (uint32_t)SDMMC_TRANSFER_MODE_TX_DIR_SE
2352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Perform the Single block transfer operation */
2354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(17)),
 7084              	 .loc 3 2355 0
 7085 0054 0D23     	 movs r3,#13
2354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(17)),
 7086              	 .loc 3 2354 0
 7087 0056 5B00     	 lsls r3,r3,#1
 7088 0058 094A     	 ldr r2,.L355
 7089 005a 1A44     	 add r2,r2,r3
 7090 005c BB68     	 ldr r3,[r7,#8]
 7091 005e 0093     	 str r3,[sp]
 7092 0060 0123     	 movs r3,#1
 7093 0062 0193     	 str r3,[sp,#4]
 7094 0064 F868     	 ldr r0,[r7,#12]
 7095 0066 1146     	 mov r1,r2
 7096 0068 7A68     	 ldr r2,[r7,#4]
 7097 006a 4FF40073 	 mov r3,#512
 7098 006e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 7099 0072 0346     	 mov r3,r0
 7100 0074 FB75     	 strb r3,[r7,#23]
 7101              	.L352:
2356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    read_addr,
2357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)SDMMC_BLOCK_BLOCK_SIZE,
2358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    read_buf,
2359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
2360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7102              	 .loc 3 2363 0
 7103 0076 FB7D     	 ldrb r3,[r7,#23]
2364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7104              	 .loc 3 2364 0
 7105 0078 1846     	 mov r0,r3
 7106 007a 1837     	 adds r7,r7,#24
 7107              	.LCFI389:
 7108              	 .cfi_def_cfa_offset 8
 7109 007c BD46     	 mov sp,r7
 7110              	.LCFI390:
 7111              	 .cfi_def_cfa_register 13
 7112              	 
 7113 007e 80BD     	 pop {r7,pc}
 7114              	.L356:
 7115              	 .align 2
 7116              	.L355:
 7117 0080 00000000 	 .word sdmmc_block_command
 7118              	 .cfi_endproc
 7119              	.LFE273:
 7121              	 .section .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks,"ax",%progbits
 7122              	 .align 2
 7123              	 .thumb
 7124              	 .thumb_func
 7126              	SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:
 7127              	.LFB274:
2365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Write multiple blocks of data on the card */
2367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardWriteMultipleBlocks(SDMMC_BLOCK_t *const obj,
2368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                          const uint32_t *write_buf,
2369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                          uint32_t write_addr,
2370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                          uint32_t num_blocks)
2371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7128              	 .loc 3 2371 0
 7129              	 .cfi_startproc
 7130              	 
 7131              	 
 7132 0000 90B5     	 push {r4,r7,lr}
 7133              	.LCFI391:
 7134              	 .cfi_def_cfa_offset 12
 7135              	 .cfi_offset 4,-12
 7136              	 .cfi_offset 7,-8
 7137              	 .cfi_offset 14,-4
 7138 0002 89B0     	 sub sp,sp,#36
 7139              	.LCFI392:
 7140              	 .cfi_def_cfa_offset 48
 7141 0004 02AF     	 add r7,sp,#8
 7142              	.LCFI393:
 7143              	 .cfi_def_cfa 7,40
 7144 0006 F860     	 str r0,[r7,#12]
 7145 0008 B960     	 str r1,[r7,#8]
 7146 000a 7A60     	 str r2,[r7,#4]
 7147 000c 3B60     	 str r3,[r7]
2372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7148              	 .loc 3 2372 0
 7149 000e 2A23     	 movs r3,#42
 7150 0010 FB75     	 strb r3,[r7,#23]
2373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7151              	 .loc 3 2374 0
 7152 0012 FB68     	 ldr r3,[r7,#12]
 7153 0014 1B68     	 ldr r3,[r3]
 7154 0016 0122     	 movs r2,#1
 7155 0018 5A76     	 strb r2,[r3,#25]
2375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7156              	 .loc 3 2375 0
 7157 001a FB68     	 ldr r3,[r7,#12]
 7158 001c 1B68     	 ldr r3,[r3]
 7159 001e 0122     	 movs r2,#1
 7160 0020 1A76     	 strb r2,[r3,#24]
2376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7161              	 .loc 3 2376 0
 7162 0022 FB68     	 ldr r3,[r7,#12]
 7163 0024 1B68     	 ldr r3,[r3]
 7164 0026 0122     	 movs r2,#1
 7165 0028 9A76     	 strb r2,[r3,#26]
2377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization is successful */
2379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 7166              	 .loc 3 2379 0
 7167 002a FB68     	 ldr r3,[r7,#12]
 7168 002c 1B68     	 ldr r3,[r3]
 7169 002e 93F85E30 	 ldrb r3,[r3,#94]
 7170 0032 002B     	 cmp r3,#0
 7171 0034 22D0     	 beq .L358
2380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Ensure sector number is not out of bound */
2382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, write_addr, num_blocks);
 7172              	 .loc 3 2382 0
 7173 0036 7B68     	 ldr r3,[r7,#4]
 7174 0038 F868     	 ldr r0,[r7,#12]
 7175 003a 1946     	 mov r1,r3
 7176 003c 3A68     	 ldr r2,[r7]
 7177 003e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7178 0042 0346     	 mov r3,r0
 7179 0044 FB75     	 strb r3,[r7,#23]
2383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7180              	 .loc 3 2383 0
 7181 0046 FB7D     	 ldrb r3,[r7,#23]
 7182 0048 002B     	 cmp r3,#0
 7183 004a 17D1     	 bne .L358
2384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Clear transfer direction select in transfer mode register */
2386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD
 7184              	 .loc 3 2386 0
 7185 004c FB68     	 ldr r3,[r7,#12]
 7186 004e 1B68     	 ldr r3,[r3]
 7187 0050 1B68     	 ldr r3,[r3]
 7188 0052 1846     	 mov r0,r3
 7189 0054 0021     	 movs r1,#0
 7190 0056 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send Multiple Block  Write  Command i.e CMD25 */
2389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lMultiBlockTransfer(obj,
2390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &write_addr,
2391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   num_blocks,
2392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &(SDMMC_BLOCK_COMMON_COMMAND(25)),
 7191              	 .loc 3 2392 0
 7192 005a 1023     	 movs r3,#16
2389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &write_addr,
 7193              	 .loc 3 2389 0
 7194 005c 5B00     	 lsls r3,r3,#1
 7195 005e 0A4A     	 ldr r2,.L360
 7196 0060 9C18     	 adds r4,r3,r2
 7197 0062 3A1D     	 adds r2,r7,#4
 7198 0064 BB68     	 ldr r3,[r7,#8]
 7199 0066 0093     	 str r3,[sp]
 7200 0068 0223     	 movs r3,#2
 7201 006a 0193     	 str r3,[sp,#4]
 7202 006c F868     	 ldr r0,[r7,#12]
 7203 006e 1146     	 mov r1,r2
 7204 0070 3A68     	 ldr r2,[r7]
 7205 0072 2346     	 mov r3,r4
 7206 0074 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lMultiBlockTransfer
 7207 0078 0346     	 mov r3,r0
 7208 007a FB75     	 strb r3,[r7,#23]
 7209              	.L358:
2393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   (uint32_t *)write_buf,
2394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER);
2395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7210              	 .loc 3 2398 0
 7211 007c FB7D     	 ldrb r3,[r7,#23]
2399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7212              	 .loc 3 2399 0
 7213 007e 1846     	 mov r0,r3
 7214 0080 1C37     	 adds r7,r7,#28
 7215              	.LCFI394:
 7216              	 .cfi_def_cfa_offset 12
 7217 0082 BD46     	 mov sp,r7
 7218              	.LCFI395:
 7219              	 .cfi_def_cfa_register 13
 7220              	 
 7221 0084 90BD     	 pop {r4,r7,pc}
 7222              	.L361:
 7223 0086 00BF     	 .align 2
 7224              	.L360:
 7225 0088 00000000 	 .word sdmmc_block_command
 7226              	 .cfi_endproc
 7227              	.LFE274:
 7229              	 .section .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock,"ax",%progbits
 7230              	 .align 2
 7231              	 .thumb
 7232              	 .thumb_func
 7234              	SDMMC_BLOCK_SD_lCardWriteSingleBlock:
 7235              	.LFB275:
2400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Write single block of data on the card */
2402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardWriteSingleBlock(SDMMC_BLOCK_t *const obj,
2403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                       const uint32_t *write_buf,
2404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                       uint32_t write_addr)
2405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7236              	 .loc 3 2405 0
 7237              	 .cfi_startproc
 7238              	 
 7239              	 
 7240 0000 80B5     	 push {r7,lr}
 7241              	.LCFI396:
 7242              	 .cfi_def_cfa_offset 8
 7243              	 .cfi_offset 7,-8
 7244              	 .cfi_offset 14,-4
 7245 0002 88B0     	 sub sp,sp,#32
 7246              	.LCFI397:
 7247              	 .cfi_def_cfa_offset 40
 7248 0004 02AF     	 add r7,sp,#8
 7249              	.LCFI398:
 7250              	 .cfi_def_cfa 7,32
 7251 0006 F860     	 str r0,[r7,#12]
 7252 0008 B960     	 str r1,[r7,#8]
 7253 000a 7A60     	 str r2,[r7,#4]
2406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7254              	 .loc 3 2406 0
 7255 000c 2A23     	 movs r3,#42
 7256 000e FB75     	 strb r3,[r7,#23]
2407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sector_count = 1U;
 7257              	 .loc 3 2407 0
 7258 0010 0123     	 movs r3,#1
 7259 0012 3B61     	 str r3,[r7,#16]
2408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization is successful */
2410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 7260              	 .loc 3 2410 0
 7261 0014 FB68     	 ldr r3,[r7,#12]
 7262 0016 1B68     	 ldr r3,[r3]
 7263 0018 93F85E30 	 ldrb r3,[r3,#94]
 7264 001c 002B     	 cmp r3,#0
 7265 001e 2AD0     	 beq .L363
2411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if sector number is not out of bound */
2413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, write_addr, sector_count);
 7266              	 .loc 3 2413 0
 7267 0020 F868     	 ldr r0,[r7,#12]
 7268 0022 7968     	 ldr r1,[r7,#4]
 7269 0024 3A69     	 ldr r2,[r7,#16]
 7270 0026 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7271 002a 0346     	 mov r3,r0
 7272 002c FB75     	 strb r3,[r7,#23]
2414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7273              	 .loc 3 2414 0
 7274 002e FB7D     	 ldrb r3,[r7,#23]
 7275 0030 002B     	 cmp r3,#0
 7276 0032 20D1     	 bne .L363
2415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* If not block addressing, then multiply by 512 bytes */
2417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint32_
 7277              	 .loc 3 2417 0
 7278 0034 FB68     	 ldr r3,[r7,#12]
 7279 0036 5B7A     	 ldrb r3,[r3,#9]
 7280 0038 03F00803 	 and r3,r3,#8
 7281 003c 002B     	 cmp r3,#0
 7282 003e 02D1     	 bne .L364
2418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         write_addr = (uint32_t)(write_addr * 512U);
 7283              	 .loc 3 2419 0
 7284 0040 7B68     	 ldr r3,[r7,#4]
 7285 0042 5B02     	 lsls r3,r3,#9
 7286 0044 7B60     	 str r3,[r7,#4]
 7287              	.L364:
2420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Clear transfer direction select bit */
2423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD
 7288              	 .loc 3 2423 0
 7289 0046 FB68     	 ldr r3,[r7,#12]
 7290 0048 1B68     	 ldr r3,[r3]
 7291 004a 1B68     	 ldr r3,[r3]
 7292 004c 1846     	 mov r0,r3
 7293 004e 0021     	 movs r1,#0
 7294 0050 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Single block transfer function */
2426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(24)),
 7295              	 .loc 3 2427 0
 7296 0054 0F23     	 movs r3,#15
2426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(24)),
 7297              	 .loc 3 2426 0
 7298 0056 5B00     	 lsls r3,r3,#1
 7299 0058 094A     	 ldr r2,.L366
 7300 005a 1A44     	 add r2,r2,r3
 7301 005c BB68     	 ldr r3,[r7,#8]
 7302 005e 0093     	 str r3,[sp]
 7303 0060 0223     	 movs r3,#2
 7304 0062 0193     	 str r3,[sp,#4]
 7305 0064 F868     	 ldr r0,[r7,#12]
 7306 0066 1146     	 mov r1,r2
 7307 0068 7A68     	 ldr r2,[r7,#4]
 7308 006a 4FF40073 	 mov r3,#512
 7309 006e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 7310 0072 0346     	 mov r3,r0
 7311 0074 FB75     	 strb r3,[r7,#23]
 7312              	.L363:
2428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    write_addr,
2429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)SDMMC_BLOCK_BLOCK_SIZE,
2430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)write_buf,
2431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER);
2432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7313              	 .loc 3 2435 0
 7314 0076 FB7D     	 ldrb r3,[r7,#23]
2436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7315              	 .loc 3 2436 0
 7316 0078 1846     	 mov r0,r3
 7317 007a 1837     	 adds r7,r7,#24
 7318              	.LCFI399:
 7319              	 .cfi_def_cfa_offset 8
 7320 007c BD46     	 mov sp,r7
 7321              	.LCFI400:
 7322              	 .cfi_def_cfa_register 13
 7323              	 
 7324 007e 80BD     	 pop {r7,pc}
 7325              	.L367:
 7326              	 .align 2
 7327              	.L366:
 7328 0080 00000000 	 .word sdmmc_block_command
 7329              	 .cfi_endproc
 7330              	.LFE275:
 7332              	 .section .rodata
 7333              	 .align 2
 7334              	.LC0:
 7335 0000 00000000 	 .word 0
 7336 0004 20000000 	 .word 32
 7337 0008 40000000 	 .word 64
 7338 000c 80000000 	 .word 128
 7339 0010 00010000 	 .word 256
 7340 0014 00020000 	 .word 512
 7341 0018 00040000 	 .word 1024
 7342 001c 00080000 	 .word 2048
 7343 0020 00100000 	 .word 4096
 7344 0024 00200000 	 .word 8192
 7345              	 .section .text.SDMMC_BLOCK_SD_EraseBlock,"ax",%progbits
 7346              	 .align 2
 7347              	 .global SDMMC_BLOCK_SD_EraseBlock
 7348              	 .thumb
 7349              	 .thumb_func
 7351              	SDMMC_BLOCK_SD_EraseBlock:
 7352              	.LFB276:
2437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Erase data from the card */
2439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_EraseBlock(SDMMC_BLOCK_t *const obj, uint32_t start_addr, 
2440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7353              	 .loc 3 2440 0
 7354              	 .cfi_startproc
 7355              	 
 7356              	 
 7357 0000 B0B5     	 push {r4,r5,r7,lr}
 7358              	.LCFI401:
 7359              	 .cfi_def_cfa_offset 16
 7360              	 .cfi_offset 4,-16
 7361              	 .cfi_offset 5,-12
 7362              	 .cfi_offset 7,-8
 7363              	 .cfi_offset 14,-4
 7364 0002 A6B0     	 sub sp,sp,#152
 7365              	.LCFI402:
 7366              	 .cfi_def_cfa_offset 168
 7367 0004 00AF     	 add r7,sp,#0
 7368              	.LCFI403:
 7369              	 .cfi_def_cfa_register 7
 7370 0006 F860     	 str r0,[r7,#12]
 7371 0008 B960     	 str r1,[r7,#8]
 7372 000a 7A60     	 str r2,[r7,#4]
2441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7373              	 .loc 3 2441 0
 7374 000c 2A23     	 movs r3,#42
 7375 000e 87F89730 	 strb r3,[r7,#151]
2442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmp_start_addr;
2443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t num_sectors = 0U;
 7376              	 .loc 3 2443 0
 7377 0012 0023     	 movs r3,#0
 7378 0014 C7F88C30 	 str r3,[r7,#140]
2444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Allocation unit to no. of sectors in 1 AU table mapping */
2445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t au_to_sectors[10] = {0U, 32U, 64U, 128U, 256U, 512U, 1024U, 2048U, 4096U, 8192U};
 7379              	 .loc 3 2445 0
 7380 0018 724B     	 ldr r3,.L377
 7381 001a 07F15004 	 add r4,r7,#80
 7382 001e 1D46     	 mov r5,r3
 7383 0020 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 7384 0022 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 7385 0024 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 7386 0026 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 7387 0028 95E80300 	 ldmia r5,{r0,r1}
 7388 002c 84E80300 	 stmia r4,{r0,r1}
2446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint16_t erase_size = (uint16_t)0U;
 7389              	 .loc 3 2446 0
 7390 0030 0023     	 movs r3,#0
 7391 0032 A7F88A30 	 strh r3,[r7,#138]
2447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t erase_offset = (uint8_t)0U;
 7392              	 .loc 3 2447 0
 7393 0036 0023     	 movs r3,#0
 7394 0038 87F88930 	 strb r3,[r7,#137]
2448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t erase_timeout = (uint8_t)0U;
 7395              	 .loc 3 2448 0
 7396 003c 0023     	 movs r3,#0
 7397 003e 87F88830 	 strb r3,[r7,#136]
2449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t au_size = (uint8_t)0U;
 7398              	 .loc 3 2449 0
 7399 0042 0023     	 movs r3,#0
 7400 0044 87F88730 	 strb r3,[r7,#135]
2450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sectors_in_au = 0U;
 7401              	 .loc 3 2450 0
 7402 0048 0023     	 movs r3,#0
 7403 004a C7F88030 	 str r3,[r7,#128]
2451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sectors_in_erase_cluster = 0U;
 7404              	 .loc 3 2451 0
 7405 004e 0023     	 movs r3,#0
 7406 0050 FB67     	 str r3,[r7,#124]
2452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Read SD status  */
2453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sd_status[16] = {0U};
 7407              	 .loc 3 2453 0
 7408 0052 07F11003 	 add r3,r7,#16
 7409 0056 4022     	 movs r2,#64
 7410 0058 1846     	 mov r0,r3
 7411 005a 0021     	 movs r1,#0
 7412 005c FFF7FEFF 	 bl memset
2454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t erase_timeout_per_cluster = 0UL;
 7413              	 .loc 3 2454 0
 7414 0060 0023     	 movs r3,#0
 7415 0062 BB67     	 str r3,[r7,#120]
2455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7416              	 .loc 3 2456 0
 7417 0064 FB68     	 ldr r3,[r7,#12]
 7418 0066 1B68     	 ldr r3,[r3]
 7419 0068 0122     	 movs r2,#1
 7420 006a 5A76     	 strb r2,[r3,#25]
2457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7421              	 .loc 3 2457 0
 7422 006c FB68     	 ldr r3,[r7,#12]
 7423 006e 1B68     	 ldr r3,[r3]
 7424 0070 0122     	 movs r2,#1
 7425 0072 1A76     	 strb r2,[r3,#24]
2458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7426              	 .loc 3 2458 0
 7427 0074 FB68     	 ldr r3,[r7,#12]
 7428 0076 1B68     	 ldr r3,[r3]
 7429 0078 0122     	 movs r2,#1
 7430 007a 9A76     	 strb r2,[r3,#26]
2459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If the card is read only or write protected */
2461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED) != (uint8_t)0U)
 7431              	 .loc 3 2461 0
 7432 007c FB68     	 ldr r3,[r7,#12]
 7433 007e 1B7A     	 ldrb r3,[r3,#8]
 7434 0080 03F00403 	 and r3,r3,#4
 7435 0084 002B     	 cmp r3,#0
 7436 0086 03D0     	 beq .L369
2462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_WP_VIOLATION_ERROR;
 7437              	 .loc 3 2463 0
 7438 0088 0F23     	 movs r3,#15
 7439 008a 87F89730 	 strb r3,[r7,#151]
 7440 008e 90E0     	 b .L370
 7441              	.L369:
2464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #ifdef SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL
2466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((obj->sdwc != NULL) && (XMC_GPIO_GetInput(obj->sdwc->port, obj->sdwc->pin)))
2467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_WP_VIOLATION_ERROR;
2469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif /* SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL */
2471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Assume initialization is successful: This is invoked from IOCTL */
2472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     tmp_start_addr = start_addr;
 7442              	 .loc 3 2474 0
 7443 0090 BB68     	 ldr r3,[r7,#8]
 7444 0092 C7F89030 	 str r3,[r7,#144]
2475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     num_sectors = (end_addr - tmp_start_addr) + 1U;
 7445              	 .loc 3 2475 0
 7446 0096 7A68     	 ldr r2,[r7,#4]
 7447 0098 D7F89030 	 ldr r3,[r7,#144]
 7448 009c D31A     	 subs r3,r2,r3
 7449 009e 0133     	 adds r3,r3,#1
 7450 00a0 C7F88C30 	 str r3,[r7,#140]
2476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check sector number is not out of bound */
2477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, tmp_start_addr, num_sectors);
 7451              	 .loc 3 2477 0
 7452 00a4 F868     	 ldr r0,[r7,#12]
 7453 00a6 D7F89010 	 ldr r1,[r7,#144]
 7454 00aa D7F88C20 	 ldr r2,[r7,#140]
 7455 00ae FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7456 00b2 0346     	 mov r3,r0
 7457 00b4 87F89730 	 strb r3,[r7,#151]
2478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7458              	 .loc 3 2478 0
 7459 00b8 97F89730 	 ldrb r3,[r7,#151]
 7460 00bc 002B     	 cmp r3,#0
 7461 00be 78D1     	 bne .L370
2479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Erase timeout calculation */
2481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Get SD status */
2482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_GetSdStatus(obj, (void*)&(sd_status[0]));
 7462              	 .loc 3 2482 0
 7463 00c0 07F11003 	 add r3,r7,#16
 7464 00c4 F868     	 ldr r0,[r7,#12]
 7465 00c6 1946     	 mov r1,r3
 7466 00c8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetSdStatus
 7467 00cc 0346     	 mov r3,r0
 7468 00ce 87F89730 	 strb r3,[r7,#151]
2483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7469              	 .loc 3 2483 0
 7470 00d2 97F89730 	 ldrb r3,[r7,#151]
 7471 00d6 002B     	 cmp r3,#0
 7472 00d8 6BD1     	 bne .L370
2484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 400-401 in SD status: Erase offset */
2486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_offset =  (uint8_t)(((sd_status[3] & 0x00000300UL)) >> 8U);
 7473              	 .loc 3 2486 0
 7474 00da FB69     	 ldr r3,[r7,#28]
 7475 00dc 03F44073 	 and r3,r3,#768
 7476 00e0 1B0A     	 lsrs r3,r3,#8
 7477 00e2 87F88930 	 strb r3,[r7,#137]
2487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 402-407: Erase timeout */
2489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_timeout = (uint8_t)(((sd_status[3] & 0x0000FC00UL)) >> 10UL);
 7478              	 .loc 3 2489 0
 7479 00e6 FB69     	 ldr r3,[r7,#28]
 7480 00e8 03F47C43 	 and r3,r3,#64512
 7481 00ec 9B0A     	 lsrs r3,r3,#10
 7482 00ee 87F88830 	 strb r3,[r7,#136]
2490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 408-423: Erase size */
2492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_size = (uint16_t)((((sd_status[2] & 0xFF000000U) >> 24U) << 8U) | (sd_status[3] & 0x0
 7483              	 .loc 3 2492 0
 7484 00f2 BB69     	 ldr r3,[r7,#24]
 7485 00f4 1B0E     	 lsrs r3,r3,#24
 7486 00f6 9BB2     	 uxth r3,r3
 7487 00f8 1B02     	 lsls r3,r3,#8
 7488 00fa 9AB2     	 uxth r2,r3
 7489 00fc FB69     	 ldr r3,[r7,#28]
 7490 00fe 9BB2     	 uxth r3,r3
 7491 0100 DBB2     	 uxtb r3,r3
 7492 0102 9BB2     	 uxth r3,r3
 7493 0104 1343     	 orrs r3,r3,r2
 7494 0106 A7F88A30 	 strh r3,[r7,#138]
2493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 428-431: Allocation unit size */
2495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         au_size  = (uint8_t)((sd_status[2] & 0x00F00000U) >> 20);
 7495              	 .loc 3 2495 0
 7496 010a BB69     	 ldr r3,[r7,#24]
 7497 010c 03F47003 	 and r3,r3,#15728640
 7498 0110 1B0D     	 lsrs r3,r3,#20
 7499 0112 87F88730 	 strb r3,[r7,#135]
2496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Erase timeout calculations */
2498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_timeout_per_cluster = ((uint32_t)erase_timeout / (uint32_t)erase_size) + (uint32_t)er
 7500              	 .loc 3 2498 0
 7501 0116 97F88820 	 ldrb r2,[r7,#136]
 7502 011a B7F88A30 	 ldrh r3,[r7,#138]
 7503 011e B2FBF3F2 	 udiv r2,r2,r3
 7504 0122 97F88930 	 ldrb r3,[r7,#137]
 7505 0126 1344     	 add r3,r3,r2
 7506 0128 BB67     	 str r3,[r7,#120]
2499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Number of sectors in 1 AU */
2501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         sectors_in_au = au_to_sectors[au_size];
 7507              	 .loc 3 2501 0
 7508 012a 97F88730 	 ldrb r3,[r7,#135]
 7509 012e 9B00     	 lsls r3,r3,#2
 7510 0130 07F19802 	 add r2,r7,#152
 7511 0134 1344     	 add r3,r3,r2
 7512 0136 53F8483C 	 ldr r3,[r3,#-72]
 7513 013a C7F88030 	 str r3,[r7,#128]
2502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         sectors_in_erase_cluster = sectors_in_au * erase_size;
 7514              	 .loc 3 2502 0
 7515 013e B7F88A30 	 ldrh r3,[r7,#138]
 7516 0142 D7F88020 	 ldr r2,[r7,#128]
 7517 0146 02FB03F3 	 mul r3,r2,r3
 7518 014a FB67     	 str r3,[r7,#124]
2503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         while (num_sectors >= sectors_in_erase_cluster)
 7519              	 .loc 3 2504 0
 7520 014c 1EE0     	 b .L371
 7521              	.L374:
2505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lLocalErase(obj,
 7522              	 .loc 3 2506 0
 7523 014e D7F89020 	 ldr r2,[r7,#144]
 7524 0152 FB6F     	 ldr r3,[r7,#124]
 7525 0154 1344     	 add r3,r3,r2
 7526 0156 F868     	 ldr r0,[r7,#12]
 7527 0158 D7F89010 	 ldr r1,[r7,#144]
 7528 015c 1A46     	 mov r2,r3
 7529 015e BB6F     	 ldr r3,[r7,#120]
 7530 0160 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lLocalErase
 7531 0164 0346     	 mov r3,r0
 7532 0166 87F89730 	 strb r3,[r7,#151]
2507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               tmp_start_addr,
2508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               (tmp_start_addr + sectors_in_erase_cluster),
2509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               erase_timeout_per_cluster);
2510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7533              	 .loc 3 2510 0
 7534 016a 97F89730 	 ldrb r3,[r7,#151]
 7535 016e 002B     	 cmp r3,#0
 7536 0170 00D0     	 beq .L372
2511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
2512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             break;
 7537              	 .loc 3 2512 0
 7538 0172 10E0     	 b .L373
 7539              	.L372:
2513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
2514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           tmp_start_addr = tmp_start_addr + sectors_in_erase_cluster;
 7540              	 .loc 3 2514 0
 7541 0174 D7F89020 	 ldr r2,[r7,#144]
 7542 0178 FB6F     	 ldr r3,[r7,#124]
 7543 017a 1344     	 add r3,r3,r2
 7544 017c C7F89030 	 str r3,[r7,#144]
2515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           num_sectors = num_sectors - sectors_in_erase_cluster;
 7545              	 .loc 3 2515 0
 7546 0180 D7F88C20 	 ldr r2,[r7,#140]
 7547 0184 FB6F     	 ldr r3,[r7,#124]
 7548 0186 D31A     	 subs r3,r2,r3
 7549 0188 C7F88C30 	 str r3,[r7,#140]
 7550              	.L371:
2504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 7551              	 .loc 3 2504 0
 7552 018c D7F88C20 	 ldr r2,[r7,#140]
 7553 0190 FB6F     	 ldr r3,[r7,#124]
 7554 0192 9A42     	 cmp r2,r3
 7555 0194 DBD2     	 bcs .L374
 7556              	.L373:
2516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (num_sectors != 0U)
 7557              	 .loc 3 2518 0
 7558 0196 D7F88C30 	 ldr r3,[r7,#140]
 7559 019a 002B     	 cmp r3,#0
 7560 019c 09D0     	 beq .L370
2519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lLocalErase(obj, tmp_start_addr, end_addr, erase_timeout_per_clus
 7561              	 .loc 3 2520 0
 7562 019e F868     	 ldr r0,[r7,#12]
 7563 01a0 D7F89010 	 ldr r1,[r7,#144]
 7564 01a4 7A68     	 ldr r2,[r7,#4]
 7565 01a6 BB6F     	 ldr r3,[r7,#120]
 7566 01a8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lLocalErase
 7567 01ac 0346     	 mov r3,r0
 7568 01ae 87F89730 	 strb r3,[r7,#151]
 7569              	.L370:
2521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait for until the command OR data lines aren't busy */
2527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) || (XMC_SDMMC_IsCommandLineBusy(obj->sdmm
 7570              	 .loc 3 2527 0
 7571 01b2 00BF     	 nop
 7572              	.L375:
 7573              	 .loc 3 2527 0 is_stmt 0 discriminator 3
 7574 01b4 FB68     	 ldr r3,[r7,#12]
 7575 01b6 1B68     	 ldr r3,[r3]
 7576 01b8 1B68     	 ldr r3,[r3]
 7577 01ba 1846     	 mov r0,r3
 7578 01bc FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 7579 01c0 0346     	 mov r3,r0
 7580 01c2 002B     	 cmp r3,#0
 7581 01c4 F6D1     	 bne .L375
 7582              	 .loc 3 2527 0 discriminator 2
 7583 01c6 FB68     	 ldr r3,[r7,#12]
 7584 01c8 1B68     	 ldr r3,[r3]
 7585 01ca 1B68     	 ldr r3,[r3]
 7586 01cc 1846     	 mov r0,r3
 7587 01ce FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 7588 01d2 0346     	 mov r3,r0
 7589 01d4 002B     	 cmp r3,#0
 7590 01d6 EDD1     	 bne .L375
2528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7591              	 .loc 3 2531 0 is_stmt 1
 7592 01d8 97F89730 	 ldrb r3,[r7,#151]
2532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7593              	 .loc 3 2532 0
 7594 01dc 1846     	 mov r0,r3
 7595 01de 9837     	 adds r7,r7,#152
 7596              	.LCFI404:
 7597              	 .cfi_def_cfa_offset 16
 7598 01e0 BD46     	 mov sp,r7
 7599              	.LCFI405:
 7600              	 .cfi_def_cfa_register 13
 7601              	 
 7602 01e2 B0BD     	 pop {r4,r5,r7,pc}
 7603              	.L378:
 7604              	 .align 2
 7605              	.L377:
 7606 01e4 00000000 	 .word .LC0
 7607              	 .cfi_endproc
 7608              	.LFE276:
 7610              	 .section .text.SDMMC_BLOCK_SD_LockUnlockCard,"ax",%progbits
 7611              	 .align 2
 7612              	 .global SDMMC_BLOCK_SD_LockUnlockCard
 7613              	 .thumb
 7614              	 .thumb_func
 7616              	SDMMC_BLOCK_SD_LockUnlockCard:
 7617              	.LFB277:
2533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Set, clear password, lock/unlock card */
2535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_LockUnlockCard(SDMMC_BLOCK_t *const obj,
2536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                         SDMMC_BLOCK_LOCK_STRUCTURE_t *lock,
2537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                         SDMMC_BLOCK_CARD_LOCK_STATUS_t operation_mo
2538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7618              	 .loc 3 2538 0
 7619              	 .cfi_startproc
 7620              	 
 7621              	 
 7622 0000 90B5     	 push {r4,r7,lr}
 7623              	.LCFI406:
 7624              	 .cfi_def_cfa_offset 12
 7625              	 .cfi_offset 4,-12
 7626              	 .cfi_offset 7,-8
 7627              	 .cfi_offset 14,-4
 7628 0002 8BB0     	 sub sp,sp,#44
 7629              	.LCFI407:
 7630              	 .cfi_def_cfa_offset 56
 7631 0004 02AF     	 add r7,sp,#8
 7632              	.LCFI408:
 7633              	 .cfi_def_cfa 7,48
 7634 0006 F860     	 str r0,[r7,#12]
 7635 0008 B960     	 str r1,[r7,#8]
 7636 000a 1346     	 mov r3,r2
 7637 000c FB71     	 strb r3,[r7,#7]
2539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7638              	 .loc 3 2539 0
 7639 000e 0123     	 movs r3,#1
 7640 0010 FB77     	 strb r3,[r7,#31]
2540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t data_length = 0U;
 7641              	 .loc 3 2540 0
 7642 0012 0023     	 movs r3,#0
 7643 0014 BB61     	 str r3,[r7,#24]
2541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status;
2542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*  Select the card before proceeding */
2544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 7644              	 .loc 3 2544 0
 7645 0016 F868     	 ldr r0,[r7,#12]
 7646 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 7647 001c 0346     	 mov r3,r0
 7648 001e FB77     	 strb r3,[r7,#31]
2545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7649              	 .loc 3 2545 0
 7650 0020 FB7F     	 ldrb r3,[r7,#31]
 7651 0022 002B     	 cmp r3,#0
 7652 0024 68D1     	 bne .L380
2546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD42 and write the lock data structure */
2548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Clear transfer direction select in transfer mode register */
2549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD);
 7653              	 .loc 3 2549 0
 7654 0026 FB68     	 ldr r3,[r7,#12]
 7655 0028 1B68     	 ldr r3,[r3]
 7656 002a 1B68     	 ldr r3,[r3]
 7657 002c 1846     	 mov r0,r3
 7658 002e 0021     	 movs r1,#0
 7659 0030 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Compute password length */
2552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     data_length = (uint32_t)((((uint32_t)lock->pwd_len + (uint32_t)1U) >> 1U) << 1U) + 2U;
 7660              	 .loc 3 2552 0
 7661 0034 BB68     	 ldr r3,[r7,#8]
 7662 0036 5B78     	 ldrb r3,[r3,#1]
 7663 0038 0133     	 adds r3,r3,#1
 7664 003a 23F00103 	 bic r3,r3,#1
 7665 003e 0233     	 adds r3,r3,#2
 7666 0040 BB61     	 str r3,[r7,#24]
2553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set block length */
2555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7667              	 .loc 3 2556 0
 7668 0042 0C23     	 movs r3,#12
2555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7669              	 .loc 3 2555 0
 7670 0044 5B00     	 lsls r3,r3,#1
 7671 0046 2F4A     	 ldr r2,.L384
 7672 0048 1A44     	 add r2,r2,r3
 7673 004a 07F11403 	 add r3,r7,#20
 7674 004e 0093     	 str r3,[sp]
 7675 0050 F868     	 ldr r0,[r7,#12]
 7676 0052 1146     	 mov r1,r2
 7677 0054 BA69     	 ldr r2,[r7,#24]
 7678 0056 0123     	 movs r3,#1
 7679 0058 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 7680 005c 0346     	 mov r3,r0
 7681 005e FB77     	 strb r3,[r7,#31]
2557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          data_length,
2558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
2559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7682              	 .loc 3 2561 0
 7683 0060 FB7F     	 ldrb r3,[r7,#31]
 7684 0062 002B     	 cmp r3,#0
 7685 0064 48D1     	 bne .L380
2562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(42)),
 7686              	 .loc 3 2564 0
 7687 0066 1823     	 movs r3,#24
2563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(42)),
 7688              	 .loc 3 2563 0
 7689 0068 5B00     	 lsls r3,r3,#1
 7690 006a 264A     	 ldr r2,.L384
 7691 006c 1A44     	 add r2,r2,r3
 7692 006e BB69     	 ldr r3,[r7,#24]
 7693 0070 9CB2     	 uxth r4,r3
 7694 0072 BB68     	 ldr r3,[r7,#8]
 7695 0074 0093     	 str r3,[sp]
 7696 0076 0223     	 movs r3,#2
 7697 0078 0193     	 str r3,[sp,#4]
 7698 007a F868     	 ldr r0,[r7,#12]
 7699 007c 1146     	 mov r1,r2
 7700 007e 0022     	 movs r2,#0
 7701 0080 2346     	 mov r3,r4
 7702 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 7703 0086 0346     	 mov r3,r0
 7704 0088 FB77     	 strb r3,[r7,#31]
2565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t)SDMMC_BLOCK_ARGUMENT0,
2566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)data_length,
2567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)lock,
2568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER);
2569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       while (XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc))
 7705              	 .loc 3 2570 0
 7706 008a 00BF     	 nop
 7707              	.L381:
 7708              	 .loc 3 2570 0 is_stmt 0 discriminator 1
 7709 008c FB68     	 ldr r3,[r7,#12]
 7710 008e 1B68     	 ldr r3,[r3]
 7711 0090 1B68     	 ldr r3,[r3]
 7712 0092 1846     	 mov r0,r3
 7713 0094 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 7714 0098 0346     	 mov r3,r0
 7715 009a 002B     	 cmp r3,#0
 7716 009c F6D1     	 bne .L381
2571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
2575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7717              	 .loc 3 2575 0 is_stmt 1
 7718 009e 0C23     	 movs r3,#12
2574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7719              	 .loc 3 2574 0
 7720 00a0 5B00     	 lsls r3,r3,#1
 7721 00a2 184A     	 ldr r2,.L384
 7722 00a4 1A44     	 add r2,r2,r3
 7723 00a6 07F11403 	 add r3,r7,#20
 7724 00aa 0093     	 str r3,[sp]
 7725 00ac F868     	 ldr r0,[r7,#12]
 7726 00ae 1146     	 mov r1,r2
 7727 00b0 4FF40072 	 mov r2,#512
 7728 00b4 0123     	 movs r3,#1
 7729 00b6 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 7730 00ba 0346     	 mov r3,r0
 7731 00bc FB77     	 strb r3,[r7,#31]
2576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            512U,
2577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
2578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
2579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Wait for until the command OR data lines aren't busy */
2581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) ||
 7732              	 .loc 3 2581 0
 7733 00be 00BF     	 nop
 7734              	.L382:
 7735              	 .loc 3 2581 0 is_stmt 0 discriminator 3
 7736 00c0 FB68     	 ldr r3,[r7,#12]
 7737 00c2 1B68     	 ldr r3,[r3]
 7738 00c4 1B68     	 ldr r3,[r3]
 7739 00c6 1846     	 mov r0,r3
 7740 00c8 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 7741 00cc 0346     	 mov r3,r0
 7742 00ce 002B     	 cmp r3,#0
 7743 00d0 F6D1     	 bne .L382
2582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc)))
 7744              	 .loc 3 2582 0 is_stmt 1 discriminator 2
 7745 00d2 FB68     	 ldr r3,[r7,#12]
 7746 00d4 1B68     	 ldr r3,[r3]
 7747 00d6 1B68     	 ldr r3,[r3]
 7748 00d8 1846     	 mov r0,r3
 7749 00da FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 7750 00de 0346     	 mov r3,r0
2581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc)))
 7751              	 .loc 3 2581 0 discriminator 2
 7752 00e0 002B     	 cmp r3,#0
 7753 00e2 EDD1     	 bne .L382
2583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7754              	 .loc 3 2586 0
 7755 00e4 FB7F     	 ldrb r3,[r7,#31]
 7756 00e6 002B     	 cmp r3,#0
 7757 00e8 06D1     	 bne .L380
2587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckLockStatus(obj, operation_mode);
 7758              	 .loc 3 2588 0
 7759 00ea FB79     	 ldrb r3,[r7,#7]
 7760 00ec F868     	 ldr r0,[r7,#12]
 7761 00ee 1946     	 mov r1,r3
 7762 00f0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckLockStatus
 7763 00f4 0346     	 mov r3,r0
 7764 00f6 FB77     	 strb r3,[r7,#31]
 7765              	.L380:
2589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7766              	 .loc 3 2592 0
 7767 00f8 FB7F     	 ldrb r3,[r7,#31]
2593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7768              	 .loc 3 2593 0
 7769 00fa 1846     	 mov r0,r3
 7770 00fc 2437     	 adds r7,r7,#36
 7771              	.LCFI409:
 7772              	 .cfi_def_cfa_offset 12
 7773 00fe BD46     	 mov sp,r7
 7774              	.LCFI410:
 7775              	 .cfi_def_cfa_register 13
 7776              	 
 7777 0100 90BD     	 pop {r4,r7,pc}
 7778              	.L385:
 7779 0102 00BF     	 .align 2
 7780              	.L384:
 7781 0104 00000000 	 .word sdmmc_block_command
 7782              	 .cfi_endproc
 7783              	.LFE277:
 7785              	 .section .text.SDMMC_BLOCK_SD_GetLockStatus,"ax",%progbits
 7786              	 .align 2
 7787              	 .global SDMMC_BLOCK_SD_GetLockStatus
 7788              	 .thumb
 7789              	 .thumb_func
 7791              	SDMMC_BLOCK_SD_GetLockStatus:
 7792              	.LFB278:
2594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get the lock status from card */
2596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetLockStatus(SDMMC_BLOCK_t *const obj,
2597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        SDMMC_BLOCK_CARD_LOCK_STATUS_t *lock_status)
2598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7793              	 .loc 3 2598 0
 7794              	 .cfi_startproc
 7795              	 
 7796              	 
 7797 0000 80B5     	 push {r7,lr}
 7798              	.LCFI411:
 7799              	 .cfi_def_cfa_offset 8
 7800              	 .cfi_offset 7,-8
 7801              	 .cfi_offset 14,-4
 7802 0002 88B0     	 sub sp,sp,#32
 7803              	.LCFI412:
 7804              	 .cfi_def_cfa_offset 40
 7805 0004 02AF     	 add r7,sp,#8
 7806              	.LCFI413:
 7807              	 .cfi_def_cfa 7,32
 7808 0006 7860     	 str r0,[r7,#4]
 7809 0008 3960     	 str r1,[r7]
2599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0UL;
 7810              	 .loc 3 2599 0
 7811 000a 0023     	 movs r3,#0
 7812 000c FB60     	 str r3,[r7,#12]
2600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0UL;
 7813              	 .loc 3 2600 0
 7814 000e 0023     	 movs r3,#0
 7815 0010 7B61     	 str r3,[r7,#20]
2601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7816              	 .loc 3 2601 0
 7817 0012 0123     	 movs r3,#1
 7818 0014 FB74     	 strb r3,[r7,#19]
2602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   arg |= ((uint32_t)obj->sdmmc_sd->card_info.rca << SDMMC_BLOCK_ARG_RCA_BITPOS);
 7819              	 .loc 3 2603 0
 7820 0016 7B68     	 ldr r3,[r7,#4]
 7821 0018 1B68     	 ldr r3,[r3]
 7822 001a B3F84C30 	 ldrh r3,[r3,#76]
 7823 001e 1B04     	 lsls r3,r3,#16
 7824 0020 7A69     	 ldr r2,[r7,#20]
 7825 0022 1343     	 orrs r3,r3,r2
 7826 0024 7B61     	 str r3,[r7,#20]
2604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send CMD13 to read card status  */
2606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
2607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 7827              	 .loc 3 2607 0
 7828 0026 0A23     	 movs r3,#10
2606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 7829              	 .loc 3 2606 0
 7830 0028 5B00     	 lsls r3,r3,#1
 7831 002a 174A     	 ldr r2,.L390
 7832 002c 1A44     	 add r2,r2,r3
 7833 002e 07F10C03 	 add r3,r7,#12
 7834 0032 0093     	 str r3,[sp]
 7835 0034 7868     	 ldr r0,[r7,#4]
 7836 0036 1146     	 mov r1,r2
 7837 0038 7A69     	 ldr r2,[r7,#20]
 7838 003a 0123     	 movs r3,#1
 7839 003c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 7840 0040 0346     	 mov r3,r0
 7841 0042 FB74     	 strb r3,[r7,#19]
2608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
2609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
2610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
2611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7842              	 .loc 3 2612 0
 7843 0044 FB7C     	 ldrb r3,[r7,#19]
 7844 0046 002B     	 cmp r3,#0
 7845 0048 19D1     	 bne .L387
2613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Lock/unlock status bit in the CSR register */
2615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CARD_IS_LOCKED_BITMASK) != (uint32_t)
 7846              	 .loc 3 2615 0
 7847 004a FB68     	 ldr r3,[r7,#12]
 7848 004c 03F00073 	 and r3,r3,#33554432
 7849 0050 002B     	 cmp r3,#0
 7850 0052 0AD0     	 beq .L388
2616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *lock_status = SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED;
 7851              	 .loc 3 2617 0
 7852 0054 3B68     	 ldr r3,[r7]
 7853 0056 0122     	 movs r2,#1
 7854 0058 1A70     	 strb r2,[r3]
2618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED;
 7855              	 .loc 3 2618 0
 7856 005a 7B68     	 ldr r3,[r7,#4]
 7857 005c 1B7A     	 ldrb r3,[r3,#8]
 7858 005e 43F00803 	 orr r3,r3,#8
 7859 0062 DAB2     	 uxtb r2,r3
 7860 0064 7B68     	 ldr r3,[r7,#4]
 7861 0066 1A72     	 strb r2,[r3,#8]
 7862 0068 09E0     	 b .L387
 7863              	.L388:
2619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *lock_status = SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED;
 7864              	 .loc 3 2622 0
 7865 006a 3B68     	 ldr r3,[r7]
 7866 006c 0022     	 movs r2,#0
 7867 006e 1A70     	 strb r2,[r3]
2623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state &= (uint8_t)~(uint8_t)(SDMMC_BLOCK_CARD_STATE_LOCKED);
 7868              	 .loc 3 2623 0
 7869 0070 7B68     	 ldr r3,[r7,#4]
 7870 0072 1B7A     	 ldrb r3,[r3,#8]
 7871 0074 23F00803 	 bic r3,r3,#8
 7872 0078 DAB2     	 uxtb r2,r3
 7873 007a 7B68     	 ldr r3,[r7,#4]
 7874 007c 1A72     	 strb r2,[r3,#8]
 7875              	.L387:
2624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7876              	 .loc 3 2627 0
 7877 007e FB7C     	 ldrb r3,[r7,#19]
2628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7878              	 .loc 3 2628 0
 7879 0080 1846     	 mov r0,r3
 7880 0082 1837     	 adds r7,r7,#24
 7881              	.LCFI414:
 7882              	 .cfi_def_cfa_offset 8
 7883 0084 BD46     	 mov sp,r7
 7884              	.LCFI415:
 7885              	 .cfi_def_cfa_register 13
 7886              	 
 7887 0086 80BD     	 pop {r7,pc}
 7888              	.L391:
 7889              	 .align 2
 7890              	.L390:
 7891 0088 00000000 	 .word sdmmc_block_command
 7892              	 .cfi_endproc
 7893              	.LFE278:
 7895              	 .section .text.SDMMC_BLOCK_SD_GetState,"ax",%progbits
 7896              	 .align 2
 7897              	 .global SDMMC_BLOCK_SD_GetState
 7898              	 .thumb
 7899              	 .thumb_func
 7901              	SDMMC_BLOCK_SD_GetState:
 7902              	.LFB279:
2629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get card's current state */
2631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** uint8_t SDMMC_BLOCK_SD_GetState(SDMMC_BLOCK_t *obj)
2632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7903              	 .loc 3 2632 0
 7904              	 .cfi_startproc
 7905              	 
 7906              	 
 7907              	 
 7908 0000 80B4     	 push {r7}
 7909              	.LCFI416:
 7910              	 .cfi_def_cfa_offset 4
 7911              	 .cfi_offset 7,-4
 7912 0002 83B0     	 sub sp,sp,#12
 7913              	.LCFI417:
 7914              	 .cfi_def_cfa_offset 16
 7915 0004 00AF     	 add r7,sp,#0
 7916              	.LCFI418:
 7917              	 .cfi_def_cfa_register 7
 7918 0006 7860     	 str r0,[r7,#4]
2633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return (obj->card_state & 0xFU);
 7919              	 .loc 3 2633 0
 7920 0008 7B68     	 ldr r3,[r7,#4]
 7921 000a 1B7A     	 ldrb r3,[r3,#8]
 7922 000c 03F00F03 	 and r3,r3,#15
 7923 0010 DBB2     	 uxtb r3,r3
2634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7924              	 .loc 3 2634 0
 7925 0012 1846     	 mov r0,r3
 7926 0014 0C37     	 adds r7,r7,#12
 7927              	.LCFI419:
 7928              	 .cfi_def_cfa_offset 4
 7929 0016 BD46     	 mov sp,r7
 7930              	.LCFI420:
 7931              	 .cfi_def_cfa_register 13
 7932              	 
 7933 0018 5DF8047B 	 ldr r7,[sp],#4
 7934              	.LCFI421:
 7935              	 .cfi_restore 7
 7936              	 .cfi_def_cfa_offset 0
 7937 001c 7047     	 bx lr
 7938              	 .cfi_endproc
 7939              	.LFE279:
 7941 001e 00BF     	 .section .text.SDMMC_BLOCK_SD_GetCardType,"ax",%progbits
 7942              	 .align 2
 7943              	 .global SDMMC_BLOCK_SD_GetCardType
 7944              	 .thumb
 7945              	 .thumb_func
 7947              	SDMMC_BLOCK_SD_GetCardType:
 7948              	.LFB280:
2635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get card type */
2637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetCardType(SDMMC_BLOCK_t *const obj, uint32_t *card_type)
2638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7949              	 .loc 3 2638 0
 7950              	 .cfi_startproc
 7951              	 
 7952              	 
 7953              	 
 7954 0000 80B4     	 push {r7}
 7955              	.LCFI422:
 7956              	 .cfi_def_cfa_offset 4
 7957              	 .cfi_offset 7,-4
 7958 0002 83B0     	 sub sp,sp,#12
 7959              	.LCFI423:
 7960              	 .cfi_def_cfa_offset 16
 7961 0004 00AF     	 add r7,sp,#0
 7962              	.LCFI424:
 7963              	 .cfi_def_cfa_register 7
 7964 0006 7860     	 str r0,[r7,#4]
 7965 0008 3960     	 str r1,[r7]
2639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   *card_type = obj->card_type;
 7966              	 .loc 3 2639 0
 7967 000a 7B68     	 ldr r3,[r7,#4]
 7968 000c 5B7A     	 ldrb r3,[r3,#9]
 7969 000e 1A46     	 mov r2,r3
 7970 0010 3B68     	 ldr r3,[r7]
 7971 0012 1A60     	 str r2,[r3]
2640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 7972              	 .loc 3 2641 0
 7973 0014 0023     	 movs r3,#0
2642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7974              	 .loc 3 2642 0
 7975 0016 1846     	 mov r0,r3
 7976 0018 0C37     	 adds r7,r7,#12
 7977              	.LCFI425:
 7978              	 .cfi_def_cfa_offset 4
 7979 001a BD46     	 mov sp,r7
 7980              	.LCFI426:
 7981              	 .cfi_def_cfa_register 13
 7982              	 
 7983 001c 5DF8047B 	 ldr r7,[sp],#4
 7984              	.LCFI427:
 7985              	 .cfi_restore 7
 7986              	 .cfi_def_cfa_offset 0
 7987 0020 7047     	 bx lr
 7988              	 .cfi_endproc
 7989              	.LFE280:
 7991 0022 00BF     	 .section .text.SDMMC_BLOCK_SD_GetCid,"ax",%progbits
 7992              	 .align 2
 7993              	 .global SDMMC_BLOCK_SD_GetCid
 7994              	 .thumb
 7995              	 .thumb_func
 7997              	SDMMC_BLOCK_SD_GetCid:
 7998              	.LFB281:
2643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get CID register information of card */
2645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetCid(SDMMC_BLOCK_t *const obj, void *buf)
2646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7999              	 .loc 3 2646 0
 8000              	 .cfi_startproc
 8001              	 
 8002              	 
 8003              	 
 8004 0000 80B4     	 push {r7}
 8005              	.LCFI428:
 8006              	 .cfi_def_cfa_offset 4
 8007              	 .cfi_offset 7,-4
 8008 0002 85B0     	 sub sp,sp,#20
 8009              	.LCFI429:
 8010              	 .cfi_def_cfa_offset 24
 8011 0004 00AF     	 add r7,sp,#0
 8012              	.LCFI430:
 8013              	 .cfi_def_cfa_register 7
 8014 0006 7860     	 str r0,[r7,#4]
 8015 0008 3960     	 str r1,[r7]
2647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_CID_t *temp = (SDMMC_BLOCK_CID_t *)buf;
 8016              	 .loc 3 2647 0
 8017 000a 3B68     	 ldr r3,[r7]
 8018 000c FB60     	 str r3,[r7,#12]
2648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->manufacturing_date = (uint16_t)((obj->sdmmc_sd->card_info.cid[0]) & 0xFFFU);
 8019              	 .loc 3 2649 0
 8020 000e 7B68     	 ldr r3,[r7,#4]
 8021 0010 1B68     	 ldr r3,[r3]
 8022 0012 5B6A     	 ldr r3,[r3,#36]
 8023 0014 9BB2     	 uxth r3,r3
 8024 0016 C3F30B03 	 ubfx r3,r3,#0,#12
 8025 001a 9AB2     	 uxth r2,r3
 8026 001c FB68     	 ldr r3,[r7,#12]
 8027 001e 1A80     	 strh r2,[r3]
2650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_serial_num = (obj->sdmmc_sd->card_info.cid[1] << 16U) | (obj->sdmmc_sd->card_info.c
 8028              	 .loc 3 2650 0
 8029 0020 7B68     	 ldr r3,[r7,#4]
 8030 0022 1B68     	 ldr r3,[r3]
 8031 0024 9B6A     	 ldr r3,[r3,#40]
 8032 0026 1A04     	 lsls r2,r3,#16
 8033 0028 7B68     	 ldr r3,[r7,#4]
 8034 002a 1B68     	 ldr r3,[r3]
 8035 002c 5B6A     	 ldr r3,[r3,#36]
 8036 002e 1B0C     	 lsrs r3,r3,#16
 8037 0030 1A43     	 orrs r2,r2,r3
 8038 0032 FB68     	 ldr r3,[r7,#12]
 8039 0034 5A60     	 str r2,[r3,#4]
2651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_rev = (uint8_t)((obj->sdmmc_sd->card_info.cid[1] >> 16U) & 0xFFU);
 8040              	 .loc 3 2651 0
 8041 0036 7B68     	 ldr r3,[r7,#4]
 8042 0038 1B68     	 ldr r3,[r3]
 8043 003a 9B6A     	 ldr r3,[r3,#40]
 8044 003c 1B0C     	 lsrs r3,r3,#16
 8045 003e DAB2     	 uxtb r2,r3
 8046 0040 FB68     	 ldr r3,[r7,#12]
 8047 0042 1A72     	 strb r2,[r3,#8]
2652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[0] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 24U) & 0xFFU);
 8048              	 .loc 3 2652 0
 8049 0044 7B68     	 ldr r3,[r7,#4]
 8050 0046 1B68     	 ldr r3,[r3]
 8051 0048 DB6A     	 ldr r3,[r3,#44]
 8052 004a 1B0E     	 lsrs r3,r3,#24
 8053 004c DAB2     	 uxtb r2,r3
 8054 004e FB68     	 ldr r3,[r7,#12]
 8055 0050 5A72     	 strb r2,[r3,#9]
2653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[1] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 16U) & 0xFFU);
 8056              	 .loc 3 2653 0
 8057 0052 7B68     	 ldr r3,[r7,#4]
 8058 0054 1B68     	 ldr r3,[r3]
 8059 0056 DB6A     	 ldr r3,[r3,#44]
 8060 0058 1B0C     	 lsrs r3,r3,#16
 8061 005a DAB2     	 uxtb r2,r3
 8062 005c FB68     	 ldr r3,[r7,#12]
 8063 005e 9A72     	 strb r2,[r3,#10]
2654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[2] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 8U) & 0xFFU);
 8064              	 .loc 3 2654 0
 8065 0060 7B68     	 ldr r3,[r7,#4]
 8066 0062 1B68     	 ldr r3,[r3]
 8067 0064 DB6A     	 ldr r3,[r3,#44]
 8068 0066 1B0A     	 lsrs r3,r3,#8
 8069 0068 DAB2     	 uxtb r2,r3
 8070 006a FB68     	 ldr r3,[r7,#12]
 8071 006c DA72     	 strb r2,[r3,#11]
2655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[3] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 0U) & 0xFFU);
 8072              	 .loc 3 2655 0
 8073 006e 7B68     	 ldr r3,[r7,#4]
 8074 0070 1B68     	 ldr r3,[r3]
 8075 0072 DB6A     	 ldr r3,[r3,#44]
 8076 0074 DAB2     	 uxtb r2,r3
 8077 0076 FB68     	 ldr r3,[r7,#12]
 8078 0078 1A73     	 strb r2,[r3,#12]
2656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[4] = (uint8_t)((obj->sdmmc_sd->card_info.cid[1] >> 24U) & 0xFFU);
 8079              	 .loc 3 2656 0
 8080 007a 7B68     	 ldr r3,[r7,#4]
 8081 007c 1B68     	 ldr r3,[r3]
 8082 007e 9B6A     	 ldr r3,[r3,#40]
 8083 0080 1B0E     	 lsrs r3,r3,#24
 8084 0082 DAB2     	 uxtb r2,r3
 8085 0084 FB68     	 ldr r3,[r7,#12]
 8086 0086 5A73     	 strb r2,[r3,#13]
2657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->app_oem_id[0] = (uint8_t)((obj->sdmmc_sd->card_info.cid[3] >> 8U) & 0xFFU);
 8087              	 .loc 3 2657 0
 8088 0088 7B68     	 ldr r3,[r7,#4]
 8089 008a 1B68     	 ldr r3,[r3]
 8090 008c 1B6B     	 ldr r3,[r3,#48]
 8091 008e 1B0A     	 lsrs r3,r3,#8
 8092 0090 DAB2     	 uxtb r2,r3
 8093 0092 FB68     	 ldr r3,[r7,#12]
 8094 0094 9A73     	 strb r2,[r3,#14]
2658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->app_oem_id[1] = (uint8_t)((obj->sdmmc_sd->card_info.cid[3]) & 0xFFU);
 8095              	 .loc 3 2658 0
 8096 0096 7B68     	 ldr r3,[r7,#4]
 8097 0098 1B68     	 ldr r3,[r3]
 8098 009a 1B6B     	 ldr r3,[r3,#48]
 8099 009c DAB2     	 uxtb r2,r3
 8100 009e FB68     	 ldr r3,[r7,#12]
 8101 00a0 DA73     	 strb r2,[r3,#15]
2659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->manufacturer_id = (uint8_t)((obj->sdmmc_sd->card_info.cid[3] >> 16U) & 0xFFU);
 8102              	 .loc 3 2659 0
 8103 00a2 7B68     	 ldr r3,[r7,#4]
 8104 00a4 1B68     	 ldr r3,[r3]
 8105 00a6 1B6B     	 ldr r3,[r3,#48]
 8106 00a8 1B0C     	 lsrs r3,r3,#16
 8107 00aa DAB2     	 uxtb r2,r3
 8108 00ac FB68     	 ldr r3,[r7,#12]
 8109 00ae 1A74     	 strb r2,[r3,#16]
2660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8110              	 .loc 3 2661 0
 8111 00b0 0023     	 movs r3,#0
2662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8112              	 .loc 3 2662 0
 8113 00b2 1846     	 mov r0,r3
 8114 00b4 1437     	 adds r7,r7,#20
 8115              	.LCFI431:
 8116              	 .cfi_def_cfa_offset 4
 8117 00b6 BD46     	 mov sp,r7
 8118              	.LCFI432:
 8119              	 .cfi_def_cfa_register 13
 8120              	 
 8121 00b8 5DF8047B 	 ldr r7,[sp],#4
 8122              	.LCFI433:
 8123              	 .cfi_restore 7
 8124              	 .cfi_def_cfa_offset 0
 8125 00bc 7047     	 bx lr
 8126              	 .cfi_endproc
 8127              	.LFE281:
 8129 00be 00BF     	 .section .text.SDMMC_BLOCK_SD_GetOcr,"ax",%progbits
 8130              	 .align 2
 8131              	 .global SDMMC_BLOCK_SD_GetOcr
 8132              	 .thumb
 8133              	 .thumb_func
 8135              	SDMMC_BLOCK_SD_GetOcr:
 8136              	.LFB282:
2663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get OCR information */
2665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetOcr(SDMMC_BLOCK_t *const obj, void *buf)
2666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8137              	 .loc 3 2666 0
 8138              	 .cfi_startproc
 8139              	 
 8140              	 
 8141              	 
 8142 0000 80B4     	 push {r7}
 8143              	.LCFI434:
 8144              	 .cfi_def_cfa_offset 4
 8145              	 .cfi_offset 7,-4
 8146 0002 83B0     	 sub sp,sp,#12
 8147              	.LCFI435:
 8148              	 .cfi_def_cfa_offset 16
 8149 0004 00AF     	 add r7,sp,#0
 8150              	.LCFI436:
 8151              	 .cfi_def_cfa_register 7
 8152 0006 7860     	 str r0,[r7,#4]
 8153 0008 3960     	 str r1,[r7]
2667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   *(uint32_t *)buf = obj->sdmmc_sd->card_info.ocr;
 8154              	 .loc 3 2667 0
 8155 000a 7B68     	 ldr r3,[r7,#4]
 8156 000c 1B68     	 ldr r3,[r3]
 8157 000e 1A6A     	 ldr r2,[r3,#32]
 8158 0010 3B68     	 ldr r3,[r7]
 8159 0012 1A60     	 str r2,[r3]
2668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8160              	 .loc 3 2669 0
 8161 0014 0023     	 movs r3,#0
2670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8162              	 .loc 3 2670 0
 8163 0016 1846     	 mov r0,r3
 8164 0018 0C37     	 adds r7,r7,#12
 8165              	.LCFI437:
 8166              	 .cfi_def_cfa_offset 4
 8167 001a BD46     	 mov sp,r7
 8168              	.LCFI438:
 8169              	 .cfi_def_cfa_register 13
 8170              	 
 8171 001c 5DF8047B 	 ldr r7,[sp],#4
 8172              	.LCFI439:
 8173              	 .cfi_restore 7
 8174              	 .cfi_def_cfa_offset 0
 8175 0020 7047     	 bx lr
 8176              	 .cfi_endproc
 8177              	.LFE282:
 8179 0022 00BF     	 .section .text.SDMMC_BLOCK_SD_GetCsd,"ax",%progbits
 8180              	 .align 2
 8181              	 .global SDMMC_BLOCK_SD_GetCsd
 8182              	 .thumb
 8183              	 .thumb_func
 8185              	SDMMC_BLOCK_SD_GetCsd:
 8186              	.LFB283:
2671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get CSD information */
2673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetCsd(SDMMC_BLOCK_t *const obj, void *buf)
2674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8187              	 .loc 3 2674 0
 8188              	 .cfi_startproc
 8189              	 
 8190              	 
 8191 0000 80B5     	 push {r7,lr}
 8192              	.LCFI440:
 8193              	 .cfi_def_cfa_offset 8
 8194              	 .cfi_offset 7,-8
 8195              	 .cfi_offset 14,-4
 8196 0002 82B0     	 sub sp,sp,#8
 8197              	.LCFI441:
 8198              	 .cfi_def_cfa_offset 16
 8199 0004 00AF     	 add r7,sp,#0
 8200              	.LCFI442:
 8201              	 .cfi_def_cfa_register 7
 8202 0006 7860     	 str r0,[r7,#4]
 8203 0008 3960     	 str r1,[r7]
2675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
2676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * CSD Structure includes 7-bit CRC and 1-bit fixed bit
2677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * which is not sent by the card. So, skip 1 byte before
2678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * copying into the structure.
2679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
2680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   memcpy(((uint8_t *)buf + 1U), (void *)obj->sdmmc_sd->card_info.csd, 15U);
 8204              	 .loc 3 2680 0
 8205 000a 3B68     	 ldr r3,[r7]
 8206 000c 5A1C     	 adds r2,r3,#1
 8207 000e 7B68     	 ldr r3,[r7,#4]
 8208 0010 1B68     	 ldr r3,[r3]
 8209 0012 3433     	 adds r3,r3,#52
 8210 0014 1046     	 mov r0,r2
 8211 0016 1946     	 mov r1,r3
 8212 0018 0F22     	 movs r2,#15
 8213 001a FFF7FEFF 	 bl memcpy
2681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8214              	 .loc 3 2682 0
 8215 001e 0023     	 movs r3,#0
2683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8216              	 .loc 3 2683 0
 8217 0020 1846     	 mov r0,r3
 8218 0022 0837     	 adds r7,r7,#8
 8219              	.LCFI443:
 8220              	 .cfi_def_cfa_offset 8
 8221 0024 BD46     	 mov sp,r7
 8222              	.LCFI444:
 8223              	 .cfi_def_cfa_register 13
 8224              	 
 8225 0026 80BD     	 pop {r7,pc}
 8226              	 .cfi_endproc
 8227              	.LFE283:
 8229              	 .section .text.SDMMC_BLOCK_SD_GetSectorCount,"ax",%progbits
 8230              	 .align 2
 8231              	 .global SDMMC_BLOCK_SD_GetSectorCount
 8232              	 .thumb
 8233              	 .thumb_func
 8235              	SDMMC_BLOCK_SD_GetSectorCount:
 8236              	.LFB284:
2684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get number of sectors present on the card */
2686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetSectorCount(SDMMC_BLOCK_t *const obj, void *buf)
2687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8237              	 .loc 3 2687 0
 8238              	 .cfi_startproc
 8239              	 
 8240              	 
 8241 0000 80B5     	 push {r7,lr}
 8242              	.LCFI445:
 8243              	 .cfi_def_cfa_offset 8
 8244              	 .cfi_offset 7,-8
 8245              	 .cfi_offset 14,-4
 8246 0002 8EB0     	 sub sp,sp,#56
 8247              	.LCFI446:
 8248              	 .cfi_def_cfa_offset 64
 8249 0004 00AF     	 add r7,sp,#0
 8250              	.LCFI447:
 8251              	 .cfi_def_cfa_register 7
 8252 0006 7860     	 str r0,[r7,#4]
 8253 0008 3960     	 str r1,[r7]
2688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8254              	 .loc 3 2688 0
 8255 000a 0023     	 movs r3,#0
 8256 000c 87F83730 	 strb r3,[r7,#55]
2689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY) != (uint32_t)0U)
 8257              	 .loc 3 2690 0
 8258 0010 7B68     	 ldr r3,[r7,#4]
 8259 0012 5B7A     	 ldrb r3,[r3,#9]
 8260 0014 03F00403 	 and r3,r3,#4
 8261 0018 002B     	 cmp r3,#0
 8262 001a 26D0     	 beq .L403
 8263              	.LBB4:
2691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV2_CSD_t temp_csd_v2 = {0U};
 8264              	 .loc 3 2692 0
 8265 001c 07F11C03 	 add r3,r7,#28
 8266 0020 0022     	 movs r2,#0
 8267 0022 1A60     	 str r2,[r3]
 8268 0024 0433     	 adds r3,r3,#4
 8269 0026 0022     	 movs r2,#0
 8270 0028 1A60     	 str r2,[r3]
 8271 002a 0433     	 adds r3,r3,#4
 8272 002c 0022     	 movs r2,#0
 8273 002e 1A60     	 str r2,[r3]
 8274 0030 0433     	 adds r3,r3,#4
 8275 0032 0022     	 movs r2,#0
 8276 0034 1A60     	 str r2,[r3]
 8277 0036 0433     	 adds r3,r3,#4
 8278 0038 0022     	 movs r2,#0
 8279 003a 1A60     	 str r2,[r3]
 8280 003c 0433     	 adds r3,r3,#4
2693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v2);
 8281              	 .loc 3 2695 0
 8282 003e 07F11C03 	 add r3,r7,#28
 8283 0042 7868     	 ldr r0,[r7,#4]
 8284 0044 1946     	 mov r1,r3
 8285 0046 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8286 004a 0346     	 mov r3,r0
 8287 004c 87F83730 	 strb r3,[r7,#55]
2696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8288              	 .loc 3 2696 0
 8289 0050 97F83730 	 ldrb r3,[r7,#55]
 8290 0054 002B     	 cmp r3,#0
 8291 0056 07D1     	 bne .L404
2697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
2699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * For High Capacity SD card, (C_SIZE field value + 1) * 1024
2700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * gives the sector count
2701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
2702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *(uint32_t *)buf = (uint32_t)(((uint32_t)temp_csd_v2.dev_size + 1) << 10);
 8292              	 .loc 3 2702 0
 8293 0058 7B6A     	 ldr r3,[r7,#36]
 8294 005a C3F31503 	 ubfx r3,r3,#0,#22
 8295 005e 0133     	 adds r3,r3,#1
 8296 0060 9A02     	 lsls r2,r3,#10
 8297 0062 3B68     	 ldr r3,[r7]
 8298 0064 1A60     	 str r2,[r3]
 8299              	.LBE4:
 8300 0066 31E0     	 b .L405
 8301              	.L404:
 8302 0068 30E0     	 b .L405
 8303              	.L403:
 8304              	.LBB5:
2703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
2706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * For Standard SD (and MMC) cards:
2707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Sector Count = (Device Size + 1) * Mult, where Mult =  2 ^ C_SIZE_MULT
2708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
2709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV1_CSD_t temp_csd_v1 = {0U};
 8305              	 .loc 3 2711 0
 8306 006a 07F10803 	 add r3,r7,#8
 8307 006e 0022     	 movs r2,#0
 8308 0070 1A60     	 str r2,[r3]
 8309 0072 0433     	 adds r3,r3,#4
 8310 0074 0022     	 movs r2,#0
 8311 0076 1A60     	 str r2,[r3]
 8312 0078 0433     	 adds r3,r3,#4
 8313 007a 0022     	 movs r2,#0
 8314 007c 1A60     	 str r2,[r3]
 8315 007e 0433     	 adds r3,r3,#4
 8316 0080 0022     	 movs r2,#0
 8317 0082 1A60     	 str r2,[r3]
 8318 0084 0433     	 adds r3,r3,#4
 8319 0086 0022     	 movs r2,#0
 8320 0088 1A60     	 str r2,[r3]
 8321 008a 0433     	 adds r3,r3,#4
2712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v1);
 8322              	 .loc 3 2713 0
 8323 008c 07F10803 	 add r3,r7,#8
 8324 0090 7868     	 ldr r0,[r7,#4]
 8325 0092 1946     	 mov r1,r3
 8326 0094 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8327 0098 0346     	 mov r3,r0
 8328 009a 87F83730 	 strb r3,[r7,#55]
2714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8329              	 .loc 3 2714 0
 8330 009e 97F83730 	 ldrb r3,[r7,#55]
 8331 00a2 002B     	 cmp r3,#0
 8332 00a4 12D1     	 bne .L405
 8333              	.LBB6:
2715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
2717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * For standard capacity SD card BLOCKNR = (C_SIZE+1) * MULT where MULT = 2^(C_SIZE_MULT+2) a
2718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
2719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       uint32_t mult = (uint32_t)(1 << ((uint32_t)temp_csd_v1.dev_size_mult + 2));
 8334              	 .loc 3 2719 0
 8335 00a6 FB68     	 ldr r3,[r7,#12]
 8336 00a8 C3F3C233 	 ubfx r3,r3,#15,#3
 8337 00ac DBB2     	 uxtb r3,r3
 8338 00ae 0233     	 adds r3,r3,#2
 8339 00b0 1A46     	 mov r2,r3
 8340 00b2 0123     	 movs r3,#1
 8341 00b4 9340     	 lsls r3,r3,r2
 8342 00b6 3B63     	 str r3,[r7,#48]
2720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *(uint32_t *)buf = ((uint32_t)temp_csd_v1.dev_size + 1) * mult;
 8343              	 .loc 3 2720 0
 8344 00b8 3B8A     	 ldrh r3,[r7,#16]
 8345 00ba C3F30B03 	 ubfx r3,r3,#0,#12
 8346 00be 9BB2     	 uxth r3,r3
 8347 00c0 0133     	 adds r3,r3,#1
 8348 00c2 3A6B     	 ldr r2,[r7,#48]
 8349 00c4 02FB03F2 	 mul r2,r2,r3
 8350 00c8 3B68     	 ldr r3,[r7]
 8351 00ca 1A60     	 str r2,[r3]
 8352              	.L405:
 8353              	.LBE6:
 8354              	.LBE5:
2721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8355              	 .loc 3 2724 0
 8356 00cc 97F83730 	 ldrb r3,[r7,#55]
2725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8357              	 .loc 3 2725 0
 8358 00d0 1846     	 mov r0,r3
 8359 00d2 3837     	 adds r7,r7,#56
 8360              	.LCFI448:
 8361              	 .cfi_def_cfa_offset 8
 8362 00d4 BD46     	 mov sp,r7
 8363              	.LCFI449:
 8364              	 .cfi_def_cfa_register 13
 8365              	 
 8366 00d6 80BD     	 pop {r7,pc}
 8367              	 .cfi_endproc
 8368              	.LFE284:
 8370              	 .section .text.SDMMC_BLOCK_SD_GetSectorSize,"ax",%progbits
 8371              	 .align 2
 8372              	 .global SDMMC_BLOCK_SD_GetSectorSize
 8373              	 .thumb
 8374              	 .thumb_func
 8376              	SDMMC_BLOCK_SD_GetSectorSize:
 8377              	.LFB285:
2726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get sector size info from the card */
2728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetSectorSize(SDMMC_BLOCK_t *const obj, void *buf)
2729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8378              	 .loc 3 2729 0
 8379              	 .cfi_startproc
 8380              	 
 8381              	 
 8382              	 
 8383 0000 80B4     	 push {r7}
 8384              	.LCFI450:
 8385              	 .cfi_def_cfa_offset 4
 8386              	 .cfi_offset 7,-4
 8387 0002 83B0     	 sub sp,sp,#12
 8388              	.LCFI451:
 8389              	 .cfi_def_cfa_offset 16
 8390 0004 00AF     	 add r7,sp,#0
 8391              	.LCFI452:
 8392              	 .cfi_def_cfa_register 7
 8393 0006 7860     	 str r0,[r7,#4]
 8394 0008 3960     	 str r1,[r7]
2730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Sector Size is fixed to 512 bytes */
2731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   *(uint16_t *)buf = (uint16_t)512U;
 8395              	 .loc 3 2731 0
 8396 000a 3B68     	 ldr r3,[r7]
 8397 000c 4FF40072 	 mov r2,#512
 8398 0010 1A80     	 strh r2,[r3]
2732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8399              	 .loc 3 2733 0
 8400 0012 0023     	 movs r3,#0
2734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8401              	 .loc 3 2734 0
 8402 0014 1846     	 mov r0,r3
 8403 0016 0C37     	 adds r7,r7,#12
 8404              	.LCFI453:
 8405              	 .cfi_def_cfa_offset 4
 8406 0018 BD46     	 mov sp,r7
 8407              	.LCFI454:
 8408              	 .cfi_def_cfa_register 13
 8409              	 
 8410 001a 5DF8047B 	 ldr r7,[sp],#4
 8411              	.LCFI455:
 8412              	 .cfi_restore 7
 8413              	 .cfi_def_cfa_offset 0
 8414 001e 7047     	 bx lr
 8415              	 .cfi_endproc
 8416              	.LFE285:
 8418              	 .section .text.SDMMC_BLOCK_SD_GetBlockSize,"ax",%progbits
 8419              	 .align 2
 8420              	 .global SDMMC_BLOCK_SD_GetBlockSize
 8421              	 .thumb
 8422              	 .thumb_func
 8424              	SDMMC_BLOCK_SD_GetBlockSize:
 8425              	.LFB286:
2735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetBlockSize(SDMMC_BLOCK_t *const obj, void *buf)
2737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8426              	 .loc 3 2737 0
 8427              	 .cfi_startproc
 8428              	 
 8429              	 
 8430 0000 80B5     	 push {r7,lr}
 8431              	.LCFI456:
 8432              	 .cfi_def_cfa_offset 8
 8433              	 .cfi_offset 7,-8
 8434              	 .cfi_offset 14,-4
 8435 0002 8EB0     	 sub sp,sp,#56
 8436              	.LCFI457:
 8437              	 .cfi_def_cfa_offset 64
 8438 0004 00AF     	 add r7,sp,#0
 8439              	.LCFI458:
 8440              	 .cfi_def_cfa_register 7
 8441 0006 7860     	 str r0,[r7,#4]
 8442 0008 3960     	 str r1,[r7]
2738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8443              	 .loc 3 2738 0
 8444 000a 0023     	 movs r3,#0
 8445 000c 87F83730 	 strb r3,[r7,#55]
2739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD high capacity card (CSD V2) */
2741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY) != (uint32_t)0)
 8446              	 .loc 3 2741 0
 8447 0010 7B68     	 ldr r3,[r7,#4]
 8448 0012 5B7A     	 ldrb r3,[r3,#9]
 8449 0014 03F00403 	 and r3,r3,#4
 8450 0018 002B     	 cmp r3,#0
 8451 001a 21D0     	 beq .L411
 8452              	.LBB7:
2742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV2_CSD_t temp_csd_v2 = {0U};
 8453              	 .loc 3 2743 0
 8454 001c 07F12003 	 add r3,r7,#32
 8455 0020 0022     	 movs r2,#0
 8456 0022 1A60     	 str r2,[r3]
 8457 0024 0433     	 adds r3,r3,#4
 8458 0026 0022     	 movs r2,#0
 8459 0028 1A60     	 str r2,[r3]
 8460 002a 0433     	 adds r3,r3,#4
 8461 002c 0022     	 movs r2,#0
 8462 002e 1A60     	 str r2,[r3]
 8463 0030 0433     	 adds r3,r3,#4
 8464 0032 0022     	 movs r2,#0
 8465 0034 1A60     	 str r2,[r3]
 8466 0036 0433     	 adds r3,r3,#4
 8467 0038 0022     	 movs r2,#0
 8468 003a 1A60     	 str r2,[r3]
 8469 003c 0433     	 adds r3,r3,#4
2744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v2);
 8470              	 .loc 3 2745 0
 8471 003e 07F12003 	 add r3,r7,#32
 8472 0042 7868     	 ldr r0,[r7,#4]
 8473 0044 1946     	 mov r1,r3
 8474 0046 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8475 004a 0346     	 mov r3,r0
 8476 004c 87F83730 	 strb r3,[r7,#55]
2746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *(uint32_t *)buf = (uint32_t)((uint32_t)temp_csd_v2.erase_sector_size + (uint32_t)1U);
 8477              	 .loc 3 2746 0
 8478 0050 BB8C     	 ldrh r3,[r7,#36]
 8479 0052 C3F3C613 	 ubfx r3,r3,#7,#7
 8480 0056 DBB2     	 uxtb r3,r3
 8481 0058 5A1C     	 adds r2,r3,#1
 8482 005a 3B68     	 ldr r3,[r7]
 8483 005c 1A60     	 str r2,[r3]
 8484              	.LBE7:
 8485 005e 20E0     	 b .L412
 8486              	.L411:
 8487              	.LBB8:
2747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD standard capacity card (CSD V1) */
2749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV2_CSD_t temp_csd_v1  = {0U};
 8488              	 .loc 3 2751 0
 8489 0060 07F10C03 	 add r3,r7,#12
 8490 0064 0022     	 movs r2,#0
 8491 0066 1A60     	 str r2,[r3]
 8492 0068 0433     	 adds r3,r3,#4
 8493 006a 0022     	 movs r2,#0
 8494 006c 1A60     	 str r2,[r3]
 8495 006e 0433     	 adds r3,r3,#4
 8496 0070 0022     	 movs r2,#0
 8497 0072 1A60     	 str r2,[r3]
 8498 0074 0433     	 adds r3,r3,#4
 8499 0076 0022     	 movs r2,#0
 8500 0078 1A60     	 str r2,[r3]
 8501 007a 0433     	 adds r3,r3,#4
 8502 007c 0022     	 movs r2,#0
 8503 007e 1A60     	 str r2,[r3]
 8504 0080 0433     	 adds r3,r3,#4
2752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v1);
 8505              	 .loc 3 2753 0
 8506 0082 07F10C03 	 add r3,r7,#12
 8507 0086 7868     	 ldr r0,[r7,#4]
 8508 0088 1946     	 mov r1,r3
 8509 008a FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8510 008e 0346     	 mov r3,r0
 8511 0090 87F83730 	 strb r3,[r7,#55]
2754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *(uint32_t *)buf = (uint32_t)((uint32_t)temp_csd_v1.erase_sector_size + (uint32_t)1U);
 8512              	 .loc 3 2754 0
 8513 0094 3B8A     	 ldrh r3,[r7,#16]
 8514 0096 C3F3C613 	 ubfx r3,r3,#7,#7
 8515 009a DBB2     	 uxtb r3,r3
 8516 009c 5A1C     	 adds r2,r3,#1
 8517 009e 3B68     	 ldr r3,[r7]
 8518 00a0 1A60     	 str r2,[r3]
 8519              	.L412:
 8520              	.LBE8:
2755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8521              	 .loc 3 2757 0
 8522 00a2 97F83730 	 ldrb r3,[r7,#55]
2758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8523              	 .loc 3 2758 0
 8524 00a6 1846     	 mov r0,r3
 8525 00a8 3837     	 adds r7,r7,#56
 8526              	.LCFI459:
 8527              	 .cfi_def_cfa_offset 8
 8528 00aa BD46     	 mov sp,r7
 8529              	.LCFI460:
 8530              	 .cfi_def_cfa_register 13
 8531              	 
 8532 00ac 80BD     	 pop {r7,pc}
 8533              	 .cfi_endproc
 8534              	.LFE286:
 8536 00ae 00BF     	 .section .text.SDMMC_BLOCK_SD_GetSdStatus,"ax",%progbits
 8537              	 .align 2
 8538              	 .global SDMMC_BLOCK_SD_GetSdStatus
 8539              	 .thumb
 8540              	 .thumb_func
 8542              	SDMMC_BLOCK_SD_GetSdStatus:
 8543              	.LFB287:
2759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get SD status information */
2761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetSdStatus(SDMMC_BLOCK_t *const obj, void *buf)
2762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8544              	 .loc 3 2762 0
 8545              	 .cfi_startproc
 8546              	 
 8547              	 
 8548 0000 80B5     	 push {r7,lr}
 8549              	.LCFI461:
 8550              	 .cfi_def_cfa_offset 8
 8551              	 .cfi_offset 7,-8
 8552              	 .cfi_offset 14,-4
 8553 0002 88B0     	 sub sp,sp,#32
 8554              	.LCFI462:
 8555              	 .cfi_def_cfa_offset 40
 8556 0004 02AF     	 add r7,sp,#8
 8557              	.LCFI463:
 8558              	 .cfi_def_cfa 7,32
 8559 0006 7860     	 str r0,[r7,#4]
 8560 0008 3960     	 str r1,[r7]
2763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 8561              	 .loc 3 2763 0
 8562 000a 0023     	 movs r3,#0
 8563 000c 3B61     	 str r3,[r7,#16]
2764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 8564              	 .loc 3 2764 0
 8565 000e 0023     	 movs r3,#0
 8566 0010 FB60     	 str r3,[r7,#12]
2765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 8567              	 .loc 3 2765 0
 8568 0012 0123     	 movs r3,#1
 8569 0014 FB75     	 strb r3,[r7,#23]
2766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Select the card (CMD7) */
2768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 8570              	 .loc 3 2768 0
 8571 0016 7868     	 ldr r0,[r7,#4]
 8572 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 8573 001c 0346     	 mov r3,r0
 8574 001e FB75     	 strb r3,[r7,#23]
2769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8575              	 .loc 3 2769 0
 8576 0020 FB7D     	 ldrb r3,[r7,#23]
 8577 0022 002B     	 cmp r3,#0
 8578 0024 30D1     	 bne .L415
2770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD55 (application specific command) */
2772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPO
 8579              	 .loc 3 2772 0
 8580 0026 7B68     	 ldr r3,[r7,#4]
 8581 0028 1B68     	 ldr r3,[r3]
 8582 002a B3F84C30 	 ldrh r3,[r3,#76]
 8583 002e 1B04     	 lsls r3,r3,#16
 8584 0030 3A69     	 ldr r2,[r7,#16]
 8585 0032 1343     	 orrs r3,r3,r2
 8586 0034 3B61     	 str r3,[r7,#16]
2773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 8587              	 .loc 3 2775 0
 8588 0036 1923     	 movs r3,#25
2774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 8589              	 .loc 3 2774 0
 8590 0038 5B00     	 lsls r3,r3,#1
 8591 003a 164A     	 ldr r2,.L417
 8592 003c 1A44     	 add r2,r2,r3
 8593 003e 07F10C03 	 add r3,r7,#12
 8594 0042 0093     	 str r3,[sp]
 8595 0044 7868     	 ldr r0,[r7,#4]
 8596 0046 1146     	 mov r1,r2
 8597 0048 3A69     	 ldr r2,[r7,#16]
 8598 004a 0123     	 movs r3,#1
 8599 004c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 8600 0050 0346     	 mov r3,r0
 8601 0052 FB75     	 strb r3,[r7,#23]
2776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          arg,
2777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
2778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8602              	 .loc 3 2780 0
 8603 0054 FB7D     	 ldrb r3,[r7,#23]
 8604 0056 002B     	 cmp r3,#0
 8605 0058 16D1     	 bne .L415
2781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set transfer mode */
2783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST
 8606              	 .loc 3 2783 0
 8607 005a 7B68     	 ldr r3,[r7,#4]
 8608 005c 1B68     	 ldr r3,[r3]
 8609 005e 1B68     	 ldr r3,[r3]
 8610 0060 1846     	 mov r0,r3
 8611 0062 0121     	 movs r1,#1
 8612 0064 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Read the SD status from the data line */
2786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(59)),
 8613              	 .loc 3 2787 0
 8614 0068 1C23     	 movs r3,#28
2786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(59)),
 8615              	 .loc 3 2786 0
 8616 006a 5B00     	 lsls r3,r3,#1
 8617 006c 094A     	 ldr r2,.L417
 8618 006e 1A44     	 add r2,r2,r3
 8619 0070 3B68     	 ldr r3,[r7]
 8620 0072 0093     	 str r3,[sp]
 8621 0074 0123     	 movs r3,#1
 8622 0076 0193     	 str r3,[sp,#4]
 8623 0078 7868     	 ldr r0,[r7,#4]
 8624 007a 1146     	 mov r1,r2
 8625 007c 0022     	 movs r2,#0
 8626 007e 4023     	 movs r3,#64
 8627 0080 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 8628 0084 0346     	 mov r3,r0
 8629 0086 FB75     	 strb r3,[r7,#23]
 8630              	.L415:
2788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t)SDMMC_BLOCK_ARGUMENT0,
2789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)64U,
2790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)buf,
2791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
2792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8631              	 .loc 3 2795 0
 8632 0088 FB7D     	 ldrb r3,[r7,#23]
2796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8633              	 .loc 3 2796 0
 8634 008a 1846     	 mov r0,r3
 8635 008c 1837     	 adds r7,r7,#24
 8636              	.LCFI464:
 8637              	 .cfi_def_cfa_offset 8
 8638 008e BD46     	 mov sp,r7
 8639              	.LCFI465:
 8640              	 .cfi_def_cfa_register 13
 8641              	 
 8642 0090 80BD     	 pop {r7,pc}
 8643              	.L418:
 8644 0092 00BF     	 .align 2
 8645              	.L417:
 8646 0094 00000000 	 .word sdmmc_block_command
 8647              	 .cfi_endproc
 8648              	.LFE287:
 8650              	 .section .text.SDMMC_BLOCK_SD_EjectCard,"ax",%progbits
 8651              	 .align 2
 8652              	 .global SDMMC_BLOCK_SD_EjectCard
 8653              	 .thumb
 8654              	 .thumb_func
 8656              	SDMMC_BLOCK_SD_EjectCard:
 8657              	.LFB288:
2797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Eject SD card */
2799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_EjectCard(SDMMC_BLOCK_t *const obj)
2800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8658              	 .loc 3 2800 0
 8659              	 .cfi_startproc
 8660              	 
 8661              	 
 8662 0000 80B5     	 push {r7,lr}
 8663              	.LCFI466:
 8664              	 .cfi_def_cfa_offset 8
 8665              	 .cfi_offset 7,-8
 8666              	 .cfi_offset 14,-4
 8667 0002 86B0     	 sub sp,sp,#24
 8668              	.LCFI467:
 8669              	 .cfi_def_cfa_offset 32
 8670 0004 02AF     	 add r7,sp,#8
 8671              	.LCFI468:
 8672              	 .cfi_def_cfa 7,24
 8673 0006 7860     	 str r0,[r7,#4]
2801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 8674              	 .loc 3 2801 0
 8675 0008 0123     	 movs r3,#1
 8676 000a FB73     	 strb r3,[r7,#15]
2802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 8677              	 .loc 3 2802 0
 8678 000c 0023     	 movs r3,#0
 8679 000e BB60     	 str r3,[r7,#8]
2803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((obj->card_state & (uint16_t)SDMMC_BLOCK_CARD_STATE_NO_CARD) == 0U)
 8680              	 .loc 3 2804 0
 8681 0010 7B68     	 ldr r3,[r7,#4]
 8682 0012 1B7A     	 ldrb r3,[r3,#8]
 8683 0014 03F00203 	 and r3,r3,#2
 8684 0018 002B     	 cmp r3,#0
 8685 001a 20D1     	 bne .L420
2805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD15 to deactivate the card */
2807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPO
 8686              	 .loc 3 2807 0
 8687 001c 7B68     	 ldr r3,[r7,#4]
 8688 001e 1B68     	 ldr r3,[r3]
 8689 0020 B3F84C30 	 ldrh r3,[r3,#76]
 8690 0024 1B04     	 lsls r3,r3,#16
 8691 0026 BA68     	 ldr r2,[r7,#8]
 8692 0028 1343     	 orrs r3,r3,r2
 8693 002a BB60     	 str r3,[r7,#8]
2808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(15)),
 8694              	 .loc 3 2810 0
 8695 002c 0B23     	 movs r3,#11
2809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(15)),
 8696              	 .loc 3 2809 0
 8697 002e 5B00     	 lsls r3,r3,#1
 8698 0030 0D4A     	 ldr r2,.L422
 8699 0032 1A44     	 add r2,r2,r3
 8700 0034 0023     	 movs r3,#0
 8701 0036 0093     	 str r3,[sp]
 8702 0038 7868     	 ldr r0,[r7,#4]
 8703 003a 1146     	 mov r1,r2
 8704 003c BA68     	 ldr r2,[r7,#8]
 8705 003e 0023     	 movs r3,#0
 8706 0040 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 8707 0044 0346     	 mov r3,r0
 8708 0046 FB73     	 strb r3,[r7,#15]
2811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          (uint32_t)arg,
2812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          (XMC_SDMMC_RESPONSE_TYPE_t)XMC_SDMMC_RESPONSE_TYPE_NO_RESP
2813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          NULL);
2814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8709              	 .loc 3 2815 0
 8710 0048 FB7B     	 ldrb r3,[r7,#15]
 8711 004a 002B     	 cmp r3,#0
 8712 004c 07D1     	 bne .L420
2816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2817:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Card Cleanup */
2818:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       SDMMC_BLOCK_SD_lCardCleanUp(obj);
 8713              	 .loc 3 2818 0
 8714 004e 7868     	 ldr r0,[r7,#4]
 8715 0050 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardCleanUp
2819:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->mode_init_flag = false;
 8716              	 .loc 3 2819 0
 8717 0054 7B68     	 ldr r3,[r7,#4]
 8718 0056 1B68     	 ldr r3,[r3]
 8719 0058 0022     	 movs r2,#0
 8720 005a 83F85E20 	 strb r2,[r3,#94]
 8721              	.L420:
2820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2821:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2822:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2823:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8722              	 .loc 3 2823 0
 8723 005e FB7B     	 ldrb r3,[r7,#15]
2824:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8724              	 .loc 3 2824 0
 8725 0060 1846     	 mov r0,r3
 8726 0062 1037     	 adds r7,r7,#16
 8727              	.LCFI469:
 8728              	 .cfi_def_cfa_offset 8
 8729 0064 BD46     	 mov sp,r7
 8730              	.LCFI470:
 8731              	 .cfi_def_cfa_register 13
 8732              	 
 8733 0066 80BD     	 pop {r7,pc}
 8734              	.L423:
 8735              	 .align 2
 8736              	.L422:
 8737 0068 00000000 	 .word sdmmc_block_command
 8738              	 .cfi_endproc
 8739              	.LFE288:
 8741              	 .section .text.SDMMC_BLOCK_SD_Start,"ax",%progbits
 8742              	 .align 2
 8743              	 .global SDMMC_BLOCK_SD_Start
 8744              	 .thumb
 8745              	 .thumb_func
 8747              	SDMMC_BLOCK_SD_Start:
 8748              	.LFB289:
2825:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2826:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
2827:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Initialize low level drivers, host controller, the card
2828:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * and read card registers.
2829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
2830:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_Start(SDMMC_BLOCK_t *const obj)
2831:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8749              	 .loc 3 2831 0
 8750              	 .cfi_startproc
 8751              	 
 8752              	 
 8753 0000 80B5     	 push {r7,lr}
 8754              	.LCFI471:
 8755              	 .cfi_def_cfa_offset 8
 8756              	 .cfi_offset 7,-8
 8757              	 .cfi_offset 14,-4
 8758 0002 84B0     	 sub sp,sp,#16
 8759              	.LCFI472:
 8760              	 .cfi_def_cfa_offset 24
 8761 0004 00AF     	 add r7,sp,#0
 8762              	.LCFI473:
 8763              	 .cfi_def_cfa_register 7
 8764 0006 7860     	 str r0,[r7,#4]
2832:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_HOST_CONTROLLER_INITIALIZED;
 8765              	 .loc 3 2832 0
 8766 0008 2C23     	 movs r3,#44
 8767 000a FB73     	 strb r3,[r7,#15]
2833:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2834:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check If host controller is already initialized */
2835:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_state & (uint32_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED) == (uint32_t)0U
 8768              	 .loc 3 2835 0
 8769 000c 7B68     	 ldr r3,[r7,#4]
 8770 000e 1B7A     	 ldrb r3,[r3,#8]
 8771 0010 03F04003 	 and r3,r3,#64
 8772 0014 002B     	 cmp r3,#0
 8773 0016 1DD1     	 bne .L425
2836:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2837:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Enable Interrupt */
2838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     NVIC_SetPriority(SDMMC0_0_IRQn,
 8774              	 .loc 3 2838 0
 8775 0018 FFF7FEFF 	 bl __NVIC_GetPriorityGrouping
 8776 001c 0146     	 mov r1,r0
2839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
2840:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      obj->sdmmc_sd->int_priority,
 8777              	 .loc 3 2840 0
 8778 001e 7B68     	 ldr r3,[r7,#4]
 8779 0020 1B68     	 ldr r3,[r3]
2838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 8780              	 .loc 3 2838 0
 8781 0022 DA68     	 ldr r2,[r3,#12]
2841:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      obj->sdmmc_sd->int_sub_priority));
 8782              	 .loc 3 2841 0
 8783 0024 7B68     	 ldr r3,[r7,#4]
 8784 0026 1B68     	 ldr r3,[r3]
2838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 8785              	 .loc 3 2838 0
 8786 0028 1B69     	 ldr r3,[r3,#16]
 8787 002a 0846     	 mov r0,r1
 8788 002c 1146     	 mov r1,r2
 8789 002e 1A46     	 mov r2,r3
 8790 0030 FFF7FEFF 	 bl NVIC_EncodePriority
 8791 0034 0346     	 mov r3,r0
 8792 0036 6A20     	 movs r0,#106
 8793 0038 1946     	 mov r1,r3
 8794 003a FFF7FEFF 	 bl __NVIC_SetPriority
2842:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2843:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     NVIC_ClearPendingIRQ(SDMMC0_0_IRQn);
 8795              	 .loc 3 2843 0
 8796 003e 6A20     	 movs r0,#106
 8797 0040 FFF7FEFF 	 bl __NVIC_ClearPendingIRQ
2844:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     NVIC_EnableIRQ(SDMMC0_0_IRQn);
 8798              	 .loc 3 2844 0
 8799 0044 6A20     	 movs r0,#106
 8800 0046 FFF7FEFF 	 bl __NVIC_EnableIRQ
2845:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2846:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Host controller initialize */
2847:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lHostControllerInit(obj);
 8801              	 .loc 3 2847 0
 8802 004a 7868     	 ldr r0,[r7,#4]
 8803 004c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lHostControllerInit
 8804 0050 0346     	 mov r3,r0
 8805 0052 FB73     	 strb r3,[r7,#15]
 8806              	.L425:
2848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8807              	 .loc 3 2850 0
 8808 0054 FB7B     	 ldrb r3,[r7,#15]
2851:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8809              	 .loc 3 2851 0
 8810 0056 1846     	 mov r0,r3
 8811 0058 1037     	 adds r7,r7,#16
 8812              	.LCFI474:
 8813              	 .cfi_def_cfa_offset 8
 8814 005a BD46     	 mov sp,r7
 8815              	.LCFI475:
 8816              	 .cfi_def_cfa_register 13
 8817              	 
 8818 005c 80BD     	 pop {r7,pc}
 8819              	 .cfi_endproc
 8820              	.LFE289:
 8822 005e 00BF     	 .section .text.SDMMC_BLOCK_SD_Init,"ax",%progbits
 8823              	 .align 2
 8824              	 .global SDMMC_BLOCK_SD_Init
 8825              	 .thumb
 8826              	 .thumb_func
 8828              	SDMMC_BLOCK_SD_Init:
 8829              	.LFB290:
2852:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2853:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* De-assert the SDMMC peripheral */
2854:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_Init(SDMMC_BLOCK_t *const obj)
2855:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8830              	 .loc 3 2855 0
 8831              	 .cfi_startproc
 8832              	 
 8833              	 
 8834 0000 80B5     	 push {r7,lr}
 8835              	.LCFI476:
 8836              	 .cfi_def_cfa_offset 8
 8837              	 .cfi_offset 7,-8
 8838              	 .cfi_offset 14,-4
 8839 0002 82B0     	 sub sp,sp,#8
 8840              	.LCFI477:
 8841              	 .cfi_def_cfa_offset 16
 8842 0004 00AF     	 add r7,sp,#0
 8843              	.LCFI478:
 8844              	 .cfi_def_cfa_register 7
 8845 0006 7860     	 str r0,[r7,#4]
2856:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable SDMMC peripheral */
2857:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_Enable(obj->sdmmc_sd->sdmmc);
 8846              	 .loc 3 2857 0
 8847 0008 7B68     	 ldr r3,[r7,#4]
 8848 000a 1B68     	 ldr r3,[r3]
 8849 000c 1B68     	 ldr r3,[r3]
 8850 000e 1846     	 mov r0,r3
 8851 0010 FFF7FEFF 	 bl XMC_SDMMC_Enable
2858:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2859:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Initialize System timer APP */
2860:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SYSTIMER_Init(obj->sdmmc_sd->systimer);
 8852              	 .loc 3 2860 0
 8853 0014 7B68     	 ldr r3,[r7,#4]
 8854 0016 1B68     	 ldr r3,[r3]
 8855 0018 9B6D     	 ldr r3,[r3,#88]
 8856 001a 1846     	 mov r0,r3
 8857 001c FFF7FEFF 	 bl SYSTIMER_Init
2861:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2862:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable SCU clock for SDMMC */
2863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_MMC);
 8858              	 .loc 3 2863 0
 8859 0020 0220     	 movs r0,#2
 8860 0022 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
2864:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2865:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* De-initialize host controller */
2866:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lHostControllerDeInit(obj);
 8861              	 .loc 3 2866 0
 8862 0026 7868     	 ldr r0,[r7,#4]
 8863 0028 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lHostControllerDeInit
2867:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2868:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Initialize LLD and host controller */
2869:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_SD_Start(obj);
 8864              	 .loc 3 2869 0
 8865 002c 7868     	 ldr r0,[r7,#4]
 8866 002e FFF7FEFF 	 bl SDMMC_BLOCK_SD_Start
 8867 0032 0346     	 mov r3,r0
2870:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8868              	 .loc 3 2870 0
 8869 0034 1846     	 mov r0,r3
 8870 0036 0837     	 adds r7,r7,#8
 8871              	.LCFI479:
 8872              	 .cfi_def_cfa_offset 8
 8873 0038 BD46     	 mov sp,r7
 8874              	.LCFI480:
 8875              	 .cfi_def_cfa_register 13
 8876              	 
 8877 003a 80BD     	 pop {r7,pc}
 8878              	 .cfi_endproc
 8879              	.LFE290:
 8881              	 .section .text.SDMMC_BLOCK_SD_ReadBlock,"ax",%progbits
 8882              	 .align 2
 8883              	 .global SDMMC_BLOCK_SD_ReadBlock
 8884              	 .thumb
 8885              	 .thumb_func
 8887              	SDMMC_BLOCK_SD_ReadBlock:
 8888              	.LFB291:
2871:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Reads the data from the card */
2873:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_STATUS_t SDMMC_BLOCK_SD_ReadBlock(SDMMC_BLOCK_t *const obj,
2874:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               uint8_t *read_buf,
2875:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               uint32_t sector_num,
2876:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               uint8_t sector_count)
2877:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8889              	 .loc 3 2877 0
 8890              	 .cfi_startproc
 8891              	 
 8892              	 
 8893 0000 80B5     	 push {r7,lr}
 8894              	.LCFI481:
 8895              	 .cfi_def_cfa_offset 8
 8896              	 .cfi_offset 7,-8
 8897              	 .cfi_offset 14,-4
 8898 0002 86B0     	 sub sp,sp,#24
 8899              	.LCFI482:
 8900              	 .cfi_def_cfa_offset 32
 8901 0004 00AF     	 add r7,sp,#0
 8902              	.LCFI483:
 8903              	 .cfi_def_cfa_register 7
 8904 0006 F860     	 str r0,[r7,#12]
 8905 0008 B960     	 str r1,[r7,#8]
 8906 000a 7A60     	 str r2,[r7,#4]
 8907 000c FB70     	 strb r3,[r7,#3]
2878:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2879:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t disk_status;
2880:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_STATUS_t res;
2881:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2882:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check the status before reading data */
2883:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   disk_status = obj->card_state;
 8908              	 .loc 3 2883 0
 8909 000e FB68     	 ldr r3,[r7,#12]
 8910 0010 1B7A     	 ldrb r3,[r3,#8]
 8911 0012 7B75     	 strb r3,[r7,#21]
2884:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2885:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED) != (uint8_t)0U)
 8912              	 .loc 3 2885 0
 8913 0014 7B7D     	 ldrb r3,[r7,#21]
 8914 0016 03F00103 	 and r3,r3,#1
 8915 001a 002B     	 cmp r3,#0
 8916 001c 02D0     	 beq .L430
2886:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2887:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_NOTRDY;
 8917              	 .loc 3 2887 0
 8918 001e 0323     	 movs r3,#3
 8919 0020 BB75     	 strb r3,[r7,#22]
 8920 0022 28E0     	 b .L431
 8921              	.L430:
2888:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED) != (uint8_t)0U)
 8922              	 .loc 3 2889 0
 8923 0024 7B7D     	 ldrb r3,[r7,#21]
 8924 0026 03F00803 	 and r3,r3,#8
 8925 002a 002B     	 cmp r3,#0
 8926 002c 02D0     	 beq .L432
2890:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2891:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_LOCKED;
 8927              	 .loc 3 2891 0
 8928 002e 0523     	 movs r3,#5
 8929 0030 BB75     	 strb r3,[r7,#22]
 8930 0032 20E0     	 b .L431
 8931              	.L432:
2892:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2893:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2894:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2895:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check for single block read or multiple block read based on sector count */
2896:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (sector_count == (uint8_t)1U)
 8932              	 .loc 3 2896 0
 8933 0034 FB78     	 ldrb r3,[r7,#3]
 8934 0036 012B     	 cmp r3,#1
 8935 0038 07D1     	 bne .L433
2897:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2898:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardReadSingleBlock(obj, (uint32_t *)read_buf, sector_num);
 8936              	 .loc 3 2898 0
 8937 003a F868     	 ldr r0,[r7,#12]
 8938 003c B968     	 ldr r1,[r7,#8]
 8939 003e 7A68     	 ldr r2,[r7,#4]
 8940 0040 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardReadSingleBlock
 8941 0044 0346     	 mov r3,r0
 8942 0046 FB75     	 strb r3,[r7,#23]
 8943 0048 07E0     	 b .L434
 8944              	.L433:
2899:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2900:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2901:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2902:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardReadMultipleBlocks(obj, (uint32_t *)read_buf, sector_num, (uint3
 8945              	 .loc 3 2902 0
 8946 004a FB78     	 ldrb r3,[r7,#3]
 8947 004c F868     	 ldr r0,[r7,#12]
 8948 004e B968     	 ldr r1,[r7,#8]
 8949 0050 7A68     	 ldr r2,[r7,#4]
 8950 0052 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardReadMultipleBlocks
 8951 0056 0346     	 mov r3,r0
 8952 0058 FB75     	 strb r3,[r7,#23]
 8953              	.L434:
2903:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2904:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2905:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8954              	 .loc 3 2905 0
 8955 005a FB7D     	 ldrb r3,[r7,#23]
 8956 005c 002B     	 cmp r3,#0
 8957 005e 02D1     	 bne .L435
2906:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2907:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_SUCCESS;
 8958              	 .loc 3 2907 0
 8959 0060 0023     	 movs r3,#0
 8960 0062 BB75     	 strb r3,[r7,#22]
 8961 0064 07E0     	 b .L431
 8962              	.L435:
2908:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if (status == SDMMC_BLOCK_MODE_STATUS_SECTOR_OUT_OF_BOUND)
 8963              	 .loc 3 2909 0
 8964 0066 FB7D     	 ldrb r3,[r7,#23]
 8965 0068 332B     	 cmp r3,#51
 8966 006a 02D1     	 bne .L436
2910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2911:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_PARERR;
 8967              	 .loc 3 2911 0
 8968 006c 0423     	 movs r3,#4
 8969 006e BB75     	 strb r3,[r7,#22]
 8970 0070 01E0     	 b .L431
 8971              	.L436:
2912:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2913:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2914:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2915:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_FAILURE;
 8972              	 .loc 3 2915 0
 8973 0072 0123     	 movs r3,#1
 8974 0074 BB75     	 strb r3,[r7,#22]
 8975              	.L431:
2916:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2917:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2918:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2919:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait for until the command OR data lines aren't busy */
2920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) || (XMC_SDMMC_IsCommandLineBusy(obj->sdmm
 8976              	 .loc 3 2920 0
 8977 0076 00BF     	 nop
 8978              	.L437:
 8979              	 .loc 3 2920 0 is_stmt 0 discriminator 3
 8980 0078 FB68     	 ldr r3,[r7,#12]
 8981 007a 1B68     	 ldr r3,[r3]
 8982 007c 1B68     	 ldr r3,[r3]
 8983 007e 1846     	 mov r0,r3
 8984 0080 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 8985 0084 0346     	 mov r3,r0
 8986 0086 002B     	 cmp r3,#0
 8987 0088 F6D1     	 bne .L437
 8988              	 .loc 3 2920 0 discriminator 2
 8989 008a FB68     	 ldr r3,[r7,#12]
 8990 008c 1B68     	 ldr r3,[r3]
 8991 008e 1B68     	 ldr r3,[r3]
 8992 0090 1846     	 mov r0,r3
 8993 0092 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 8994 0096 0346     	 mov r3,r0
 8995 0098 002B     	 cmp r3,#0
 8996 009a EDD1     	 bne .L437
2921:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2922:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2923:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2924:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return res;
 8997              	 .loc 3 2924 0 is_stmt 1
 8998 009c BB7D     	 ldrb r3,[r7,#22]
2925:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8999              	 .loc 3 2925 0
 9000 009e 1846     	 mov r0,r3
 9001 00a0 1837     	 adds r7,r7,#24
 9002              	.LCFI484:
 9003              	 .cfi_def_cfa_offset 8
 9004 00a2 BD46     	 mov sp,r7
 9005              	.LCFI485:
 9006              	 .cfi_def_cfa_register 13
 9007              	 
 9008 00a4 80BD     	 pop {r7,pc}
 9009              	 .cfi_endproc
 9010              	.LFE291:
 9012 00a6 00BF     	 .section .text.SDMMC_BLOCK_SD_WriteBlock,"ax",%progbits
 9013              	 .align 2
 9014              	 .global SDMMC_BLOCK_SD_WriteBlock
 9015              	 .thumb
 9016              	 .thumb_func
 9018              	SDMMC_BLOCK_SD_WriteBlock:
 9019              	.LFB292:
2926:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2927:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Writes the data on the card */
2928:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_STATUS_t SDMMC_BLOCK_SD_WriteBlock(SDMMC_BLOCK_t *const obj,
2929:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                const uint8_t *write_buf,
2930:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                uint32_t sector_num,
2931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                uint8_t sector_count)
2932:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 9020              	 .loc 3 2932 0
 9021              	 .cfi_startproc
 9022              	 
 9023              	 
 9024 0000 80B5     	 push {r7,lr}
 9025              	.LCFI486:
 9026              	 .cfi_def_cfa_offset 8
 9027              	 .cfi_offset 7,-8
 9028              	 .cfi_offset 14,-4
 9029 0002 86B0     	 sub sp,sp,#24
 9030              	.LCFI487:
 9031              	 .cfi_def_cfa_offset 32
 9032 0004 00AF     	 add r7,sp,#0
 9033              	.LCFI488:
 9034              	 .cfi_def_cfa_register 7
 9035 0006 F860     	 str r0,[r7,#12]
 9036 0008 B960     	 str r1,[r7,#8]
 9037 000a 7A60     	 str r2,[r7,#4]
 9038 000c FB70     	 strb r3,[r7,#3]
2933:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2934:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t disk_status;
2935:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_STATUS_t res;
2936:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2937:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Get card state */
2938:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   disk_status = obj->card_state;
 9039              	 .loc 3 2938 0
 9040 000e FB68     	 ldr r3,[r7,#12]
 9041 0010 1B7A     	 ldrb r3,[r3,#8]
 9042 0012 7B75     	 strb r3,[r7,#21]
2939:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2940:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If the card is not initialized */
2941:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED) != (uint8_t)0U)
 9043              	 .loc 3 2941 0
 9044 0014 7B7D     	 ldrb r3,[r7,#21]
 9045 0016 03F00103 	 and r3,r3,#1
 9046 001a 002B     	 cmp r3,#0
 9047 001c 02D0     	 beq .L440
2942:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2943:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_NOTRDY;
 9048              	 .loc 3 2943 0
 9049 001e 0323     	 movs r3,#3
 9050 0020 BB75     	 strb r3,[r7,#22]
 9051 0022 33E0     	 b .L441
 9052              	.L440:
2944:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2945:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED) != (uint8_t)0U)
 9053              	 .loc 3 2945 0
 9054 0024 7B7D     	 ldrb r3,[r7,#21]
 9055 0026 03F00803 	 and r3,r3,#8
 9056 002a 002B     	 cmp r3,#0
 9057 002c 02D0     	 beq .L442
2946:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2947:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_LOCKED;
 9058              	 .loc 3 2947 0
 9059 002e 0523     	 movs r3,#5
 9060 0030 BB75     	 strb r3,[r7,#22]
 9061 0032 2BE0     	 b .L441
 9062              	.L442:
2948:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2949:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If the card is read only or write protected */
2950:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED) != (uint8_t)0U)
 9063              	 .loc 3 2950 0
 9064 0034 7B7D     	 ldrb r3,[r7,#21]
 9065 0036 03F00403 	 and r3,r3,#4
 9066 003a 002B     	 cmp r3,#0
 9067 003c 02D0     	 beq .L443
2951:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_WRPRT;
 9068              	 .loc 3 2952 0
 9069 003e 0223     	 movs r3,#2
 9070 0040 BB75     	 strb r3,[r7,#22]
 9071 0042 23E0     	 b .L441
 9072              	.L443:
2953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2954:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #ifdef SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL
2955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((obj->sdwc != NULL) && (XMC_GPIO_GetInput(obj->sdwc->port, obj->sdwc->pin)))
2956:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2957:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_WRPRT;
2958:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2959:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif /* SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL */
2960:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2961:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2962:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check for single block write or multiple block write */
2963:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (sector_count == (uint8_t)1U)
 9073              	 .loc 3 2963 0
 9074 0044 FB78     	 ldrb r3,[r7,#3]
 9075 0046 012B     	 cmp r3,#1
 9076 0048 07D1     	 bne .L444
2964:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2965:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardWriteSingleBlock(obj, (const uint32_t *)write_buf, sector_num);
 9077              	 .loc 3 2965 0
 9078 004a F868     	 ldr r0,[r7,#12]
 9079 004c B968     	 ldr r1,[r7,#8]
 9080 004e 7A68     	 ldr r2,[r7,#4]
 9081 0050 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardWriteSingleBlock
 9082 0054 0346     	 mov r3,r0
 9083 0056 FB75     	 strb r3,[r7,#23]
 9084 0058 07E0     	 b .L445
 9085              	.L444:
2966:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2967:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2968:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2969:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardWriteMultipleBlocks(obj,
 9086              	 .loc 3 2969 0
 9087 005a FB78     	 ldrb r3,[r7,#3]
 9088 005c F868     	 ldr r0,[r7,#12]
 9089 005e B968     	 ldr r1,[r7,#8]
 9090 0060 7A68     	 ldr r2,[r7,#4]
 9091 0062 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardWriteMultipleBlocks
 9092 0066 0346     	 mov r3,r0
 9093 0068 FB75     	 strb r3,[r7,#23]
 9094              	.L445:
2970:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        (const uint32_t *)write_buf,
2971:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        sector_num,
2972:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        (uint32_t)sector_count);
2973:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2974:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2975:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) || (status == SDMMC_BLOCK_MODE_STATUS_BUFFER_RE
 9095              	 .loc 3 2975 0
 9096 006a FB7D     	 ldrb r3,[r7,#23]
 9097 006c 002B     	 cmp r3,#0
 9098 006e 02D0     	 beq .L446
 9099              	 .loc 3 2975 0 is_stmt 0 discriminator 1
 9100 0070 FB7D     	 ldrb r3,[r7,#23]
 9101 0072 1E2B     	 cmp r3,#30
 9102 0074 02D1     	 bne .L447
 9103              	.L446:
2976:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2977:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_SUCCESS;
 9104              	 .loc 3 2977 0 is_stmt 1
 9105 0076 0023     	 movs r3,#0
 9106 0078 BB75     	 strb r3,[r7,#22]
 9107 007a 07E0     	 b .L441
 9108              	.L447:
2978:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2979:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if (status == SDMMC_BLOCK_MODE_STATUS_SECTOR_OUT_OF_BOUND)
 9109              	 .loc 3 2979 0
 9110 007c FB7D     	 ldrb r3,[r7,#23]
 9111 007e 332B     	 cmp r3,#51
 9112 0080 02D1     	 bne .L448
2980:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2981:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_PARERR;
 9113              	 .loc 3 2981 0
 9114 0082 0423     	 movs r3,#4
 9115 0084 BB75     	 strb r3,[r7,#22]
 9116 0086 01E0     	 b .L441
 9117              	.L448:
2982:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2983:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2984:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2985:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_FAILURE;
 9118              	 .loc 3 2985 0
 9119 0088 0123     	 movs r3,#1
 9120 008a BB75     	 strb r3,[r7,#22]
 9121              	.L441:
2986:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2987:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2988:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2989:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait for until the command OR data lines aren't busy */
2990:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) || (XMC_SDMMC_IsCommandLineBusy(obj->sdmm
 9122              	 .loc 3 2990 0
 9123 008c 00BF     	 nop
 9124              	.L449:
 9125              	 .loc 3 2990 0 is_stmt 0 discriminator 3
 9126 008e FB68     	 ldr r3,[r7,#12]
 9127 0090 1B68     	 ldr r3,[r3]
 9128 0092 1B68     	 ldr r3,[r3]
 9129 0094 1846     	 mov r0,r3
 9130 0096 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 9131 009a 0346     	 mov r3,r0
 9132 009c 002B     	 cmp r3,#0
 9133 009e F6D1     	 bne .L449
 9134              	 .loc 3 2990 0 discriminator 2
 9135 00a0 FB68     	 ldr r3,[r7,#12]
 9136 00a2 1B68     	 ldr r3,[r3]
 9137 00a4 1B68     	 ldr r3,[r3]
 9138 00a6 1846     	 mov r0,r3
 9139 00a8 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 9140 00ac 0346     	 mov r3,r0
 9141 00ae 002B     	 cmp r3,#0
 9142 00b0 EDD1     	 bne .L449
2991:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2992:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2993:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return res;
 9143              	 .loc 3 2994 0 is_stmt 1
 9144 00b2 BB7D     	 ldrb r3,[r7,#22]
2995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 9145              	 .loc 3 2995 0
 9146 00b4 1846     	 mov r0,r3
 9147 00b6 1837     	 adds r7,r7,#24
 9148              	.LCFI489:
 9149              	 .cfi_def_cfa_offset 8
 9150 00b8 BD46     	 mov sp,r7
 9151              	.LCFI490:
 9152              	 .cfi_def_cfa_register 13
 9153              	 
 9154 00ba 80BD     	 pop {r7,pc}
 9155              	 .cfi_endproc
 9156              	.LFE292:
 9158              	 .text
 9159              	.Letext0:
 9160              	 .file 4 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 9161              	 .file 5 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 9162              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 9163              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_scu.h"
 9164              	 .file 8 "c:\\workspaces\\dave-4.4.2-64bit_ws\\deflectionanalyzer\\dave\\generated\\systimer\\systimer.h"
 9165              	 .file 9 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block.h"
 9166              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 9167              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sdmmc_block_private_sd.c
    {standard input}:20     .text.__NVIC_GetPriorityGrouping:00000000 $t
    {standard input}:24     .text.__NVIC_GetPriorityGrouping:00000000 __NVIC_GetPriorityGrouping
    {standard input}:58     .text.__NVIC_GetPriorityGrouping:00000018 $d
    {standard input}:63     .text.__NVIC_EnableIRQ:00000000 $t
    {standard input}:67     .text.__NVIC_EnableIRQ:00000000 __NVIC_EnableIRQ
    {standard input}:118    .text.__NVIC_EnableIRQ:00000034 $d
    {standard input}:123    .text.__NVIC_ClearPendingIRQ:00000000 $t
    {standard input}:127    .text.__NVIC_ClearPendingIRQ:00000000 __NVIC_ClearPendingIRQ
    {standard input}:177    .text.__NVIC_ClearPendingIRQ:00000038 $d
    {standard input}:182    .text.__NVIC_SetPriority:00000000 $t
    {standard input}:186    .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
    {standard input}:249    .text.__NVIC_SetPriority:0000004c $d
    {standard input}:255    .text.NVIC_EncodePriority:00000000 $t
    {standard input}:259    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
    {standard input}:341    .text.XMC_SDMMC_IsAnyErrorEvent:00000000 $t
    {standard input}:345    .text.XMC_SDMMC_IsAnyErrorEvent:00000000 XMC_SDMMC_IsAnyErrorEvent
    {standard input}:391    .text.XMC_SDMMC_GetACMDErrStatus:00000000 $t
    {standard input}:395    .text.XMC_SDMMC_GetACMDErrStatus:00000000 XMC_SDMMC_GetACMDErrStatus
    {standard input}:445    .text.XMC_SDMMC_ReadFIFO:00000000 $t
    {standard input}:449    .text.XMC_SDMMC_ReadFIFO:00000000 XMC_SDMMC_ReadFIFO
    {standard input}:488    .text.XMC_SDMMC_WriteFIFO:00000000 $t
    {standard input}:492    .text.XMC_SDMMC_WriteFIFO:00000000 XMC_SDMMC_WriteFIFO
    {standard input}:533    .text.XMC_SDMMC_BusPowerOn:00000000 $t
    {standard input}:537    .text.XMC_SDMMC_BusPowerOn:00000000 XMC_SDMMC_BusPowerOn
    {standard input}:580    .text.XMC_SDMMC_Start:00000000 $t
    {standard input}:584    .text.XMC_SDMMC_Start:00000000 XMC_SDMMC_Start
    {standard input}:627    .text.XMC_SDMMC_GetClockStability:00000000 $t
    {standard input}:631    .text.XMC_SDMMC_GetClockStability:00000000 XMC_SDMMC_GetClockStability
    {standard input}:677    .text.XMC_SDMMC_Stop:00000000 $t
    {standard input}:681    .text.XMC_SDMMC_Stop:00000000 XMC_SDMMC_Stop
    {standard input}:724    .text.XMC_SDMMC_SDClockEnable:00000000 $t
    {standard input}:728    .text.XMC_SDMMC_SDClockEnable:00000000 XMC_SDMMC_SDClockEnable
    {standard input}:771    .text.XMC_SDMMC_SDClockDisable:00000000 $t
    {standard input}:775    .text.XMC_SDMMC_SDClockDisable:00000000 XMC_SDMMC_SDClockDisable
    {standard input}:818    .text.XMC_SDMMC_SetSWReset:00000000 $t
    {standard input}:822    .text.XMC_SDMMC_SetSWReset:00000000 XMC_SDMMC_SetSWReset
    {standard input}:868    .text.XMC_SDMMC_GetSWResetStatus:00000000 $t
    {standard input}:872    .text.XMC_SDMMC_GetSWResetStatus:00000000 XMC_SDMMC_GetSWResetStatus
    {standard input}:912    .text.XMC_SDMMC_IsCommandLineBusy:00000000 $t
    {standard input}:916    .text.XMC_SDMMC_IsCommandLineBusy:00000000 XMC_SDMMC_IsCommandLineBusy
    {standard input}:961    .text.XMC_SDMMC_IsDataLineBusy:00000000 $t
    {standard input}:965    .text.XMC_SDMMC_IsDataLineBusy:00000000 XMC_SDMMC_IsDataLineBusy
    {standard input}:1010   .text.XMC_SDMMC_IsAllDataLinesHigh:00000000 $t
    {standard input}:1014   .text.XMC_SDMMC_IsAllDataLinesHigh:00000000 XMC_SDMMC_IsAllDataLinesHigh
    {standard input}:1060   .text.XMC_SDMMC_SDClockFreqSelect:00000000 $t
    {standard input}:1064   .text.XMC_SDMMC_SDClockFreqSelect:00000000 XMC_SDMMC_SDClockFreqSelect
    {standard input}:1115   .text.XMC_SDMMC_SetBusVoltage:00000000 $t
    {standard input}:1119   .text.XMC_SDMMC_SetBusVoltage:00000000 XMC_SDMMC_SetBusVoltage
    {standard input}:1169   .text.XMC_SDMMC_SetDataLineTimeout:00000000 $t
    {standard input}:1173   .text.XMC_SDMMC_SetDataLineTimeout:00000000 XMC_SDMMC_SetDataLineTimeout
    {standard input}:1221   .text.XMC_SDMMC_SetDataTransferWidth:00000000 $t
    {standard input}:1225   .text.XMC_SDMMC_SetDataTransferWidth:00000000 XMC_SDMMC_SetDataTransferWidth
    {standard input}:1279   .text.XMC_SDMMC_SetDataTransferDirection:00000000 $t
    {standard input}:1283   .text.XMC_SDMMC_SetDataTransferDirection:00000000 XMC_SDMMC_SetDataTransferDirection
    {standard input}:1339   .text.XMC_SDMMC_EnableHighSpeed:00000000 $t
    {standard input}:1343   .text.XMC_SDMMC_EnableHighSpeed:00000000 XMC_SDMMC_EnableHighSpeed
    {standard input}:1386   .text.XMC_SDMMC_DisableHighSpeed:00000000 $t
    {standard input}:1390   .text.XMC_SDMMC_DisableHighSpeed:00000000 XMC_SDMMC_DisableHighSpeed
    {standard input}:1437   .rodata.sdmmc_block_command:00000000 sdmmc_block_command
    {standard input}:1434   .rodata.sdmmc_block_command:00000000 $d
    {standard input}:1523   .rodata.sdmmc_block_sd_hash_table:00000000 sdmmc_block_sd_hash_table
    {standard input}:1520   .rodata.sdmmc_block_sd_hash_table:00000000 $d
    {standard input}:1590   .text.SDMMC_BLOCK_SD_lReset:00000000 $t
    {standard input}:1594   .text.SDMMC_BLOCK_SD_lReset:00000000 SDMMC_BLOCK_SD_lReset
    {standard input}:6304   .text.SDMMC_BLOCK_SD_lStartTimer:00000000 SDMMC_BLOCK_SD_lStartTimer
    {standard input}:6403   .text.SDMMC_BLOCK_SD_lStopTimer:00000000 SDMMC_BLOCK_SD_lStopTimer
    {standard input}:1687   .text.SDMMC_BLOCK_SD_lReset:0000007c $d
    {standard input}:1692   .text.SDMMC_BLOCK_SD_lCardCleanUp:00000000 $t
    {standard input}:1696   .text.SDMMC_BLOCK_SD_lCardCleanUp:00000000 SDMMC_BLOCK_SD_lCardCleanUp
    {standard input}:1774   .text.SDMMC_BLOCK_SD_lCheckDataCommandLines:00000000 $t
    {standard input}:1778   .text.SDMMC_BLOCK_SD_lCheckDataCommandLines:00000000 SDMMC_BLOCK_SD_lCheckDataCommandLines
    {standard input}:1961   .text.SDMMC_BLOCK_SD_lCheckDataCommandLines:0000011c $d
    {standard input}:1966   .text.SDMMC_BLOCK_SD_lCheckArgumentError:00000000 $t
    {standard input}:1970   .text.SDMMC_BLOCK_SD_lCheckArgumentError:00000000 SDMMC_BLOCK_SD_lCheckArgumentError
    {standard input}:2049   .text.SDMMC_BLOCK_SD_lCheckEraseError:00000000 $t
    {standard input}:2053   .text.SDMMC_BLOCK_SD_lCheckEraseError:00000000 SDMMC_BLOCK_SD_lCheckEraseError
    {standard input}:2122   .text.SDMMC_BLOCK_SD_lCheckCardError:00000000 $t
    {standard input}:2126   .text.SDMMC_BLOCK_SD_lCheckCardError:00000000 SDMMC_BLOCK_SD_lCheckCardError
    {standard input}:2195   .text.SDMMC_BLOCK_SD_lCheckErrorInResponse:00000000 $t
    {standard input}:2199   .text.SDMMC_BLOCK_SD_lCheckErrorInResponse:00000000 SDMMC_BLOCK_SD_lCheckErrorInResponse
    {standard input}:2292   .text.SDMMC_BLOCK_SD_lGetCardLockState:00000000 $t
    {standard input}:2296   .text.SDMMC_BLOCK_SD_lGetCardLockState:00000000 SDMMC_BLOCK_SD_lGetCardLockState
    {standard input}:2360   .text.SDMMC_BLOCK_SD_lTransferDelay:00000000 $t
    {standard input}:2364   .text.SDMMC_BLOCK_SD_lTransferDelay:00000000 SDMMC_BLOCK_SD_lTransferDelay
    {standard input}:2475   .text.SDMMC_BLOCK_SD_lReadResponse:00000000 $t
    {standard input}:2479   .text.SDMMC_BLOCK_SD_lReadResponse:00000000 SDMMC_BLOCK_SD_lReadResponse
    {standard input}:2562   .text.SDMMC_BLOCK_SD_lReadResponse:00000078 $d
    {standard input}:2569   .text.SDMMC_BLOCK_SD_lReadResponse:00000094 $t
    {standard input}:2721   .text.SDMMC_BLOCK_SD_lReadResponse:00000180 $d
    {standard input}:2727   .text.SDMMC_BLOCK_SD_lSendCommand:00000000 $t
    {standard input}:2731   .text.SDMMC_BLOCK_SD_lSendCommand:00000000 SDMMC_BLOCK_SD_lSendCommand
    {standard input}:4854   .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery:00000000 SDMMC_BLOCK_SD_lErrorInterruptRecovery
    {standard input}:2903   .text.SDMMC_BLOCK_SD_lSendCommand:00000104 $d
    {standard input}:2908   .text.SDMMC_BLOCK_SD_lSetVoltageWindow:00000000 $t
    {standard input}:2912   .text.SDMMC_BLOCK_SD_lSetVoltageWindow:00000000 SDMMC_BLOCK_SD_lSetVoltageWindow
    {standard input}:6042   .text.SDMMC_BLOCK_SD_lDelay:00000000 SDMMC_BLOCK_SD_lDelay
    {standard input}:3049   .text.SDMMC_BLOCK_SD_lSetVoltageWindow:000000b4 $d
    {standard input}:3055   .text.SDMMC_BLOCK_SD_lQueryOperatingCondition:00000000 $t
    {standard input}:3059   .text.SDMMC_BLOCK_SD_lQueryOperatingCondition:00000000 SDMMC_BLOCK_SD_lQueryOperatingCondition
    {standard input}:3158   .text.SDMMC_BLOCK_SD_lQueryOperatingCondition:00000084 $d
    {standard input}:3163   .text.SDMMC_BLOCK_SD_lQueryVoltage:00000000 $t
    {standard input}:3167   .text.SDMMC_BLOCK_SD_lQueryVoltage:00000000 SDMMC_BLOCK_SD_lQueryVoltage
    {standard input}:3566   .text.SDMMC_BLOCK_SD_lWriteCardType:00000000 SDMMC_BLOCK_SD_lWriteCardType
    {standard input}:3276   .text.SDMMC_BLOCK_SD_lQueryVoltage:00000090 $d
    {standard input}:3281   .text.SDMMC_BLOCK_SD_lAfterCardInitialize:00000000 $t
    {standard input}:3285   .text.SDMMC_BLOCK_SD_lAfterCardInitialize:00000000 SDMMC_BLOCK_SD_lAfterCardInitialize
    {standard input}:3785   .text.SDMMC_BLOCK_SD_lReadCardRegisters:00000000 SDMMC_BLOCK_SD_lReadCardRegisters
    {standard input}:4495   .text.SDMMC_BLOCK_SD_lSwitchBusWidth:00000000 SDMMC_BLOCK_SD_lSwitchBusWidth
    {standard input}:4626   .text.SDMMC_BLOCK_SD_lSwitchSpeed:00000000 SDMMC_BLOCK_SD_lSwitchSpeed
    {standard input}:3395   .text.SDMMC_BLOCK_SD_lAfterCardInitialize:0000009c $d
    {standard input}:3400   .text.SDMMC_BLOCK_SD_lInitializeCard:00000000 $t
    {standard input}:3404   .text.SDMMC_BLOCK_SD_lInitializeCard:00000000 SDMMC_BLOCK_SD_lInitializeCard
    {standard input}:3724   .text.SDMMC_BLOCK_SD_lReadRca:00000000 SDMMC_BLOCK_SD_lReadRca
    {standard input}:7791   .text.SDMMC_BLOCK_SD_GetLockStatus:00000000 SDMMC_BLOCK_SD_GetLockStatus
    {standard input}:3557   .text.SDMMC_BLOCK_SD_lInitializeCard:000000dc $d
    {standard input}:3562   .text.SDMMC_BLOCK_SD_lWriteCardType:00000000 $t
    {standard input}:3640   .text.SDMMC_BLOCK_SD_lGetWriteProtect:00000000 $t
    {standard input}:3644   .text.SDMMC_BLOCK_SD_lGetWriteProtect:00000000 SDMMC_BLOCK_SD_lGetWriteProtect
    {standard input}:8542   .text.SDMMC_BLOCK_SD_GetSdStatus:00000000 SDMMC_BLOCK_SD_GetSdStatus
    {standard input}:3720   .text.SDMMC_BLOCK_SD_lReadRca:00000000 $t
    {standard input}:3776   .text.SDMMC_BLOCK_SD_lReadRca:00000034 $d
    {standard input}:3781   .text.SDMMC_BLOCK_SD_lReadCardRegisters:00000000 $t
    {standard input}:5560   .text.SDMMC_BLOCK_SD_lSwitchToTransferState:00000000 SDMMC_BLOCK_SD_lSwitchToTransferState
    {standard input}:4266   .text.SDMMC_BLOCK_SD_lSingleBlockTransfer:00000000 SDMMC_BLOCK_SD_lSingleBlockTransfer
    {standard input}:3969   .text.SDMMC_BLOCK_SD_lReadCardRegisters:00000128 $d
    {standard input}:3974   .text.SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer:00000000 $t
    {standard input}:3978   .text.SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer:00000000 SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer
    {standard input}:4048   .text.SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer:00000000 $t
    {standard input}:4052   .text.SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer:00000000 SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer
    {standard input}:4143   .text.SDMMC_BLOCK_SD_lMultiBlockTransfer:00000000 $t
    {standard input}:4147   .text.SDMMC_BLOCK_SD_lMultiBlockTransfer:00000000 SDMMC_BLOCK_SD_lMultiBlockTransfer
    {standard input}:5665   .text.SDMMC_BLOCK_SD_lDataTransfer:00000000 SDMMC_BLOCK_SD_lDataTransfer
    {standard input}:5831   .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery:00000000 SDMMC_BLOCK_SD_lAcmdErrorRecovery
    {standard input}:4257   .text.SDMMC_BLOCK_SD_lMultiBlockTransfer:00000090 $d
    {standard input}:4262   .text.SDMMC_BLOCK_SD_lSingleBlockTransfer:00000000 $t
    {standard input}:4405   .text.SDMMC_BLOCK_SD_lSingleBlockTransfer:000000cc $d
    {standard input}:4410   .text.SDMMC_BLOCK_SD_lCheckLockStatus:00000000 $t
    {standard input}:4414   .text.SDMMC_BLOCK_SD_lCheckLockStatus:00000000 SDMMC_BLOCK_SD_lCheckLockStatus
    {standard input}:4491   .text.SDMMC_BLOCK_SD_lSwitchBusWidth:00000000 $t
    {standard input}:4617   .text.SDMMC_BLOCK_SD_lSwitchBusWidth:000000b8 $d
    {standard input}:4622   .text.SDMMC_BLOCK_SD_lSwitchSpeed:00000000 $t
    {standard input}:4726   .text.SDMMC_BLOCK_SD_lSwitchSpeed:000000a0 $d
    {standard input}:4732   .text.SDMMC_BLOCK_SD_lCommandDelay:00000000 $t
    {standard input}:4736   .text.SDMMC_BLOCK_SD_lCommandDelay:00000000 SDMMC_BLOCK_SD_lCommandDelay
    {standard input}:4850   .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery:00000000 $t
    {standard input}:5102   .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery:00000194 $d
    {standard input}:5110   .text.SDMMC_BLOCK_SD_NormalInterruptHandler:00000000 $t
    {standard input}:5115   .text.SDMMC_BLOCK_SD_NormalInterruptHandler:00000000 SDMMC_BLOCK_SD_NormalInterruptHandler
    {standard input}:5260   .text.SDMMC_BLOCK_SD_ErrorInterruptHandler:00000000 $t
    {standard input}:5265   .text.SDMMC_BLOCK_SD_ErrorInterruptHandler:00000000 SDMMC_BLOCK_SD_ErrorInterruptHandler
    {standard input}:5556   .text.SDMMC_BLOCK_SD_lSwitchToTransferState:00000000 $t
    {standard input}:5656   .text.SDMMC_BLOCK_SD_lSwitchToTransferState:00000084 $d
    {standard input}:5661   .text.SDMMC_BLOCK_SD_lDataTransfer:00000000 $t
    {standard input}:5822   .text.SDMMC_BLOCK_SD_lDataTransfer:000000dc $d
    {standard input}:5827   .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery:00000000 $t
    {standard input}:5979   .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery:000000e0 $d
    {standard input}:5984   .text.SDMMC_BLOCK_SD_TimerCallback:00000000 $t
    {standard input}:5988   .text.SDMMC_BLOCK_SD_TimerCallback:00000000 SDMMC_BLOCK_SD_TimerCallback
    {standard input}:6038   .text.SDMMC_BLOCK_SD_lDelay:00000000 $t
    {standard input}:6150   .text.SDMMC_BLOCK_SD_lDelay:0000008c $d
    {standard input}:6155   .text.SDMMC_BLOCK_SD_CardIdentificationProcess:00000000 $t
    {standard input}:6160   .text.SDMMC_BLOCK_SD_CardIdentificationProcess:00000000 SDMMC_BLOCK_SD_CardIdentificationProcess
    {standard input}:6295   .text.SDMMC_BLOCK_SD_CardIdentificationProcess:000000cc $d
    {standard input}:6300   .text.SDMMC_BLOCK_SD_lStartTimer:00000000 $t
    {standard input}:6394   .text.SDMMC_BLOCK_SD_lStartTimer:00000070 $d
    {standard input}:6399   .text.SDMMC_BLOCK_SD_lStopTimer:00000000 $t
    {standard input}:6463   .text.SDMMC_BLOCK_SD_lCheckSectorBound:00000000 $t
    {standard input}:6467   .text.SDMMC_BLOCK_SD_lCheckSectorBound:00000000 SDMMC_BLOCK_SD_lCheckSectorBound
    {standard input}:8235   .text.SDMMC_BLOCK_SD_GetSectorCount:00000000 SDMMC_BLOCK_SD_GetSectorCount
    {standard input}:6528   .text.SDMMC_BLOCK_SD_lLocalErase:00000000 $t
    {standard input}:6532   .text.SDMMC_BLOCK_SD_lLocalErase:00000000 SDMMC_BLOCK_SD_lLocalErase
    {standard input}:6705   .text.SDMMC_BLOCK_SD_lLocalErase:0000010c $d
    {standard input}:6711   .text.SDMMC_BLOCK_SD_lHostControllerInit:00000000 $t
    {standard input}:6715   .text.SDMMC_BLOCK_SD_lHostControllerInit:00000000 SDMMC_BLOCK_SD_lHostControllerInit
    {standard input}:6849   .text.SDMMC_BLOCK_SD_lHostControllerInit:000000c4 $d
    {standard input}:6854   .text.SDMMC_BLOCK_SD_lHostControllerDeInit:00000000 $t
    {standard input}:6858   .text.SDMMC_BLOCK_SD_lHostControllerDeInit:00000000 SDMMC_BLOCK_SD_lHostControllerDeInit
    {standard input}:6911   .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks:00000000 $t
    {standard input}:6915   .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks:00000000 SDMMC_BLOCK_SD_lCardReadMultipleBlocks
    {standard input}:7014   .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks:00000088 $d
    {standard input}:7019   .text.SDMMC_BLOCK_SD_lCardReadSingleBlock:00000000 $t
    {standard input}:7023   .text.SDMMC_BLOCK_SD_lCardReadSingleBlock:00000000 SDMMC_BLOCK_SD_lCardReadSingleBlock
    {standard input}:7117   .text.SDMMC_BLOCK_SD_lCardReadSingleBlock:00000080 $d
    {standard input}:7122   .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:00000000 $t
    {standard input}:7126   .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:00000000 SDMMC_BLOCK_SD_lCardWriteMultipleBlocks
    {standard input}:7225   .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:00000088 $d
    {standard input}:7230   .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock:00000000 $t
    {standard input}:7234   .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock:00000000 SDMMC_BLOCK_SD_lCardWriteSingleBlock
    {standard input}:7328   .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock:00000080 $d
    {standard input}:7333   .rodata:00000000 $d
    {standard input}:7346   .text.SDMMC_BLOCK_SD_EraseBlock:00000000 $t
    {standard input}:7351   .text.SDMMC_BLOCK_SD_EraseBlock:00000000 SDMMC_BLOCK_SD_EraseBlock
    {standard input}:7606   .text.SDMMC_BLOCK_SD_EraseBlock:000001e4 $d
    {standard input}:7611   .text.SDMMC_BLOCK_SD_LockUnlockCard:00000000 $t
    {standard input}:7616   .text.SDMMC_BLOCK_SD_LockUnlockCard:00000000 SDMMC_BLOCK_SD_LockUnlockCard
    {standard input}:7781   .text.SDMMC_BLOCK_SD_LockUnlockCard:00000104 $d
    {standard input}:7786   .text.SDMMC_BLOCK_SD_GetLockStatus:00000000 $t
    {standard input}:7891   .text.SDMMC_BLOCK_SD_GetLockStatus:00000088 $d
    {standard input}:7896   .text.SDMMC_BLOCK_SD_GetState:00000000 $t
    {standard input}:7901   .text.SDMMC_BLOCK_SD_GetState:00000000 SDMMC_BLOCK_SD_GetState
    {standard input}:7942   .text.SDMMC_BLOCK_SD_GetCardType:00000000 $t
    {standard input}:7947   .text.SDMMC_BLOCK_SD_GetCardType:00000000 SDMMC_BLOCK_SD_GetCardType
    {standard input}:7992   .text.SDMMC_BLOCK_SD_GetCid:00000000 $t
    {standard input}:7997   .text.SDMMC_BLOCK_SD_GetCid:00000000 SDMMC_BLOCK_SD_GetCid
    {standard input}:8130   .text.SDMMC_BLOCK_SD_GetOcr:00000000 $t
    {standard input}:8135   .text.SDMMC_BLOCK_SD_GetOcr:00000000 SDMMC_BLOCK_SD_GetOcr
    {standard input}:8180   .text.SDMMC_BLOCK_SD_GetCsd:00000000 $t
    {standard input}:8185   .text.SDMMC_BLOCK_SD_GetCsd:00000000 SDMMC_BLOCK_SD_GetCsd
    {standard input}:8230   .text.SDMMC_BLOCK_SD_GetSectorCount:00000000 $t
    {standard input}:8371   .text.SDMMC_BLOCK_SD_GetSectorSize:00000000 $t
    {standard input}:8376   .text.SDMMC_BLOCK_SD_GetSectorSize:00000000 SDMMC_BLOCK_SD_GetSectorSize
    {standard input}:8419   .text.SDMMC_BLOCK_SD_GetBlockSize:00000000 $t
    {standard input}:8424   .text.SDMMC_BLOCK_SD_GetBlockSize:00000000 SDMMC_BLOCK_SD_GetBlockSize
    {standard input}:8537   .text.SDMMC_BLOCK_SD_GetSdStatus:00000000 $t
    {standard input}:8646   .text.SDMMC_BLOCK_SD_GetSdStatus:00000094 $d
    {standard input}:8651   .text.SDMMC_BLOCK_SD_EjectCard:00000000 $t
    {standard input}:8656   .text.SDMMC_BLOCK_SD_EjectCard:00000000 SDMMC_BLOCK_SD_EjectCard
    {standard input}:8737   .text.SDMMC_BLOCK_SD_EjectCard:00000068 $d
    {standard input}:8742   .text.SDMMC_BLOCK_SD_Start:00000000 $t
    {standard input}:8747   .text.SDMMC_BLOCK_SD_Start:00000000 SDMMC_BLOCK_SD_Start
    {standard input}:8823   .text.SDMMC_BLOCK_SD_Init:00000000 $t
    {standard input}:8828   .text.SDMMC_BLOCK_SD_Init:00000000 SDMMC_BLOCK_SD_Init
    {standard input}:8882   .text.SDMMC_BLOCK_SD_ReadBlock:00000000 $t
    {standard input}:8887   .text.SDMMC_BLOCK_SD_ReadBlock:00000000 SDMMC_BLOCK_SD_ReadBlock
    {standard input}:9013   .text.SDMMC_BLOCK_SD_WriteBlock:00000000 $t
    {standard input}:9018   .text.SDMMC_BLOCK_SD_WriteBlock:00000000 SDMMC_BLOCK_SD_WriteBlock
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SYSTIMER_DeleteTimer
memset
XMC_SDMMC_SendCommand
XMC_SDMMC_SetDataTransferMode
XMC_SDMMC_EnableEvent
XMC_SDMMC_DisableEvent
XMC_SDMMC_GetEvent
XMC_SDMMC_ClearEvent
SYSTIMER_CreateTimer
SYSTIMER_StartTimer
SYSTIMER_StopTimer
memcpy
XMC_SDMMC_Enable
SYSTIMER_Init
XMC_SCU_CLOCK_EnableClock
