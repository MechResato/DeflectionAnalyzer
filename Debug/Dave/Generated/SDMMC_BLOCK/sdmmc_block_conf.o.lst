   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "sdmmc_block_conf.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SDMMC_SetCardDetectionSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SDMMC_SetCardDetectionSource:
  25              	.LFB176:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_sdmmc.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
   2:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
   3:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @file xmc_sdmmc.h
   4:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @date 2019-05-07
   5:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
   6:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @cond
   7:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  **************************************************************************************************
   8:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library
   9:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  10:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  11:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * All rights reserved.                        
  12:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                             
  13:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * following conditions are met:   
  15:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  16:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * disclaimer.                        
  18:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 
  19:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 
  22:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  25:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  33:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  **************************************************************************************************
  36:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  37:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Change History
  38:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * --------------
  39:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2015-02-20:
  41:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Initial version
  42:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Documentation updates
  43:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2015-06-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-01-16:
  48:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added the following APIs to the XMC_SDMMC low level driver <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         1) XMC_SDMMC_EnableDelayCmdDatLines <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         2) XMC_SDMMC_DisableDelayCmdDatLines <br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         3) XMC_SDMMC_SetDelay <br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         4) XMC_SDMMC_EnableHighSpeed <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         5) XMC_SDMMC_DisableHighSpeed <br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  55:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-04-07:
  56:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added XMC_SDMMC_COMMAND_RESPONSE_t <br>
  57:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-07-11:
  59:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Adjust masks for the following functions: <br>
  60:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetBusVoltage <br>
  61:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetDataLineTimeout <br>
  62:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       3) XMC_SDMMC_SDClockFreqSelect <br>
  63:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  64:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2017-02-14:
  65:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added: <br>
  66:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetCardDetectionStatus() <br>
  67:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetCardDetectionSource() <br>
  68:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2018-08-29:
  70:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - XMC_SDMMC_SetCardDetectionStatus() and XMC_SDMMC_SetCardDetectionSource()
  71:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       Changed for XMC43/XMC47/XMC48 to use SDMMC Write Protection and Card Detection Control reg
  72:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added for XMC43/XMC47/XMC48:
  73:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetWriteProtectionSource()
  74:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetWriteProtectionStatus()
  75:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2019-05-07:
  77:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Fix compilation issues on XMC45
  78:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Fix compilation warnings
  79:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @endcond
  81:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
  82:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  83:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #ifndef XMC_SDMMC_H
  84:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_H
  85:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  86:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
  87:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * HEADER FILES
  88:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
  89:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  
  90:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #include "xmc_common.h"
  91:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (SDMMC)
  93:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  94:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if (UC_SERIES != XMC45)
  95:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSEL_Pos  0
  96:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSEL_Msk  0x00000001UL
  97:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSVAL_Pos 4
  98:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSVAL_Msk 0x00000010UL
  99:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSEL_Pos  16
 100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSEL_Msk  0x00010000UL
 101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSVAL_Pos 20
 102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSVAL_Msk 0x00100000UL
 103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @{
 108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @addtogroup SDMMC
 112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @brief Secure Digital/Multi Media Card (SDMMC) driver for the XMC4500 microcontroller
 113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC peripheral provides an interface between SD/SDIO/MMC cards and the AHB. It handles
 115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the SD/SDIO protocol at transmission level. It automatically packs data and checks for CRC,
 116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * start/end bits and format correctness. For SD cards, a maximum transfer rate of 24MB/sec is
 117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * supported and for MMC cards, 48MB/sec.
 118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The peripheral can be used for applications that require large storage memory; e.g. Data logging
 120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * firmware updates or an embedded database.
 121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC low level driver provides functions to configure and initialize the SDMMC hardware
 123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * peripheral.
 124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @{
 125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * MACROS
 129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * A convenient symbol for the SDMMC peripheral base address
 133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (SDMMC)
 135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** # define XMC_SDMMC ((XMC_SDMMC_t *)SDMMC_BASE)
 136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** # error 'SDMMC' base peripheral pointer not defined
 138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid ACMD errors <br>
 142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_MODULE_PTR(p) ((p) == XMC_SDMMC)
 146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid ACMD errors <br>
 149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_ACMD_ERR(v)\
 153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((v == XMC_SDMMC_ACMD12_NOT_EXEC_ERR) ||\
 154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_TIMEOUT_ERR)    ||\
 155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_CRC_ERR)        ||\
 156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_END_BIT_ERR)    ||\
 157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_IND_ERR)        ||\
 158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR))
 159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid SDCLK divider frequency <br>
 162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_SDCLK_FREQ(f)\
 166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((f == XMC_SDMMC_CLK_DIV_1)           ||\
 167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_2)           ||\
 168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_4)           ||\
 169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_8)           ||\
 170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_16)          ||\
 171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_32)          ||\
 172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_64)          ||\
 173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_128)         ||\
 174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_256))
 175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid bus voltage levels <br>
 178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_BUS_VOLTAGE(v)\
 182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   (v == XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS)
 183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid data timeout counter values <br>
 186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DAT_TIMEOUT_COUNTER(c)\
 190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_13) ||\
 191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_14) ||\
 192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_15) ||\
 193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_16) ||\
 194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_17) ||\
 195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_18) ||\
 196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_19) ||\
 197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_20) ||\
 198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_21) ||\
 199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_22) ||\
 200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_23) ||\
 201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_24) ||\
 202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_25) ||\
 203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_26) ||\
 204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27))
 205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Valid number of data lines <br>
 208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DATA_LINES(l)\
 212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((l == XMC_SDMMC_DATA_LINES_1)        ||\
 213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (l == XMC_SDMMC_DATA_LINES_4)        ||\
 214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (l == XMC_SDMMC_DATA_LINES_8))
 215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check data transfer dir: Host to card and vice-versa <br>
 218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DATA_TRANSFER_DIR(d)\
 222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((d == XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD)   ||\
 223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (d == XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST))
 224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Min and max number of delay elements <br>
 227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_MIN_DELAY_ELEMENTS (0U)
 231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_MAX_DELAY_ELEMENTS (15U)
 232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ENUMS
 235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Number of data lines for SDMMC data transfer
 239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DATA_LINES
 241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_1 = 0x00U, /**< Single data line mode */
 243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_4 = 0x02U, /**< 4-bit mode */
 244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_8 = 0x20U  /**< SD 8-bit mode */
 245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DATA_LINES_t;
 246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Valid SD clock frequency divider selection
 249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_SDCLK_FREQ_SEL
 251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_1   = 0x00U, /**< Base clock (10 Mhz -> 63 Mhz) */
 253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_2   = 0x01U, /**< Base clock divided by 2 */
 254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_4   = 0x02U, /**< Base clock divided by 4 */
 255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_8   = 0x04U, /**< Base clock divided by 8 */
 256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_16  = 0x08U, /**< Base clock divided by 16 */
 257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_32  = 0x10U, /**< Base clock divided by 32 */
 258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_64  = 0x20U, /**< Base clock divided by 64 */
 259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_128 = 0x40U, /**< Base clock divided by 128 */
 260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_256 = 0x80U  /**< Base clock divided by 256 */
 261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_SDCLK_FREQ_SEL_t;
 262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Status return values for the SDMMC low level driver
 265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_STATUS
 267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_SUCCESS       = 0U, /**< Operation successful */
 269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_CMD_LINE_BUSY,      /**< Command line busy */
 270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_DAT_LINE_BUSY       /**< Data line busy */
 271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_STATUS_t;
 272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC events (Normal and error events)
 275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_EVENT
 277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_COMPLETE       = 0x01U, /**< Command complete event */
 279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TX_COMPLETE        = 0x02U, /**< Transmit complete event */
 280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BLOCK_GAP_EVENT    = 0x04U, /**< Block gap event */
 281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUFFER_WRITE_READY = 0x10U, /**< Buffer write ready event */
 282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUFFER_READ_READY  = 0x20U, /**< Buffer read ready event */
 283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_INS           = 0x40U, /**< Card insert event */
 284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_REMOVAL       = 0x80U, /**< Card removal event */
 285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_INT           = 0x100U, /**< Card INT event */
 286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_ERR           = 0x8000U, /**< Card error interrupt */
 287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_TIMEOUT_ERR    = ((uint32_t)0x01 << 16U),   /**< Command time-out error */
 288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_CRC_ERR        = ((uint32_t)0x02U << 16U),  /**< Command CRC error */
 289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_END_BIT_ERR    = ((uint32_t)0x04U << 16U),  /**< Command end bit error */
 290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_IND_ERR        = ((uint32_t)0x08U << 16U),  /**< Command index error */
 291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TIMEOUT_ERR   = ((uint32_t)0x10U << 16U),  /**< Data time-out error */
 292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_CRC_ERR       = ((uint32_t)0x20U << 16U),  /**< Data CRC error */
 293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_END_BIT_ERR   = ((uint32_t)0x40U << 16U),  /**< Data end bit error */
 294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CURRENT_LIMIT_ERR  = ((uint32_t)0x80U << 16U),  /**< Current limit error */
 295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_ERR           = ((uint32_t)0x100U << 16U), /**< ACMD error */
 296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TARGET_RESP_ERR    = ((uint32_t)0x1000U << 16U) /**< Target response error */
 297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_EVENT_t;
 298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC wakeup events
 301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WAKEUP_EVENT
 303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_INT = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_INT_Msk, /**< Wakeup on card int
 305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_INS = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_INS_Msk, /**< Wakeup on SD card 
 306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_REM = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_REM_Msk  /**< Wakeup SD card rem
 307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WAKEUP_EVENT_t;
 308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC software reset modes
 311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_SW_RESET
 313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RESET_ALL    = SDMMC_SW_RESET_SW_RST_ALL_Msk,      /**< Software reset all */
 315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RST_CMD_LINE = SDMMC_SW_RESET_SW_RST_CMD_LINE_Msk, /**< Software reset command line 
 316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RST_DAT_LINE = SDMMC_SW_RESET_SW_RST_DAT_LINE_Msk  /**< Software reset data line */
 317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_SW_RESET_t;
 318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * CMD12 response errors of Auto CMD12
 321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_ACMD_ERR
 323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD12_NOT_EXEC_ERR = SDMMC_ACMD_ERR_STATUS_ACMD12_NOT_EXEC_ERR_Msk, /**< ACMD12 not ex
 325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_TIMEOUT_ERR    = SDMMC_ACMD_ERR_STATUS_ACMD_TIMEOUT_ERR_Msk,    /**< ACMD timeout 
 326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_CRC_ERR        = SDMMC_ACMD_ERR_STATUS_ACMD_CRC_ERR_Msk,        /**< ACMD CRC erro
 327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_END_BIT_ERR    = SDMMC_ACMD_ERR_STATUS_ACMD_END_BIT_ERR_Msk,    /**< ACMD end bit 
 328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_IND_ERR        = SDMMC_ACMD_ERR_STATUS_ACMD_IND_ERR_Msk,        /**< ACMD IND erro
 329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR = SDMMC_ACMD_ERR_STATUS_CMD_NOT_ISSUED_BY_ACMD12_ERR_Msk /
 330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_ACMD_ERR_t;
 331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC response types
 334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_RESPONSE_TYPE
 336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_NO_RESPONSE = 0U, /**< No response */
 338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R1,               /**< Response type: R1 */
 339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R1b,              /**< Response type: R1b */
 340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R2,               /**< Response type: R2 */
 341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R3,               /**< Response type: R3 */
 342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R6,               /**< Response type: R6 */
 343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R7                /**< Response type: R7 */
 344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_RESPONSE_TYPE_t;
 345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** * Command response selection
 348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** */
 349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_COMMAND_RESPONSE
 350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_NONE = 0, /**< No Response */
 352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_LONG = 1, /**< Response length 136 */
 353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_SHORT = 2, /**< Response length 48 */
 354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_SHORT_BUSY = 3, /**< Response length 48 check Busy after response */
 355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_RESPONSE_t;
 356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Types of SDMMC commands
 359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_COMMAND_TYPE
 361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_NORMAL  = 0U, /**< Command normal */
 363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_SUSPEND,      /**< Command suspend */
 364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_RESUME,       /**< Command resume */
 365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_ABORT         /**< Command abort */
 366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_TYPE_t;
 367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer modes
 370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_TRANSFER_MODE_TYPE
 372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_SINGLE        = 0x00U, /**< Transfer mode type: single */
 374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_INFINITE      = 0x20U, /**< Transfer mode type: infinite */
 375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_MULTIPLE      = 0x22U, /**< Transfer mode type: multiple */
 376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_STOP_MULTIPLE = 0x22U  /**< Transfer mode type: multiple stop */
 377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_TYPE_t;
 378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Auto command transfer modes
 381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_TRANSFER_MODE_AUTO_CMD
 383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_DISABLED = 0x00U, /**< ACMD mode disabled */
 385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_12                /**< ACMD12 mode */
 386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_t;
 387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC bus voltage level
 390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_BUS_VOLTAGE
 392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS = 0x07U /**< 3.3V */
 394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_BUS_VOLTAGE_t;
 395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Data line timeout counter values
 398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DAT_TIMEOUT_COUNTER
 400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_13 = 0U, /**< SDCLK * (2 ^ 13) */
 402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_14 = 1U, /**< SDCLK * (2 ^ 14) */
 403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_15 = 2U, /**< SDCLK * (2 ^ 15) */
 404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_16 = 3U, /**< SDCLK * (2 ^ 16) */
 405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_17 = 4U, /**< SDCLK * (2 ^ 17) */
 406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_18 = 5U, /**< SDCLK * (2 ^ 18) */
 407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_19 = 6U, /**< SDCLK * (2 ^ 19) */
 408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_20 = 7U, /**< SDCLK * (2 ^ 20) */
 409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_21 = 8U, /**< SDCLK * (2 ^ 21) */
 410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_22 = 9U, /**< SDCLK * (2 ^ 22) */
 411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_23 = 10U, /**< SDCLK * (2 ^ 23) */
 412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_24 = 11U, /**< SDCLK * (2 ^ 24) */
 413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_25 = 12U, /**< SDCLK * (2 ^ 25) */
 414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_26 = 13U, /**< SDCLK * (2 ^ 26) */
 415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27 = 14U, /**< SDCLK * (2 ^ 27) */
 416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DAT_TIMEOUT_COUNTER_t;
 417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC data transfer direction
 420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DATA_TRANSFER_DIR
 422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD = 0U, /**< Host to card */
 424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST       /**< Card to host */
 425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DATA_TRANSFER_DIR_t;
 426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC card detection signal source
 429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_CD_SOURCE
 431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45 || defined(DOXYGEN)
 433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_PIN = 0 << SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Pos, /**< P1.10 input pin s
 434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_SW = 1 << SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Pos   /**< Software is selec
 435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_PIN = 0 << SDMMC_CON_CDSEL_Pos, /**< P1.10 input pin selected */
 437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_SW = 1 << SDMMC_CON_CDSEL_Pos   /**< Software is selected */
 438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CD_SOURCE_t;
 440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Used to set the SDMMC card detection status when the card detection status source input is set t
 443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_CD_STATUS
 445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45 || defined(DOXYGEN)
 447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_NO_CARD = 0 << SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Pos, /**< No card detec
 448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_INSERTED = 1 << SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Pos /**< Card detected
 449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_NO_CARD = 0 << SDMMC_CON_CDSVAL_Pos,  /**< No card detected */
 451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_INSERTED = 1 << SDMMC_CON_CDSVAL_Pos  /**< Card detected */
 452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CD_STATUS_t;
 454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES != XMC45 || defined(DOXYGEN)
 456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC card write protection signal source
 458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only available for XMC4300, XMC4800 and XMC4700 series
 459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WP_SOURCE
 461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_SOURCE_PIN = 0 << SDMMC_CON_WPSEL_Pos, /**< P1.1 input pin selected */
 463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_SOURCE_SW = 1 << SDMMC_CON_WPSEL_Pos   /**< Software is selected */
 464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WP_SOURCE_t;
 465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Used to set the SDMMC card protection status when the card protection status source input is set
 468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only available for XMC4300, XMC4800 and XMC4700 series
 469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WP_STATUS
 471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_STATUS_NO_WRITE_PROTECTION = 0 << SDMMC_CON_WPSVAL_Pos, /**< No write protection */
 473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_STATUS_WRITE_PROTECTION = 1 << SDMMC_CON_WPSVAL_Pos     /**< Write protection active
 474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WP_STATUS_t;
 475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * DATA STRUCTURES
 479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC device structure <br>
 483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure represents a collection of all hardware registers used
 485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * to configure the SDMMC peripheral on the XMC4500 microcontroller. The
 486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers can be accessed with ::XMC_SDMMC.
 487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct
 489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED0;
 491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  BLOCK_SIZE;
 492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  BLOCK_COUNT;
 493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  ARGUMENT1;
 494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  TRANSFER_MODE;
 495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  COMMAND;
 496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESPONSE[4];
 497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  DATA_BUFFER;
 498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  PRESENT_STATE;
 499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   HOST_CTRL;
 500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   POWER_CTRL;
 501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   BLOCK_GAP_CTRL;
 502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   WAKEUP_CTRL;
 503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  CLOCK_CTRL;
 504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   TIMEOUT_CTRL;
 505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   SW_RESET;
 506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  INT_STATUS_NORM;
 507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  INT_STATUS_ERR;
 508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_STATUS_NORM;
 509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_STATUS_ERR;
 510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_SIGNAL_NORM;
 511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_SIGNAL_ERR;
 512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  ACMD_ERR_STATUS;
 513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  RESERVED1[9];
 514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint16_t  FORCE_EVENT_ACMD_ERR_STATUS;
 515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint16_t  FORCE_EVENT_ERR_STATUS;
 516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED2[8];
 517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint32_t  DEBUG_SEL;
 518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED3[30];
 519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  SPI;
 520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED4[2];
 521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  SLOT_INT_STATUS;
 522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_t;
 523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /* Anonymous structure/union guard start */
 525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (__CC_ARM)
 526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma push
 527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma anon_unions
 528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #elif defined (__TASKING__)
 529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma warning 586
 530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Present state of the SDMMC host controller <br>
 534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure presents a convenient way to obtain the SDMMC peripheral's
 536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * present state information (for example, the write protect pin level). The
 537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_GetPresentState() API can be used to populate the structure
 538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * with the state of the SD host controller.
 539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef union XMC_SDMMC_PRESENT_STATE
 541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   struct
 543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   {
 544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint32_t command_inihibit_cmd    : 1; /**< Command: Inhibit command */
 545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t command_inihibit_dat    : 1; /**< Command: Inhibit data */
 546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat_line_active     : 1; /**< Data line active */
 547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t             : 5;
 548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t write_transfer_active   : 1; /**< Write transfer active */
 549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t read_transfer_active    : 1; /**< Read transfer active */
 550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t buffer_write_enable   : 1; /**< Buffer write enable */
 551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t buffer_read_enable    : 1; /**< Buffer read enable */
 552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t             : 4;
 553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_inserted       : 1; /**< Card inserted */
 554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_state_stable     : 1; /**< Card state stable */
 555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_detect_pin_level   : 1; /**< Card detect pin level */
 556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t write_protect_pin_level : 1; /**< Write protect pin level */
 557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat_3_0_pin_level     : 4; /**< Data 3_0 pin level */
 558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t cmd_line_level          : 1; /**< Command line level */
 559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat7_4_pin_level        : 4; /**< Data 7_4 pin level */
 560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t                         : 3;
 561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   };
 562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t b32;
 563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_PRESENT_STATE_t;
 564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer mode configuration
 567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_TRANSFER_MODE
 569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t block_size;
 571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t num_blocks;
 572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_t type;
 573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_t auto_cmd;
 574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_DIR_t direction;
 575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_t;
 576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Represent an SDMMC command <br>
 579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure holds the configuration for an SDMMC command. The SDMMC
 581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * COMMAND register is a 16-bit register which is responsible for enabling
 582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * configuration parameters like command type, response type, index check
 583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * enable (and a few more). Once SDMMC.COMMAND is configured, the
 584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_SendCommand() function can be used to send the command.
 585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef union XMC_SDMMC_COMMAND
 587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   struct
 589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   {
 590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t response_type_sel : 2; /**< Response type select ::XMC_SDMMC_COMMAND_RESPONSE_t */
 591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t                   : 1;
 592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t crc_check_en      : 1; /**< Command CRC check enable */
 593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t index_check_en    : 1; /**< Command index check enable */
 594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t dat_present_sel   : 1; /**< Data present select */
 595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t cmd_type          : 2; /**< Command type ::XMC_SDMMC_COMMAND_TYPE_t */
 596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t cmd_index         : 6; /**< Command index */
 597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t                   : 2;
 598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   };
 599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint16_t cmd;
 600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_t;
 601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /* Anonymous structure/union guard end */
 603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (__CC_ARM)
 604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma pop
 605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #elif defined (__TASKING__)
 606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma warning restore
 607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Card response structure
 611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_RESPONSE
 613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_0;
 615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_2;
 616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_4;
 617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_6;
 618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_RESPONSE_t;
 619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC configuration data structure <br>
 622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure is used to configure the bus width and the clock divider.
 624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_CONFIG
 626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint8_t bus_width; /**< SDMMC bus width */
 628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SDCLK_FREQ_SEL_t clock_divider; /**< SDMMC clock divider */
 629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CONFIG_t;
 630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * API PROTOTYPES
 633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #ifdef __cplusplus
 636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** extern "C" {
 637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get power status of the SDMMC peripheral <br>
 645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function checks the SD_BUS_POWER bit-field of the POWER_CTRL register and returns
 648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * a boolean value - "on" or "off".
 649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** bool XMC_SDMMC_GetPowerStatus(XMC_SDMMC_t *const sdmmc);
 651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC peripheral <br>
 658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function de-asserts the peripheral reset. The peripheral needs to be initialized.
 661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_Enable(XMC_SDMMC_t *const sdmmc);
 663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable SDMMC peripheral <br>
 670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function asserts the peripheral reset.
 673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_Disable(XMC_SDMMC_t *const sdmmc);
 675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to a constant XMC_SDMMC_CONFIG_t structure containing the
 679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *               bus width and clock divider configuration
 680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return ::XMC_SDMMC_STATUS_SUCCESS
 681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Initialize the SDMMC peripheral <br>
 684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables the SDMMC peripheral, sets the internal clock divider register
 687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and sets the bus width.
 688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** XMC_SDMMC_STATUS_t XMC_SDMMC_Init(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_CONFIG_t *config);
 690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC normal and error event(s) <br>
 699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function first sets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to enable interrupt status for requested normal/error SDMMC events. It then
 703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * sets the bit-fields of EN_INT_SIGNAL_NORM and EN_INT_SIGNAL_ERR to enable the
 704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * interrupt generation for the requested events.
 705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_EnableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 710:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 711:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 712:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 713:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 714:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 715:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable normal and error SDMMC event(s) <br>
 716:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 717:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 718:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables the interrupt generation for the requested events by clearing
 719:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the bit-fields of EN_INT_SIGNAL_NORM and EN_INT_SIGNAL_ERR registers.
 720:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 721:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note:</b><br>
 722:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The XMC_SDMMC_DisableEvent() function doesn't reset the the interrupt status. One
 723:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * may still use XMC_SDMMC_GetEvent() to check the status of requested events even if
 724:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the interrupt generation is already disabled.
 725:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 726:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_DisableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 727:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 728:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 729:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 730:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 731:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 732:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 733:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 734:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 735:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Clear SDMMC event(s) <br>
 736:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 737:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 738:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function clears requested normal/error events by settings the bit-fields of
 739:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the INT_STATUS register. Please check SDMMC_INT_STATUS_NORM in the XMC45000
 740:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * manual for more details.
 741:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 742:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_ClearEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 743:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 744:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 745:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 746:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t)
 747:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 748:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 749:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 750:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get SDMMC event status <br>
 751:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 752:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 753:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function returns the status of a single requested (normal/error) event by
 754:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * reading the appropriate bit-fields of the INT_STATUS register.
 755:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 756:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** bool XMC_SDMMC_GetEvent(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_EVENT_t event);
 757:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 758:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 759:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 760:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 761:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 762:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 763:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 765:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable event status <br>
 766:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 767:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 768:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 769:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to enable interrupt status for requested normal/error SDMMC events.
 770:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 771:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_EnableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event);
 772:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 773:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 774:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 775:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 776:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 777:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 778:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 779:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 780:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable event status <br>
 781:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 782:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 783:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 784:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to disable interrupt status for requested normal/error SDMMC events.
 785:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 786:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_DisableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event);
 787:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 788:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 789:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 790:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (::XMC_SDMMC_EVENT_t) or a valid combination of
 791:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 792:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 793:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 794:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 795:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Trigger SDMMC error events <br>
 796:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 797:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 798:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC peripheral supports triggering of following error events: <br>
 799:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_CMD_TIMEOUT_ERR, ::XMC_SDMMC_CMD_CRC_ERR, ::XMC_SDMMC_CMD_END_BIT_ERR,
 801:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_CMD_IND_ERR, ::XMC_SDMMC_DATA_TIMEOUT_ERR, ::XMC_SDMMC_DATA_CRC_ERR,
 802:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_DATA_END_BIT_ERR, ::XMC_SDMMC_CURRENT_LIMIT_ERR, ::XMC_SDMMC_ACMD_ERR,
 803:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_TARGET_RESP_ERR
 804:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 805:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * For triggering Auto CMD12 error, see XMC_SDMMC_TriggerACMDErr()
 806:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 807:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_TriggerEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 808:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 809:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_TriggerEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 810:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 811:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->FORCE_EVENT_ERR_STATUS |= (uint16_t)(event >> 16U);
 812:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 813:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 814:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 815:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 816:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param source A valid SDMMC card detection signal source (::XMC_SDMMC_CD_SOURCE_t)
 817:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 818:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 819:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 820:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Selects source for card detection
 821:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 822:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetCardDetectionSource(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_CD_SOURCE
 823:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
  27              	 .loc 1 823 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
 824:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetCardDetectionSource: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
 825:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 826:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45
 827:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (sdmmc->HOST_CTRL & (uint32_t)~SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Msk) | 
 828:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 829:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 830:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_CDSEL_Msk) | source;
  44              	 .loc 1 830 0
  45 000a 0649     	 ldr r1,.L2
  46 000c 054B     	 ldr r3,.L2
  47 000e 1B68     	 ldr r3,[r3]
  48 0010 23F48032 	 bic r2,r3,#65536
  49 0014 3B68     	 ldr r3,[r7]
  50 0016 1343     	 orrs r3,r3,r2
  51 0018 0B60     	 str r3,[r1]
 831:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 832:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 833:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
  52              	 .loc 1 833 0
  53 001a 0C37     	 adds r7,r7,#12
  54              	.LCFI3:
  55              	 .cfi_def_cfa_offset 4
  56 001c BD46     	 mov sp,r7
  57              	.LCFI4:
  58              	 .cfi_def_cfa_register 13
  59              	 
  60 001e 5DF8047B 	 ldr r7,[sp],#4
  61              	.LCFI5:
  62              	 .cfi_restore 7
  63              	 .cfi_def_cfa_offset 0
  64 0022 7047     	 bx lr
  65              	.L3:
  66              	 .align 2
  67              	.L2:
  68 0024 B4400050 	 .word 1342193844
  69              	 .cfi_endproc
  70              	.LFE176:
  72              	 .section .text.XMC_SDMMC_SetCardDetectionStatus,"ax",%progbits
  73              	 .align 2
  74              	 .thumb
  75              	 .thumb_func
  77              	XMC_SDMMC_SetCardDetectionStatus:
  78              	.LFB177:
 834:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 835:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 836:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 837:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 838:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param status A valid SDMMC card detection status (::XMC_SDMMC_CD_STATUS_t)
 839:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 840:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 841:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 842:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Sets the card detection status indicating whether card is inserted or not.
 843:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Generates (card ins or card removal) interrupt when the normal interrupt is enabled.
 844:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only valid if SDMMC card detection signal source is set to XMC_SDMMC_CD_SOURCE_SW <br>
 845:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 846:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 847:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetCardDetectionStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_CD_STATUS
 848:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
  79              	 .loc 1 848 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83              	 
  84 0000 80B4     	 push {r7}
  85              	.LCFI6:
  86              	 .cfi_def_cfa_offset 4
  87              	 .cfi_offset 7,-4
  88 0002 83B0     	 sub sp,sp,#12
  89              	.LCFI7:
  90              	 .cfi_def_cfa_offset 16
  91 0004 00AF     	 add r7,sp,#0
  92              	.LCFI8:
  93              	 .cfi_def_cfa_register 7
  94 0006 7860     	 str r0,[r7,#4]
  95 0008 3960     	 str r1,[r7]
 849:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetCardDetectionStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
 850:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 851:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45
 852:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (sdmmc->HOST_CTRL & (uint32_t)~SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Msk) | 
 853:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 854:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 855:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_CDSVAL_Msk) | status;
  96              	 .loc 1 855 0
  97 000a 0649     	 ldr r1,.L5
  98 000c 054B     	 ldr r3,.L5
  99 000e 1B68     	 ldr r3,[r3]
 100 0010 23F48012 	 bic r2,r3,#1048576
 101 0014 3B68     	 ldr r3,[r7]
 102 0016 1343     	 orrs r3,r3,r2
 103 0018 0B60     	 str r3,[r1]
 856:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 857:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 104              	 .loc 1 857 0
 105 001a 0C37     	 adds r7,r7,#12
 106              	.LCFI9:
 107              	 .cfi_def_cfa_offset 4
 108 001c BD46     	 mov sp,r7
 109              	.LCFI10:
 110              	 .cfi_def_cfa_register 13
 111              	 
 112 001e 5DF8047B 	 ldr r7,[sp],#4
 113              	.LCFI11:
 114              	 .cfi_restore 7
 115              	 .cfi_def_cfa_offset 0
 116 0022 7047     	 bx lr
 117              	.L6:
 118              	 .align 2
 119              	.L5:
 120 0024 B4400050 	 .word 1342193844
 121              	 .cfi_endproc
 122              	.LFE177:
 124              	 .section .text.XMC_SDMMC_SetWriteProtectionSource,"ax",%progbits
 125              	 .align 2
 126              	 .thumb
 127              	 .thumb_func
 129              	XMC_SDMMC_SetWriteProtectionSource:
 130              	.LFB178:
 858:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 859:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 860:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 861:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 862:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param source A valid SDMMC card detection signal source (::XMC_SDMMC_WP_SOURCE_t)
 863:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 864:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 865:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 866:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Selects input for card write protection status
 867:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 868:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetWriteProtectionSource(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_WP_SOUR
 869:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 131              	 .loc 1 869 0
 132              	 .cfi_startproc
 133              	 
 134              	 
 135              	 
 136 0000 80B4     	 push {r7}
 137              	.LCFI12:
 138              	 .cfi_def_cfa_offset 4
 139              	 .cfi_offset 7,-4
 140 0002 83B0     	 sub sp,sp,#12
 141              	.LCFI13:
 142              	 .cfi_def_cfa_offset 16
 143 0004 00AF     	 add r7,sp,#0
 144              	.LCFI14:
 145              	 .cfi_def_cfa_register 7
 146 0006 7860     	 str r0,[r7,#4]
 147 0008 0B46     	 mov r3,r1
 148 000a FB70     	 strb r3,[r7,#3]
 870:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetWriteProtectionSource: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
 871:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 872:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 873:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES != XMC45
 874:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_WPSEL_Msk) | source;
 149              	 .loc 1 874 0
 150 000c 0649     	 ldr r1,.L8
 151 000e 064B     	 ldr r3,.L8
 152 0010 1B68     	 ldr r3,[r3]
 153 0012 23F00102 	 bic r2,r3,#1
 154 0016 FB78     	 ldrb r3,[r7,#3]
 155 0018 1343     	 orrs r3,r3,r2
 156 001a 0B60     	 str r3,[r1]
 875:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 876:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 157              	 .loc 1 876 0
 158 001c 0C37     	 adds r7,r7,#12
 159              	.LCFI15:
 160              	 .cfi_def_cfa_offset 4
 161 001e BD46     	 mov sp,r7
 162              	.LCFI16:
 163              	 .cfi_def_cfa_register 13
 164              	 
 165 0020 5DF8047B 	 ldr r7,[sp],#4
 166              	.LCFI17:
 167              	 .cfi_restore 7
 168              	 .cfi_def_cfa_offset 0
 169 0024 7047     	 bx lr
 170              	.L9:
 171 0026 00BF     	 .align 2
 172              	.L8:
 173 0028 B4400050 	 .word 1342193844
 174              	 .cfi_endproc
 175              	.LFE178:
 177              	 .section .text.XMC_SDMMC_SetWriteProtectionStatus,"ax",%progbits
 178              	 .align 2
 179              	 .thumb
 180              	 .thumb_func
 182              	XMC_SDMMC_SetWriteProtectionStatus:
 183              	.LFB179:
 877:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 878:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 879:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 880:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param status A valid SDMMC card detection status (::XMC_SDMMC_WP_STATUS_t)
 881:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 882:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 883:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 884:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Sets the card write protection status indicating whether card is write protected or not.
 885:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only valid if SDMMC card detection signal source is set to XMC_SDMMC_WP_SOURCE_SW <br>
 886:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 887:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 888:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetWriteProtectionStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_WP_STAT
 889:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 184              	 .loc 1 889 0
 185              	 .cfi_startproc
 186              	 
 187              	 
 188              	 
 189 0000 80B4     	 push {r7}
 190              	.LCFI18:
 191              	 .cfi_def_cfa_offset 4
 192              	 .cfi_offset 7,-4
 193 0002 83B0     	 sub sp,sp,#12
 194              	.LCFI19:
 195              	 .cfi_def_cfa_offset 16
 196 0004 00AF     	 add r7,sp,#0
 197              	.LCFI20:
 198              	 .cfi_def_cfa_register 7
 199 0006 7860     	 str r0,[r7,#4]
 200 0008 0B46     	 mov r3,r1
 201 000a FB70     	 strb r3,[r7,#3]
 890:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetWriteProtectionStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
 891:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(sdmmc);
 892:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 893:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES != XMC45
 894:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_WPSVAL_Msk) | status;
 202              	 .loc 1 894 0
 203 000c 0649     	 ldr r1,.L11
 204 000e 064B     	 ldr r3,.L11
 205 0010 1B68     	 ldr r3,[r3]
 206 0012 23F01002 	 bic r2,r3,#16
 207 0016 FB78     	 ldrb r3,[r7,#3]
 208 0018 1343     	 orrs r3,r3,r2
 209 001a 0B60     	 str r3,[r1]
 895:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 896:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 210              	 .loc 1 896 0
 211 001c 0C37     	 adds r7,r7,#12
 212              	.LCFI21:
 213              	 .cfi_def_cfa_offset 4
 214 001e BD46     	 mov sp,r7
 215              	.LCFI22:
 216              	 .cfi_def_cfa_register 13
 217              	 
 218 0020 5DF8047B 	 ldr r7,[sp],#4
 219              	.LCFI23:
 220              	 .cfi_restore 7
 221              	 .cfi_def_cfa_offset 0
 222 0024 7047     	 bx lr
 223              	.L12:
 224 0026 00BF     	 .align 2
 225              	.L11:
 226 0028 B4400050 	 .word 1342193844
 227              	 .cfi_endproc
 228              	.LFE179:
 230              	 .section .text.XMC_SDMMC_EnableDelayCmdDatLines,"ax",%progbits
 231              	 .align 2
 232              	 .thumb
 233              	 .thumb_func
 235              	XMC_SDMMC_EnableDelayCmdDatLines:
 236              	.LFB214:
 897:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 898:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 899:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 900:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 901:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 902:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 903:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 904:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if any error event has occured <br>
 905:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 906:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 907:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function can typically be used for writing an error interrupt recovery routine.
 908:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Should any error be indicated (If XMC_SDMMC_IsAnyErrorEvent() returns true), the
 909:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * routine may then clear the event after indicating the error event and reset the
 910:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC command and data lines.
 911:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 912:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsAnyErrorEvent(XMC_SDMMC_t *const sdmmc)
 913:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 914:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsAnyErrorEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
 915:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 916:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->INT_STATUS_ERR);
 917:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 918:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 919:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 920:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 921:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC wakeup event (::XMC_SDMMC_WAKEUP_EVENT_t) or a valid combination
 922:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd wakeup events
 923:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 924:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 925:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 926:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable wakeup event(s) <br>
 927:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 929:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables SDMMC wakeup events by setting appropriate bit-fields of the WAKEUP_CTRL
 930:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * register. <br>
 931:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 932:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * List of supported wakeup events -> Wakeup on: <br>
 933:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) Card interrupt <br>
 934:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) SD card insertion <br>
 935:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) SD card removal <br>
 936:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 937:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableWakeupEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 938:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 939:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableWakeupEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
 940:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 941:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->WAKEUP_CTRL |= (uint8_t)event;
 942:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 943:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 944:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 945:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 946:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC wakeup event (::XMC_SDMMC_WAKEUP_EVENT_t) or a valid combination
 947:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd wakeup events
 948:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 949:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 950:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 951:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable wakeup event(s) <br>
 952:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 953:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 954:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables SDMMC wakeup events by clearing appropriate bit-fields of the WAKEUP_CTRL
 955:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * register. <br>
 956:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 957:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * List of supported wakeup events -> Wakeup on: <br>
 958:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) Card interrupt <br>
 959:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) SD card insertion <br>
 960:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) SD card removal <br>
 961:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 962:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableWakeupEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 963:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 964:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_DisableWakeupEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
 965:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 966:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->WAKEUP_CTRL &= (uint8_t)~event;
 967:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 968:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 969:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 970:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 971:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param error A valid SDMMC ACMD error (::XMC_SDMMC_ACMD_ERR_t)
 972:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 973:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 974:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 975:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get status of Auto CMD12 errors <br>
 976:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 977:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 978:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function detects the presence of an Auto CMD12 error. A boolean is returned to
 979:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * indicate if an error is detected.
 980:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 981:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetACMDErrStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_ACMD_ERR_t erro
 982:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 983:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetACMDErrStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
 984:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetACMDErrStatus: Invalid ACMD response error", XMC_SDMMC_CHECK_ACMD_ERR(er
 985:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 986:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->ACMD_ERR_STATUS & (uint16_t)error);
 987:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 988:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 989:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 990:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 991:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param error A valid SDMMC ACMD error (::XMC_SDMMC_ACMD_ERR_t) or a valid combination
 992:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd ACMD error events
 993:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 994:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 995:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 996:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Triggers Auto CMD12 error(s) <br>
 997:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 998:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 999:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function triggers Auto CMD12 error(s) by setting appropriate bit-fields of the
1000:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * FORCE_EVENT_ACMD_ERR_STATUS register.
1001:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1002:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Related APIs: </b><br>
1003:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_TriggerEvent()
1004:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1005:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_TriggerACMDErr(XMC_SDMMC_t *const sdmmc, uint32_t error)
1006:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1007:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_TriggerACMDErr: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1008:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1009:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->FORCE_EVENT_ACMD_ERR_STATUS |= (uint16_t)error;
1010:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1011:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1012:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1013:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1014:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t The value held in the SDMMC FIFO
1015:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1016:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1017:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to read a single word (32 bits) from the SDMMC FIFO. <br>
1018:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1019:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_ReadFIFO(XMC_SDMMC_t *const sdmmc)
1020:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1021:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_ReadFIFO: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1022:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1023:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->DATA_BUFFER);
1024:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1025:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1026:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1027:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1028:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param data Pointer to a data word (32 bits) that needs to be written to the FIFO
1029:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1030:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1031:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1032:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to write a single word (32 bits) to the SDMMC FIFO. <br>
1033:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1034:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_WriteFIFO(XMC_SDMMC_t *const sdmmc, uint32_t *data)
1035:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1036:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_WriteFIFO: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1037:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1038:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->DATA_BUFFER = *data;
1039:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1040:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1041:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1042:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1043:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1044:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1045:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1046:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC bus power <br>
1047:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1048:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1049:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the SD_BUS_POWER bit-field in the POWER_CTRL register, enabling the
1050:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * bus power. It may be invoked after enabling the SD clock (XMC_SDMMC_SDClockEnable()).
1051:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1052:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_BusPowerOn(XMC_SDMMC_t *const sdmmc)
1053:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1054:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_BusPowerOn: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1055:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1056:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL |= (uint8_t)(SDMMC_POWER_CTRL_SD_BUS_POWER_Msk);
1057:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1058:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1059:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1060:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1061:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1062:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1063:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1064:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable SDMMC bus power <br>
1065:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1066:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1067:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the SD_BUS_POWER bit-field in the POWER_CTRL register, disabling the
1068:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * bus power.
1069:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1070:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_BusPowerOff(XMC_SDMMC_t *const sdmmc)
1071:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1072:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_BusPowerOff: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1073:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1074:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL &= (uint8_t)~SDMMC_POWER_CTRL_SD_BUS_POWER_Msk;
1075:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1076:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1077:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1078:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1079:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1080:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1081:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1082:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable the internal SDMMC clock <br>
1083:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1084:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1085:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables the internal clock of the SDMMC peripheral. To check if the
1086:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * clock is stable, use XMC_SDMMC_GetClockStability().
1087:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1088:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note: </b><br>
1089:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Invoke XMC_SDMMC_Init() before using this function.
1090:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1091:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_Start(XMC_SDMMC_t *const sdmmc)
1092:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1093:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_Start: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1094:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1095:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   /* Enable internal clock */
1096:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL |= (uint16_t)SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_EN_Msk;
1097:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1098:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1099:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
1102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check internal clock stability <br>
1105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to check the internal SDMMC clock stability. The function returns a
1108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * boolean value indicating internal clock stability (true = stable)
1109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetClockStability(XMC_SDMMC_t *const sdmmc)
1111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetClockStability: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   /* Return clock stability */
1115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->CLOCK_CTRL & SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_STABLE_Msk);
1116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable internal SDMMC clock <br>
1124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables the internal clock of the SDMMC peripheral. The SDMMC registers
1127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * can still be read and written even if the internal clock is disabled.
1128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_Stop(XMC_SDMMC_t *const sdmmc)
1130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_Stop: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL &= (uint16_t)~SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_EN_Msk;
1134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable the SD clock <br>
1142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the SDCLOCK_EN bit-field of the CLOCK_CTRL register, enabling the
1145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock. It can be invoked after the internal clock has achieved stability. SD card
1146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * initialization process may then follow.
1147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockEnable(XMC_SDMMC_t *const sdmmc)
1149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockEnable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL |= (uint16_t)SDMMC_CLOCK_CTRL_SDCLOCK_EN_Msk;
1153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable the SD clock <br>
1161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the SDCLOCK_EN bit-field of the CLOCK_CTRL register, disabling the
1164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock. It can be used alongside a SD card information reset routine (if required).
1165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockDisable(XMC_SDMMC_t *const sdmmc)
1167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockDisable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL &= (uint16_t)~SDMMC_CLOCK_CTRL_SDCLOCK_EN_Msk;
1171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param reset_mode Reset mode or a bitwise combination of modes
1176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SDMMC software reset request <br>
1180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets in the SDMMC SW_RESET register: <br>
1183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) bit 0 to reset all <br>
1184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) bit 1 to reset CMD line <br>
1185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) bit 2 reset DAT line <br>
1186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * It is typically used to reset the SD HOST controller's registers.
1188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetSWReset(XMC_SDMMC_t *const sdmmc, uint32_t reset_mode)
1190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetSWReset: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->SW_RESET |= (uint8_t)reset_mode;
1194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return Software reset status
1199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get SDMMC software reset status <br>
1202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SD host takes some time to reset its registers after invoking XMC_SDMMC_SetSWReset().
1205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Since XMC_SDMMC_SetSWReset() is a non-blocking function, XMC_SDMMC_GetSWResetStatus() has
1206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * been provided to check the software reset status. The return value needs to be masked
1207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * with the reset mode (XMC_SDMMC_SW_RESET_t) to get a specific software reset status value.
1208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetSWResetStatus(XMC_SDMMC_t *const sdmmc)
1210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetSWResetStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
1212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (uint32_t)(sdmmc->SW_RESET);
1214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return XMC_SDMMC_PRESENT_STATE_t A structure storing the present state of the host controller
1219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the present state of the SDMMC host controller <br>
1222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the values of each bit-field in SDMMC_PRESENT_STATE register
1225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function call populates an instance of the XMC_SDMMC_PRESENT_STATE_t structure with
1226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the state of the SD host controller and returns it to the caller.
1227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE XMC_SDMMC_PRESENT_STATE_t XMC_SDMMC_GetPresentState(const XMC_SDMMC_t *const sdmmc)
1229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_PRESENT_STATE_t result;
1231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetPresentState: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
1233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   result.b32 = (uint32_t)sdmmc->PRESENT_STATE;
1235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return result;
1237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool SDMMC command line status
1242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if the command line is busy <br>
1245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if the command
1248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * line is busy ("false" otherwise). The command line must be free before sending an SDMMC
1249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command with XMC_SDMMC_SendCommand().
1250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsCommandLineBusy(XMC_SDMMC_t *const sdmmc)
1252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsCommandLineBusy: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_CMD_Msk);
1256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool SDMMC data line status
1261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if the data line is busy <br>
1264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if the data
1267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * line is busy ("false" otherwise). The data line must be free before sending an SDMMC
1268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command with XMC_SDMMC_SendCommand().
1269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsDataLineBusy(XMC_SDMMC_t *const sdmmc)
1271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsDataLineBusy: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_DAT_Msk);
1275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool Status of all data lines
1280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if all data line are high <br>
1283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if all data
1286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * lines are high. It can be used to handle SDMMC error conditions. For example, if an
1287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * error event (XMC_SDMMC_IsAnyErrorEvent()) is detected and all data lines are high,
1288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the user code can conclude that the error is of a "recoverable" type.
1289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsAllDataLinesHigh(XMC_SDMMC_t *const sdmmc)
1291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsAllDataLinesHigh: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return ((((sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Msk) >>
1295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****         SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Pos) == 0x0FU) ? true : false);
1296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param command A pointer to a constant of type XMC_SDMMC_COMMAND_t, pointing to the command conf
1301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param arg Command argument
1302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return ::XMC_SDMMC_STATUS_SUCCESS
1303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Send normal SDMMC command <br>
1306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to send a normal SDMMC command. This non-blocking function sets the
1309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ARGUMENT1 and COMMAND registers. It is the user's responsibility to check if the command
1310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and data lines are busy (XMC_SDMMC_IsDataLineBusy(), XMC_SDMMC_IsCommandLineBusy()).
1311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** XMC_SDMMC_STATUS_t XMC_SDMMC_SendCommand(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_COMMAND_t *comma
1313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t SDMMC command response
1317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card response (no Auto command) <br>
1320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function returns [39:8] bits of the card response. The others are checked automatically
1323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * by the peripheral. This function can be used with response type R1, R1b, R3, R4, R5, R5b, R6
1324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * but it doesn't support the retrieving of R1 of Auto CMD 23 and R1b of Auto CMD 12. To get
1325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * these responses, use XMC_SDMMC_GetAutoCommandResponse().
1326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetCommandResponse(XMC_SDMMC_t *const sdmmc)
1328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetCommandResponse: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->RESPONSE[0]);
1332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t Auto command response value
1337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card response of Auto commands <br>
1340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function returns card response [39:8] bits of auto commands: R1 of Auto CMD 23 and
1343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * R1b of Auto CMD 12.
1344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetAutoCommandResponse(const XMC_SDMMC_t *const sdmmc)
1346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetAutoCommandResponse: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
1348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->RESPONSE[3]);
1350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param response Pointer to structure type XMC_SDMMC_RESPONSE_t to store the full response
1355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card R2 response <br>
1359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The R2 response is 120 bits wide. The function reads all peripheral registers and store in
1362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the response data structure.
1363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_GetR2Response(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_RESPONSE_t *const response);
1365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param transfer_mode Transfer mode configuration
1369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Configure data transfer mode <br>
1373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function configures block size, block count, type of data transfer, response type
1376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and sets the auto command configuration. Use this function to configure a multi-block
1377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer.
1378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_SetDataTransferMode(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_TRANSFER_MODE_t *const trans
1380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t Number of blocks that need to be transferred
1384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the number of blocks that need to be transferred <br>
1387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function is valid only for multiple block transfers. The host controller
1390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * decrements the block count after each block transfer and stops when the count reaches
1391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * zero. It can only be accessed when no transaction is happening (i.e after a transaction
1392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * has stopped). This function returns an invalid value during the transfer. <br>
1393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * When saving transfer context as a result of the suspend command, the number of blocks
1395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * yet to be transferred can be determined by using this function.
1396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetTransferBlocksNum(XMC_SDMMC_t *const sdmmc)
1398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetTransferBlocksNum: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(s
1400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (uint32_t)(sdmmc->BLOCK_COUNT);
1402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to enable read wait control, "false" to disable read wait control.
1407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Configure read wait control <br>
1411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The read wait function is optional for SDIO cards. If the card supports read wait and
1414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_GetTransferBlocksNum() is executed, the SDMMC peripheral will stop read data
1415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * using DAT[2] line. If this feature is not enabled the peripheral has to stop the SD
1416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * clock to hold read data, restricting commands generation. <br>
1417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * When the host driver detects an SD card insertion, it sets this bit according to the
1419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * CCCR of the SDIO card. If the card does not support read wait, this feature shall
1420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * never be enabled otherwise a DAT line conflict may occur. If this feature is disabled,
1421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Suspend/Resume cannot be supported.
1422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetReadWaitControl(XMC_SDMMC_t *const sdmmc, bool enabled)
1424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetReadWaitControl: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = (uint8_t)((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_READ_WA
1428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                     (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_READ_WAIT_CT
1429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to set stop at block gap, "false" for transfer
1434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Stop at block gap request <br>
1438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function is used to terminate a transaction execution at the next block gap for
1441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * non-DMA transfers.
1442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetStopAtBlockGap(XMC_SDMMC_t *const sdmmc, bool enabled)
1444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetStopAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = (uint8_t)((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_STOP_AT
1448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                     (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_STOP_AT_BLOC
1449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to restart transaction, "false" is ignored
1454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Issue a continue request <br>
1458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function is used to restart a transaction which was stopped using the "Stop at
1461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * block gap" request. (XMC_SDMMC_SetStopAtBlockGap())
1462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetContinueRequest(XMC_SDMMC_t *const sdmmc, bool enabled)
1464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetContinueRequest: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = ((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Msk
1468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                            (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Pos));
1469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
1474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get continue request <br>
1477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function returns the status of the BLOCK_GAP_CTRL.CONTINUE_REQ bit-field. It
1480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * returns "true" if the transaction is restarted after a "stop at block gap" request.
1481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetContinueRequest(XMC_SDMMC_t *const sdmmc)
1483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetContinueRequest: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->BLOCK_GAP_CTRL & (uint8_t)(1U << SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Pos));
1487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to the SDMMC configuration structure (::XMC_SDMMC_CONFIG_t)
1492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable interrupt at block gap <br>
1496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the BLOCK_GAP_CTRL.INT_AT_BLOCK_GAP bit-field to enable interrupt
1499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at block gap for a multi-block transfer. This bit is only valid in a 4-bit mode of
1500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the SDIO card.
1501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableInterruptAtBlockGap(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_
1503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_
1505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: This operation is only valid in 4-bit mode",
1506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****              (config->bus_width == XMC_SDMMC_DATA_LINES_1));
1507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(config);
1509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL |= (uint8_t)SDMMC_BLOCK_GAP_CTRL_INT_AT_BLOCK_GAP_Msk;
1510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to the SDMMC configuration structure (::XMC_SDMMC_CONFIG_t)
1515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable interrupt at block gap <br>
1519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the BLOCK_GAP_CTRL.INT_AT_BLOCK_GAP bit-field to disable interrupt
1522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at block gap. This bit is only valid in a 4-bit mode of the SDIO card.
1523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableInterruptAtBlockGap(XMC_SDMMC_t *const sdmmc,
1525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                                           const XMC_SDMMC_CONFIG_t *config)
1526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_
1529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: This operation is only valid in 4-bit mode",
1530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****              (config->bus_width == XMC_SDMMC_DATA_LINES_1));
1531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_UNUSED_ARG(config);
1533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL &= (uint8_t)~SDMMC_BLOCK_GAP_CTRL_INT_AT_BLOCK_GAP_Msk;
1534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param clk Desired clock frequency (::XMC_SDMMC_SDCLK_FREQ_SEL_t)
1539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SD clock frequency <br>
1543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the CLOCK_CTRL register to configure the frequency of the SD clock
1546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * pin. The register is programmed with the divisor of the base clock frequency (clk).
1547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The following settings are permitted (8-bit divided clock mode): <br>
1549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 00H: base clock (10MHz->63MHz) <br>
1550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 01H: base clock divided by 2   <br>
1551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 10H: base clock divided by 32  <br>
1552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 02H: base clock divided by 4   <br>
1553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 04H: base clock divided by 8   <br>
1554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 08H: base clock divided by 16  <br>
1555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 20H: base clock divided by 64  <br>
1556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 40H: base clock divided by 128 <br>
1557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 80H: base clock divided by 256 <br>
1558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note: </b><br>
1560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The internal clock should be disabled before updating frequency clock select. Please
1561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * see section 2.2.14 -> "Clock Control Register" in the SD HOST specification for more
1562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * information.
1563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockFreqSelect(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_SDCLK_FREQ_SEL
1565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockFreqSelect: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockFreqSelect: Invalid clock frequency selection", XMC_SDMMC_CHECK_SDCL
1568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL = (uint16_t)((sdmmc->CLOCK_CTRL & (uint32_t)~SDMMC_CLOCK_CTRL_SDCLK_FREQ_SEL_Ms
1570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                  (uint32_t)(clk << SDMMC_CLOCK_CTRL_SDCLK_FREQ_SEL_Pos));
1571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param bus_voltage Desired bus voltage (::XMC_SDMMC_BUS_VOLTAGE_t)
1576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SDMMC bus voltage <br>
1580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the CLOCK_CTRL register to configure the bus voltage. Currently,
1583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3.3 volts is the supported voltage level. This function is relevant within the host
1584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * controller initialization routine.
1585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetBusVoltage(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_BUS_VOLTAGE_t bus_
1587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetBusVoltage: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetBusVoltage: Invalid bus voltage", XMC_SDMMC_CHECK_BUS_VOLTAGE(bus_voltag
1590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL = (uint8_t)((sdmmc->POWER_CTRL & (uint32_t)~SDMMC_POWER_CTRL_SD_BUS_VOLTAGE_SEL
1592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                 (uint32_t)(bus_voltage << SDMMC_POWER_CTRL_SD_BUS_VOLTAGE_SEL_Pos))
1593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param timeout Data line timeout value
1598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data line timeout <br>
1602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the interval by which the data line timeouts are detected. The
1605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * timeout clock frequency is generated by dividing the SD clock (TMCLK) by the timeout argument.
1606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function must be called before setting the bus voltage (XMC_SDMMC_SetBusVoltage()).
1607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataLineTimeout(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_DAT_TIMEOUT_C
1609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataLineTimeout: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataLineTimeout: Invalid timeout", XMC_SDMMC_CHECK_DAT_TIMEOUT_COUNTER(t
1612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->TIMEOUT_CTRL = (uint8_t)((sdmmc->TIMEOUT_CTRL & (uint32_t)~SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_
1614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint32_t)(timeout << SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL_Pos)
1615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param lines Number of data lines to use  (::XMC_SDMMC_DATA_LINES_t)
1620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data transfer width <br>
1624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the data transfer width. Before using this function, an ACMD6
1627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command (with R1 response type) must be sent to switch the bus width.
1628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataTransferWidth(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_DATA_LINES_
1630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferWidth: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(s
1632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferWidth: Invalid no. of data lines", XMC_SDMMC_CHECK_DATA_LINE
1633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL &= (uint8_t)~(XMC_SDMMC_DATA_LINES_1 | XMC_SDMMC_DATA_LINES_4 | XMC_SDMMC_DATA_L
1635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (uint8_t)lines;
1636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param dir Transfer direction (::XMC_SDMMC_DATA_TRANSFER_DIR_t)
1641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data transfer direction <br>
1645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the data transfer direction: host to card OR card to host. It
1648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * is typically used to configure block operations (read/write) on the SD card. For
1649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * example, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD must be used for a write block operation.
1650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataTransferDirection(XMC_SDMMC_t *const sdmmc,
1652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                                         XMC_SDMMC_DATA_TRANSFER_DIR_t dir)
1653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferDirection: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
1655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferDirection: Invalid direction", XMC_SDMMC_CHECK_DATA_TRANSFER
1656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->TRANSFER_MODE = (uint16_t)((sdmmc->TRANSFER_MODE & (uint16_t)~SDMMC_TRANSFER_MODE_TX_DIR_S
1658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint16_t)((uint16_t)dir << SDMMC_TRANSFER_MODE_TX_DIR_SELECT_Pos
1659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable delay on the command/data out lines <br>
1667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to enable delay on the command/data out lines. Invoke this function
1670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * before selecting the number of delay elements.
1671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableDelayCmdDatLines(void)
1673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 237              	 .loc 1 1673 0
 238              	 .cfi_startproc
 239              	 
 240              	 
 241              	 
 242 0000 80B4     	 push {r7}
 243              	.LCFI24:
 244              	 .cfi_def_cfa_offset 4
 245              	 .cfi_offset 7,-4
 246 0002 00AF     	 add r7,sp,#0
 247              	.LCFI25:
 248              	 .cfi_def_cfa_register 7
1674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL |= (uint32_t)SCU_GENERAL_SDMMCDEL_TAPEN_Msk;
 249              	 .loc 1 1674 0
 250 0004 054A     	 ldr r2,.L14
 251 0006 054B     	 ldr r3,.L14
 252 0008 D3F89C30 	 ldr r3,[r3,#156]
 253 000c 43F00103 	 orr r3,r3,#1
 254 0010 C2F89C30 	 str r3,[r2,#156]
1675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 255              	 .loc 1 1675 0
 256 0014 BD46     	 mov sp,r7
 257              	.LCFI26:
 258              	 .cfi_def_cfa_register 13
 259              	 
 260 0016 5DF8047B 	 ldr r7,[sp],#4
 261              	.LCFI27:
 262              	 .cfi_restore 7
 263              	 .cfi_def_cfa_offset 0
 264 001a 7047     	 bx lr
 265              	.L15:
 266              	 .align 2
 267              	.L14:
 268 001c 00400050 	 .word 1342193664
 269              	 .cfi_endproc
 270              	.LFE214:
 272              	 .section .text.XMC_SDMMC_SetDelay,"ax",%progbits
 273              	 .align 2
 274              	 .thumb
 275              	 .thumb_func
 277              	XMC_SDMMC_SetDelay:
 278              	.LFB216:
1676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable delay on the command/data out lines <br>
1683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to disable delay on the command/data out lines.
1686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableDelayCmdDatLines(void)
1688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL &= (uint32_t)~SCU_GENERAL_SDMMCDEL_TAPEN_Msk;
1690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param tapdel Number of delay elements to select
1694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set number of delay elements on the command/data out lines <br>
1698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the number of delay elements on the command/data out lines.
1701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function writes the delay value to the SDMMC delay control register (SDMMCDEL)
1702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * within the realm of the SCU peripheral. A delay of tapdel + 1 is considered as the
1703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * final selected number of delay elements.
1704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDelay(uint8_t tapdel)
1706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 279              	 .loc 1 1706 0
 280              	 .cfi_startproc
 281              	 
 282              	 
 283              	 
 284 0000 80B4     	 push {r7}
 285              	.LCFI28:
 286              	 .cfi_def_cfa_offset 4
 287              	 .cfi_offset 7,-4
 288 0002 83B0     	 sub sp,sp,#12
 289              	.LCFI29:
 290              	 .cfi_def_cfa_offset 16
 291 0004 00AF     	 add r7,sp,#0
 292              	.LCFI30:
 293              	 .cfi_def_cfa_register 7
 294 0006 0346     	 mov r3,r0
 295 0008 FB71     	 strb r3,[r7,#7]
1707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL = (uint32_t)((SCU_GENERAL->SDMMCDEL & (uint32_t)~SCU_GENERAL_SDMMCDEL_TAPDE
 296              	 .loc 1 1707 0
 297 000a 0849     	 ldr r1,.L17
 298 000c 074B     	 ldr r3,.L17
 299 000e D3F89C30 	 ldr r3,[r3,#156]
 300 0012 23F0F003 	 bic r3,r3,#240
1708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint32_t)(tapdel << SCU_GENERAL_SDMMCDEL_TAPDEL_Pos));
 301              	 .loc 1 1708 0
 302 0016 FA79     	 ldrb r2,[r7,#7]
 303 0018 1201     	 lsls r2,r2,#4
1707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL = (uint32_t)((SCU_GENERAL->SDMMCDEL & (uint32_t)~SCU_GENERAL_SDMMCDEL_TAPDE
 304              	 .loc 1 1707 0
 305 001a 1343     	 orrs r3,r3,r2
 306 001c C1F89C30 	 str r3,[r1,#156]
1709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 307              	 .loc 1 1709 0
 308 0020 0C37     	 adds r7,r7,#12
 309              	.LCFI31:
 310              	 .cfi_def_cfa_offset 4
 311 0022 BD46     	 mov sp,r7
 312              	.LCFI32:
 313              	 .cfi_def_cfa_register 13
 314              	 
 315 0024 5DF8047B 	 ldr r7,[sp],#4
 316              	.LCFI33:
 317              	 .cfi_restore 7
 318              	 .cfi_def_cfa_offset 0
 319 0028 7047     	 bx lr
 320              	.L18:
 321 002a 00BF     	 .align 2
 322              	.L17:
 323 002c 00400050 	 .word 1342193664
 324              	 .cfi_endproc
 325              	.LFE216:
 327              	 .comm normal_int_status,2,2
 328              	 .comm err_int_status,2,2
 329              	 .global SDMMC_BLOCK_0_DATA_0_PIN_CONFIG
 330              	 .section .rodata.SDMMC_BLOCK_0_DATA_0_PIN_CONFIG,"a",%progbits
 331              	 .align 2
 334              	SDMMC_BLOCK_0_DATA_0_PIN_CONFIG:
 335 0000 80       	 .byte -128
 336 0001 000000   	 .space 3
 337 0004 00000100 	 .word 65536
 338 0008 01       	 .byte 1
 339 0009 000000   	 .space 3
 340 000c 01       	 .byte 1
 341 000d 000000   	 .space 3
 342              	 .global SDMMC_BLOCK_0_DATA_0
 343              	 .section .rodata.SDMMC_BLOCK_0_DATA_0,"a",%progbits
 344              	 .align 2
 347              	SDMMC_BLOCK_0_DATA_0:
 348 0000 00840248 	 .word 1208124416
 349 0004 00       	 .byte 0
 350 0005 000000   	 .space 3
 351 0008 00000000 	 .word SDMMC_BLOCK_0_DATA_0_PIN_CONFIG
 352              	 .global SDMMC_BLOCK_0_DATA_1_PIN_CONFIG
 353              	 .section .rodata.SDMMC_BLOCK_0_DATA_1_PIN_CONFIG,"a",%progbits
 354              	 .align 2
 357              	SDMMC_BLOCK_0_DATA_1_PIN_CONFIG:
 358 0000 80       	 .byte -128
 359 0001 000000   	 .space 3
 360 0004 00000100 	 .word 65536
 361 0008 01       	 .byte 1
 362 0009 000000   	 .space 3
 363 000c 01       	 .byte 1
 364 000d 000000   	 .space 3
 365              	 .global SDMMC_BLOCK_0_DATA_1
 366              	 .section .rodata.SDMMC_BLOCK_0_DATA_1,"a",%progbits
 367              	 .align 2
 370              	SDMMC_BLOCK_0_DATA_1:
 371 0000 00810248 	 .word 1208123648
 372 0004 06       	 .byte 6
 373 0005 000000   	 .space 3
 374 0008 00000000 	 .word SDMMC_BLOCK_0_DATA_1_PIN_CONFIG
 375              	 .global SDMMC_BLOCK_0_DATA_2_PIN_CONFIG
 376              	 .section .rodata.SDMMC_BLOCK_0_DATA_2_PIN_CONFIG,"a",%progbits
 377              	 .align 2
 380              	SDMMC_BLOCK_0_DATA_2_PIN_CONFIG:
 381 0000 80       	 .byte -128
 382 0001 000000   	 .space 3
 383 0004 00000100 	 .word 65536
 384 0008 01       	 .byte 1
 385 0009 000000   	 .space 3
 386 000c 01       	 .byte 1
 387 000d 000000   	 .space 3
 388              	 .global SDMMC_BLOCK_0_DATA_2
 389              	 .section .rodata.SDMMC_BLOCK_0_DATA_2,"a",%progbits
 390              	 .align 2
 393              	SDMMC_BLOCK_0_DATA_2:
 394 0000 00810248 	 .word 1208123648
 395 0004 07       	 .byte 7
 396 0005 000000   	 .space 3
 397 0008 00000000 	 .word SDMMC_BLOCK_0_DATA_2_PIN_CONFIG
 398              	 .global SDMMC_BLOCK_0_DATA_3_PIN_CONFIG
 399              	 .section .rodata.SDMMC_BLOCK_0_DATA_3_PIN_CONFIG,"a",%progbits
 400              	 .align 2
 403              	SDMMC_BLOCK_0_DATA_3_PIN_CONFIG:
 404 0000 80       	 .byte -128
 405 0001 000000   	 .space 3
 406 0004 00000100 	 .word 65536
 407 0008 01       	 .byte 1
 408 0009 000000   	 .space 3
 409 000c 01       	 .byte 1
 410 000d 000000   	 .space 3
 411              	 .global SDMMC_BLOCK_0_DATA_3
 412              	 .section .rodata.SDMMC_BLOCK_0_DATA_3,"a",%progbits
 413              	 .align 2
 416              	SDMMC_BLOCK_0_DATA_3:
 417 0000 00840248 	 .word 1208124416
 418 0004 01       	 .byte 1
 419 0005 000000   	 .space 3
 420 0008 00000000 	 .word SDMMC_BLOCK_0_DATA_3_PIN_CONFIG
 421              	 .global SDMMC_BLOCK_0_COMMAND_PIN_CONFIG
 422              	 .section .rodata.SDMMC_BLOCK_0_COMMAND_PIN_CONFIG,"a",%progbits
 423              	 .align 2
 426              	SDMMC_BLOCK_0_COMMAND_PIN_CONFIG:
 427 0000 80       	 .byte -128
 428 0001 000000   	 .space 3
 429 0004 00000100 	 .word 65536
 430 0008 01       	 .byte 1
 431 0009 000000   	 .space 3
 432 000c 01       	 .byte 1
 433 000d 000000   	 .space 3
 434              	 .global SDMMC_BLOCK_0_COMMAND
 435              	 .section .rodata.SDMMC_BLOCK_0_COMMAND,"a",%progbits
 436              	 .align 2
 439              	SDMMC_BLOCK_0_COMMAND:
 440 0000 00830248 	 .word 1208124160
 441 0004 05       	 .byte 5
 442 0005 000000   	 .space 3
 443 0008 00000000 	 .word SDMMC_BLOCK_0_COMMAND_PIN_CONFIG
 444              	 .global SDMMC_BLOCK_0_CLK_PIN_CONFIG
 445              	 .section .rodata.SDMMC_BLOCK_0_CLK_PIN_CONFIG,"a",%progbits
 446              	 .align 2
 449              	SDMMC_BLOCK_0_CLK_PIN_CONFIG:
 450 0000 80       	 .byte -128
 451 0001 000000   	 .space 3
 452 0004 00000100 	 .word 65536
 453 0008 01       	 .byte 1
 454 0009 000000   	 .space 3
 455 000c 01       	 .byte 1
 456 000d 000000   	 .space 3
 457              	 .global SDMMC_BLOCK_0_CLK
 458              	 .section .rodata.SDMMC_BLOCK_0_CLK,"a",%progbits
 459              	 .align 2
 462              	SDMMC_BLOCK_0_CLK:
 463 0000 00830248 	 .word 1208124160
 464 0004 06       	 .byte 6
 465 0005 000000   	 .space 3
 466 0008 00000000 	 .word SDMMC_BLOCK_0_CLK_PIN_CONFIG
 467              	 .global SDMMC_BLOCK_0_SD
 468              	 .section .data.SDMMC_BLOCK_0_SD,"aw",%progbits
 469              	 .align 2
 472              	SDMMC_BLOCK_0_SD:
 473 0000 00C00148 	 .word 1208074240
 474 0004 00000000 	 .space 8
 474      00000000 
 475 000c 3F000000 	 .word 63
 476 0010 00000000 	 .word 0
 477 0014 00000000 	 .space 68
 477      00000000 
 477      00000000 
 477      00000000 
 477      00000000 
 478 0058 00000000 	 .word SYSTIMER_0
 479 005c 0000     	 .space 2
 480 005e 00       	 .byte 0
 481 005f 00       	 .space 1
 482              	 .global SDMMC_BLOCK_0
 483              	 .section .data.SDMMC_BLOCK_0,"aw",%progbits
 484              	 .align 2
 487              	SDMMC_BLOCK_0:
 488 0000 00000000 	 .word SDMMC_BLOCK_0_SD
 489 0004 00000000 	 .word SDMMC_BLOCK_0_Config_Init
 490 0008 03       	 .byte 3
 491 0009 0000     	 .space 2
 492 000b 00       	 .byte 0
 493 000c 00       	 .byte 0
 494 000d 00       	 .byte 0
 495 000e 0000     	 .space 2
 496              	 .section .text.SDMMC0_0_IRQHandler,"ax",%progbits
 497              	 .align 2
 498              	 .global SDMMC0_0_IRQHandler
 499              	 .thumb
 500              	 .thumb_func
 502              	SDMMC0_0_IRQHandler:
 503              	.LFB229:
 504              	 .file 2 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c"
   1:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**************************************************************************************************
   2:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** * DAVE APP Name : SDMMC_BLOCK       APP Version: 4.0.28
   3:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** *
   4:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** * NOTE:
   5:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** ***************************************************************************************************
   7:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
   8:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**
   9:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * @cond
  10:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
  11:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * Copyright (c) 2016-2018, Infineon Technologies AG
  12:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * All rights reserved.
  13:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  14:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  15:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * following conditions are met:
  16:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  17:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  18:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *   disclaimer.
  19:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  20:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  21:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  22:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  23:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  24:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *   products derived from this software without specific prior written permission.
  25:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  26:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  27:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  28:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  29:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  30:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  31:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  32:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  34:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  35:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * with Infineon Technologies AG (dave@infineon.com).
  36:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
  37:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  38:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * Change History
  39:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * --------------
  40:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  41:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * 2016-01-20:
  42:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *     - Initial version <br>
  43:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  44:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * 2016-02-05:
  45:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *     - RTOS support added <br>
  46:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  47:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * 2016-04-05:
  48:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *     - MISRA fixes.<br>
  49:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *     - Bug fixes done for PR.<br>
  50:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  51:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * 2016-04-05:
  52:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *     - Code genration fix for XMC4300 device.<br>
  53:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  54:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * 2018-08-29:
  55:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *     - Use XMC_SDMMC_SetWriteProtectionSource() and XMC_SDMMC_SetWriteProtectionStatus() for XMC4
  56:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *
  57:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * 2018-11-09:
  58:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  *     - Fixed code generation for SPI mode and XMC1 family
  59:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * 
  60:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * @endcond
  61:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  */
  62:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  63:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**************************************************************************************************
  64:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * HEADER FILES
  65:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
  66:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  67:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** #include "sdmmc_block.h"
  68:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  69:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**************************************************************************************************
  70:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * LOCAL ROUTINES
  71:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
  72:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  73:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK configuration initialization */
  74:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** static void SDMMC_BLOCK_0_Config_Init(void);
  75:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  76:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  77:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**************************************************************************************************
  78:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * EXTERNAL REFERENCES
  79:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
  80:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  81:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** extern SDMMC_BLOCK_MODE_STATUS_t
  82:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** SDMMC_BLOCK_SD_ErrorInterruptHandler(SDMMC_BLOCK_t *const obj,
  83:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                                      uint16_t int_status);
  84:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  85:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** extern SDMMC_BLOCK_MODE_STATUS_t
  86:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** SDMMC_BLOCK_SD_NormalInterruptHandler(SDMMC_BLOCK_t *const obj,
  87:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                                       uint16_t int_status);
  88:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  89:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  90:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**************************************************************************************************
  91:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * GLOBAL VARIABLES
  92:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
  93:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  94:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** volatile uint16_t normal_int_status; /* Normal interrupt status */
  95:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** volatile uint16_t err_int_status;    /* Error interrupt status */
  96:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  97:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
  98:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**************************************************************************************************
  99:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   * DATA STRUCTURES
 100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
 101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 0 pin config */
 104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_GPIO_CONFIG_t SDMMC_BLOCK_0_DATA_0_PIN_CONFIG =
 105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = 
 107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_MEDIUM_EDGE,
 110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
 111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   },
 112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .hw_control = XMC_GPIO_HWCTRL_PERIPHERAL1,
 113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 0 pin */
 116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_PIN_CONFIG_t SDMMC_BLOCK_0_DATA_0 =
 117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .port = (XMC_GPIO_PORT_t *)PORT4_BASE,
 119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .pin  = (uint8_t)0,
 120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = &SDMMC_BLOCK_0_DATA_0_PIN_CONFIG
 121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 1 pin config */
 125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_GPIO_CONFIG_t SDMMC_BLOCK_0_DATA_1_PIN_CONFIG =
 126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = 
 128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_MEDIUM_EDGE,
 131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
 132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   },
 133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .hw_control = XMC_GPIO_HWCTRL_PERIPHERAL1,
 134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 1 pin */
 137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_PIN_CONFIG_t SDMMC_BLOCK_0_DATA_1 =
 138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .port = (XMC_GPIO_PORT_t *)PORT1_BASE,
 140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .pin  = (uint8_t)6,
 141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = &SDMMC_BLOCK_0_DATA_1_PIN_CONFIG
 142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 2 pin config */
 146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_GPIO_CONFIG_t SDMMC_BLOCK_0_DATA_2_PIN_CONFIG =
 147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = 
 149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_MEDIUM_EDGE,
 152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
 153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   },
 154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .hw_control = XMC_GPIO_HWCTRL_PERIPHERAL1,
 155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 2 pin */
 158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_PIN_CONFIG_t SDMMC_BLOCK_0_DATA_2 =
 159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .port = (XMC_GPIO_PORT_t *)PORT1_BASE,
 161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .pin  = (uint8_t)7,
 162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = &SDMMC_BLOCK_0_DATA_2_PIN_CONFIG
 163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 3 pin config */
 167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_GPIO_CONFIG_t SDMMC_BLOCK_0_DATA_3_PIN_CONFIG =
 168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = 
 170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_MEDIUM_EDGE,
 173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
 174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   },
 175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .hw_control = XMC_GPIO_HWCTRL_PERIPHERAL1,
 176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Data 3 pin */
 179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_PIN_CONFIG_t SDMMC_BLOCK_0_DATA_3 =
 180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .port = (XMC_GPIO_PORT_t *)PORT4_BASE,
 182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .pin  = (uint8_t)1,
 183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = &SDMMC_BLOCK_0_DATA_3_PIN_CONFIG
 184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Command pin config */
 188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_GPIO_CONFIG_t SDMMC_BLOCK_0_COMMAND_PIN_CONFIG =
 189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = 
 191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_MEDIUM_EDGE,
 194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
 195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   },
 196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .hw_control = XMC_GPIO_HWCTRL_PERIPHERAL1,
 197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Command pin */
 200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_PIN_CONFIG_t SDMMC_BLOCK_0_COMMAND =
 201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .port = (XMC_GPIO_PORT_t *)PORT3_BASE,
 203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .pin  = (uint8_t)5,
 204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = &SDMMC_BLOCK_0_COMMAND_PIN_CONFIG
 205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Clock pin config */
 209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_GPIO_CONFIG_t SDMMC_BLOCK_0_CLK_PIN_CONFIG =
 210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = 
 212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_MEDIUM_EDGE,
 215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
 216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   },
 217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .hw_control = XMC_GPIO_HWCTRL_PERIPHERAL1,
 218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK Clock pin */
 221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** const SDMMC_BLOCK_PIN_CONFIG_t SDMMC_BLOCK_0_CLK =
 222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .port = (XMC_GPIO_PORT_t *)PORT3_BASE,
 224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .pin  = (uint8_t)6,
 225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .config = &SDMMC_BLOCK_0_CLK_PIN_CONFIG
 226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC SD mode instance */
 230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** SDMMC_BLOCK_SD_t SDMMC_BLOCK_0_SD =
 231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .sdmmc = XMC_SDMMC, /* SDMMC instance */
 233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .int_priority = 63U, /* Node interrupt priority */
 234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .int_sub_priority = 0U, /* Node interrupt sub-priority */
 235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .mode_init_flag = false, /* Mode initialization false by default */
 236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .systimer = &SYSTIMER_0 /* SYSTIMER APP instance */
 237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC_BLOCK APP instance */
 240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** SDMMC_BLOCK_t SDMMC_BLOCK_0 =
 241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .interface_mode = SDMMC_BLOCK_CARD_INTERFACE_SD, /* SD interface */
 243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .sdmmc_sd = &SDMMC_BLOCK_0_SD, /* SDMMC_SD instance */
 244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .rtos_mode = SDMMC_BLOCK_RTOS_MODE_DISABLED, /* RTOS mose is not used */
 245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   #if SDMMC_BLOCK_RTOS_MODE_SELECT
 247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .cmsis_rtos = NULL, /* RTOS mose is not used */
 248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   #endif /* SDMMC_BLOCK_RTOS_MODE_SELECT */
 249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .init_pins = SDMMC_BLOCK_0_Config_Init, /* true: Initialized; false: Uninitialized */
 251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .init_flag = false, /* true: Initialized; false: Uninitialized */
 252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   .card_state = ((uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED |
 253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                  (uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD) /* Card state */
 254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** };
 255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /**************************************************************************************************
 257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * FUNCTION DEFINITIONS
 258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  **************************************************************************************************
 259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /* SDMMC SD interrupt handler */
 261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** void SDMMC0_0_IRQHandler(void)
 262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 505              	 .loc 2 262 0
 506              	 .cfi_startproc
 507              	 
 508              	 
 509 0000 80B5     	 push {r7,lr}
 510              	.LCFI34:
 511              	 .cfi_def_cfa_offset 8
 512              	 .cfi_offset 7,-8
 513              	 .cfi_offset 14,-4
 514 0002 00AF     	 add r7,sp,#0
 515              	.LCFI35:
 516              	 .cfi_def_cfa_register 7
 263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   normal_int_status = SDMMC_BLOCK_0.sdmmc_sd->sdmmc->INT_STATUS_NORM;
 517              	 .loc 2 263 0
 518 0004 154B     	 ldr r3,.L22
 519 0006 1B68     	 ldr r3,[r3]
 520 0008 1B68     	 ldr r3,[r3]
 521 000a 1B8E     	 ldrh r3,[r3,#48]
 522 000c 9AB2     	 uxth r2,r3
 523 000e 144B     	 ldr r3,.L22+4
 524 0010 1A80     	 strh r2,[r3]
 264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   err_int_status = SDMMC_BLOCK_0.sdmmc_sd->sdmmc->INT_STATUS_ERR;
 525              	 .loc 2 264 0
 526 0012 124B     	 ldr r3,.L22
 527 0014 1B68     	 ldr r3,[r3]
 528 0016 1B68     	 ldr r3,[r3]
 529 0018 5B8E     	 ldrh r3,[r3,#50]
 530 001a 9AB2     	 uxth r2,r3
 531 001c 114B     	 ldr r3,.L22+8
 532 001e 1A80     	 strh r2,[r3]
 265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   if (normal_int_status & SDMMC_INT_STATUS_NORM_ERR_INT_Msk)
 533              	 .loc 2 266 0
 534 0020 0F4B     	 ldr r3,.L22+4
 535 0022 1B88     	 ldrh r3,[r3]
 536 0024 9BB2     	 uxth r3,r3
 537 0026 9BB2     	 uxth r3,r3
 538 0028 1BB2     	 sxth r3,r3
 539 002a 002B     	 cmp r3,#0
 540 002c 06DA     	 bge .L20
 267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     SDMMC_BLOCK_SD_ErrorInterruptHandler(&SDMMC_BLOCK_0, err_int_status);
 541              	 .loc 2 268 0
 542 002e 0D4B     	 ldr r3,.L22+8
 543 0030 1B88     	 ldrh r3,[r3]
 544 0032 9BB2     	 uxth r3,r3
 545 0034 0948     	 ldr r0,.L22
 546 0036 1946     	 mov r1,r3
 547 0038 FFF7FEFF 	 bl SDMMC_BLOCK_SD_ErrorInterruptHandler
 548              	.L20:
 269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   }
 270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   if (normal_int_status & SDMMC_BLOCK_NORMAL_INT_STATUS_BITS)
 549              	 .loc 2 271 0
 550 003c 084B     	 ldr r3,.L22+4
 551 003e 1B88     	 ldrh r3,[r3]
 552 0040 9BB2     	 uxth r3,r3
 553 0042 C3F30E03 	 ubfx r3,r3,#0,#15
 554 0046 002B     	 cmp r3,#0
 555 0048 06D0     	 beq .L19
 272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   {
 273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****     SDMMC_BLOCK_SD_NormalInterruptHandler(&SDMMC_BLOCK_0, normal_int_status);
 556              	 .loc 2 273 0
 557 004a 054B     	 ldr r3,.L22+4
 558 004c 1B88     	 ldrh r3,[r3]
 559 004e 9BB2     	 uxth r3,r3
 560 0050 0248     	 ldr r0,.L22
 561 0052 1946     	 mov r1,r3
 562 0054 FFF7FEFF 	 bl SDMMC_BLOCK_SD_NormalInterruptHandler
 563              	.L19:
 274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   }
 275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** }
 564              	 .loc 2 275 0
 565 0058 80BD     	 pop {r7,pc}
 566              	.L23:
 567 005a 00BF     	 .align 2
 568              	.L22:
 569 005c 00000000 	 .word SDMMC_BLOCK_0
 570 0060 00000000 	 .word normal_int_status
 571 0064 00000000 	 .word err_int_status
 572              	 .cfi_endproc
 573              	.LFE229:
 575              	 .section .text.SDMMC_BLOCK_0_Config_Init,"ax",%progbits
 576              	 .align 2
 577              	 .thumb
 578              	 .thumb_func
 580              	SDMMC_BLOCK_0_Config_Init:
 581              	.LFB230:
 276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** /*
 278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * Configuration initialization:
 279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  * For pins and other mode specific settings
 280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****  */
 281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** static void SDMMC_BLOCK_0_Config_Init(void)
 282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** {
 582              	 .loc 2 282 0
 583              	 .cfi_startproc
 584              	 
 585              	 
 586 0000 98B5     	 push {r3,r4,r7,lr}
 587              	.LCFI36:
 588              	 .cfi_def_cfa_offset 16
 589              	 .cfi_offset 3,-16
 590              	 .cfi_offset 4,-12
 591              	 .cfi_offset 7,-8
 592              	 .cfi_offset 14,-4
 593 0002 00AF     	 add r7,sp,#0
 594              	.LCFI37:
 595              	 .cfi_def_cfa_register 7
 283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   /* Enable delay on command and data lines */
 284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_SDMMC_EnableDelayCmdDatLines();
 596              	 .loc 2 284 0
 597 0004 FFF7FEFF 	 bl XMC_SDMMC_EnableDelayCmdDatLines
 285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   /* Set the delay value chosen in the APP user interface */
 287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_SDMMC_SetDelay(SDMMC_BLOCK_SD_NUM_DELAY_ELEMENTS);
 598              	 .loc 2 287 0
 599 0008 0820     	 movs r0,#8
 600 000a FFF7FEFF 	 bl XMC_SDMMC_SetDelay
 288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_Init(SDMMC_BLOCK_0_COMMAND.port,
 601              	 .loc 2 289 0
 602 000e 3F4A     	 ldr r2,.L25
 603 0010 0523     	 movs r3,#5
 290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_COMMAND.pin,
 291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 &SDMMC_BLOCK_0_COMMAND.config->config);
 604              	 .loc 2 291 0
 605 0012 3F49     	 ldr r1,.L25+4
 289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_COMMAND.pin,
 606              	 .loc 2 289 0
 607 0014 0C46     	 mov r4,r1
 608 0016 1046     	 mov r0,r2
 609 0018 1946     	 mov r1,r3
 610 001a 2246     	 mov r2,r4
 611 001c FFF7FEFF 	 bl XMC_GPIO_Init
 292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_COMMAND.port,
 612              	 .loc 2 292 0
 613 0020 3A49     	 ldr r1,.L25
 614 0022 0522     	 movs r2,#5
 293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_COMMAND.pin,
 294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_COMMAND.config->hw_control);
 615              	 .loc 2 294 0
 616 0024 3A4B     	 ldr r3,.L25+4
 292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_COMMAND.port,
 617              	 .loc 2 292 0
 618 0026 1B7B     	 ldrb r3,[r3,#12]
 619 0028 0846     	 mov r0,r1
 620 002a 1146     	 mov r1,r2
 621 002c 1A46     	 mov r2,r3
 622 002e FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_Init(SDMMC_BLOCK_0_CLK.port,
 623              	 .loc 2 296 0
 624 0032 364A     	 ldr r2,.L25
 625 0034 0623     	 movs r3,#6
 297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_CLK.pin,
 298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 &SDMMC_BLOCK_0_CLK.config->config);
 626              	 .loc 2 298 0
 627 0036 3749     	 ldr r1,.L25+8
 296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_CLK.pin,
 628              	 .loc 2 296 0
 629 0038 0C46     	 mov r4,r1
 630 003a 1046     	 mov r0,r2
 631 003c 1946     	 mov r1,r3
 632 003e 2246     	 mov r2,r4
 633 0040 FFF7FEFF 	 bl XMC_GPIO_Init
 299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_CLK.port,
 634              	 .loc 2 299 0
 635 0044 3149     	 ldr r1,.L25
 636 0046 0622     	 movs r2,#6
 300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_CLK.pin,
 301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_CLK.config->hw_control);
 637              	 .loc 2 301 0
 638 0048 324B     	 ldr r3,.L25+8
 299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_CLK.port,
 639              	 .loc 2 299 0
 640 004a 1B7B     	 ldrb r3,[r3,#12]
 641 004c 0846     	 mov r0,r1
 642 004e 1146     	 mov r1,r2
 643 0050 1A46     	 mov r2,r3
 644 0052 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_Init(SDMMC_BLOCK_0_DATA_0.port,
 645              	 .loc 2 303 0
 646 0056 304A     	 ldr r2,.L25+12
 647 0058 0023     	 movs r3,#0
 304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_0.pin,
 305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 &SDMMC_BLOCK_0_DATA_0.config->config);
 648              	 .loc 2 305 0
 649 005a 3049     	 ldr r1,.L25+16
 303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_0.pin,
 650              	 .loc 2 303 0
 651 005c 0C46     	 mov r4,r1
 652 005e 1046     	 mov r0,r2
 653 0060 1946     	 mov r1,r3
 654 0062 2246     	 mov r2,r4
 655 0064 FFF7FEFF 	 bl XMC_GPIO_Init
 306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_0.port,
 656              	 .loc 2 306 0
 657 0068 2B49     	 ldr r1,.L25+12
 658 006a 0022     	 movs r2,#0
 307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_0.pin,
 308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_0.config->hw_control);
 659              	 .loc 2 308 0
 660 006c 2B4B     	 ldr r3,.L25+16
 306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_0.port,
 661              	 .loc 2 306 0
 662 006e 1B7B     	 ldrb r3,[r3,#12]
 663 0070 0846     	 mov r0,r1
 664 0072 1146     	 mov r1,r2
 665 0074 1A46     	 mov r2,r3
 666 0076 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_Init(SDMMC_BLOCK_0_DATA_1.port,
 667              	 .loc 2 310 0
 668 007a 294A     	 ldr r2,.L25+20
 669 007c 0623     	 movs r3,#6
 311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_1.pin,
 312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 &SDMMC_BLOCK_0_DATA_1.config->config);
 670              	 .loc 2 312 0
 671 007e 2949     	 ldr r1,.L25+24
 310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_1.pin,
 672              	 .loc 2 310 0
 673 0080 0C46     	 mov r4,r1
 674 0082 1046     	 mov r0,r2
 675 0084 1946     	 mov r1,r3
 676 0086 2246     	 mov r2,r4
 677 0088 FFF7FEFF 	 bl XMC_GPIO_Init
 313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_1.port,
 678              	 .loc 2 313 0
 679 008c 2449     	 ldr r1,.L25+20
 680 008e 0622     	 movs r2,#6
 314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_1.pin,
 315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_1.config->hw_control);
 681              	 .loc 2 315 0
 682 0090 244B     	 ldr r3,.L25+24
 313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_1.port,
 683              	 .loc 2 313 0
 684 0092 1B7B     	 ldrb r3,[r3,#12]
 685 0094 0846     	 mov r0,r1
 686 0096 1146     	 mov r1,r2
 687 0098 1A46     	 mov r2,r3
 688 009a FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   
 317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_Init(SDMMC_BLOCK_0_DATA_2.port,
 689              	 .loc 2 317 0
 690 009e 204A     	 ldr r2,.L25+20
 691 00a0 0723     	 movs r3,#7
 318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_2.pin,
 319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 &SDMMC_BLOCK_0_DATA_2.config->config);
 692              	 .loc 2 319 0
 693 00a2 2149     	 ldr r1,.L25+28
 317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_2.pin,
 694              	 .loc 2 317 0
 695 00a4 0C46     	 mov r4,r1
 696 00a6 1046     	 mov r0,r2
 697 00a8 1946     	 mov r1,r3
 698 00aa 2246     	 mov r2,r4
 699 00ac FFF7FEFF 	 bl XMC_GPIO_Init
 320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_2.port,
 700              	 .loc 2 320 0
 701 00b0 1B49     	 ldr r1,.L25+20
 702 00b2 0722     	 movs r2,#7
 321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_2.pin,
 322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_2.config->hw_control);
 703              	 .loc 2 322 0
 704 00b4 1C4B     	 ldr r3,.L25+28
 320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_2.port,
 705              	 .loc 2 320 0
 706 00b6 1B7B     	 ldrb r3,[r3,#12]
 707 00b8 0846     	 mov r0,r1
 708 00ba 1146     	 mov r1,r2
 709 00bc 1A46     	 mov r2,r3
 710 00be FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_Init(SDMMC_BLOCK_0_DATA_3.port,
 711              	 .loc 2 324 0
 712 00c2 154A     	 ldr r2,.L25+12
 713 00c4 0123     	 movs r3,#1
 325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_3.pin,
 326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 &SDMMC_BLOCK_0_DATA_3.config->config);
 714              	 .loc 2 326 0
 715 00c6 1949     	 ldr r1,.L25+32
 324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                 SDMMC_BLOCK_0_DATA_3.pin,
 716              	 .loc 2 324 0
 717 00c8 0C46     	 mov r4,r1
 718 00ca 1046     	 mov r0,r2
 719 00cc 1946     	 mov r1,r3
 720 00ce 2246     	 mov r2,r4
 721 00d0 FFF7FEFF 	 bl XMC_GPIO_Init
 327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_3.port,
 722              	 .loc 2 327 0
 723 00d4 1049     	 ldr r1,.L25+12
 724 00d6 0122     	 movs r2,#1
 328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_3.pin,
 329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****                               SDMMC_BLOCK_0_DATA_3.config->hw_control);
 725              	 .loc 2 329 0
 726 00d8 144B     	 ldr r3,.L25+32
 327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_GPIO_SetHardwareControl(SDMMC_BLOCK_0_DATA_3.port,
 727              	 .loc 2 327 0
 728 00da 1B7B     	 ldrb r3,[r3,#12]
 729 00dc 0846     	 mov r0,r1
 730 00de 1146     	 mov r1,r2
 731 00e0 1A46     	 mov r2,r3
 732 00e2 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_SDMMC_SetCardDetectionSource(XMC_SDMMC, XMC_SDMMC_CD_SOURCE_SW);
 733              	 .loc 2 331 0
 734 00e6 1248     	 ldr r0,.L25+36
 735 00e8 4FF48031 	 mov r1,#65536
 736 00ec FFF7FEFF 	 bl XMC_SDMMC_SetCardDetectionSource
 332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_SDMMC_SetCardDetectionStatus(XMC_SDMMC, XMC_SDMMC_CD_STATUS_INSERTED);
 737              	 .loc 2 332 0
 738 00f0 0F48     	 ldr r0,.L25+36
 739 00f2 4FF48011 	 mov r1,#1048576
 740 00f6 FFF7FEFF 	 bl XMC_SDMMC_SetCardDetectionStatus
 333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** 
 334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** #if (UC_SERIES != XMC45)
 335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_SDMMC_SetWriteProtectionSource(XMC_SDMMC, XMC_SDMMC_WP_SOURCE_SW);
 741              	 .loc 2 335 0
 742 00fa 0D48     	 ldr r0,.L25+36
 743 00fc 0121     	 movs r1,#1
 744 00fe FFF7FEFF 	 bl XMC_SDMMC_SetWriteProtectionSource
 336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c ****   XMC_SDMMC_SetWriteProtectionStatus(XMC_SDMMC, XMC_SDMMC_WP_STATUS_NO_WRITE_PROTECTION);
 745              	 .loc 2 336 0
 746 0102 0B48     	 ldr r0,.L25+36
 747 0104 0021     	 movs r1,#0
 748 0106 FFF7FEFF 	 bl XMC_SDMMC_SetWriteProtectionStatus
 337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** #endif
 338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_conf.c **** }
 749              	 .loc 2 338 0
 750 010a 98BD     	 pop {r3,r4,r7,pc}
 751              	.L26:
 752              	 .align 2
 753              	.L25:
 754 010c 00830248 	 .word 1208124160
 755 0110 00000000 	 .word SDMMC_BLOCK_0_COMMAND_PIN_CONFIG
 756 0114 00000000 	 .word SDMMC_BLOCK_0_CLK_PIN_CONFIG
 757 0118 00840248 	 .word 1208124416
 758 011c 00000000 	 .word SDMMC_BLOCK_0_DATA_0_PIN_CONFIG
 759 0120 00810248 	 .word 1208123648
 760 0124 00000000 	 .word SDMMC_BLOCK_0_DATA_1_PIN_CONFIG
 761 0128 00000000 	 .word SDMMC_BLOCK_0_DATA_2_PIN_CONFIG
 762 012c 00000000 	 .word SDMMC_BLOCK_0_DATA_3_PIN_CONFIG
 763 0130 00C00148 	 .word 1208074240
 764              	 .cfi_endproc
 765              	.LFE230:
 767              	 .text
 768              	.Letext0:
 769              	 .file 3 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 770              	 .file 4 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 771              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 772              	 .file 6 "c:\\workspaces\\dave-4.4.2-64bit_ws\\deflectionanalyzer\\dave\\generated\\systimer\\systimer.h"
 773              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_gpio.h"
 774              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_gpio.h"
 775              	 .file 9 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block.h"
 776              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 777              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
 778              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 779              	 .file 13 "c:\\workspaces\\dave-4.4.2-64bit_ws\\deflectionanalyzer\\dave\\generated\\systimer\\systimer_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sdmmc_block_conf.c
    {standard input}:20     .text.XMC_SDMMC_SetCardDetectionSource:00000000 $t
    {standard input}:24     .text.XMC_SDMMC_SetCardDetectionSource:00000000 XMC_SDMMC_SetCardDetectionSource
    {standard input}:68     .text.XMC_SDMMC_SetCardDetectionSource:00000024 $d
    {standard input}:73     .text.XMC_SDMMC_SetCardDetectionStatus:00000000 $t
    {standard input}:77     .text.XMC_SDMMC_SetCardDetectionStatus:00000000 XMC_SDMMC_SetCardDetectionStatus
    {standard input}:120    .text.XMC_SDMMC_SetCardDetectionStatus:00000024 $d
    {standard input}:125    .text.XMC_SDMMC_SetWriteProtectionSource:00000000 $t
    {standard input}:129    .text.XMC_SDMMC_SetWriteProtectionSource:00000000 XMC_SDMMC_SetWriteProtectionSource
    {standard input}:173    .text.XMC_SDMMC_SetWriteProtectionSource:00000028 $d
    {standard input}:178    .text.XMC_SDMMC_SetWriteProtectionStatus:00000000 $t
    {standard input}:182    .text.XMC_SDMMC_SetWriteProtectionStatus:00000000 XMC_SDMMC_SetWriteProtectionStatus
    {standard input}:226    .text.XMC_SDMMC_SetWriteProtectionStatus:00000028 $d
    {standard input}:231    .text.XMC_SDMMC_EnableDelayCmdDatLines:00000000 $t
    {standard input}:235    .text.XMC_SDMMC_EnableDelayCmdDatLines:00000000 XMC_SDMMC_EnableDelayCmdDatLines
    {standard input}:268    .text.XMC_SDMMC_EnableDelayCmdDatLines:0000001c $d
    {standard input}:273    .text.XMC_SDMMC_SetDelay:00000000 $t
    {standard input}:277    .text.XMC_SDMMC_SetDelay:00000000 XMC_SDMMC_SetDelay
    {standard input}:323    .text.XMC_SDMMC_SetDelay:0000002c $d
                            *COM*:00000002 normal_int_status
                            *COM*:00000002 err_int_status
    {standard input}:334    .rodata.SDMMC_BLOCK_0_DATA_0_PIN_CONFIG:00000000 SDMMC_BLOCK_0_DATA_0_PIN_CONFIG
    {standard input}:331    .rodata.SDMMC_BLOCK_0_DATA_0_PIN_CONFIG:00000000 $d
    {standard input}:347    .rodata.SDMMC_BLOCK_0_DATA_0:00000000 SDMMC_BLOCK_0_DATA_0
    {standard input}:344    .rodata.SDMMC_BLOCK_0_DATA_0:00000000 $d
    {standard input}:357    .rodata.SDMMC_BLOCK_0_DATA_1_PIN_CONFIG:00000000 SDMMC_BLOCK_0_DATA_1_PIN_CONFIG
    {standard input}:354    .rodata.SDMMC_BLOCK_0_DATA_1_PIN_CONFIG:00000000 $d
    {standard input}:370    .rodata.SDMMC_BLOCK_0_DATA_1:00000000 SDMMC_BLOCK_0_DATA_1
    {standard input}:367    .rodata.SDMMC_BLOCK_0_DATA_1:00000000 $d
    {standard input}:380    .rodata.SDMMC_BLOCK_0_DATA_2_PIN_CONFIG:00000000 SDMMC_BLOCK_0_DATA_2_PIN_CONFIG
    {standard input}:377    .rodata.SDMMC_BLOCK_0_DATA_2_PIN_CONFIG:00000000 $d
    {standard input}:393    .rodata.SDMMC_BLOCK_0_DATA_2:00000000 SDMMC_BLOCK_0_DATA_2
    {standard input}:390    .rodata.SDMMC_BLOCK_0_DATA_2:00000000 $d
    {standard input}:403    .rodata.SDMMC_BLOCK_0_DATA_3_PIN_CONFIG:00000000 SDMMC_BLOCK_0_DATA_3_PIN_CONFIG
    {standard input}:400    .rodata.SDMMC_BLOCK_0_DATA_3_PIN_CONFIG:00000000 $d
    {standard input}:416    .rodata.SDMMC_BLOCK_0_DATA_3:00000000 SDMMC_BLOCK_0_DATA_3
    {standard input}:413    .rodata.SDMMC_BLOCK_0_DATA_3:00000000 $d
    {standard input}:426    .rodata.SDMMC_BLOCK_0_COMMAND_PIN_CONFIG:00000000 SDMMC_BLOCK_0_COMMAND_PIN_CONFIG
    {standard input}:423    .rodata.SDMMC_BLOCK_0_COMMAND_PIN_CONFIG:00000000 $d
    {standard input}:439    .rodata.SDMMC_BLOCK_0_COMMAND:00000000 SDMMC_BLOCK_0_COMMAND
    {standard input}:436    .rodata.SDMMC_BLOCK_0_COMMAND:00000000 $d
    {standard input}:449    .rodata.SDMMC_BLOCK_0_CLK_PIN_CONFIG:00000000 SDMMC_BLOCK_0_CLK_PIN_CONFIG
    {standard input}:446    .rodata.SDMMC_BLOCK_0_CLK_PIN_CONFIG:00000000 $d
    {standard input}:462    .rodata.SDMMC_BLOCK_0_CLK:00000000 SDMMC_BLOCK_0_CLK
    {standard input}:459    .rodata.SDMMC_BLOCK_0_CLK:00000000 $d
    {standard input}:472    .data.SDMMC_BLOCK_0_SD:00000000 SDMMC_BLOCK_0_SD
    {standard input}:469    .data.SDMMC_BLOCK_0_SD:00000000 $d
    {standard input}:487    .data.SDMMC_BLOCK_0:00000000 SDMMC_BLOCK_0
    {standard input}:484    .data.SDMMC_BLOCK_0:00000000 $d
    {standard input}:580    .text.SDMMC_BLOCK_0_Config_Init:00000000 SDMMC_BLOCK_0_Config_Init
    {standard input}:497    .text.SDMMC0_0_IRQHandler:00000000 $t
    {standard input}:502    .text.SDMMC0_0_IRQHandler:00000000 SDMMC0_0_IRQHandler
    {standard input}:569    .text.SDMMC0_0_IRQHandler:0000005c $d
    {standard input}:576    .text.SDMMC_BLOCK_0_Config_Init:00000000 $t
    {standard input}:754    .text.SDMMC_BLOCK_0_Config_Init:0000010c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SYSTIMER_0
SDMMC_BLOCK_SD_ErrorInterruptHandler
SDMMC_BLOCK_SD_NormalInterruptHandler
XMC_GPIO_Init
XMC_GPIO_SetHardwareControl
