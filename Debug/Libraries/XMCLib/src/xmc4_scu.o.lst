   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_scu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_CLOCK_GetUsbClockSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_CLOCK_GetUsbClockSource:
  25              	.LFB142:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_scu.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2019-02-18
   4:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *      
  46:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  55:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  59:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2019-02-18:
  79:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fix conditional definition of XMC_SCU_PARITY_t elements
  80:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
  81:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
  82:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SetParityWriteValue(uint8_t val)
  83:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_GetParityReadValue(void)
  84:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  86:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  87:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  88:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
  89:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  90:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  91:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  93:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  94:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  95:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
  96:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  97:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  99:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
 102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  
 105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENDS2_Msk)
 242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU1_Msk)
 246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU2_Msk)
 249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENECAT0_Msk)
 267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ECAT_MEM = SCU_PARITY_PEEN_PEENECAT0_Msk, /**< ECAT0 SRAM parity error trap. */ 
 268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  
 296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   
 315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. 
 516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  
 672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 710:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 711:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 712:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 713:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 714:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 715:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 716:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 717:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 718:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 719:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 720:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 721:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 722:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 723:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 724:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 725:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 726:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 727:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 728:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 729:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 730:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 731:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 732:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 733:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 734:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 735:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 736:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 737:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 738:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 739:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 740:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 741:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 742:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 743:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 744:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 745:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 746:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 747:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 748:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 749:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 750:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 751:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 752:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 753:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 755:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 756:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 757:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 758:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 759:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 760:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 761:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 762:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 763:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 764:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 765:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 766:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 767:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 768:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 769:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 770:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 771:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 772:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 773:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 774:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 775:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 776:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 777:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 778:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 779:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 780:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 781:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 782:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 783:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 784:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 785:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 786:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 787:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 788:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 789:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 790:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 791:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 792:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 793:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 794:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 795:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 796:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 797:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 798:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 799:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 800:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 801:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 802:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 803:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 804:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 805:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 806:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 807:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 808:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 809:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 810:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 811:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 812:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 813:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 814:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 815:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 816:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 817:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 818:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 819:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 820:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 821:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 822:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 823:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 824:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 825:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 826:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 827:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 828:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 829:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 830:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 831:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 832:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 833:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 834:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 835:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 836:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 837:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 838:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 839:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 840:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 841:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 842:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 843:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 844:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 845:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 846:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 847:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 848:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 849:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 850:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 851:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 852:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 853:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 854:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 855:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 856:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 857:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 858:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 859:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 860:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 861:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 862:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 863:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 864:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 865:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 866:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 867:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 868:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 869:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 870:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 871:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 872:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 873:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 874:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 875:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 876:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 877:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 878:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 879:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 880:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 881:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 882:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 883:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 884:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 885:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 886:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 887:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 888:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 889:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 890:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 891:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 892:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 893:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 894:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 895:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 896:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 897:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 898:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 899:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 900:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 901:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 902:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 903:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 904:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 905:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 906:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 907:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 908:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 909:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 910:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 911:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 912:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 913:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 914:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 915:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 916:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 917:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 918:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 919:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 920:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 921:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 922:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 923:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 924:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 925:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 926:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 927:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 928:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 929:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 930:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 931:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 932:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 933:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 934:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 935:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 936:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 937:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 938:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 939:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 940:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 941:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 942:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 943:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 944:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 945:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 946:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 947:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 948:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 949:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 950:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 951:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 952:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 953:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 954:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 955:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 956:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 957:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 958:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 959:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 960:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 961:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 962:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 963:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 964:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 965:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 966:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 967:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 968:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 969:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 970:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 971:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 972:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 973:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 974:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 975:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 976:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 977:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 978:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 979:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 980:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 981:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 982:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 983:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 984:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
 985:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 986:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 987:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 988:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 989:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 990:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 991:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 992:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 993:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 994:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 995:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 996:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 997:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 998:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 999:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1000:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
1001:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1002:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1003:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1004:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1005:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1006:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
1007:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
1008:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1010:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1011:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1012:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1013:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1014:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1015:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1016:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1017:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1018:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1019:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1020:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1021:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1022:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1023:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1024:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1025:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1026:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1027:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1028:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1029:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1030:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1031:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1032:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1033:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1034:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1035:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1036:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1037:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1038:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1039:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1040:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1041:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1042:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1043:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1044:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1045:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1046:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1047:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1048:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1049:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1050:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1051:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1052:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1053:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1054:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1055:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1056:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1057:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1058:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1059:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1060:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1061:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1062:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1063:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1064:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1065:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1066:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1068:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1069:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1070:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1071:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1072:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1073:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1074:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1075:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1076:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1077:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1078:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1079:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1080:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1081:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1082:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1083:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1084:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1085:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1086:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1087:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1088:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1089:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1090:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1091:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1092:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1093:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1094:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1095:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1096:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1097:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1098:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1099:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  
1246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  
1489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1569:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1570:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1571:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1572:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1573:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1574:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1575:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1576:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1577:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1578:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1579:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1580:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1581:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1582:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1583:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1584:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1585:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1586:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1587:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1588:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1589:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1590:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1591:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1592:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1593:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1594:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1595:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1596:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1597:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1598:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity logic should be overriden.\n
1599:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1600:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1601:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1602:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1603:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1604:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1605:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable access to parity bits of SRAM modules for various types of peripherals.
1606:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable direct write to parity bits using value selected using XMC_SCU_PARITY_SetParityWriteValue
1607:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1608:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_SetParityWriteValue() \n\n\n
1609:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
1610:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1611:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
1612:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1613:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->MCHKCON = memory;
1614:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1615:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1616:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1617:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity test has to be enabled.\n
1618:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. 
1619:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Only a single memory type should be specified.
1620:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1621:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1622:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1623:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1624:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects parity test output from a memory instance that can be inspected using XMC_SCU_PARITY_Get
1625:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1626:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetParityReadValue() \n\n\n
1627:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
1628:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1629:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
1630:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1631:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTSR = memory;
1632:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1633:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1634:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1635:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param write_value parity bits value stored with next write access\n
1636:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1637:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1638:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1639:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1640:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits corresponding to the next write access are sele
1641:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1642:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1643:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1644:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
1645:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1646:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SetParityWriteValue(uint8_t write_value)
1647:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1648:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTPR = ((write_value << SCU_PARITY_PMTPR_PWR_Pos) & SCU_PARITY_PMTPR_PWR_Msk);
1649:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1650:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1651:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1652:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return parity bits generated during last read access  
1653:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1654:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1655:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits generated during the most recent read access ca
1656:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1657:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1658:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1659:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
1660:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1661:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint8_t XMC_SCU_PARITY_GetParityReadValue(void)
1662:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1663:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return ((SCU_PARITY->PMTPR & SCU_PARITY_PMTPR_PRD_Msk) >> SCU_PARITY_PMTPR_PRD_Pos);
1664:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1665:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1666:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1667:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1668:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1669:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1670:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1671:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1672:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1673:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1674:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1675:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1676:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1677:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1678:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1679:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1680:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1681:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1682:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1683:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1684:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1685:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1686:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1687:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1688:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1689:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1690:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1691:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1692:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1693:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1694:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1695:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1696:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1697:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1698:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1699:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1701:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1702:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1703:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1704:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1705:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1706:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1707:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1708:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1709:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1710:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1711:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1712:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1713:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1714:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1715:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1716:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1717:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1718:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1719:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1720:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1721:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1722:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1723:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1724:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1725:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1726:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1727:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1728:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1729:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1730:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1731:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1732:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1733:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1734:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1735:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1736:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1737:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1738:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1739:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1740:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1741:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1742:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1743:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1744:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1745:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1746:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1747:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1748:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1749:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1750:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1751:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1752:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1753:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1754:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1755:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1756:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1757:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1758:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1759:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1760:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1761:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1762:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1763:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1764:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1765:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1766:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1767:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1768:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1769:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1770:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1771:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1772:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1773:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1774:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1775:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1776:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1777:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1778:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1779:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1780:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1781:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1782:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1783:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1784:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1785:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1786:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1787:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1788:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
  27              	 .loc 1 1788 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1789:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
  39              	 .loc 1 1789 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 9B69     	 ldr r3,[r3,#24]
  42 0008 03F48033 	 and r3,r3,#65536
1790:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
  43              	 .loc 1 1790 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00460050 	 .word 1342195200
  58              	 .cfi_endproc
  59              	.LFE142:
  61              	 .section .text.XMC_SCU_CLOCK_GetWdtClockSource,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_SCU_CLOCK_GetWdtClockSource:
  67              	.LFB143:
1791:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1792:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1793:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1794:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1795:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1796:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1797:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1798:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1799:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1800:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1801:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1802:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1803:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1804:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1805:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1806:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1807:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1808:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1809:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1810:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1811:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1812:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1813:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1814:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1815:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1816:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1817:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1818:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1819:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1820:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1821:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1822:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1823:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1824:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1825:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1826:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1827:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1828:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1829:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
  68              	 .loc 1 1829 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72              	 
  73 0000 80B4     	 push {r7}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 4
  76              	 .cfi_offset 7,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
1830:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
  80              	 .loc 1 1830 0
  81 0004 044B     	 ldr r3,.L7
  82 0006 5B6A     	 ldr r3,[r3,#36]
  83 0008 03F44033 	 and r3,r3,#196608
1831:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
  84              	 .loc 1 1831 0
  85 000c 1846     	 mov r0,r3
  86 000e BD46     	 mov sp,r7
  87              	.LCFI6:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0010 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI7:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 0014 7047     	 bx lr
  95              	.L8:
  96 0016 00BF     	 .align 2
  97              	.L7:
  98 0018 00460050 	 .word 1342195200
  99              	 .cfi_endproc
 100              	.LFE143:
 102              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockSource,"ax",%progbits
 103              	 .align 2
 104              	 .thumb
 105              	 .thumb_func
 107              	XMC_SCU_CLOCK_GetExternalOutputClockSource:
 108              	.LFB146:
1832:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1833:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1834:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1835:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1836:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1837:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1838:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1839:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1840:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1841:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1842:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1843:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1844:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1845:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1846:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1847:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1848:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1849:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1850:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1851:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1852:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1853:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1854:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1855:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1856:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1857:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1858:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1859:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1860:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1861:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1862:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1863:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1864:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1865:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1866:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1867:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1868:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1869:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1870:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1871:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1872:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1873:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1874:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1875:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1876:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1877:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1878:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1879:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1880:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1881:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1882:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1883:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1884:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1885:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1886:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1887:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1888:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1889:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1890:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1891:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1892:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1893:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1894:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1895:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1896:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1897:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1898:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1899:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1900:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1901:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1902:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1903:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1904:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1905:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1906:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1907:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1908:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1909:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1910:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1911:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1912:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1913:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1914:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1915:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1916:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1917:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1918:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1919:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1920:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1921:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1922:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1923:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1924:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1925:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1926:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1927:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1928:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1929:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1930:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1931:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1932:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1933:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1934:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1935:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1936:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1937:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1938:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1939:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1940:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1941:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1942:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1943:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1944:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1945:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1946:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1947:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1948:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1949:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1950:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1951:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1952:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1953:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1954:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1955:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1956:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1957:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1958:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 109              	 .loc 1 1958 0
 110              	 .cfi_startproc
 111              	 
 112              	 
 113              	 
 114 0000 80B4     	 push {r7}
 115              	.LCFI8:
 116              	 .cfi_def_cfa_offset 4
 117              	 .cfi_offset 7,-4
 118 0002 00AF     	 add r7,sp,#0
 119              	.LCFI9:
 120              	 .cfi_def_cfa_register 7
1959:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
 121              	 .loc 1 1959 0
 122 0004 054B     	 ldr r3,.L11
 123 0006 9B6A     	 ldr r3,[r3,#40]
 124 0008 DBB2     	 uxtb r3,r3
 125 000a 03F00303 	 and r3,r3,#3
 126 000e DBB2     	 uxtb r3,r3
1960:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
 127              	 .loc 1 1960 0
 128 0010 1846     	 mov r0,r3
 129 0012 BD46     	 mov sp,r7
 130              	.LCFI10:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0014 5DF8047B 	 ldr r7,[sp],#4
 134              	.LCFI11:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 0018 7047     	 bx lr
 138              	.L12:
 139 001a 00BF     	 .align 2
 140              	.L11:
 141 001c 00460050 	 .word 1342195200
 142              	 .cfi_endproc
 143              	.LFE146:
 145              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 146              	 .align 2
 147              	 .thumb
 148              	 .thumb_func
 150              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 151              	.LFB156:
1961:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1962:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1963:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1964:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1965:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1966:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1967:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1968:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1969:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1970:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1971:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1972:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1973:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1974:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1975:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1976:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1977:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1978:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1979:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1980:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1981:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1982:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1983:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1984:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1985:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1986:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1988:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1989:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1990:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1991:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1992:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1993:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1994:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
1995:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1996:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
1997:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
1998:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1999:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2000:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2001:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
2002:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2003:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2004:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2005:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2006:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2007:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2008:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2009:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
2010:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
2011:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
2013:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2014:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
2015:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2016:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
2017:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
2018:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2019:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2020:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2021:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
2022:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2023:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2024:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2025:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2026:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2027:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
2028:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
2029:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2030:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
2031:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2032:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
2033:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2034:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
2035:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2036:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2037:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2038:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2039:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2040:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
2041:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
2042:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2043:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2044:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2045:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2046:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
2047:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
2048:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
2049:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2050:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2051:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2052:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
2053:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2054:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2055:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
2056:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
2057:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2058:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2059:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
2060:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
2061:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2062:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2063:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2064:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
2065:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2066:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
2067:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2068:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2069:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2070:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2071:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
2072:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
2073:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
2074:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
2075:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2076:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2077:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2078:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2079:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2080:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2081:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2082:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2083:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2084:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2085:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2086:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2087:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2088:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2089:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2090:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2091:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2092:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2093:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2095:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2096:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2097:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2098:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2099:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
2341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
2343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2547:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2548:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2549:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2550:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2551:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2552:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** 
2553:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2554:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2555:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2556:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2557:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2558:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2559:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2560:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2561:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2562:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2563:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2564:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2565:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2566:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** {
 152              	 .loc 1 2566 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI12:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 00AF     	 add r7,sp,#0
 162              	.LCFI13:
 163              	 .cfi_def_cfa_register 7
2567:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 164              	 .loc 1 2567 0
 165 0004 064B     	 ldr r3,.L15
 166 0006 1A68     	 ldr r2,[r3]
 167 0008 064B     	 ldr r3,.L15+4
 168 000a 1B69     	 ldr r3,[r3,#16]
 169 000c 03F00103 	 and r3,r3,#1
 170 0010 02FA03F3 	 lsl r3,r2,r3
2568:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc4_scu.h **** }
 171              	 .loc 1 2568 0
 172 0014 1846     	 mov r0,r3
 173 0016 BD46     	 mov sp,r7
 174              	.LCFI14:
 175              	 .cfi_def_cfa_register 13
 176              	 
 177 0018 5DF8047B 	 ldr r7,[sp],#4
 178              	.LCFI15:
 179              	 .cfi_restore 7
 180              	 .cfi_def_cfa_offset 0
 181 001c 7047     	 bx lr
 182              	.L16:
 183 001e 00BF     	 .align 2
 184              	.L15:
 185 0020 00000000 	 .word SystemCoreClock
 186 0024 00460050 	 .word 1342195200
 187              	 .cfi_endproc
 188              	.LFE156:
 190              	 .section .text.XMC_SCU_CLOCK_GetCpuClockFrequency,"ax",%progbits
 191              	 .align 2
 192              	 .thumb
 193              	 .thumb_func
 195              	XMC_SCU_CLOCK_GetCpuClockFrequency:
 196              	.LFB173:
 197              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** {
 232:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** }
 234:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 235:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 236:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 237:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 242:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 243:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 244:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 255:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** {
 257:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** }
 259:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 260:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 261:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 262:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 267:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 268:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 269:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 280:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 287:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 290:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 292:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 293:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 294:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 297:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 298:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 299:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 307:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 309:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 310:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 311:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 312:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 315:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 316:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 317:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 323:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 325:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 326:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 327:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 330:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 331:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 332:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 339:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 341:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 342:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 344:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 354:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 356:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 357:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 358:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 361:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 362:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 363:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 372:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 374:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 375:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 376:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 378:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 388:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 391:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** {
 393:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** }
 395:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 396:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 398:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 403:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 406:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** {
 408:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** }
 411:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  
 412:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 413:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 415:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 422:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 425:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** {
 198              	 .loc 2 426 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI16:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 00AF     	 add r7,sp,#0
 208              	.LCFI17:
 209              	 .cfi_def_cfa_register 7
 427:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 210              	 .loc 2 427 0
 211 0004 034B     	 ldr r3,.L19
 212 0006 1B68     	 ldr r3,[r3]
 428:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** }
 213              	 .loc 2 428 0
 214 0008 1846     	 mov r0,r3
 215 000a BD46     	 mov sp,r7
 216              	.LCFI18:
 217              	 .cfi_def_cfa_register 13
 218              	 
 219 000c 5DF8047B 	 ldr r7,[sp],#4
 220              	.LCFI19:
 221              	 .cfi_restore 7
 222              	 .cfi_def_cfa_offset 0
 223 0010 7047     	 bx lr
 224              	.L20:
 225 0012 00BF     	 .align 2
 226              	.L19:
 227 0014 00000000 	 .word SystemCoreClock
 228              	 .cfi_endproc
 229              	.LFE173:
 231              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
 232              	 .align 2
 233              	 .thumb
 234              	 .thumb_func
 236              	XMC_SCU_GetMirrorStatus:
 237              	.LFB174:
 429:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 430:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 431:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 433:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 439:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 441:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  
 443:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 444:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 445:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 448:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 449:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 450:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 460:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * 
 466:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 467:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 472:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  
 474:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 475:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 476:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 479:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 480:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 491:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 496:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 497:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 500:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 502:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 503:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 504:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 507:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 510:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 515:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 518:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 521:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 524:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 526:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 527:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** 
 528:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** /**
 529:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  *
 534:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****  */
 543:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** {
 238              	 .loc 2 544 0
 239              	 .cfi_startproc
 240              	 
 241              	 
 242              	 
 243 0000 80B4     	 push {r7}
 244              	.LCFI20:
 245              	 .cfi_def_cfa_offset 4
 246              	 .cfi_offset 7,-4
 247 0002 00AF     	 add r7,sp,#0
 248              	.LCFI21:
 249              	 .cfi_def_cfa_register 7
 545:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
 250              	 .loc 2 545 0
 251 0004 034B     	 ldr r3,.L23
 252 0006 D3F8C430 	 ldr r3,[r3,#196]
 546:C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc\xmc_scu.h **** }
 253              	 .loc 2 546 0
 254 000a 1846     	 mov r0,r3
 255 000c BD46     	 mov sp,r7
 256              	.LCFI22:
 257              	 .cfi_def_cfa_register 13
 258              	 
 259 000e 5DF8047B 	 ldr r7,[sp],#4
 260              	.LCFI23:
 261              	 .cfi_restore 7
 262              	 .cfi_def_cfa_offset 0
 263 0012 7047     	 bx lr
 264              	.L24:
 265              	 .align 2
 266              	.L23:
 267 0014 00400050 	 .word 1342193664
 268              	 .cfi_endproc
 269              	.LFE174:
 271              	 .comm event_handler_list,128,4
 272              	 .section .text.XMC_SCU_lDelay,"ax",%progbits
 273              	 .align 2
 274              	 .thumb
 275              	 .thumb_func
 277              	XMC_SCU_lDelay:
 278              	.LFB175:
 279              	 .file 3 "../Libraries/XMCLib/src/xmc4_scu.c"
   1:../Libraries/XMCLib/src/xmc4_scu.c **** /**
   2:../Libraries/XMCLib/src/xmc4_scu.c ****  * @file xmc4_scu.c
   3:../Libraries/XMCLib/src/xmc4_scu.c ****  * @date 2018-06-21
   4:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   5:../Libraries/XMCLib/src/xmc4_scu.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_scu.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   9:../Libraries/XMCLib/src/xmc4_scu.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_scu.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_scu.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_scu.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_scu.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_scu.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_scu.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_scu.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_scu.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_scu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_scu.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_scu.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_scu.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_scu.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_scu.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_scu.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_scu.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_scu.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  36:../Libraries/XMCLib/src/xmc4_scu.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_scu.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  39:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_scu.c ****  *      
  42:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_ASSERT() hanging issues have fixed.  <br>
  44:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Line indentation aligned with 120 characters. <br>
  45:../Libraries/XMCLib/src/xmc4_scu.c ****  *     
  46:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_EnableEvent,XMC_SCU_INTERRUPT_DisableEvent,
  48:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_TriggerEvent,XMC_SCU_INTERUPT_GetEventStatus,
  49:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_ClearEventStatus are added
  50:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added Weak implementation for OSCHP_GetFrequency()
  51:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  52:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-11-30:
  53:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Documentation improved <br>
  54:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Following API functionalities are improved
  55:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_CLOCK_GatePeripheralClock, XMC_SCU_CLOCK_UngatePeripheralClock, XMC_SCU_CLOCK_IsPe
  56:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_RESET_AssertPeripheralReset, XMC_SCU_RESET_DeassertPeripheralReset, XMC_SCU_RESET_
  57:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  58:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-12-08:
  59:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_GetTemperature renamed to XMC_SCU_GetTemperatureMeasurement
  60:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  61:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-03-09:
  62:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Optimize write only registers
  63:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetPinMode
  64:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  65:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  66:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  67:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  68:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  69:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  70:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-04-06:
  71:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_ReadFromRetentionMemory functionality
  72:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  73:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-05-19:
  74:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Changed XMC_SCU_CLOCK_StartSystemPll to avoid using floating point calculation which might
  75:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  76:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  77:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  78:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  79:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  80:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  81:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  82:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  83:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-06-15:
  84:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  85:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  86:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  87:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  88:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2018-06-21:
  89:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_HIB_SetSR1Input()
  90:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_CLOCK_EnableLowPowerOscillator()
  91:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  92:../Libraries/XMCLib/src/xmc4_scu.c ****  * @endcond 
  93:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  94:../Libraries/XMCLib/src/xmc4_scu.c ****  */
  95:../Libraries/XMCLib/src/xmc4_scu.c **** 
  96:../Libraries/XMCLib/src/xmc4_scu.c **** /**
  97:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  98:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief SCU low level driver API prototype definition for XMC4 family of microcontrollers. 
  99:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 100:../Libraries/XMCLib/src/xmc4_scu.c ****  * <b>Detailed description of file:</b> <br>
 101:../Libraries/XMCLib/src/xmc4_scu.c ****  * APIs provided in this file cover the following functional blocks of SCU: <br>
 102:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- GCU (APIs prefixed with XMC_SCU_GEN_) <br>
 103:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Temperature Monitoring, Bootmode selection, CCU Start, Comparator configuration etc  <br>
 104:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- CCU (APIs prefixed with XMC_SCU_CLOCK_) <br>
 105:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Clock sources init, Clock tree init, Clock gating, Sleep Management etc <br>
 106:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- RCU (APIs prefixed with XMC_SCU_RESET_) <br>
 107:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Reset Init, Cause, Manual Reset Assert/Deassert <br>
 108:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- INTERRUPT (APIs prefixed with XMC_SCU_INTERRUPT_) <br>
 109:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Manual Assert/Deassert, Acknowledge etc <br>
 110:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- PARITY (APIs prefixed with XMC_SCU_PARITY_) <br>
 111:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Acknowledge etc <br>
 112:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- HIBERNATION (APIs prefixed with XMC_SCU_HIB_) <br>
 113:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Hibernation entry/exit config, entry/wakeup sequences, LPAC configuration etc <br>
 114:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- TRAP (APIs prefixed with XMC_SCU_TRAP_) <br>
 115:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Enable/Disable, Acknowledge etc <br>
 116:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 117:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 118:../Libraries/XMCLib/src/xmc4_scu.c **** 
 119:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 120:../Libraries/XMCLib/src/xmc4_scu.c ****  * HEADER FILES
 121:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 122:../Libraries/XMCLib/src/xmc4_scu.c **** #include <xmc_scu.h>
 123:../Libraries/XMCLib/src/xmc4_scu.c **** 
 124:../Libraries/XMCLib/src/xmc4_scu.c **** #if UC_FAMILY == XMC4
 125:../Libraries/XMCLib/src/xmc4_scu.c **** 
 126:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 127:../Libraries/XMCLib/src/xmc4_scu.c ****  * MACROS
 128:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 129:../Libraries/XMCLib/src/xmc4_scu.c **** #define FOSCREF   (2500000UL)    /**< Oscillator reference frequency (fOSCREF) monitored by Oscilla
 130:../Libraries/XMCLib/src/xmc4_scu.c **** #define FREQ_1MHZ (1000000UL)    /**< Used during calculation. */
 131:../Libraries/XMCLib/src/xmc4_scu.c **** 
 132:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OFI_FREQUENCY
 133:../Libraries/XMCLib/src/xmc4_scu.c **** #define OFI_FREQUENCY (24000000UL)    /**< Fast internal backup clock source. */
 134:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 135:../Libraries/XMCLib/src/xmc4_scu.c **** 
 136:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSI_FREQUENCY
 137:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSI_FREQUENCY (32768UL)    /**< Internal slow clock source. */
 138:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 139:../Libraries/XMCLib/src/xmc4_scu.c **** 
 140:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSCHP_FREQUENCY
 141:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSCHP_FREQUENCY (12000000U)    /**< External crystal High Precision Oscillator. */
 142:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 143:../Libraries/XMCLib/src/xmc4_scu.c **** 
 144:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
 145:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLLV_Msk | \
 146:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLSP_Msk)  /**< Used to verify the OSC fr
 147:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                           usable or not.*/
 148:../Libraries/XMCLib/src/xmc4_scu.c **** 
 149:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_START_GROUP    (0UL)    /**< The ADC group whose channel input is compared 
 150:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 151:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 152:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 153:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_END_GROUP      (1UL)    /**< The ADC group whose channel input is compared 
 154:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 155:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC end 
 156:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 157:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_START_ADC_CHANNEL  (6UL)    /**< The ADC channel whose channel input is compare
 158:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 159:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 160:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 161:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_END_ADC_CHANNEL    (7UL)    /**< The ADC channel whose channel input is compare
 162:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 163:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC ends
 164:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 165:../Libraries/XMCLib/src/xmc4_scu.c **** 
 166:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_GRPNUM(GROUP_NUM)   (((GROUP_NUM) == XMC_SCU_ORC_ADC_START_GROUP) || \
 167:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((GROUP_NUM) == XMC_SCU_ORC_ADC_END_GROUP) ) /**< Used to v
 168:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 169:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 170:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end group num
 171:../Libraries/XMCLib/src/xmc4_scu.c ****                                         
 172:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_CHNUM(CH_NUM)       (((CH_NUM) == XMC_SCU_ORC_START_ADC_CHANNEL) || \
 173:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((CH_NUM) == XMC_SCU_ORC_END_ADC_CHANNEL) )  /**< Used to v
 174:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 175:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 176:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end channel n
 177:../Libraries/XMCLib/src/xmc4_scu.c **** 
 178:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_INTERRUPT_EVENT_MAX            (32U)      /**< Maximum supported SCU events. */
 179:../Libraries/XMCLib/src/xmc4_scu.c **** 
 180:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_HDCR_HIBIOSEL_Size (4U)
 181:../Libraries/XMCLib/src/xmc4_scu.c **** 
 182:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN (0x2U)
 183:../Libraries/XMCLib/src/xmc4_scu.c **** 
 184:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB13V (0.0058F)
 185:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB33V (0.0225F)
 186:../Libraries/XMCLib/src/xmc4_scu.c **** 
 187:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 188:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL DATA
 189:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 190:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler_list[XMC_SCU_INTERRUPT_EVENT_MAX]; /**< For registe
 191:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                         functions o
 192:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                         occurrence.
 193:../Libraries/XMCLib/src/xmc4_scu.c **** 
 194:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 195:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL ROUTINES
 196:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 197:../Libraries/XMCLib/src/xmc4_scu.c ****  #if defined(UC_ID)
 198:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a non-weak function, which retrieves high precision external oscillator frequency. */
 199:../Libraries/XMCLib/src/xmc4_scu.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 200:../Libraries/XMCLib/src/xmc4_scu.c **** {
 201:../Libraries/XMCLib/src/xmc4_scu.c ****   return (OSCHP_FREQUENCY);
 202:../Libraries/XMCLib/src/xmc4_scu.c **** }
 203:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 204:../Libraries/XMCLib/src/xmc4_scu.c **** 
 205:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 206:../Libraries/XMCLib/src/xmc4_scu.c **** static void XMC_SCU_lDelay(uint32_t cycles);
 207:../Libraries/XMCLib/src/xmc4_scu.c **** 
 208:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 209:../Libraries/XMCLib/src/xmc4_scu.c ****  * API IMPLEMENTATION
 210:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 211:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 212:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_lDelay(uint32_t delay)
 213:../Libraries/XMCLib/src/xmc4_scu.c **** {
 280              	 .loc 3 213 0
 281              	 .cfi_startproc
 282              	 
 283              	 
 284 0000 80B5     	 push {r7,lr}
 285              	.LCFI24:
 286              	 .cfi_def_cfa_offset 8
 287              	 .cfi_offset 7,-8
 288              	 .cfi_offset 14,-4
 289 0002 84B0     	 sub sp,sp,#16
 290              	.LCFI25:
 291              	 .cfi_def_cfa_offset 24
 292 0004 00AF     	 add r7,sp,#0
 293              	.LCFI26:
 294              	 .cfi_def_cfa_register 7
 295 0006 7860     	 str r0,[r7,#4]
 214:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t i;
 215:../Libraries/XMCLib/src/xmc4_scu.c **** 
 216:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 296              	 .loc 3 216 0
 297 0008 FFF7FEFF 	 bl SystemCoreClockUpdate
 217:../Libraries/XMCLib/src/xmc4_scu.c ****   delay =  delay * (uint32_t)(SystemCoreClock / FREQ_1MHZ);
 298              	 .loc 3 217 0
 299 000c 0B4B     	 ldr r3,.L28
 300 000e 1B68     	 ldr r3,[r3]
 301 0010 0B4A     	 ldr r2,.L28+4
 302 0012 A2FB0323 	 umull r2,r3,r2,r3
 303 0016 9A0C     	 lsrs r2,r3,#18
 304 0018 7B68     	 ldr r3,[r7,#4]
 305 001a 02FB03F3 	 mul r3,r2,r3
 306 001e 7B60     	 str r3,[r7,#4]
 218:../Libraries/XMCLib/src/xmc4_scu.c **** 
 219:../Libraries/XMCLib/src/xmc4_scu.c ****   for (i = 0U; i < delay; ++i)
 307              	 .loc 3 219 0
 308 0020 0023     	 movs r3,#0
 309 0022 FB60     	 str r3,[r7,#12]
 310 0024 03E0     	 b .L26
 311              	.L27:
 220:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 221:../Libraries/XMCLib/src/xmc4_scu.c ****     __NOP();
 312              	 .loc 3 221 0 discriminator 3
 313              	
 314 0026 00BF     	 nop
 315              	
 219:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 316              	 .loc 3 219 0 discriminator 3
 317              	 .thumb
 318 0028 FB68     	 ldr r3,[r7,#12]
 319 002a 0133     	 adds r3,r3,#1
 320 002c FB60     	 str r3,[r7,#12]
 321              	.L26:
 219:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 322              	 .loc 3 219 0 is_stmt 0 discriminator 1
 323 002e FA68     	 ldr r2,[r7,#12]
 324 0030 7B68     	 ldr r3,[r7,#4]
 325 0032 9A42     	 cmp r2,r3
 326 0034 F7D3     	 bcc .L27
 222:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 223:../Libraries/XMCLib/src/xmc4_scu.c **** }
 327              	 .loc 3 223 0 is_stmt 1
 328 0036 1037     	 adds r7,r7,#16
 329              	.LCFI27:
 330              	 .cfi_def_cfa_offset 8
 331 0038 BD46     	 mov sp,r7
 332              	.LCFI28:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 003a 80BD     	 pop {r7,pc}
 336              	.L29:
 337              	 .align 2
 338              	.L28:
 339 003c 00000000 	 .word SystemCoreClock
 340 0040 83DE1B43 	 .word 1125899907
 341              	 .cfi_endproc
 342              	.LFE175:
 344              	 .section .text.XMC_SCU_INTERRUPT_EnableEvent,"ax",%progbits
 345              	 .align 2
 346              	 .global XMC_SCU_INTERRUPT_EnableEvent
 347              	 .thumb
 348              	 .thumb_func
 350              	XMC_SCU_INTERRUPT_EnableEvent:
 351              	.LFB176:
 224:../Libraries/XMCLib/src/xmc4_scu.c **** 
 225:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable the SCU event */
 226:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 227:../Libraries/XMCLib/src/xmc4_scu.c **** {
 352              	 .loc 3 227 0
 353              	 .cfi_startproc
 354              	 
 355              	 
 356              	 
 357 0000 80B4     	 push {r7}
 358              	.LCFI29:
 359              	 .cfi_def_cfa_offset 4
 360              	 .cfi_offset 7,-4
 361 0002 83B0     	 sub sp,sp,#12
 362              	.LCFI30:
 363              	 .cfi_def_cfa_offset 16
 364 0004 00AF     	 add r7,sp,#0
 365              	.LCFI31:
 366              	 .cfi_def_cfa_register 7
 367 0006 7860     	 str r0,[r7,#4]
 228:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)event;
 368              	 .loc 3 228 0
 369 0008 0549     	 ldr r1,.L31
 370 000a 054B     	 ldr r3,.L31
 371 000c 9A68     	 ldr r2,[r3,#8]
 372 000e 7B68     	 ldr r3,[r7,#4]
 373 0010 1343     	 orrs r3,r3,r2
 374 0012 8B60     	 str r3,[r1,#8]
 229:../Libraries/XMCLib/src/xmc4_scu.c **** }
 375              	 .loc 3 229 0
 376 0014 0C37     	 adds r7,r7,#12
 377              	.LCFI32:
 378              	 .cfi_def_cfa_offset 4
 379 0016 BD46     	 mov sp,r7
 380              	.LCFI33:
 381              	 .cfi_def_cfa_register 13
 382              	 
 383 0018 5DF8047B 	 ldr r7,[sp],#4
 384              	.LCFI34:
 385              	 .cfi_restore 7
 386              	 .cfi_def_cfa_offset 0
 387 001c 7047     	 bx lr
 388              	.L32:
 389 001e 00BF     	 .align 2
 390              	.L31:
 391 0020 74400050 	 .word 1342193780
 392              	 .cfi_endproc
 393              	.LFE176:
 395              	 .section .text.XMC_SCU_INTERRUPT_DisableEvent,"ax",%progbits
 396              	 .align 2
 397              	 .global XMC_SCU_INTERRUPT_DisableEvent
 398              	 .thumb
 399              	 .thumb_func
 401              	XMC_SCU_INTERRUPT_DisableEvent:
 402              	.LFB177:
 230:../Libraries/XMCLib/src/xmc4_scu.c **** 
 231:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the SCU event */
 232:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 233:../Libraries/XMCLib/src/xmc4_scu.c **** {
 403              	 .loc 3 233 0
 404              	 .cfi_startproc
 405              	 
 406              	 
 407              	 
 408 0000 80B4     	 push {r7}
 409              	.LCFI35:
 410              	 .cfi_def_cfa_offset 4
 411              	 .cfi_offset 7,-4
 412 0002 83B0     	 sub sp,sp,#12
 413              	.LCFI36:
 414              	 .cfi_def_cfa_offset 16
 415 0004 00AF     	 add r7,sp,#0
 416              	.LCFI37:
 417              	 .cfi_def_cfa_register 7
 418 0006 7860     	 str r0,[r7,#4]
 234:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK &= (uint32_t)~event;
 419              	 .loc 3 234 0
 420 0008 0549     	 ldr r1,.L34
 421 000a 054B     	 ldr r3,.L34
 422 000c 9A68     	 ldr r2,[r3,#8]
 423 000e 7B68     	 ldr r3,[r7,#4]
 424 0010 DB43     	 mvns r3,r3
 425 0012 1340     	 ands r3,r3,r2
 426 0014 8B60     	 str r3,[r1,#8]
 235:../Libraries/XMCLib/src/xmc4_scu.c **** }
 427              	 .loc 3 235 0
 428 0016 0C37     	 adds r7,r7,#12
 429              	.LCFI38:
 430              	 .cfi_def_cfa_offset 4
 431 0018 BD46     	 mov sp,r7
 432              	.LCFI39:
 433              	 .cfi_def_cfa_register 13
 434              	 
 435 001a 5DF8047B 	 ldr r7,[sp],#4
 436              	.LCFI40:
 437              	 .cfi_restore 7
 438              	 .cfi_def_cfa_offset 0
 439 001e 7047     	 bx lr
 440              	.L35:
 441              	 .align 2
 442              	.L34:
 443 0020 74400050 	 .word 1342193780
 444              	 .cfi_endproc
 445              	.LFE177:
 447              	 .section .text.XMC_SCU_INTERRUPT_TriggerEvent,"ax",%progbits
 448              	 .align 2
 449              	 .global XMC_SCU_INTERRUPT_TriggerEvent
 450              	 .thumb
 451              	 .thumb_func
 453              	XMC_SCU_INTERRUPT_TriggerEvent:
 454              	.LFB178:
 236:../Libraries/XMCLib/src/xmc4_scu.c **** 
 237:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to trigger the SCU event */
 238:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 239:../Libraries/XMCLib/src/xmc4_scu.c **** {
 455              	 .loc 3 239 0
 456              	 .cfi_startproc
 457              	 
 458              	 
 459              	 
 460 0000 80B4     	 push {r7}
 461              	.LCFI41:
 462              	 .cfi_def_cfa_offset 4
 463              	 .cfi_offset 7,-4
 464 0002 83B0     	 sub sp,sp,#12
 465              	.LCFI42:
 466              	 .cfi_def_cfa_offset 16
 467 0004 00AF     	 add r7,sp,#0
 468              	.LCFI43:
 469              	 .cfi_def_cfa_register 7
 470 0006 7860     	 str r0,[r7,#4]
 240:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRSET |= (uint32_t)event;
 471              	 .loc 3 240 0
 472 0008 0549     	 ldr r1,.L37
 473 000a 054B     	 ldr r3,.L37
 474 000c 1A69     	 ldr r2,[r3,#16]
 475 000e 7B68     	 ldr r3,[r7,#4]
 476 0010 1343     	 orrs r3,r3,r2
 477 0012 0B61     	 str r3,[r1,#16]
 241:../Libraries/XMCLib/src/xmc4_scu.c **** }
 478              	 .loc 3 241 0
 479 0014 0C37     	 adds r7,r7,#12
 480              	.LCFI44:
 481              	 .cfi_def_cfa_offset 4
 482 0016 BD46     	 mov sp,r7
 483              	.LCFI45:
 484              	 .cfi_def_cfa_register 13
 485              	 
 486 0018 5DF8047B 	 ldr r7,[sp],#4
 487              	.LCFI46:
 488              	 .cfi_restore 7
 489              	 .cfi_def_cfa_offset 0
 490 001c 7047     	 bx lr
 491              	.L38:
 492 001e 00BF     	 .align 2
 493              	.L37:
 494 0020 74400050 	 .word 1342193780
 495              	 .cfi_endproc
 496              	.LFE178:
 498              	 .section .text.XMC_SCU_INTERUPT_GetEventStatus,"ax",%progbits
 499              	 .align 2
 500              	 .global XMC_SCU_INTERUPT_GetEventStatus
 501              	 .thumb
 502              	 .thumb_func
 504              	XMC_SCU_INTERUPT_GetEventStatus:
 505              	.LFB179:
 242:../Libraries/XMCLib/src/xmc4_scu.c **** 
 243:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the SCU event status */
 244:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void)
 245:../Libraries/XMCLib/src/xmc4_scu.c **** {
 506              	 .loc 3 245 0
 507              	 .cfi_startproc
 508              	 
 509              	 
 510              	 
 511 0000 80B4     	 push {r7}
 512              	.LCFI47:
 513              	 .cfi_def_cfa_offset 4
 514              	 .cfi_offset 7,-4
 515 0002 00AF     	 add r7,sp,#0
 516              	.LCFI48:
 517              	 .cfi_def_cfa_register 7
 246:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_INTERRUPT->SRRAW);
 518              	 .loc 3 246 0
 519 0004 034B     	 ldr r3,.L41
 520 0006 5B68     	 ldr r3,[r3,#4]
 247:../Libraries/XMCLib/src/xmc4_scu.c **** }
 521              	 .loc 3 247 0
 522 0008 1846     	 mov r0,r3
 523 000a BD46     	 mov sp,r7
 524              	.LCFI49:
 525              	 .cfi_def_cfa_register 13
 526              	 
 527 000c 5DF8047B 	 ldr r7,[sp],#4
 528              	.LCFI50:
 529              	 .cfi_restore 7
 530              	 .cfi_def_cfa_offset 0
 531 0010 7047     	 bx lr
 532              	.L42:
 533 0012 00BF     	 .align 2
 534              	.L41:
 535 0014 74400050 	 .word 1342193780
 536              	 .cfi_endproc
 537              	.LFE179:
 539              	 .section .text.XMC_SCU_INTERRUPT_ClearEventStatus,"ax",%progbits
 540              	 .align 2
 541              	 .global XMC_SCU_INTERRUPT_ClearEventStatus
 542              	 .thumb
 543              	 .thumb_func
 545              	XMC_SCU_INTERRUPT_ClearEventStatus:
 546              	.LFB180:
 248:../Libraries/XMCLib/src/xmc4_scu.c **** 
 249:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear the SCU event status */
 250:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event)
 251:../Libraries/XMCLib/src/xmc4_scu.c **** {
 547              	 .loc 3 251 0
 548              	 .cfi_startproc
 549              	 
 550              	 
 551              	 
 552 0000 80B4     	 push {r7}
 553              	.LCFI51:
 554              	 .cfi_def_cfa_offset 4
 555              	 .cfi_offset 7,-4
 556 0002 83B0     	 sub sp,sp,#12
 557              	.LCFI52:
 558              	 .cfi_def_cfa_offset 16
 559 0004 00AF     	 add r7,sp,#0
 560              	.LCFI53:
 561              	 .cfi_def_cfa_register 7
 562 0006 7860     	 str r0,[r7,#4]
 252:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRCLR = (uint32_t)event;
 563              	 .loc 3 252 0
 564 0008 034A     	 ldr r2,.L44
 565 000a 7B68     	 ldr r3,[r7,#4]
 566 000c D360     	 str r3,[r2,#12]
 253:../Libraries/XMCLib/src/xmc4_scu.c **** }
 567              	 .loc 3 253 0
 568 000e 0C37     	 adds r7,r7,#12
 569              	.LCFI54:
 570              	 .cfi_def_cfa_offset 4
 571 0010 BD46     	 mov sp,r7
 572              	.LCFI55:
 573              	 .cfi_def_cfa_register 13
 574              	 
 575 0012 5DF8047B 	 ldr r7,[sp],#4
 576              	.LCFI56:
 577              	 .cfi_restore 7
 578              	 .cfi_def_cfa_offset 0
 579 0016 7047     	 bx lr
 580              	.L45:
 581              	 .align 2
 582              	.L44:
 583 0018 74400050 	 .word 1342193780
 584              	 .cfi_endproc
 585              	.LFE180:
 587              	 .section .text.XMC_SCU_GetBootMode,"ax",%progbits
 588              	 .align 2
 589              	 .global XMC_SCU_GetBootMode
 590              	 .thumb
 591              	 .thumb_func
 593              	XMC_SCU_GetBootMode:
 594              	.LFB181:
 254:../Libraries/XMCLib/src/xmc4_scu.c **** 
 255:../Libraries/XMCLib/src/xmc4_scu.c **** 
 256:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the currently deployed device bootmode */
 257:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetBootMode(void)
 258:../Libraries/XMCLib/src/xmc4_scu.c **** {
 595              	 .loc 3 258 0
 596              	 .cfi_startproc
 597              	 
 598              	 
 599              	 
 600 0000 80B4     	 push {r7}
 601              	.LCFI57:
 602              	 .cfi_def_cfa_offset 4
 603              	 .cfi_offset 7,-4
 604 0002 00AF     	 add r7,sp,#0
 605              	.LCFI58:
 606              	 .cfi_def_cfa_register 7
 259:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(SCU_GENERAL->STCON & SCU_GENERAL_STCON_SWCON_Msk);
 607              	 .loc 3 259 0
 608 0004 044B     	 ldr r3,.L48
 609 0006 1B69     	 ldr r3,[r3,#16]
 610 0008 03F47063 	 and r3,r3,#3840
 260:../Libraries/XMCLib/src/xmc4_scu.c **** }
 611              	 .loc 3 260 0
 612 000c 1846     	 mov r0,r3
 613 000e BD46     	 mov sp,r7
 614              	.LCFI59:
 615              	 .cfi_def_cfa_register 13
 616              	 
 617 0010 5DF8047B 	 ldr r7,[sp],#4
 618              	.LCFI60:
 619              	 .cfi_restore 7
 620              	 .cfi_def_cfa_offset 0
 621 0014 7047     	 bx lr
 622              	.L49:
 623 0016 00BF     	 .align 2
 624              	.L48:
 625 0018 00400050 	 .word 1342193664
 626              	 .cfi_endproc
 627              	.LFE181:
 629              	 .section .text.XMC_SCU_SetBootMode,"ax",%progbits
 630              	 .align 2
 631              	 .global XMC_SCU_SetBootMode
 632              	 .thumb
 633              	 .thumb_func
 635              	XMC_SCU_SetBootMode:
 636              	.LFB182:
 261:../Libraries/XMCLib/src/xmc4_scu.c **** 
 262:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program a new device bootmode */
 263:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t bootmode)
 264:../Libraries/XMCLib/src/xmc4_scu.c **** {
 637              	 .loc 3 264 0
 638              	 .cfi_startproc
 639              	 
 640              	 
 641              	 
 642 0000 80B4     	 push {r7}
 643              	.LCFI61:
 644              	 .cfi_def_cfa_offset 4
 645              	 .cfi_offset 7,-4
 646 0002 83B0     	 sub sp,sp,#12
 647              	.LCFI62:
 648              	 .cfi_def_cfa_offset 16
 649 0004 00AF     	 add r7,sp,#0
 650              	.LCFI63:
 651              	 .cfi_def_cfa_register 7
 652 0006 0346     	 mov r3,r0
 653 0008 FB80     	 strh r3,[r7,#6]
 265:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->STCON = (uint32_t)bootmode;
 654              	 .loc 3 265 0
 655 000a 044A     	 ldr r2,.L51
 656 000c FB88     	 ldrh r3,[r7,#6]
 657 000e 1361     	 str r3,[r2,#16]
 266:../Libraries/XMCLib/src/xmc4_scu.c **** }
 658              	 .loc 3 266 0
 659 0010 0C37     	 adds r7,r7,#12
 660              	.LCFI64:
 661              	 .cfi_def_cfa_offset 4
 662 0012 BD46     	 mov sp,r7
 663              	.LCFI65:
 664              	 .cfi_def_cfa_register 13
 665              	 
 666 0014 5DF8047B 	 ldr r7,[sp],#4
 667              	.LCFI66:
 668              	 .cfi_restore 7
 669              	 .cfi_def_cfa_offset 0
 670 0018 7047     	 bx lr
 671              	.L52:
 672 001a 00BF     	 .align 2
 673              	.L51:
 674 001c 00400050 	 .word 1342193664
 675              	 .cfi_endproc
 676              	.LFE182:
 678              	 .section .text.XMC_SCU_ReadGPR,"ax",%progbits
 679              	 .align 2
 680              	 .global XMC_SCU_ReadGPR
 681              	 .thumb
 682              	 .thumb_func
 684              	XMC_SCU_ReadGPR:
 685              	.LFB183:
 267:../Libraries/XMCLib/src/xmc4_scu.c **** 
 268:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from General purpose register */
 269:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadGPR(const uint32_t index)
 270:../Libraries/XMCLib/src/xmc4_scu.c **** {
 686              	 .loc 3 270 0
 687              	 .cfi_startproc
 688              	 
 689              	 
 690              	 
 691 0000 80B4     	 push {r7}
 692              	.LCFI67:
 693              	 .cfi_def_cfa_offset 4
 694              	 .cfi_offset 7,-4
 695 0002 83B0     	 sub sp,sp,#12
 696              	.LCFI68:
 697              	 .cfi_def_cfa_offset 16
 698 0004 00AF     	 add r7,sp,#0
 699              	.LCFI69:
 700              	 .cfi_def_cfa_register 7
 701 0006 7860     	 str r0,[r7,#4]
 271:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->GPR[index]);
 702              	 .loc 3 271 0
 703 0008 054A     	 ldr r2,.L55
 704 000a 7B68     	 ldr r3,[r7,#4]
 705 000c 0A33     	 adds r3,r3,#10
 706 000e 9B00     	 lsls r3,r3,#2
 707 0010 1344     	 add r3,r3,r2
 708 0012 5B68     	 ldr r3,[r3,#4]
 272:../Libraries/XMCLib/src/xmc4_scu.c **** }
 709              	 .loc 3 272 0
 710 0014 1846     	 mov r0,r3
 711 0016 0C37     	 adds r7,r7,#12
 712              	.LCFI70:
 713              	 .cfi_def_cfa_offset 4
 714 0018 BD46     	 mov sp,r7
 715              	.LCFI71:
 716              	 .cfi_def_cfa_register 13
 717              	 
 718 001a 5DF8047B 	 ldr r7,[sp],#4
 719              	.LCFI72:
 720              	 .cfi_restore 7
 721              	 .cfi_def_cfa_offset 0
 722 001e 7047     	 bx lr
 723              	.L56:
 724              	 .align 2
 725              	.L55:
 726 0020 00400050 	 .word 1342193664
 727              	 .cfi_endproc
 728              	.LFE183:
 730              	 .section .text.XMC_SCU_WriteGPR,"ax",%progbits
 731              	 .align 2
 732              	 .global XMC_SCU_WriteGPR
 733              	 .thumb
 734              	 .thumb_func
 736              	XMC_SCU_WriteGPR:
 737              	.LFB184:
 273:../Libraries/XMCLib/src/xmc4_scu.c **** 
 274:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write to GPR */
 275:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data)
 276:../Libraries/XMCLib/src/xmc4_scu.c **** {
 738              	 .loc 3 276 0
 739              	 .cfi_startproc
 740              	 
 741              	 
 742              	 
 743 0000 80B4     	 push {r7}
 744              	.LCFI73:
 745              	 .cfi_def_cfa_offset 4
 746              	 .cfi_offset 7,-4
 747 0002 83B0     	 sub sp,sp,#12
 748              	.LCFI74:
 749              	 .cfi_def_cfa_offset 16
 750 0004 00AF     	 add r7,sp,#0
 751              	.LCFI75:
 752              	 .cfi_def_cfa_register 7
 753 0006 7860     	 str r0,[r7,#4]
 754 0008 3960     	 str r1,[r7]
 277:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GPR[index] = data;
 755              	 .loc 3 277 0
 756 000a 064A     	 ldr r2,.L58
 757 000c 7B68     	 ldr r3,[r7,#4]
 758 000e 0A33     	 adds r3,r3,#10
 759 0010 9B00     	 lsls r3,r3,#2
 760 0012 1344     	 add r3,r3,r2
 761 0014 3A68     	 ldr r2,[r7]
 762 0016 5A60     	 str r2,[r3,#4]
 278:../Libraries/XMCLib/src/xmc4_scu.c **** }
 763              	 .loc 3 278 0
 764 0018 0C37     	 adds r7,r7,#12
 765              	.LCFI76:
 766              	 .cfi_def_cfa_offset 4
 767 001a BD46     	 mov sp,r7
 768              	.LCFI77:
 769              	 .cfi_def_cfa_register 13
 770              	 
 771 001c 5DF8047B 	 ldr r7,[sp],#4
 772              	.LCFI78:
 773              	 .cfi_restore 7
 774              	 .cfi_def_cfa_offset 0
 775 0020 7047     	 bx lr
 776              	.L59:
 777 0022 00BF     	 .align 2
 778              	.L58:
 779 0024 00400050 	 .word 1342193664
 780              	 .cfi_endproc
 781              	.LFE184:
 783              	 .section .text.XMC_SCU_EnableOutOfRangeComparator,"ax",%progbits
 784              	 .align 2
 785              	 .global XMC_SCU_EnableOutOfRangeComparator
 786              	 .thumb
 787              	 .thumb_func
 789              	XMC_SCU_EnableOutOfRangeComparator:
 790              	.LFB185:
 279:../Libraries/XMCLib/src/xmc4_scu.c **** 
 280:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 281:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 282:../Libraries/XMCLib/src/xmc4_scu.c **** {
 791              	 .loc 3 282 0
 792              	 .cfi_startproc
 793              	 
 794              	 
 795              	 
 796 0000 80B4     	 push {r7}
 797              	.LCFI79:
 798              	 .cfi_def_cfa_offset 4
 799              	 .cfi_offset 7,-4
 800 0002 83B0     	 sub sp,sp,#12
 801              	.LCFI80:
 802              	 .cfi_def_cfa_offset 16
 803 0004 00AF     	 add r7,sp,#0
 804              	.LCFI81:
 805              	 .cfi_def_cfa_register 7
 806 0006 7860     	 str r0,[r7,#4]
 807 0008 3960     	 str r1,[r7]
 283:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 284:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel))
 285:../Libraries/XMCLib/src/xmc4_scu.c ****    
 286:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] |= (uint32_t)(1UL << channel);
 808              	 .loc 3 286 0
 809 000a 0A49     	 ldr r1,.L61
 810 000c 094A     	 ldr r2,.L61
 811 000e 7B68     	 ldr r3,[r7,#4]
 812 0010 2833     	 adds r3,r3,#40
 813 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 814 0016 3B68     	 ldr r3,[r7]
 815 0018 0120     	 movs r0,#1
 816 001a 00FA03F3 	 lsl r3,r0,r3
 817 001e 1A43     	 orrs r2,r2,r3
 818 0020 7B68     	 ldr r3,[r7,#4]
 819 0022 2833     	 adds r3,r3,#40
 820 0024 41F82320 	 str r2,[r1,r3,lsl#2]
 287:../Libraries/XMCLib/src/xmc4_scu.c **** }
 821              	 .loc 3 287 0
 822 0028 0C37     	 adds r7,r7,#12
 823              	.LCFI82:
 824              	 .cfi_def_cfa_offset 4
 825 002a BD46     	 mov sp,r7
 826              	.LCFI83:
 827              	 .cfi_def_cfa_register 13
 828              	 
 829 002c 5DF8047B 	 ldr r7,[sp],#4
 830              	.LCFI84:
 831              	 .cfi_restore 7
 832              	 .cfi_def_cfa_offset 0
 833 0030 7047     	 bx lr
 834              	.L62:
 835 0032 00BF     	 .align 2
 836              	.L61:
 837 0034 00400050 	 .word 1342193664
 838              	 .cfi_endproc
 839              	.LFE185:
 841              	 .section .text.XMC_SCU_DisableOutOfRangeComparator,"ax",%progbits
 842              	 .align 2
 843              	 .global XMC_SCU_DisableOutOfRangeComparator
 844              	 .thumb
 845              	 .thumb_func
 847              	XMC_SCU_DisableOutOfRangeComparator:
 848              	.LFB186:
 288:../Libraries/XMCLib/src/xmc4_scu.c **** 
 289:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 290:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 291:../Libraries/XMCLib/src/xmc4_scu.c **** {
 849              	 .loc 3 291 0
 850              	 .cfi_startproc
 851              	 
 852              	 
 853              	 
 854 0000 80B4     	 push {r7}
 855              	.LCFI85:
 856              	 .cfi_def_cfa_offset 4
 857              	 .cfi_offset 7,-4
 858 0002 83B0     	 sub sp,sp,#12
 859              	.LCFI86:
 860              	 .cfi_def_cfa_offset 16
 861 0004 00AF     	 add r7,sp,#0
 862              	.LCFI87:
 863              	 .cfi_def_cfa_register 7
 864 0006 7860     	 str r0,[r7,#4]
 865 0008 3960     	 str r1,[r7]
 292:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 293:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel
 294:../Libraries/XMCLib/src/xmc4_scu.c ****    
 295:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] &= (uint32_t)~(1UL << channel);
 866              	 .loc 3 295 0
 867 000a 0A49     	 ldr r1,.L64
 868 000c 094A     	 ldr r2,.L64
 869 000e 7B68     	 ldr r3,[r7,#4]
 870 0010 2833     	 adds r3,r3,#40
 871 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 872 0016 3B68     	 ldr r3,[r7]
 873 0018 0120     	 movs r0,#1
 874 001a 00FA03F3 	 lsl r3,r0,r3
 875 001e DB43     	 mvns r3,r3
 876 0020 1A40     	 ands r2,r2,r3
 877 0022 7B68     	 ldr r3,[r7,#4]
 878 0024 2833     	 adds r3,r3,#40
 879 0026 41F82320 	 str r2,[r1,r3,lsl#2]
 296:../Libraries/XMCLib/src/xmc4_scu.c **** }
 880              	 .loc 3 296 0
 881 002a 0C37     	 adds r7,r7,#12
 882              	.LCFI88:
 883              	 .cfi_def_cfa_offset 4
 884 002c BD46     	 mov sp,r7
 885              	.LCFI89:
 886              	 .cfi_def_cfa_register 13
 887              	 
 888 002e 5DF8047B 	 ldr r7,[sp],#4
 889              	.LCFI90:
 890              	 .cfi_restore 7
 891              	 .cfi_def_cfa_offset 0
 892 0032 7047     	 bx lr
 893              	.L65:
 894              	 .align 2
 895              	.L64:
 896 0034 00400050 	 .word 1342193664
 897              	 .cfi_endproc
 898              	.LFE186:
 900              	 .section .text.XMC_SCU_CalibrateTemperatureSensor,"ax",%progbits
 901              	 .align 2
 902              	 .global XMC_SCU_CalibrateTemperatureSensor
 903              	 .thumb
 904              	 .thumb_func
 906              	XMC_SCU_CalibrateTemperatureSensor:
 907              	.LFB187:
 297:../Libraries/XMCLib/src/xmc4_scu.c **** 
 298:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to calibrate temperature sensor */
 299:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain)
 300:../Libraries/XMCLib/src/xmc4_scu.c **** {
 908              	 .loc 3 300 0
 909              	 .cfi_startproc
 910              	 
 911              	 
 912              	 
 913 0000 80B4     	 push {r7}
 914              	.LCFI91:
 915              	 .cfi_def_cfa_offset 4
 916              	 .cfi_offset 7,-4
 917 0002 83B0     	 sub sp,sp,#12
 918              	.LCFI92:
 919              	 .cfi_def_cfa_offset 16
 920 0004 00AF     	 add r7,sp,#0
 921              	.LCFI93:
 922              	 .cfi_def_cfa_register 7
 923 0006 7860     	 str r0,[r7,#4]
 924 0008 3960     	 str r1,[r7]
 301:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 925              	 .loc 3 301 0
 926 000a 0749     	 ldr r1,.L67
 927 000c 7B68     	 ldr r3,[r7,#4]
 928 000e 1A01     	 lsls r2,r3,#4
 302:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(gain << SCU_GENERAL_DTSCON_GAIN_Pos) |
 929              	 .loc 3 302 0
 930 0010 3B68     	 ldr r3,[r7]
 931 0012 DB02     	 lsls r3,r3,#11
 301:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 932              	 .loc 3 301 0
 933 0014 1343     	 orrs r3,r3,r2
 303:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x4UL << SCU_GENERAL_DTSCON_REFTRIM_Pos) |
 934              	 .loc 3 303 0
 935 0016 43F40803 	 orr r3,r3,#8912896
 301:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 936              	 .loc 3 301 0
 937 001a C1F88C30 	 str r3,[r1,#140]
 304:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x8UL << SCU_GENERAL_DTSCON_BGTRIM_Pos));
 305:../Libraries/XMCLib/src/xmc4_scu.c **** }
 938              	 .loc 3 305 0
 939 001e 0C37     	 adds r7,r7,#12
 940              	.LCFI94:
 941              	 .cfi_def_cfa_offset 4
 942 0020 BD46     	 mov sp,r7
 943              	.LCFI95:
 944              	 .cfi_def_cfa_register 13
 945              	 
 946 0022 5DF8047B 	 ldr r7,[sp],#4
 947              	.LCFI96:
 948              	 .cfi_restore 7
 949              	 .cfi_def_cfa_offset 0
 950 0026 7047     	 bx lr
 951              	.L68:
 952              	 .align 2
 953              	.L67:
 954 0028 00400050 	 .word 1342193664
 955              	 .cfi_endproc
 956              	.LFE187:
 958              	 .section .text.XMC_SCU_EnableTemperatureSensor,"ax",%progbits
 959              	 .align 2
 960              	 .global XMC_SCU_EnableTemperatureSensor
 961              	 .thumb
 962              	 .thumb_func
 964              	XMC_SCU_EnableTemperatureSensor:
 965              	.LFB188:
 306:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable die temperature measurement by powering the DTS module. */
 307:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableTemperatureSensor(void)
 308:../Libraries/XMCLib/src/xmc4_scu.c **** {
 966              	 .loc 3 308 0
 967              	 .cfi_startproc
 968              	 
 969              	 
 970              	 
 971 0000 80B4     	 push {r7}
 972              	.LCFI97:
 973              	 .cfi_def_cfa_offset 4
 974              	 .cfi_offset 7,-4
 975 0002 00AF     	 add r7,sp,#0
 976              	.LCFI98:
 977              	 .cfi_def_cfa_register 7
 309:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~(SCU_GENERAL_DTSCON_PWD_Msk);
 978              	 .loc 3 309 0
 979 0004 054A     	 ldr r2,.L70
 980 0006 054B     	 ldr r3,.L70
 981 0008 D3F88C30 	 ldr r3,[r3,#140]
 982 000c 23F00103 	 bic r3,r3,#1
 983 0010 C2F88C30 	 str r3,[r2,#140]
 310:../Libraries/XMCLib/src/xmc4_scu.c **** }
 984              	 .loc 3 310 0
 985 0014 BD46     	 mov sp,r7
 986              	.LCFI99:
 987              	 .cfi_def_cfa_register 13
 988              	 
 989 0016 5DF8047B 	 ldr r7,[sp],#4
 990              	.LCFI100:
 991              	 .cfi_restore 7
 992              	 .cfi_def_cfa_offset 0
 993 001a 7047     	 bx lr
 994              	.L71:
 995              	 .align 2
 996              	.L70:
 997 001c 00400050 	 .word 1342193664
 998              	 .cfi_endproc
 999              	.LFE188:
 1001              	 .section .text.XMC_SCU_DisableTemperatureSensor,"ax",%progbits
 1002              	 .align 2
 1003              	 .global XMC_SCU_DisableTemperatureSensor
 1004              	 .thumb
 1005              	 .thumb_func
 1007              	XMC_SCU_DisableTemperatureSensor:
 1008              	.LFB189:
 311:../Libraries/XMCLib/src/xmc4_scu.c **** 
 312:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable die temperature measurement by powering the DTS module off. */
 313:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableTemperatureSensor(void)
 314:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1009              	 .loc 3 314 0
 1010              	 .cfi_startproc
 1011              	 
 1012              	 
 1013              	 
 1014 0000 80B4     	 push {r7}
 1015              	.LCFI101:
 1016              	 .cfi_def_cfa_offset 4
 1017              	 .cfi_offset 7,-4
 1018 0002 00AF     	 add r7,sp,#0
 1019              	.LCFI102:
 1020              	 .cfi_def_cfa_register 7
 315:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_PWD_Msk;
 1021              	 .loc 3 315 0
 1022 0004 054A     	 ldr r2,.L73
 1023 0006 054B     	 ldr r3,.L73
 1024 0008 D3F88C30 	 ldr r3,[r3,#140]
 1025 000c 43F00103 	 orr r3,r3,#1
 1026 0010 C2F88C30 	 str r3,[r2,#140]
 316:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1027              	 .loc 3 316 0
 1028 0014 BD46     	 mov sp,r7
 1029              	.LCFI103:
 1030              	 .cfi_def_cfa_register 13
 1031              	 
 1032 0016 5DF8047B 	 ldr r7,[sp],#4
 1033              	.LCFI104:
 1034              	 .cfi_restore 7
 1035              	 .cfi_def_cfa_offset 0
 1036 001a 7047     	 bx lr
 1037              	.L74:
 1038              	 .align 2
 1039              	.L73:
 1040 001c 00400050 	 .word 1342193664
 1041              	 .cfi_endproc
 1042              	.LFE189:
 1044              	 .section .text.XMC_SCU_IsTemperatureSensorEnabled,"ax",%progbits
 1045              	 .align 2
 1046              	 .global XMC_SCU_IsTemperatureSensorEnabled
 1047              	 .thumb
 1048              	 .thumb_func
 1050              	XMC_SCU_IsTemperatureSensorEnabled:
 1051              	.LFB190:
 317:../Libraries/XMCLib/src/xmc4_scu.c **** 
 318:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to provide the die temperature sensor power status. */
 319:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorEnabled(void)
 320:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1052              	 .loc 3 320 0
 1053              	 .cfi_startproc
 1054              	 
 1055              	 
 1056              	 
 1057 0000 80B4     	 push {r7}
 1058              	.LCFI105:
 1059              	 .cfi_def_cfa_offset 4
 1060              	 .cfi_offset 7,-4
 1061 0002 00AF     	 add r7,sp,#0
 1062              	.LCFI106:
 1063              	 .cfi_def_cfa_register 7
 321:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSCON & SCU_GENERAL_DTSCON_PWD_Msk) == 0U);
 1064              	 .loc 3 321 0
 1065 0004 074B     	 ldr r3,.L77
 1066 0006 D3F88C30 	 ldr r3,[r3,#140]
 1067 000a 03F00103 	 and r3,r3,#1
 1068 000e 002B     	 cmp r3,#0
 1069 0010 0CBF     	 ite eq
 1070 0012 0123     	 moveq r3,#1
 1071 0014 0023     	 movne r3,#0
 1072 0016 DBB2     	 uxtb r3,r3
 322:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1073              	 .loc 3 322 0
 1074 0018 1846     	 mov r0,r3
 1075 001a BD46     	 mov sp,r7
 1076              	.LCFI107:
 1077              	 .cfi_def_cfa_register 13
 1078              	 
 1079 001c 5DF8047B 	 ldr r7,[sp],#4
 1080              	.LCFI108:
 1081              	 .cfi_restore 7
 1082              	 .cfi_def_cfa_offset 0
 1083 0020 7047     	 bx lr
 1084              	.L78:
 1085 0022 00BF     	 .align 2
 1086              	.L77:
 1087 0024 00400050 	 .word 1342193664
 1088              	 .cfi_endproc
 1089              	.LFE190:
 1091              	 .section .text.XMC_SCU_IsTemperatureSensorReady,"ax",%progbits
 1092              	 .align 2
 1093              	 .global XMC_SCU_IsTemperatureSensorReady
 1094              	 .thumb
 1095              	 .thumb_func
 1097              	XMC_SCU_IsTemperatureSensorReady:
 1098              	.LFB191:
 323:../Libraries/XMCLib/src/xmc4_scu.c **** 
 324:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check if the die temperature sensor is ready to start a measurement. */
 325:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorReady(void)
 326:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1099              	 .loc 3 326 0
 1100              	 .cfi_startproc
 1101              	 
 1102              	 
 1103              	 
 1104 0000 80B4     	 push {r7}
 1105              	.LCFI109:
 1106              	 .cfi_def_cfa_offset 4
 1107              	 .cfi_offset 7,-4
 1108 0002 00AF     	 add r7,sp,#0
 1109              	.LCFI110:
 1110              	 .cfi_def_cfa_register 7
 327:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RDY_Msk) != 0U);
 1111              	 .loc 3 327 0
 1112 0004 074B     	 ldr r3,.L81
 1113 0006 D3F89030 	 ldr r3,[r3,#144]
 1114 000a 03F48043 	 and r3,r3,#16384
 1115 000e 002B     	 cmp r3,#0
 1116 0010 14BF     	 ite ne
 1117 0012 0123     	 movne r3,#1
 1118 0014 0023     	 moveq r3,#0
 1119 0016 DBB2     	 uxtb r3,r3
 328:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1120              	 .loc 3 328 0
 1121 0018 1846     	 mov r0,r3
 1122 001a BD46     	 mov sp,r7
 1123              	.LCFI111:
 1124              	 .cfi_def_cfa_register 13
 1125              	 
 1126 001c 5DF8047B 	 ldr r7,[sp],#4
 1127              	.LCFI112:
 1128              	 .cfi_restore 7
 1129              	 .cfi_def_cfa_offset 0
 1130 0020 7047     	 bx lr
 1131              	.L82:
 1132 0022 00BF     	 .align 2
 1133              	.L81:
 1134 0024 00400050 	 .word 1342193664
 1135              	 .cfi_endproc
 1136              	.LFE191:
 1138              	 .section .text.XMC_SCU_StartTemperatureMeasurement,"ax",%progbits
 1139              	 .align 2
 1140              	 .global XMC_SCU_StartTemperatureMeasurement
 1141              	 .thumb
 1142              	 .thumb_func
 1144              	XMC_SCU_StartTemperatureMeasurement:
 1145              	.LFB192:
 329:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to start device temperature measurements */
 330:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void)
 331:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1146              	 .loc 3 331 0
 1147              	 .cfi_startproc
 1148              	 
 1149              	 
 1150 0000 80B5     	 push {r7,lr}
 1151              	.LCFI113:
 1152              	 .cfi_def_cfa_offset 8
 1153              	 .cfi_offset 7,-8
 1154              	 .cfi_offset 14,-4
 1155 0002 82B0     	 sub sp,sp,#8
 1156              	.LCFI114:
 1157              	 .cfi_def_cfa_offset 16
 1158 0004 00AF     	 add r7,sp,#0
 1159              	.LCFI115:
 1160              	 .cfi_def_cfa_register 7
 332:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 1161              	 .loc 3 332 0
 1162 0006 0023     	 movs r3,#0
 1163 0008 FB71     	 strb r3,[r7,#7]
 333:../Libraries/XMCLib/src/xmc4_scu.c **** 
 334:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1164              	 .loc 3 334 0
 1165 000a FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1166 000e 0346     	 mov r3,r0
 1167 0010 83F00103 	 eor r3,r3,#1
 1168 0014 DBB2     	 uxtb r3,r3
 1169 0016 002B     	 cmp r3,#0
 1170 0018 01D0     	 beq .L84
 335:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 336:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 1171              	 .loc 3 336 0
 1172 001a 0123     	 movs r3,#1
 1173 001c FB71     	 strb r3,[r7,#7]
 1174              	.L84:
 337:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 338:../Libraries/XMCLib/src/xmc4_scu.c ****    
 339:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorBusy() == true)
 1175              	 .loc 3 339 0
 1176 001e FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorBusy
 1177 0022 0346     	 mov r3,r0
 1178 0024 002B     	 cmp r3,#0
 1179 0026 01D0     	 beq .L85
 340:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 341:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_BUSY;
 1180              	 .loc 3 341 0
 1181 0028 0223     	 movs r3,#2
 1182 002a FB71     	 strb r3,[r7,#7]
 1183              	.L85:
 342:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 343:../Libraries/XMCLib/src/xmc4_scu.c **** 
 344:../Libraries/XMCLib/src/xmc4_scu.c ****   /* And start the measurement */
 345:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_START_Msk;
 1184              	 .loc 3 345 0
 1185 002c 064A     	 ldr r2,.L87
 1186 002e 064B     	 ldr r3,.L87
 1187 0030 D3F88C30 	 ldr r3,[r3,#140]
 1188 0034 43F00203 	 orr r3,r3,#2
 1189 0038 C2F88C30 	 str r3,[r2,#140]
 346:../Libraries/XMCLib/src/xmc4_scu.c ****   
 347:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 1190              	 .loc 3 347 0
 1191 003c FB79     	 ldrb r3,[r7,#7]
 348:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1192              	 .loc 3 348 0
 1193 003e 1846     	 mov r0,r3
 1194 0040 0837     	 adds r7,r7,#8
 1195              	.LCFI116:
 1196              	 .cfi_def_cfa_offset 8
 1197 0042 BD46     	 mov sp,r7
 1198              	.LCFI117:
 1199              	 .cfi_def_cfa_register 13
 1200              	 
 1201 0044 80BD     	 pop {r7,pc}
 1202              	.L88:
 1203 0046 00BF     	 .align 2
 1204              	.L87:
 1205 0048 00400050 	 .word 1342193664
 1206              	 .cfi_endproc
 1207              	.LFE192:
 1209              	 .section .text.XMC_SCU_GetTemperatureMeasurement,"ax",%progbits
 1210              	 .align 2
 1211              	 .global XMC_SCU_GetTemperatureMeasurement
 1212              	 .thumb
 1213              	 .thumb_func
 1215              	XMC_SCU_GetTemperatureMeasurement:
 1216              	.LFB193:
 349:../Libraries/XMCLib/src/xmc4_scu.c **** 
 350:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the temperature measured */
 351:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetTemperatureMeasurement(void)
 352:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1217              	 .loc 3 352 0
 1218              	 .cfi_startproc
 1219              	 
 1220              	 
 1221 0000 80B5     	 push {r7,lr}
 1222              	.LCFI118:
 1223              	 .cfi_def_cfa_offset 8
 1224              	 .cfi_offset 7,-8
 1225              	 .cfi_offset 14,-4
 1226 0002 82B0     	 sub sp,sp,#8
 1227              	.LCFI119:
 1228              	 .cfi_def_cfa_offset 16
 1229 0004 00AF     	 add r7,sp,#0
 1230              	.LCFI120:
 1231              	 .cfi_def_cfa_register 7
 353:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t temperature;
 354:../Libraries/XMCLib/src/xmc4_scu.c **** 
 355:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1232              	 .loc 3 355 0
 1233 0006 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1234 000a 0346     	 mov r3,r0
 1235 000c 83F00103 	 eor r3,r3,#1
 1236 0010 DBB2     	 uxtb r3,r3
 1237 0012 002B     	 cmp r3,#0
 1238 0014 03D0     	 beq .L90
 356:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 357:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = 0x7FFFFFFFUL;
 1239              	 .loc 3 357 0
 1240 0016 6FF00043 	 mvn r3,#-2147483648
 1241 001a 7B60     	 str r3,[r7,#4]
 1242 001c 05E0     	 b .L91
 1243              	.L90:
 358:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 359:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 360:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 361:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = (uint32_t)((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RESULT_Msk) >> SCU_GENERAL
 1244              	 .loc 3 361 0
 1245 001e 054B     	 ldr r3,.L93
 1246 0020 D3F89030 	 ldr r3,[r3,#144]
 1247 0024 C3F30903 	 ubfx r3,r3,#0,#10
 1248 0028 7B60     	 str r3,[r7,#4]
 1249              	.L91:
 362:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 363:../Libraries/XMCLib/src/xmc4_scu.c ****   
 364:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((uint32_t)temperature);
 1250              	 .loc 3 364 0
 1251 002a 7B68     	 ldr r3,[r7,#4]
 365:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1252              	 .loc 3 365 0
 1253 002c 1846     	 mov r0,r3
 1254 002e 0837     	 adds r7,r7,#8
 1255              	.LCFI121:
 1256              	 .cfi_def_cfa_offset 8
 1257 0030 BD46     	 mov sp,r7
 1258              	.LCFI122:
 1259              	 .cfi_def_cfa_register 13
 1260              	 
 1261 0032 80BD     	 pop {r7,pc}
 1262              	.L94:
 1263              	 .align 2
 1264              	.L93:
 1265 0034 00400050 	 .word 1342193664
 1266              	 .cfi_endproc
 1267              	.LFE193:
 1269              	 .section .text.XMC_SCU_IsTemperatureSensorBusy,"ax",%progbits
 1270              	 .align 2
 1271              	 .global XMC_SCU_IsTemperatureSensorBusy
 1272              	 .thumb
 1273              	 .thumb_func
 1275              	XMC_SCU_IsTemperatureSensorBusy:
 1276              	.LFB194:
 366:../Libraries/XMCLib/src/xmc4_scu.c **** 
 367:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to know whether Die temperature sensor is busy */
 368:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorBusy(void)
 369:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1277              	 .loc 3 369 0
 1278              	 .cfi_startproc
 1279              	 
 1280              	 
 1281              	 
 1282 0000 80B4     	 push {r7}
 1283              	.LCFI123:
 1284              	 .cfi_def_cfa_offset 4
 1285              	 .cfi_offset 7,-4
 1286 0002 00AF     	 add r7,sp,#0
 1287              	.LCFI124:
 1288              	 .cfi_def_cfa_register 7
 370:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_BUSY_Msk) != 0U);
 1289              	 .loc 3 370 0
 1290 0004 074B     	 ldr r3,.L97
 1291 0006 D3F89030 	 ldr r3,[r3,#144]
 1292 000a 03F40043 	 and r3,r3,#32768
 1293 000e 002B     	 cmp r3,#0
 1294 0010 14BF     	 ite ne
 1295 0012 0123     	 movne r3,#1
 1296 0014 0023     	 moveq r3,#0
 1297 0016 DBB2     	 uxtb r3,r3
 371:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1298              	 .loc 3 371 0
 1299 0018 1846     	 mov r0,r3
 1300 001a BD46     	 mov sp,r7
 1301              	.LCFI125:
 1302              	 .cfi_def_cfa_register 13
 1303              	 
 1304 001c 5DF8047B 	 ldr r7,[sp],#4
 1305              	.LCFI126:
 1306              	 .cfi_restore 7
 1307              	 .cfi_def_cfa_offset 0
 1308 0020 7047     	 bx lr
 1309              	.L98:
 1310 0022 00BF     	 .align 2
 1311              	.L97:
 1312 0024 00400050 	 .word 1342193664
 1313              	 .cfi_endproc
 1314              	.LFE194:
 1316              	 .section .text.XMC_SCU_WriteToRetentionMemory,"ax",%progbits
 1317              	 .align 2
 1318              	 .global XMC_SCU_WriteToRetentionMemory
 1319              	 .thumb
 1320              	 .thumb_func
 1322              	XMC_SCU_WriteToRetentionMemory:
 1323              	.LFB195:
 372:../Libraries/XMCLib/src/xmc4_scu.c **** 
 373:../Libraries/XMCLib/src/xmc4_scu.c **** 
 374:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(SCU_GENERAL_DTEMPLIM_LOWER_Msk) && defined(SCU_GENERAL_DTEMPLIM_UPPER_Msk)
 375:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone past the ceiling */
 376:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HighTemperature(void)
 377:../Libraries/XMCLib/src/xmc4_scu.c **** {
 378:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 379:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 380:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 381:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 382:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 383:../Libraries/XMCLib/src/xmc4_scu.c **** 
 384:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 385:../Libraries/XMCLib/src/xmc4_scu.c **** 
 386:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 387:../Libraries/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 388:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 389:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 390:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 391:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 392:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 393:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 394:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 395:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 396:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_OVERFL_Msk;
 397:../Libraries/XMCLib/src/xmc4_scu.c ****     
 398:../Libraries/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 399:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 400:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 401:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 402:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 403:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 404:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 405:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 406:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 407:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 408:../Libraries/XMCLib/src/xmc4_scu.c **** }
 409:../Libraries/XMCLib/src/xmc4_scu.c **** 
 410:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program raw values of temperature limits into the DTS */
 411:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp)
 412:../Libraries/XMCLib/src/xmc4_scu.c **** {
 413:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up the DTS module */
 414:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~SCU_GENERAL_DTSCON_PWD_Msk;
 415:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = 0;
 416:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = (lower_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk);
 417:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM |= (uint32_t)((upper_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk) << SCU_GENERAL_
 418:../Libraries/XMCLib/src/xmc4_scu.c **** }
 419:../Libraries/XMCLib/src/xmc4_scu.c **** 
 420:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone below the stipulated limit */
 421:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_LowTemperature(void)
 422:../Libraries/XMCLib/src/xmc4_scu.c **** {
 423:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 424:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 425:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 426:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 427:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 428:../Libraries/XMCLib/src/xmc4_scu.c **** 
 429:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 430:../Libraries/XMCLib/src/xmc4_scu.c **** 
 431:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 432:../Libraries/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 433:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 434:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 435:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 436:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 437:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 438:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 439:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 440:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 441:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_UNDERFL_Msk;
 442:../Libraries/XMCLib/src/xmc4_scu.c ****     
 443:../Libraries/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 444:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 445:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 446:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 447:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 448:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 449:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 450:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 451:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 452:../Libraries/XMCLib/src/xmc4_scu.c ****   
 453:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 454:../Libraries/XMCLib/src/xmc4_scu.c **** }
 455:../Libraries/XMCLib/src/xmc4_scu.c **** #endif  
 456:../Libraries/XMCLib/src/xmc4_scu.c **** 
 457:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write into Retention memory in hibernate domain */
 458:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data)
 459:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1324              	 .loc 3 459 0
 1325              	 .cfi_startproc
 1326              	 
 1327              	 
 1328              	 
 1329 0000 80B4     	 push {r7}
 1330              	.LCFI127:
 1331              	 .cfi_def_cfa_offset 4
 1332              	 .cfi_offset 7,-4
 1333 0002 85B0     	 sub sp,sp,#20
 1334              	.LCFI128:
 1335              	 .cfi_def_cfa_offset 24
 1336 0004 00AF     	 add r7,sp,#0
 1337              	.LCFI129:
 1338              	 .cfi_def_cfa_register 7
 1339 0006 7860     	 str r0,[r7,#4]
 1340 0008 3960     	 str r1,[r7]
 460:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 461:../Libraries/XMCLib/src/xmc4_scu.c ****   
 462:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 463:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = (uint32_t)((address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1341              	 .loc 3 463 0
 1342 000a 7B68     	 ldr r3,[r7,#4]
 1343 000c 1B04     	 lsls r3,r3,#16
 1344 000e 03F47023 	 and r3,r3,#983040
 1345 0012 FB60     	 str r3,[r7,#12]
 464:../Libraries/XMCLib/src/xmc4_scu.c ****   
 465:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 466:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr |= (uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk);
 1346              	 .loc 3 466 0
 1347 0014 FB68     	 ldr r3,[r7,#12]
 1348 0016 43F00103 	 orr r3,r3,#1
 1349 001a FB60     	 str r3,[r7,#12]
 467:../Libraries/XMCLib/src/xmc4_scu.c ****   
 468:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write desired data into RMDATA register */  
 469:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMDATA = data;
 1350              	 .loc 3 469 0
 1351 001c 0A4A     	 ldr r2,.L101
 1352 001e 3B68     	 ldr r3,[r7]
 1353 0020 C2F8CC30 	 str r3,[r2,#204]
 470:../Libraries/XMCLib/src/xmc4_scu.c ****   
 471:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write address & direction of transfer into RMACR register */  
 472:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1354              	 .loc 3 472 0
 1355 0024 084A     	 ldr r2,.L101
 1356 0026 FB68     	 ldr r3,[r7,#12]
 1357 0028 C2F8C830 	 str r3,[r2,#200]
 473:../Libraries/XMCLib/src/xmc4_scu.c ****   
 474:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 475:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1358              	 .loc 3 475 0
 1359 002c 00BF     	 nop
 1360              	.L100:
 1361              	 .loc 3 475 0 is_stmt 0 discriminator 1
 1362 002e 064B     	 ldr r3,.L101
 1363 0030 D3F8C430 	 ldr r3,[r3,#196]
 1364 0034 03F40053 	 and r3,r3,#8192
 1365 0038 002B     	 cmp r3,#0
 1366 003a F8D1     	 bne .L100
 476:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 477:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 478:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1367              	 .loc 3 478 0 is_stmt 1
 1368 003c 1437     	 adds r7,r7,#20
 1369              	.LCFI130:
 1370              	 .cfi_def_cfa_offset 4
 1371 003e BD46     	 mov sp,r7
 1372              	.LCFI131:
 1373              	 .cfi_def_cfa_register 13
 1374              	 
 1375 0040 5DF8047B 	 ldr r7,[sp],#4
 1376              	.LCFI132:
 1377              	 .cfi_restore 7
 1378              	 .cfi_def_cfa_offset 0
 1379 0044 7047     	 bx lr
 1380              	.L102:
 1381 0046 00BF     	 .align 2
 1382              	.L101:
 1383 0048 00400050 	 .word 1342193664
 1384              	 .cfi_endproc
 1385              	.LFE195:
 1387              	 .section .text.XMC_SCU_ReadFromRetentionMemory,"ax",%progbits
 1388              	 .align 2
 1389              	 .global XMC_SCU_ReadFromRetentionMemory
 1390              	 .thumb
 1391              	 .thumb_func
 1393              	XMC_SCU_ReadFromRetentionMemory:
 1394              	.LFB196:
 479:../Libraries/XMCLib/src/xmc4_scu.c **** 
 480:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from Retention memory in hibernate domain */
 481:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address)
 482:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1395              	 .loc 3 482 0
 1396              	 .cfi_startproc
 1397              	 
 1398              	 
 1399              	 
 1400 0000 80B4     	 push {r7}
 1401              	.LCFI133:
 1402              	 .cfi_def_cfa_offset 4
 1403              	 .cfi_offset 7,-4
 1404 0002 85B0     	 sub sp,sp,#20
 1405              	.LCFI134:
 1406              	 .cfi_def_cfa_offset 24
 1407 0004 00AF     	 add r7,sp,#0
 1408              	.LCFI135:
 1409              	 .cfi_def_cfa_register 7
 1410 0006 7860     	 str r0,[r7,#4]
 483:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 484:../Libraries/XMCLib/src/xmc4_scu.c **** 
 485:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 486:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = ((uint32_t)(address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1411              	 .loc 3 486 0
 1412 0008 7B68     	 ldr r3,[r7,#4]
 1413 000a 1B04     	 lsls r3,r3,#16
 1414 000c 03F47023 	 and r3,r3,#983040
 1415 0010 FB60     	 str r3,[r7,#12]
 487:../Libraries/XMCLib/src/xmc4_scu.c ****   
 488:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 489:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr &= ~((uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk));
 1416              	 .loc 3 489 0
 1417 0012 FB68     	 ldr r3,[r7,#12]
 1418 0014 23F00103 	 bic r3,r3,#1
 1419 0018 FB60     	 str r3,[r7,#12]
 490:../Libraries/XMCLib/src/xmc4_scu.c ****   
 491:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Writing an adress & direction of transfer into RMACR register */  
 492:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1420              	 .loc 3 492 0
 1421 001a 0A4A     	 ldr r2,.L106
 1422 001c FB68     	 ldr r3,[r7,#12]
 1423 001e C2F8C830 	 str r3,[r2,#200]
 493:../Libraries/XMCLib/src/xmc4_scu.c ****   
 494:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 495:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1424              	 .loc 3 495 0
 1425 0022 00BF     	 nop
 1426              	.L104:
 1427              	 .loc 3 495 0 is_stmt 0 discriminator 1
 1428 0024 074B     	 ldr r3,.L106
 1429 0026 D3F8C430 	 ldr r3,[r3,#196]
 1430 002a 03F40053 	 and r3,r3,#8192
 1431 002e 002B     	 cmp r3,#0
 1432 0030 F8D1     	 bne .L104
 496:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 497:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 498:../Libraries/XMCLib/src/xmc4_scu.c **** 
 499:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->RMDATA);
 1433              	 .loc 3 499 0 is_stmt 1
 1434 0032 044B     	 ldr r3,.L106
 1435 0034 D3F8CC30 	 ldr r3,[r3,#204]
 500:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1436              	 .loc 3 500 0
 1437 0038 1846     	 mov r0,r3
 1438 003a 1437     	 adds r7,r7,#20
 1439              	.LCFI136:
 1440              	 .cfi_def_cfa_offset 4
 1441 003c BD46     	 mov sp,r7
 1442              	.LCFI137:
 1443              	 .cfi_def_cfa_register 13
 1444              	 
 1445 003e 5DF8047B 	 ldr r7,[sp],#4
 1446              	.LCFI138:
 1447              	 .cfi_restore 7
 1448              	 .cfi_def_cfa_offset 0
 1449 0042 7047     	 bx lr
 1450              	.L107:
 1451              	 .align 2
 1452              	.L106:
 1453 0044 00400050 	 .word 1342193664
 1454              	 .cfi_endproc
 1455              	.LFE196:
 1457              	 .section .text.XMC_SCU_CLOCK_Init,"ax",%progbits
 1458              	 .align 2
 1459              	 .global XMC_SCU_CLOCK_Init
 1460              	 .thumb
 1461              	 .thumb_func
 1463              	XMC_SCU_CLOCK_Init:
 1464              	.LFB197:
 501:../Libraries/XMCLib/src/xmc4_scu.c **** 
 502:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to initialize the clock tree */
 503:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
 504:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1465              	 .loc 3 504 0
 1466              	 .cfi_startproc
 1467              	 
 1468              	 
 1469 0000 B0B5     	 push {r4,r5,r7,lr}
 1470              	.LCFI139:
 1471              	 .cfi_def_cfa_offset 16
 1472              	 .cfi_offset 4,-16
 1473              	 .cfi_offset 5,-12
 1474              	 .cfi_offset 7,-8
 1475              	 .cfi_offset 14,-4
 1476 0002 84B0     	 sub sp,sp,#16
 1477              	.LCFI140:
 1478              	 .cfi_def_cfa_offset 32
 1479 0004 02AF     	 add r7,sp,#8
 1480              	.LCFI141:
 1481              	 .cfi_def_cfa 7,24
 1482 0006 7860     	 str r0,[r7,#4]
 505:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 506:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fcpu_clkdiv != 0);
 507:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fccu_clkdiv != 0);
 508:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fperipheral_clkdiv != 0);
 509:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.p_div != 0) &&
 510:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 511:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 512:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.n_div != 0) &&
 513:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 514:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 515:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", (config->syspll_config.k_div != 0) &&
 516:../Libraries/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 517:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 518:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL) ||
 519:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_OFI)) &&
 520:../Libraries/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 521:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 522:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fstdby_clksrc == XMC_SCU_HIB_STDBYCLKSRC_OSCULP) && (config->enable_oscu
 523:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->fstdby_clksrc != XMC_SCU_HIB_STDBYCLKSRC_OSCULP));
 524:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.clksrc == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) &&
 525:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->enable_oschp == true)) || (config->syspll_config.clksrc != XMC_SCU_CLOCK_
 526:../Libraries/XMCLib/src/xmc4_scu.c **** 
 527:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_OFI);
 1483              	 .loc 3 527 0
 1484 0008 0020     	 movs r0,#0
 1485 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 528:../Libraries/XMCLib/src/xmc4_scu.c **** 
 529:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 1486              	 .loc 3 529 0
 1487 000e FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 530:../Libraries/XMCLib/src/xmc4_scu.c **** 
 531:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_osculp == true)
 1488              	 .loc 3 531 0
 1489 0012 7B68     	 ldr r3,[r7,#4]
 1490 0014 DB79     	 ldrb r3,[r3,#7]
 1491 0016 002B     	 cmp r3,#0
 1492 0018 0AD0     	 beq .L109
 532:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 533:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableLowPowerOscillator();
 1493              	 .loc 3 533 0
 1494 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableLowPowerOscillator
 534:../Libraries/XMCLib/src/xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 1495              	 .loc 3 534 0
 1496 001e 00BF     	 nop
 1497              	.L110:
 1498              	 .loc 3 534 0 is_stmt 0 discriminator 1
 1499 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 1500 0024 0346     	 mov r3,r0
 1501 0026 83F00103 	 eor r3,r3,#1
 1502 002a DBB2     	 uxtb r3,r3
 1503 002c 002B     	 cmp r3,#0
 1504 002e F7D1     	 bne .L110
 1505              	.L109:
 535:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 536:../Libraries/XMCLib/src/xmc4_scu.c ****   
 537:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_SetStandbyClockSource(config->fstdby_clksrc);  
 1506              	 .loc 3 537 0 is_stmt 1
 1507 0030 7B68     	 ldr r3,[r7,#4]
 1508 0032 5B7A     	 ldrb r3,[r3,#9]
 1509 0034 1846     	 mov r0,r3
 1510 0036 FFF7FEFF 	 bl XMC_SCU_HIB_SetStandbyClockSource
 538:../Libraries/XMCLib/src/xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 1511              	 .loc 3 538 0
 1512 003a 00BF     	 nop
 1513              	.L111:
 1514              	 .loc 3 538 0 is_stmt 0 discriminator 1
 1515 003c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 1516 0040 0346     	 mov r3,r0
 1517 0042 002B     	 cmp r3,#0
 1518 0044 FAD1     	 bne .L111
 539:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 540:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until update of the stanby clock source is done in the HIB domain */    
 541:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 542:../Libraries/XMCLib/src/xmc4_scu.c **** 
 543:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetBackupClockCalibrationMode(config->calibration_mode);
 1519              	 .loc 3 543 0 is_stmt 1
 1520 0046 7B68     	 ldr r3,[r7,#4]
 1521 0048 1B7A     	 ldrb r3,[r3,#8]
 1522 004a 1846     	 mov r0,r3
 1523 004c FFF7FEFF 	 bl XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 544:../Libraries/XMCLib/src/xmc4_scu.c **** 
 545:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockDivider((uint32_t)config->fsys_clkdiv);
 1524              	 .loc 3 545 0
 1525 0050 7B68     	 ldr r3,[r7,#4]
 1526 0052 1B7C     	 ldrb r3,[r3,#16]
 1527 0054 1846     	 mov r0,r3
 1528 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockDivider
 546:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 1529              	 .loc 3 546 0
 1530 005a 7B68     	 ldr r3,[r7,#4]
 1531 005c 5B7C     	 ldrb r3,[r3,#17]
 1532 005e 1846     	 mov r0,r3
 1533 0060 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCpuClockDivider
 547:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 1534              	 .loc 3 547 0
 1535 0064 7B68     	 ldr r3,[r7,#4]
 1536 0066 9B7C     	 ldrb r3,[r3,#18]
 1537 0068 1846     	 mov r0,r3
 1538 006a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCcuClockDivider
 548:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 1539              	 .loc 3 548 0
 1540 006e 7B68     	 ldr r3,[r7,#4]
 1541 0070 DB7C     	 ldrb r3,[r3,#19]
 1542 0072 1846     	 mov r0,r3
 1543 0074 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetPeripheralClockDivider
 549:../Libraries/XMCLib/src/xmc4_scu.c **** 
 550:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_oschp == true)
 1544              	 .loc 3 550 0
 1545 0078 7B68     	 ldr r3,[r7,#4]
 1546 007a 9B79     	 ldrb r3,[r3,#6]
 1547 007c 002B     	 cmp r3,#0
 1548 007e 0AD0     	 beq .L112
 551:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 552:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableHighPerformanceOscillator();
 1549              	 .loc 3 552 0
 1550 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 553:../Libraries/XMCLib/src/xmc4_scu.c ****     while(XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 1551              	 .loc 3 553 0
 1552 0084 00BF     	 nop
 1553              	.L113:
 1554              	 .loc 3 553 0 is_stmt 0 discriminator 1
 1555 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 1556 008a 0346     	 mov r3,r0
 1557 008c 83F00103 	 eor r3,r3,#1
 1558 0090 DBB2     	 uxtb r3,r3
 1559 0092 002B     	 cmp r3,#0
 1560 0094 F7D1     	 bne .L113
 1561              	.L112:
 554:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 555:../Libraries/XMCLib/src/xmc4_scu.c **** 
 556:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED)
 1562              	 .loc 3 556 0 is_stmt 1
 1563 0096 7B68     	 ldr r3,[r7,#4]
 1564 0098 DB78     	 ldrb r3,[r3,#3]
 1565 009a 002B     	 cmp r3,#0
 1566 009c 02D1     	 bne .L114
 557:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 558:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_DisableSystemPll();
 1567              	 .loc 3 558 0
 1568 009e FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableSystemPll
 1569 00a2 14E0     	 b .L115
 1570              	.L114:
 559:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 560:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 561:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 562:../Libraries/XMCLib/src/xmc4_scu.c **** 
 563:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableSystemPll();
 1571              	 .loc 3 563 0
 1572 00a4 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableSystemPll
 564:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1573              	 .loc 3 564 0
 1574 00a8 7B68     	 ldr r3,[r7,#4]
 1575 00aa 9988     	 ldrh r1,[r3,#4]
 1576 00ac 7B68     	 ldr r3,[r7,#4]
 1577 00ae DA78     	 ldrb r2,[r3,#3]
 565:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 566:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.p_div,
 1578              	 .loc 3 566 0
 1579 00b0 7B68     	 ldr r3,[r7,#4]
 1580 00b2 5B78     	 ldrb r3,[r3,#1]
 564:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1581              	 .loc 3 564 0
 1582 00b4 1D46     	 mov r5,r3
 567:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.n_div,
 1583              	 .loc 3 567 0
 1584 00b6 7B68     	 ldr r3,[r7,#4]
 1585 00b8 1B78     	 ldrb r3,[r3]
 564:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1586              	 .loc 3 564 0
 1587 00ba 1C46     	 mov r4,r3
 568:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.k_div);
 1588              	 .loc 3 568 0
 1589 00bc 7B68     	 ldr r3,[r7,#4]
 1590 00be 9B78     	 ldrb r3,[r3,#2]
 564:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 1591              	 .loc 3 564 0
 1592 00c0 0093     	 str r3,[sp]
 1593 00c2 0846     	 mov r0,r1
 1594 00c4 1146     	 mov r1,r2
 1595 00c6 2A46     	 mov r2,r5
 1596 00c8 2346     	 mov r3,r4
 1597 00ca FFF7FEFF 	 bl XMC_SCU_CLOCK_StartSystemPll
 1598              	.L115:
 569:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 570:../Libraries/XMCLib/src/xmc4_scu.c **** 
 571:../Libraries/XMCLib/src/xmc4_scu.c ****   /* use SYSPLL? */
 572:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL)
 1599              	 .loc 3 572 0
 1600 00ce 7B68     	 ldr r3,[r7,#4]
 1601 00d0 DB68     	 ldr r3,[r3,#12]
 1602 00d2 B3F5803F 	 cmp r3,#65536
 1603 00d6 03D1     	 bne .L116
 573:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 574:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_PLL);    
 1604              	 .loc 3 574 0
 1605 00d8 4FF48030 	 mov r0,#65536
 1606 00dc FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 1607              	.L116:
 575:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 576:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 1608              	 .loc 3 576 0
 1609 00e0 FFF7FEFF 	 bl SystemCoreClockUpdate
 577:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1610              	 .loc 3 577 0
 1611 00e4 0837     	 adds r7,r7,#8
 1612              	.LCFI142:
 1613              	 .cfi_def_cfa_offset 16
 1614 00e6 BD46     	 mov sp,r7
 1615              	.LCFI143:
 1616              	 .cfi_def_cfa_register 13
 1617              	 
 1618 00e8 B0BD     	 pop {r4,r5,r7,pc}
 1619              	 .cfi_endproc
 1620              	.LFE197:
 1622 00ea 00BF     	 .section .text.XMC_SCU_TRAP_Enable,"ax",%progbits
 1623              	 .align 2
 1624              	 .global XMC_SCU_TRAP_Enable
 1625              	 .thumb
 1626              	 .thumb_func
 1628              	XMC_SCU_TRAP_Enable:
 1629              	.LFB198:
 578:../Libraries/XMCLib/src/xmc4_scu.c **** 
 579:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a trap source */
 580:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Enable(const uint32_t trap)
 581:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1630              	 .loc 3 581 0
 1631              	 .cfi_startproc
 1632              	 
 1633              	 
 1634              	 
 1635 0000 80B4     	 push {r7}
 1636              	.LCFI144:
 1637              	 .cfi_def_cfa_offset 4
 1638              	 .cfi_offset 7,-4
 1639 0002 83B0     	 sub sp,sp,#12
 1640              	.LCFI145:
 1641              	 .cfi_def_cfa_offset 16
 1642 0004 00AF     	 add r7,sp,#0
 1643              	.LCFI146:
 1644              	 .cfi_def_cfa_register 7
 1645 0006 7860     	 str r0,[r7,#4]
 582:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS &= (uint32_t)~trap;
 1646              	 .loc 3 582 0
 1647 0008 0549     	 ldr r1,.L118
 1648 000a 054B     	 ldr r3,.L118
 1649 000c 9A68     	 ldr r2,[r3,#8]
 1650 000e 7B68     	 ldr r3,[r7,#4]
 1651 0010 DB43     	 mvns r3,r3
 1652 0012 1340     	 ands r3,r3,r2
 1653 0014 8B60     	 str r3,[r1,#8]
 583:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1654              	 .loc 3 583 0
 1655 0016 0C37     	 adds r7,r7,#12
 1656              	.LCFI147:
 1657              	 .cfi_def_cfa_offset 4
 1658 0018 BD46     	 mov sp,r7
 1659              	.LCFI148:
 1660              	 .cfi_def_cfa_register 13
 1661              	 
 1662 001a 5DF8047B 	 ldr r7,[sp],#4
 1663              	.LCFI149:
 1664              	 .cfi_restore 7
 1665              	 .cfi_def_cfa_offset 0
 1666 001e 7047     	 bx lr
 1667              	.L119:
 1668              	 .align 2
 1669              	.L118:
 1670 0020 60410050 	 .word 1342194016
 1671              	 .cfi_endproc
 1672              	.LFE198:
 1674              	 .section .text.XMC_SCU_TRAP_Disable,"ax",%progbits
 1675              	 .align 2
 1676              	 .global XMC_SCU_TRAP_Disable
 1677              	 .thumb
 1678              	 .thumb_func
 1680              	XMC_SCU_TRAP_Disable:
 1681              	.LFB199:
 584:../Libraries/XMCLib/src/xmc4_scu.c **** 
 585:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a trap source */
 586:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Disable(const uint32_t trap)
 587:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1682              	 .loc 3 587 0
 1683              	 .cfi_startproc
 1684              	 
 1685              	 
 1686              	 
 1687 0000 80B4     	 push {r7}
 1688              	.LCFI150:
 1689              	 .cfi_def_cfa_offset 4
 1690              	 .cfi_offset 7,-4
 1691 0002 83B0     	 sub sp,sp,#12
 1692              	.LCFI151:
 1693              	 .cfi_def_cfa_offset 16
 1694 0004 00AF     	 add r7,sp,#0
 1695              	.LCFI152:
 1696              	 .cfi_def_cfa_register 7
 1697 0006 7860     	 str r0,[r7,#4]
 588:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS |= (uint32_t)trap;
 1698              	 .loc 3 588 0
 1699 0008 0549     	 ldr r1,.L121
 1700 000a 054B     	 ldr r3,.L121
 1701 000c 9A68     	 ldr r2,[r3,#8]
 1702 000e 7B68     	 ldr r3,[r7,#4]
 1703 0010 1343     	 orrs r3,r3,r2
 1704 0012 8B60     	 str r3,[r1,#8]
 589:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1705              	 .loc 3 589 0
 1706 0014 0C37     	 adds r7,r7,#12
 1707              	.LCFI153:
 1708              	 .cfi_def_cfa_offset 4
 1709 0016 BD46     	 mov sp,r7
 1710              	.LCFI154:
 1711              	 .cfi_def_cfa_register 13
 1712              	 
 1713 0018 5DF8047B 	 ldr r7,[sp],#4
 1714              	.LCFI155:
 1715              	 .cfi_restore 7
 1716              	 .cfi_def_cfa_offset 0
 1717 001c 7047     	 bx lr
 1718              	.L122:
 1719 001e 00BF     	 .align 2
 1720              	.L121:
 1721 0020 60410050 	 .word 1342194016
 1722              	 .cfi_endproc
 1723              	.LFE199:
 1725              	 .section .text.XMC_SCU_TRAP_GetStatus,"ax",%progbits
 1726              	 .align 2
 1727              	 .global XMC_SCU_TRAP_GetStatus
 1728              	 .thumb
 1729              	 .thumb_func
 1731              	XMC_SCU_TRAP_GetStatus:
 1732              	.LFB200:
 590:../Libraries/XMCLib/src/xmc4_scu.c **** 
 591:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if a trap source has generated event */
 592:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_TRAP_GetStatus(void)
 593:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1733              	 .loc 3 593 0
 1734              	 .cfi_startproc
 1735              	 
 1736              	 
 1737              	 
 1738 0000 80B4     	 push {r7}
 1739              	.LCFI156:
 1740              	 .cfi_def_cfa_offset 4
 1741              	 .cfi_offset 7,-4
 1742 0002 00AF     	 add r7,sp,#0
 1743              	.LCFI157:
 1744              	 .cfi_def_cfa_register 7
 594:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_TRAP->TRAPRAW);
 1745              	 .loc 3 594 0
 1746 0004 034B     	 ldr r3,.L125
 1747 0006 5B68     	 ldr r3,[r3,#4]
 595:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1748              	 .loc 3 595 0
 1749 0008 1846     	 mov r0,r3
 1750 000a BD46     	 mov sp,r7
 1751              	.LCFI158:
 1752              	 .cfi_def_cfa_register 13
 1753              	 
 1754 000c 5DF8047B 	 ldr r7,[sp],#4
 1755              	.LCFI159:
 1756              	 .cfi_restore 7
 1757              	 .cfi_def_cfa_offset 0
 1758 0010 7047     	 bx lr
 1759              	.L126:
 1760 0012 00BF     	 .align 2
 1761              	.L125:
 1762 0014 60410050 	 .word 1342194016
 1763              	 .cfi_endproc
 1764              	.LFE200:
 1766              	 .section .text.XMC_SCU_TRAP_Trigger,"ax",%progbits
 1767              	 .align 2
 1768              	 .global XMC_SCU_TRAP_Trigger
 1769              	 .thumb
 1770              	 .thumb_func
 1772              	XMC_SCU_TRAP_Trigger:
 1773              	.LFB201:
 596:../Libraries/XMCLib/src/xmc4_scu.c **** 
 597:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually trigger a trap event */
 598:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Trigger(const uint32_t trap)
 599:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1774              	 .loc 3 599 0
 1775              	 .cfi_startproc
 1776              	 
 1777              	 
 1778              	 
 1779 0000 80B4     	 push {r7}
 1780              	.LCFI160:
 1781              	 .cfi_def_cfa_offset 4
 1782              	 .cfi_offset 7,-4
 1783 0002 83B0     	 sub sp,sp,#12
 1784              	.LCFI161:
 1785              	 .cfi_def_cfa_offset 16
 1786 0004 00AF     	 add r7,sp,#0
 1787              	.LCFI162:
 1788              	 .cfi_def_cfa_register 7
 1789 0006 7860     	 str r0,[r7,#4]
 600:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPSET = (uint32_t)trap;
 1790              	 .loc 3 600 0
 1791 0008 034A     	 ldr r2,.L128
 1792 000a 7B68     	 ldr r3,[r7,#4]
 1793 000c 1361     	 str r3,[r2,#16]
 601:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1794              	 .loc 3 601 0
 1795 000e 0C37     	 adds r7,r7,#12
 1796              	.LCFI163:
 1797              	 .cfi_def_cfa_offset 4
 1798 0010 BD46     	 mov sp,r7
 1799              	.LCFI164:
 1800              	 .cfi_def_cfa_register 13
 1801              	 
 1802 0012 5DF8047B 	 ldr r7,[sp],#4
 1803              	.LCFI165:
 1804              	 .cfi_restore 7
 1805              	 .cfi_def_cfa_offset 0
 1806 0016 7047     	 bx lr
 1807              	.L129:
 1808              	 .align 2
 1809              	.L128:
 1810 0018 60410050 	 .word 1342194016
 1811              	 .cfi_endproc
 1812              	.LFE201:
 1814              	 .section .text.XMC_SCU_TRAP_ClearStatus,"ax",%progbits
 1815              	 .align 2
 1816              	 .global XMC_SCU_TRAP_ClearStatus
 1817              	 .thumb
 1818              	 .thumb_func
 1820              	XMC_SCU_TRAP_ClearStatus:
 1821              	.LFB202:
 602:../Libraries/XMCLib/src/xmc4_scu.c **** 
 603:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear a trap event */
 604:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap)
 605:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1822              	 .loc 3 605 0
 1823              	 .cfi_startproc
 1824              	 
 1825              	 
 1826              	 
 1827 0000 80B4     	 push {r7}
 1828              	.LCFI166:
 1829              	 .cfi_def_cfa_offset 4
 1830              	 .cfi_offset 7,-4
 1831 0002 83B0     	 sub sp,sp,#12
 1832              	.LCFI167:
 1833              	 .cfi_def_cfa_offset 16
 1834 0004 00AF     	 add r7,sp,#0
 1835              	.LCFI168:
 1836              	 .cfi_def_cfa_register 7
 1837 0006 7860     	 str r0,[r7,#4]
 606:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = (uint32_t)trap;
 1838              	 .loc 3 606 0
 1839 0008 034A     	 ldr r2,.L131
 1840 000a 7B68     	 ldr r3,[r7,#4]
 1841 000c D360     	 str r3,[r2,#12]
 607:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1842              	 .loc 3 607 0
 1843 000e 0C37     	 adds r7,r7,#12
 1844              	.LCFI169:
 1845              	 .cfi_def_cfa_offset 4
 1846 0010 BD46     	 mov sp,r7
 1847              	.LCFI170:
 1848              	 .cfi_def_cfa_register 13
 1849              	 
 1850 0012 5DF8047B 	 ldr r7,[sp],#4
 1851              	.LCFI171:
 1852              	 .cfi_restore 7
 1853              	 .cfi_def_cfa_offset 0
 1854 0016 7047     	 bx lr
 1855              	.L132:
 1856              	 .align 2
 1857              	.L131:
 1858 0018 60410050 	 .word 1342194016
 1859              	 .cfi_endproc
 1860              	.LFE202:
 1862              	 .section .text.XMC_SCU_PARITY_ClearStatus,"ax",%progbits
 1863              	 .align 2
 1864              	 .global XMC_SCU_PARITY_ClearStatus
 1865              	 .thumb
 1866              	 .thumb_func
 1868              	XMC_SCU_PARITY_ClearStatus:
 1869              	.LFB203:
 608:../Libraries/XMCLib/src/xmc4_scu.c **** 
 609:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear parity error event */
 610:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory)
 611:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1870              	 .loc 3 611 0
 1871              	 .cfi_startproc
 1872              	 
 1873              	 
 1874              	 
 1875 0000 80B4     	 push {r7}
 1876              	.LCFI172:
 1877              	 .cfi_def_cfa_offset 4
 1878              	 .cfi_offset 7,-4
 1879 0002 83B0     	 sub sp,sp,#12
 1880              	.LCFI173:
 1881              	 .cfi_def_cfa_offset 16
 1882 0004 00AF     	 add r7,sp,#0
 1883              	.LCFI174:
 1884              	 .cfi_def_cfa_register 7
 1885 0006 7860     	 str r0,[r7,#4]
 612:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEFLAG |= (uint32_t)memory; 
 1886              	 .loc 3 612 0
 1887 0008 0549     	 ldr r1,.L134
 1888 000a 054B     	 ldr r3,.L134
 1889 000c 5A69     	 ldr r2,[r3,#20]
 1890 000e 7B68     	 ldr r3,[r7,#4]
 1891 0010 1343     	 orrs r3,r3,r2
 1892 0012 4B61     	 str r3,[r1,#20]
 613:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1893              	 .loc 3 613 0
 1894 0014 0C37     	 adds r7,r7,#12
 1895              	.LCFI175:
 1896              	 .cfi_def_cfa_offset 4
 1897 0016 BD46     	 mov sp,r7
 1898              	.LCFI176:
 1899              	 .cfi_def_cfa_register 13
 1900              	 
 1901 0018 5DF8047B 	 ldr r7,[sp],#4
 1902              	.LCFI177:
 1903              	 .cfi_restore 7
 1904              	 .cfi_def_cfa_offset 0
 1905 001c 7047     	 bx lr
 1906              	.L135:
 1907 001e 00BF     	 .align 2
 1908              	.L134:
 1909 0020 3C410050 	 .word 1342193980
 1910              	 .cfi_endproc
 1911              	.LFE203:
 1913              	 .section .text.XMC_SCU_PARITY_GetStatus,"ax",%progbits
 1914              	 .align 2
 1915              	 .global XMC_SCU_PARITY_GetStatus
 1916              	 .thumb
 1917              	 .thumb_func
 1919              	XMC_SCU_PARITY_GetStatus:
 1920              	.LFB204:
 614:../Libraries/XMCLib/src/xmc4_scu.c **** 
 615:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if the specified parity error has occured or not */
 616:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_PARITY_GetStatus(void)
 617:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1921              	 .loc 3 617 0
 1922              	 .cfi_startproc
 1923              	 
 1924              	 
 1925              	 
 1926 0000 80B4     	 push {r7}
 1927              	.LCFI178:
 1928              	 .cfi_def_cfa_offset 4
 1929              	 .cfi_offset 7,-4
 1930 0002 00AF     	 add r7,sp,#0
 1931              	.LCFI179:
 1932              	 .cfi_def_cfa_register 7
 618:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_PARITY->PEFLAG);
 1933              	 .loc 3 618 0
 1934 0004 034B     	 ldr r3,.L138
 1935 0006 5B69     	 ldr r3,[r3,#20]
 619:../Libraries/XMCLib/src/xmc4_scu.c **** } 
 1936              	 .loc 3 619 0
 1937 0008 1846     	 mov r0,r3
 1938 000a BD46     	 mov sp,r7
 1939              	.LCFI180:
 1940              	 .cfi_def_cfa_register 13
 1941              	 
 1942 000c 5DF8047B 	 ldr r7,[sp],#4
 1943              	.LCFI181:
 1944              	 .cfi_restore 7
 1945              	 .cfi_def_cfa_offset 0
 1946 0010 7047     	 bx lr
 1947              	.L139:
 1948 0012 00BF     	 .align 2
 1949              	.L138:
 1950 0014 3C410050 	 .word 1342193980
 1951              	 .cfi_endproc
 1952              	.LFE204:
 1954              	 .section .text.XMC_SCU_PARITY_Enable,"ax",%progbits
 1955              	 .align 2
 1956              	 .global XMC_SCU_PARITY_Enable
 1957              	 .thumb
 1958              	 .thumb_func
 1960              	XMC_SCU_PARITY_Enable:
 1961              	.LFB205:
 620:../Libraries/XMCLib/src/xmc4_scu.c **** 
 621:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable parity error checking for the selected on-chip RAM type */
 622:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Enable(const uint32_t memory)
 623:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1962              	 .loc 3 623 0
 1963              	 .cfi_startproc
 1964              	 
 1965              	 
 1966              	 
 1967 0000 80B4     	 push {r7}
 1968              	.LCFI182:
 1969              	 .cfi_def_cfa_offset 4
 1970              	 .cfi_offset 7,-4
 1971 0002 83B0     	 sub sp,sp,#12
 1972              	.LCFI183:
 1973              	 .cfi_def_cfa_offset 16
 1974 0004 00AF     	 add r7,sp,#0
 1975              	.LCFI184:
 1976              	 .cfi_def_cfa_register 7
 1977 0006 7860     	 str r0,[r7,#4]
 624:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN |= (uint32_t)memory; 
 1978              	 .loc 3 624 0
 1979 0008 0549     	 ldr r1,.L141
 1980 000a 054B     	 ldr r3,.L141
 1981 000c 1A68     	 ldr r2,[r3]
 1982 000e 7B68     	 ldr r3,[r7,#4]
 1983 0010 1343     	 orrs r3,r3,r2
 1984 0012 0B60     	 str r3,[r1]
 625:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1985              	 .loc 3 625 0
 1986 0014 0C37     	 adds r7,r7,#12
 1987              	.LCFI185:
 1988              	 .cfi_def_cfa_offset 4
 1989 0016 BD46     	 mov sp,r7
 1990              	.LCFI186:
 1991              	 .cfi_def_cfa_register 13
 1992              	 
 1993 0018 5DF8047B 	 ldr r7,[sp],#4
 1994              	.LCFI187:
 1995              	 .cfi_restore 7
 1996              	 .cfi_def_cfa_offset 0
 1997 001c 7047     	 bx lr
 1998              	.L142:
 1999 001e 00BF     	 .align 2
 2000              	.L141:
 2001 0020 3C410050 	 .word 1342193980
 2002              	 .cfi_endproc
 2003              	.LFE205:
 2005              	 .section .text.XMC_SCU_PARITY_Disable,"ax",%progbits
 2006              	 .align 2
 2007              	 .global XMC_SCU_PARITY_Disable
 2008              	 .thumb
 2009              	 .thumb_func
 2011              	XMC_SCU_PARITY_Disable:
 2012              	.LFB206:
 626:../Libraries/XMCLib/src/xmc4_scu.c **** 
 627:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable parity error checking for the selected on-chip RAM type */
 628:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Disable(const uint32_t memory)
 629:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2013              	 .loc 3 629 0
 2014              	 .cfi_startproc
 2015              	 
 2016              	 
 2017              	 
 2018 0000 80B4     	 push {r7}
 2019              	.LCFI188:
 2020              	 .cfi_def_cfa_offset 4
 2021              	 .cfi_offset 7,-4
 2022 0002 83B0     	 sub sp,sp,#12
 2023              	.LCFI189:
 2024              	 .cfi_def_cfa_offset 16
 2025 0004 00AF     	 add r7,sp,#0
 2026              	.LCFI190:
 2027              	 .cfi_def_cfa_register 7
 2028 0006 7860     	 str r0,[r7,#4]
 630:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN &= (uint32_t)~memory; 
 2029              	 .loc 3 630 0
 2030 0008 0549     	 ldr r1,.L144
 2031 000a 054B     	 ldr r3,.L144
 2032 000c 1A68     	 ldr r2,[r3]
 2033 000e 7B68     	 ldr r3,[r7,#4]
 2034 0010 DB43     	 mvns r3,r3
 2035 0012 1340     	 ands r3,r3,r2
 2036 0014 0B60     	 str r3,[r1]
 631:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2037              	 .loc 3 631 0
 2038 0016 0C37     	 adds r7,r7,#12
 2039              	.LCFI191:
 2040              	 .cfi_def_cfa_offset 4
 2041 0018 BD46     	 mov sp,r7
 2042              	.LCFI192:
 2043              	 .cfi_def_cfa_register 13
 2044              	 
 2045 001a 5DF8047B 	 ldr r7,[sp],#4
 2046              	.LCFI193:
 2047              	 .cfi_restore 7
 2048              	 .cfi_def_cfa_offset 0
 2049 001e 7047     	 bx lr
 2050              	.L145:
 2051              	 .align 2
 2052              	.L144:
 2053 0020 3C410050 	 .word 1342193980
 2054              	 .cfi_endproc
 2055              	.LFE206:
 2057              	 .section .text.XMC_SCU_PARITY_EnableTrapGeneration,"ax",%progbits
 2058              	 .align 2
 2059              	 .global XMC_SCU_PARITY_EnableTrapGeneration
 2060              	 .thumb
 2061              	 .thumb_func
 2063              	XMC_SCU_PARITY_EnableTrapGeneration:
 2064              	.LFB207:
 632:../Libraries/XMCLib/src/xmc4_scu.c **** 
 633:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable trap assertion for the parity error source */
 634:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory)
 635:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2065              	 .loc 3 635 0
 2066              	 .cfi_startproc
 2067              	 
 2068              	 
 2069              	 
 2070 0000 80B4     	 push {r7}
 2071              	.LCFI194:
 2072              	 .cfi_def_cfa_offset 4
 2073              	 .cfi_offset 7,-4
 2074 0002 83B0     	 sub sp,sp,#12
 2075              	.LCFI195:
 2076              	 .cfi_def_cfa_offset 16
 2077 0004 00AF     	 add r7,sp,#0
 2078              	.LCFI196:
 2079              	 .cfi_def_cfa_register 7
 2080 0006 7860     	 str r0,[r7,#4]
 636:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE |= (uint32_t)memory; 
 2081              	 .loc 3 636 0
 2082 0008 0549     	 ldr r1,.L147
 2083 000a 054B     	 ldr r3,.L147
 2084 000c 9A68     	 ldr r2,[r3,#8]
 2085 000e 7B68     	 ldr r3,[r7,#4]
 2086 0010 1343     	 orrs r3,r3,r2
 2087 0012 8B60     	 str r3,[r1,#8]
 637:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2088              	 .loc 3 637 0
 2089 0014 0C37     	 adds r7,r7,#12
 2090              	.LCFI197:
 2091              	 .cfi_def_cfa_offset 4
 2092 0016 BD46     	 mov sp,r7
 2093              	.LCFI198:
 2094              	 .cfi_def_cfa_register 13
 2095              	 
 2096 0018 5DF8047B 	 ldr r7,[sp],#4
 2097              	.LCFI199:
 2098              	 .cfi_restore 7
 2099              	 .cfi_def_cfa_offset 0
 2100 001c 7047     	 bx lr
 2101              	.L148:
 2102 001e 00BF     	 .align 2
 2103              	.L147:
 2104 0020 3C410050 	 .word 1342193980
 2105              	 .cfi_endproc
 2106              	.LFE207:
 2108              	 .section .text.XMC_SCU_PARITY_DisableTrapGeneration,"ax",%progbits
 2109              	 .align 2
 2110              	 .global XMC_SCU_PARITY_DisableTrapGeneration
 2111              	 .thumb
 2112              	 .thumb_func
 2114              	XMC_SCU_PARITY_DisableTrapGeneration:
 2115              	.LFB208:
 638:../Libraries/XMCLib/src/xmc4_scu.c **** 
 639:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the assertion of trap for the parity error source */
 640:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory)
 641:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2116              	 .loc 3 641 0
 2117              	 .cfi_startproc
 2118              	 
 2119              	 
 2120              	 
 2121 0000 80B4     	 push {r7}
 2122              	.LCFI200:
 2123              	 .cfi_def_cfa_offset 4
 2124              	 .cfi_offset 7,-4
 2125 0002 83B0     	 sub sp,sp,#12
 2126              	.LCFI201:
 2127              	 .cfi_def_cfa_offset 16
 2128 0004 00AF     	 add r7,sp,#0
 2129              	.LCFI202:
 2130              	 .cfi_def_cfa_register 7
 2131 0006 7860     	 str r0,[r7,#4]
 642:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE &= (uint32_t)~memory; 
 2132              	 .loc 3 642 0
 2133 0008 0549     	 ldr r1,.L150
 2134 000a 054B     	 ldr r3,.L150
 2135 000c 9A68     	 ldr r2,[r3,#8]
 2136 000e 7B68     	 ldr r3,[r7,#4]
 2137 0010 DB43     	 mvns r3,r3
 2138 0012 1340     	 ands r3,r3,r2
 2139 0014 8B60     	 str r3,[r1,#8]
 643:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2140              	 .loc 3 643 0
 2141 0016 0C37     	 adds r7,r7,#12
 2142              	.LCFI203:
 2143              	 .cfi_def_cfa_offset 4
 2144 0018 BD46     	 mov sp,r7
 2145              	.LCFI204:
 2146              	 .cfi_def_cfa_register 13
 2147              	 
 2148 001a 5DF8047B 	 ldr r7,[sp],#4
 2149              	.LCFI205:
 2150              	 .cfi_restore 7
 2151              	 .cfi_def_cfa_offset 0
 2152 001e 7047     	 bx lr
 2153              	.L151:
 2154              	 .align 2
 2155              	.L150:
 2156 0020 3C410050 	 .word 1342193980
 2157              	 .cfi_endproc
 2158              	.LFE208:
 2160              	 .section .text.XMC_SCU_INTERRUPT_EnableNmiRequest,"ax",%progbits
 2161              	 .align 2
 2162              	 .global XMC_SCU_INTERRUPT_EnableNmiRequest
 2163              	 .thumb
 2164              	 .thumb_func
 2166              	XMC_SCU_INTERRUPT_EnableNmiRequest:
 2167              	.LFB209:
 644:../Libraries/XMCLib/src/xmc4_scu.c **** 
 645:../Libraries/XMCLib/src/xmc4_scu.c **** /* Enables a NMI source */
 646:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request)
 647:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2168              	 .loc 3 647 0
 2169              	 .cfi_startproc
 2170              	 
 2171              	 
 2172              	 
 2173 0000 80B4     	 push {r7}
 2174              	.LCFI206:
 2175              	 .cfi_def_cfa_offset 4
 2176              	 .cfi_offset 7,-4
 2177 0002 83B0     	 sub sp,sp,#12
 2178              	.LCFI207:
 2179              	 .cfi_def_cfa_offset 16
 2180 0004 00AF     	 add r7,sp,#0
 2181              	.LCFI208:
 2182              	 .cfi_def_cfa_register 7
 2183 0006 7860     	 str r0,[r7,#4]
 648:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN |= (uint32_t)request;
 2184              	 .loc 3 648 0
 2185 0008 0549     	 ldr r1,.L153
 2186 000a 054B     	 ldr r3,.L153
 2187 000c 5A69     	 ldr r2,[r3,#20]
 2188 000e 7B68     	 ldr r3,[r7,#4]
 2189 0010 1343     	 orrs r3,r3,r2
 2190 0012 4B61     	 str r3,[r1,#20]
 649:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2191              	 .loc 3 649 0
 2192 0014 0C37     	 adds r7,r7,#12
 2193              	.LCFI209:
 2194              	 .cfi_def_cfa_offset 4
 2195 0016 BD46     	 mov sp,r7
 2196              	.LCFI210:
 2197              	 .cfi_def_cfa_register 13
 2198              	 
 2199 0018 5DF8047B 	 ldr r7,[sp],#4
 2200              	.LCFI211:
 2201              	 .cfi_restore 7
 2202              	 .cfi_def_cfa_offset 0
 2203 001c 7047     	 bx lr
 2204              	.L154:
 2205 001e 00BF     	 .align 2
 2206              	.L153:
 2207 0020 74400050 	 .word 1342193780
 2208              	 .cfi_endproc
 2209              	.LFE209:
 2211              	 .section .text.XMC_SCU_INTERRUPT_DisableNmiRequest,"ax",%progbits
 2212              	 .align 2
 2213              	 .global XMC_SCU_INTERRUPT_DisableNmiRequest
 2214              	 .thumb
 2215              	 .thumb_func
 2217              	XMC_SCU_INTERRUPT_DisableNmiRequest:
 2218              	.LFB210:
 650:../Libraries/XMCLib/src/xmc4_scu.c **** 
 651:../Libraries/XMCLib/src/xmc4_scu.c **** /* Disables a NMI source */
 652:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request)
 653:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2219              	 .loc 3 653 0
 2220              	 .cfi_startproc
 2221              	 
 2222              	 
 2223              	 
 2224 0000 80B4     	 push {r7}
 2225              	.LCFI212:
 2226              	 .cfi_def_cfa_offset 4
 2227              	 .cfi_offset 7,-4
 2228 0002 83B0     	 sub sp,sp,#12
 2229              	.LCFI213:
 2230              	 .cfi_def_cfa_offset 16
 2231 0004 00AF     	 add r7,sp,#0
 2232              	.LCFI214:
 2233              	 .cfi_def_cfa_register 7
 2234 0006 7860     	 str r0,[r7,#4]
 654:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN &= (uint32_t)~request;
 2235              	 .loc 3 654 0
 2236 0008 0549     	 ldr r1,.L156
 2237 000a 054B     	 ldr r3,.L156
 2238 000c 5A69     	 ldr r2,[r3,#20]
 2239 000e 7B68     	 ldr r3,[r7,#4]
 2240 0010 DB43     	 mvns r3,r3
 2241 0012 1340     	 ands r3,r3,r2
 2242 0014 4B61     	 str r3,[r1,#20]
 655:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2243              	 .loc 3 655 0
 2244 0016 0C37     	 adds r7,r7,#12
 2245              	.LCFI215:
 2246              	 .cfi_def_cfa_offset 4
 2247 0018 BD46     	 mov sp,r7
 2248              	.LCFI216:
 2249              	 .cfi_def_cfa_register 13
 2250              	 
 2251 001a 5DF8047B 	 ldr r7,[sp],#4
 2252              	.LCFI217:
 2253              	 .cfi_restore 7
 2254              	 .cfi_def_cfa_offset 0
 2255 001e 7047     	 bx lr
 2256              	.L157:
 2257              	 .align 2
 2258              	.L156:
 2259 0020 74400050 	 .word 1342193780
 2260              	 .cfi_endproc
 2261              	.LFE210:
 2263              	 .section .text.XMC_SCU_RESET_AssertPeripheralReset,"ax",%progbits
 2264              	 .align 2
 2265              	 .global XMC_SCU_RESET_AssertPeripheralReset
 2266              	 .thumb
 2267              	 .thumb_func
 2269              	XMC_SCU_RESET_AssertPeripheralReset:
 2270              	.LFB211:
 656:../Libraries/XMCLib/src/xmc4_scu.c **** 
 657:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually assert a reset request */
 658:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 659:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2271              	 .loc 3 659 0
 2272              	 .cfi_startproc
 2273              	 
 2274              	 
 2275              	 
 2276 0000 80B4     	 push {r7}
 2277              	.LCFI218:
 2278              	 .cfi_def_cfa_offset 4
 2279              	 .cfi_offset 7,-4
 2280 0002 85B0     	 sub sp,sp,#20
 2281              	.LCFI219:
 2282              	 .cfi_def_cfa_offset 24
 2283 0004 00AF     	 add r7,sp,#0
 2284              	.LCFI220:
 2285              	 .cfi_def_cfa_register 7
 2286 0006 7860     	 str r0,[r7,#4]
 660:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2287              	 .loc 3 660 0
 2288 0008 7B68     	 ldr r3,[r7,#4]
 2289 000a 1B0F     	 lsrs r3,r3,#28
 2290 000c FB60     	 str r3,[r7,#12]
 661:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2291              	 .loc 3 661 0
 2292 000e 7B68     	 ldr r3,[r7,#4]
 2293 0010 23F07043 	 bic r3,r3,#-268435456
 2294 0014 BB60     	 str r3,[r7,#8]
 662:../Libraries/XMCLib/src/xmc4_scu.c **** 
 663:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRSET0) + (index * 3U)) = (uint32_t)mask;
 2295              	 .loc 3 663 0
 2296 0016 FA68     	 ldr r2,[r7,#12]
 2297 0018 1346     	 mov r3,r2
 2298 001a 5B00     	 lsls r3,r3,#1
 2299 001c 1344     	 add r3,r3,r2
 2300 001e 9B00     	 lsls r3,r3,#2
 2301 0020 1A46     	 mov r2,r3
 2302 0022 044B     	 ldr r3,.L159
 2303 0024 1344     	 add r3,r3,r2
 2304 0026 BA68     	 ldr r2,[r7,#8]
 2305 0028 1A60     	 str r2,[r3]
 664:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2306              	 .loc 3 664 0
 2307 002a 1437     	 adds r7,r7,#20
 2308              	.LCFI221:
 2309              	 .cfi_def_cfa_offset 4
 2310 002c BD46     	 mov sp,r7
 2311              	.LCFI222:
 2312              	 .cfi_def_cfa_register 13
 2313              	 
 2314 002e 5DF8047B 	 ldr r7,[sp],#4
 2315              	.LCFI223:
 2316              	 .cfi_restore 7
 2317              	 .cfi_def_cfa_offset 0
 2318 0032 7047     	 bx lr
 2319              	.L160:
 2320              	 .align 2
 2321              	.L159:
 2322 0034 10440050 	 .word 1342194704
 2323              	 .cfi_endproc
 2324              	.LFE211:
 2326              	 .section .text.XMC_SCU_RESET_DeassertPeripheralReset,"ax",%progbits
 2327              	 .align 2
 2328              	 .global XMC_SCU_RESET_DeassertPeripheralReset
 2329              	 .thumb
 2330              	 .thumb_func
 2332              	XMC_SCU_RESET_DeassertPeripheralReset:
 2333              	.LFB212:
 665:../Libraries/XMCLib/src/xmc4_scu.c **** 
 666:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually de-assert a reset request */
 667:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 668:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2334              	 .loc 3 668 0
 2335              	 .cfi_startproc
 2336              	 
 2337              	 
 2338              	 
 2339 0000 80B4     	 push {r7}
 2340              	.LCFI224:
 2341              	 .cfi_def_cfa_offset 4
 2342              	 .cfi_offset 7,-4
 2343 0002 85B0     	 sub sp,sp,#20
 2344              	.LCFI225:
 2345              	 .cfi_def_cfa_offset 24
 2346 0004 00AF     	 add r7,sp,#0
 2347              	.LCFI226:
 2348              	 .cfi_def_cfa_register 7
 2349 0006 7860     	 str r0,[r7,#4]
 669:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2350              	 .loc 3 669 0
 2351 0008 7B68     	 ldr r3,[r7,#4]
 2352 000a 1B0F     	 lsrs r3,r3,#28
 2353 000c FB60     	 str r3,[r7,#12]
 670:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2354              	 .loc 3 670 0
 2355 000e 7B68     	 ldr r3,[r7,#4]
 2356 0010 23F07043 	 bic r3,r3,#-268435456
 2357 0014 BB60     	 str r3,[r7,#8]
 671:../Libraries/XMCLib/src/xmc4_scu.c **** 
 672:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRCLR0) + (index * 3U)) = (uint32_t)mask;
 2358              	 .loc 3 672 0
 2359 0016 FA68     	 ldr r2,[r7,#12]
 2360 0018 1346     	 mov r3,r2
 2361 001a 5B00     	 lsls r3,r3,#1
 2362 001c 1344     	 add r3,r3,r2
 2363 001e 9B00     	 lsls r3,r3,#2
 2364 0020 1A46     	 mov r2,r3
 2365 0022 044B     	 ldr r3,.L162
 2366 0024 1344     	 add r3,r3,r2
 2367 0026 BA68     	 ldr r2,[r7,#8]
 2368 0028 1A60     	 str r2,[r3]
 673:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2369              	 .loc 3 673 0
 2370 002a 1437     	 adds r7,r7,#20
 2371              	.LCFI227:
 2372              	 .cfi_def_cfa_offset 4
 2373 002c BD46     	 mov sp,r7
 2374              	.LCFI228:
 2375              	 .cfi_def_cfa_register 13
 2376              	 
 2377 002e 5DF8047B 	 ldr r7,[sp],#4
 2378              	.LCFI229:
 2379              	 .cfi_restore 7
 2380              	 .cfi_def_cfa_offset 0
 2381 0032 7047     	 bx lr
 2382              	.L163:
 2383              	 .align 2
 2384              	.L162:
 2385 0034 14440050 	 .word 1342194708
 2386              	 .cfi_endproc
 2387              	.LFE212:
 2389              	 .section .text.XMC_SCU_RESET_IsPeripheralResetAsserted,"ax",%progbits
 2390              	 .align 2
 2391              	 .global XMC_SCU_RESET_IsPeripheralResetAsserted
 2392              	 .thumb
 2393              	 .thumb_func
 2395              	XMC_SCU_RESET_IsPeripheralResetAsserted:
 2396              	.LFB213:
 674:../Libraries/XMCLib/src/xmc4_scu.c **** 
 675:../Libraries/XMCLib/src/xmc4_scu.c **** /* Find out if the peripheral reset is asserted */
 676:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 677:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2397              	 .loc 3 677 0
 2398              	 .cfi_startproc
 2399              	 
 2400              	 
 2401              	 
 2402 0000 80B4     	 push {r7}
 2403              	.LCFI230:
 2404              	 .cfi_def_cfa_offset 4
 2405              	 .cfi_offset 7,-4
 2406 0002 85B0     	 sub sp,sp,#20
 2407              	.LCFI231:
 2408              	 .cfi_def_cfa_offset 24
 2409 0004 00AF     	 add r7,sp,#0
 2410              	.LCFI232:
 2411              	 .cfi_def_cfa_register 7
 2412 0006 7860     	 str r0,[r7,#4]
 678:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2413              	 .loc 3 678 0
 2414 0008 7B68     	 ldr r3,[r7,#4]
 2415 000a 1B0F     	 lsrs r3,r3,#28
 2416 000c FB60     	 str r3,[r7,#12]
 679:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2417              	 .loc 3 679 0
 2418 000e 7B68     	 ldr r3,[r7,#4]
 2419 0010 23F07043 	 bic r3,r3,#-268435456
 2420 0014 BB60     	 str r3,[r7,#8]
 680:../Libraries/XMCLib/src/xmc4_scu.c **** 
 681:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_RESET->PRSTAT0) + (index * 3U)) & mask) != 0U);
 2421              	 .loc 3 681 0
 2422 0016 FA68     	 ldr r2,[r7,#12]
 2423 0018 1346     	 mov r3,r2
 2424 001a 5B00     	 lsls r3,r3,#1
 2425 001c 1344     	 add r3,r3,r2
 2426 001e 9B00     	 lsls r3,r3,#2
 2427 0020 1A46     	 mov r2,r3
 2428 0022 084B     	 ldr r3,.L166
 2429 0024 1344     	 add r3,r3,r2
 2430 0026 1A68     	 ldr r2,[r3]
 2431 0028 BB68     	 ldr r3,[r7,#8]
 2432 002a 1340     	 ands r3,r3,r2
 2433 002c 002B     	 cmp r3,#0
 2434 002e 14BF     	 ite ne
 2435 0030 0123     	 movne r3,#1
 2436 0032 0023     	 moveq r3,#0
 2437 0034 DBB2     	 uxtb r3,r3
 682:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2438              	 .loc 3 682 0
 2439 0036 1846     	 mov r0,r3
 2440 0038 1437     	 adds r7,r7,#20
 2441              	.LCFI233:
 2442              	 .cfi_def_cfa_offset 4
 2443 003a BD46     	 mov sp,r7
 2444              	.LCFI234:
 2445              	 .cfi_def_cfa_register 13
 2446              	 
 2447 003c 5DF8047B 	 ldr r7,[sp],#4
 2448              	.LCFI235:
 2449              	 .cfi_restore 7
 2450              	 .cfi_def_cfa_offset 0
 2451 0040 7047     	 bx lr
 2452              	.L167:
 2453 0042 00BF     	 .align 2
 2454              	.L166:
 2455 0044 0C440050 	 .word 1342194700
 2456              	 .cfi_endproc
 2457              	.LFE213:
 2459              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency,"ax",%progbits
 2460              	 .align 2
 2461              	 .global XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2462              	 .thumb
 2463              	 .thumb_func
 2465              	XMC_SCU_CLOCK_GetSystemPllClockFrequency:
 2466              	.LFB214:
 683:../Libraries/XMCLib/src/xmc4_scu.c **** 
 684:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 685:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL output clock
 686:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 687:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void)
 688:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2467              	 .loc 3 688 0
 2468              	 .cfi_startproc
 2469              	 
 2470              	 
 2471 0000 80B5     	 push {r7,lr}
 2472              	.LCFI236:
 2473              	 .cfi_def_cfa_offset 8
 2474              	 .cfi_offset 7,-8
 2475              	 .cfi_offset 14,-4
 2476 0002 84B0     	 sub sp,sp,#16
 2477              	.LCFI237:
 2478              	 .cfi_def_cfa_offset 24
 2479 0004 00AF     	 add r7,sp,#0
 2480              	.LCFI238:
 2481              	 .cfi_def_cfa_register 7
 689:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 690:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 691:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 692:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t k2_div;
 693:../Libraries/XMCLib/src/xmc4_scu.c **** 
 694:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency();
 2482              	 .loc 3 694 0
 2483 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2484 000a F860     	 str r0,[r7,#12]
 695:../Libraries/XMCLib/src/xmc4_scu.c ****   if(SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 2485              	 .loc 3 695 0
 2486 000c 1A4B     	 ldr r3,.L172
 2487 000e 1B68     	 ldr r3,[r3]
 2488 0010 03F00103 	 and r3,r3,#1
 2489 0014 002B     	 cmp r3,#0
 2490 0016 09D0     	 beq .L169
 696:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 697:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Prescalar mode - fOSC is the parent*/
 698:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)(clock_frequency / 
 699:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2491              	 .loc 3 699 0
 2492 0018 174B     	 ldr r3,.L172
 2493 001a 9B68     	 ldr r3,[r3,#8]
 2494 001c 03F07F03 	 and r3,r3,#127
 2495 0020 0133     	 adds r3,r3,#1
 698:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2496              	 .loc 3 698 0
 2497 0022 FA68     	 ldr r2,[r7,#12]
 2498 0024 B2FBF3F3 	 udiv r3,r2,r3
 2499 0028 FB60     	 str r3,[r7,#12]
 2500 002a 1FE0     	 b .L170
 2501              	.L169:
 700:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 701:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 702:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 703:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Po
 2502              	 .loc 3 703 0
 2503 002c 124B     	 ldr r3,.L172
 2504 002e 9B68     	 ldr r3,[r3,#8]
 2505 0030 03F07063 	 and r3,r3,#251658240
 2506 0034 1B0E     	 lsrs r3,r3,#24
 2507 0036 0133     	 adds r3,r3,#1
 2508 0038 BB60     	 str r3,[r7,#8]
 704:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 2509              	 .loc 3 704 0
 2510 003a 0F4B     	 ldr r3,.L172
 2511 003c 9B68     	 ldr r3,[r3,#8]
 2512 003e 03F4FE43 	 and r3,r3,#32512
 2513 0042 1B0A     	 lsrs r3,r3,#8
 2514 0044 0133     	 adds r3,r3,#1
 2515 0046 7B60     	 str r3,[r7,#4]
 705:../Libraries/XMCLib/src/xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 2516              	 .loc 3 705 0
 2517 0048 0B4B     	 ldr r3,.L172
 2518 004a 9B68     	 ldr r3,[r3,#8]
 2519 004c 03F4FE03 	 and r3,r3,#8323072
 2520 0050 1B0C     	 lsrs r3,r3,#16
 2521 0052 0133     	 adds r3,r3,#1
 2522 0054 3B60     	 str r3,[r7]
 706:../Libraries/XMCLib/src/xmc4_scu.c ****        
 707:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (clock_frequency * n_div) / (p_div * k2_div);
 2523              	 .loc 3 707 0
 2524 0056 FB68     	 ldr r3,[r7,#12]
 2525 0058 7A68     	 ldr r2,[r7,#4]
 2526 005a 02FB03F2 	 mul r2,r2,r3
 2527 005e BB68     	 ldr r3,[r7,#8]
 2528 0060 3968     	 ldr r1,[r7]
 2529 0062 01FB03F3 	 mul r3,r1,r3
 2530 0066 B2FBF3F3 	 udiv r3,r2,r3
 2531 006a FB60     	 str r3,[r7,#12]
 2532              	.L170:
 708:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 709:../Libraries/XMCLib/src/xmc4_scu.c **** 
 710:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2533              	 .loc 3 710 0
 2534 006c FB68     	 ldr r3,[r7,#12]
 711:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2535              	 .loc 3 711 0
 2536 006e 1846     	 mov r0,r3
 2537 0070 1037     	 adds r7,r7,#16
 2538              	.LCFI239:
 2539              	 .cfi_def_cfa_offset 8
 2540 0072 BD46     	 mov sp,r7
 2541              	.LCFI240:
 2542              	 .cfi_def_cfa_register 13
 2543              	 
 2544 0074 80BD     	 pop {r7,pc}
 2545              	.L173:
 2546 0076 00BF     	 .align 2
 2547              	.L172:
 2548 0078 10470050 	 .word 1342195472
 2549              	 .cfi_endproc
 2550              	.LFE214:
 2552              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency,"ax",%progbits
 2553              	 .align 2
 2554              	 .global XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2555              	 .thumb
 2556              	 .thumb_func
 2558              	XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:
 2559              	.LFB215:
 712:../Libraries/XMCLib/src/xmc4_scu.c **** 
 713:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 714:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL VCO input clock
 715:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 716:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void)
 717:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2560              	 .loc 3 717 0
 2561              	 .cfi_startproc
 2562              	 
 2563              	 
 2564 0000 80B5     	 push {r7,lr}
 2565              	.LCFI241:
 2566              	 .cfi_def_cfa_offset 8
 2567              	 .cfi_offset 7,-8
 2568              	 .cfi_offset 14,-4
 2569 0002 82B0     	 sub sp,sp,#8
 2570              	.LCFI242:
 2571              	 .cfi_def_cfa_offset 16
 2572 0004 00AF     	 add r7,sp,#0
 2573              	.LCFI243:
 2574              	 .cfi_def_cfa_register 7
 718:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 719:../Libraries/XMCLib/src/xmc4_scu.c **** 
 720:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Prescalar mode - fOSC is the parent*/
 721:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk) == (uint32_t)XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 2575              	 .loc 3 721 0
 2576 0006 084B     	 ldr r3,.L178
 2577 0008 DB68     	 ldr r3,[r3,#12]
 2578 000a 03F00103 	 and r3,r3,#1
 2579 000e 002B     	 cmp r3,#0
 2580 0010 03D1     	 bne .L175
 722:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 723:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OSCHP_GetFrequency();
 2581              	 .loc 3 723 0
 2582 0012 FFF7FEFF 	 bl OSCHP_GetFrequency
 2583 0016 7860     	 str r0,[r7,#4]
 2584 0018 01E0     	 b .L176
 2585              	.L175:
 724:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 725:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 726:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 727:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OFI_FREQUENCY;
 2586              	 .loc 3 727 0
 2587 001a 044B     	 ldr r3,.L178+4
 2588 001c 7B60     	 str r3,[r7,#4]
 2589              	.L176:
 728:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 729:../Libraries/XMCLib/src/xmc4_scu.c ****   
 730:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2590              	 .loc 3 730 0
 2591 001e 7B68     	 ldr r3,[r7,#4]
 731:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2592              	 .loc 3 731 0
 2593 0020 1846     	 mov r0,r3
 2594 0022 0837     	 adds r7,r7,#8
 2595              	.LCFI244:
 2596              	 .cfi_def_cfa_offset 8
 2597 0024 BD46     	 mov sp,r7
 2598              	.LCFI245:
 2599              	 .cfi_def_cfa_register 13
 2600              	 
 2601 0026 80BD     	 pop {r7,pc}
 2602              	.L179:
 2603              	 .align 2
 2604              	.L178:
 2605 0028 10470050 	 .word 1342195472
 2606 002c 00366E01 	 .word 24000000
 2607              	 .cfi_endproc
 2608              	.LFE215:
 2610              	 .section .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency,"ax",%progbits
 2611              	 .align 2
 2612              	 .global XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2613              	 .thumb
 2614              	 .thumb_func
 2616              	XMC_SCU_CLOCK_GetUsbPllClockFrequency:
 2617              	.LFB216:
 732:../Libraries/XMCLib/src/xmc4_scu.c **** 
 733:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 734:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of USB PLL output clock
 735:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 736:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void)
 737:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2618              	 .loc 3 737 0
 2619              	 .cfi_startproc
 2620              	 
 2621              	 
 2622 0000 80B5     	 push {r7,lr}
 2623              	.LCFI246:
 2624              	 .cfi_def_cfa_offset 8
 2625              	 .cfi_offset 7,-8
 2626              	 .cfi_offset 14,-4
 2627 0002 84B0     	 sub sp,sp,#16
 2628              	.LCFI247:
 2629              	 .cfi_def_cfa_offset 24
 2630 0004 00AF     	 add r7,sp,#0
 2631              	.LCFI248:
 2632              	 .cfi_def_cfa_register 7
 738:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 739:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 740:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 741:../Libraries/XMCLib/src/xmc4_scu.c ****   
 742:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = OSCHP_GetFrequency();
 2633              	 .loc 3 742 0
 2634 0006 FFF7FEFF 	 bl OSCHP_GetFrequency
 2635 000a F860     	 str r0,[r7,#12]
 743:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 2636              	 .loc 3 743 0
 2637 000c 104B     	 ldr r3,.L183
 2638 000e 1B69     	 ldr r3,[r3,#16]
 2639 0010 03F00103 	 and r3,r3,#1
 2640 0014 002B     	 cmp r3,#0
 2641 0016 16D1     	 bne .L181
 744:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 745:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Normal mode - fVCO is the parent*/
 746:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_NDIV_Msk) >> SCU_PLL_USBPLLCON_ND
 2642              	 .loc 3 746 0
 2643 0018 0D4B     	 ldr r3,.L183
 2644 001a 5B69     	 ldr r3,[r3,#20]
 2645 001c 03F4FE43 	 and r3,r3,#32512
 2646 0020 1B0A     	 lsrs r3,r3,#8
 2647 0022 0133     	 adds r3,r3,#1
 2648 0024 BB60     	 str r3,[r7,#8]
 747:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 2649              	 .loc 3 747 0
 2650 0026 0A4B     	 ldr r3,.L183
 2651 0028 5B69     	 ldr r3,[r3,#20]
 2652 002a 03F07063 	 and r3,r3,#251658240
 2653 002e 1B0E     	 lsrs r3,r3,#24
 2654 0030 0133     	 adds r3,r3,#1
 2655 0032 7B60     	 str r3,[r7,#4]
 748:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)((clock_frequency * n_div)/ (uint32_t)(p_div * 2UL));
 2656              	 .loc 3 748 0
 2657 0034 FB68     	 ldr r3,[r7,#12]
 2658 0036 BA68     	 ldr r2,[r7,#8]
 2659 0038 02FB03F2 	 mul r2,r2,r3
 2660 003c 7B68     	 ldr r3,[r7,#4]
 2661 003e 5B00     	 lsls r3,r3,#1
 2662 0040 B2FBF3F3 	 udiv r3,r2,r3
 2663 0044 FB60     	 str r3,[r7,#12]
 2664              	.L181:
 749:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 750:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2665              	 .loc 3 750 0
 2666 0046 FB68     	 ldr r3,[r7,#12]
 751:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2667              	 .loc 3 751 0
 2668 0048 1846     	 mov r0,r3
 2669 004a 1037     	 adds r7,r7,#16
 2670              	.LCFI249:
 2671              	 .cfi_def_cfa_offset 8
 2672 004c BD46     	 mov sp,r7
 2673              	.LCFI250:
 2674              	 .cfi_def_cfa_register 13
 2675              	 
 2676 004e 80BD     	 pop {r7,pc}
 2677              	.L184:
 2678              	 .align 2
 2679              	.L183:
 2680 0050 10470050 	 .word 1342195472
 2681              	 .cfi_endproc
 2682              	.LFE216:
 2684              	 .section .text.XMC_SCU_CLOCK_GetCcuClockFrequency,"ax",%progbits
 2685              	 .align 2
 2686              	 .global XMC_SCU_CLOCK_GetCcuClockFrequency
 2687              	 .thumb
 2688              	 .thumb_func
 2690              	XMC_SCU_CLOCK_GetCcuClockFrequency:
 2691              	.LFB217:
 752:../Libraries/XMCLib/src/xmc4_scu.c **** 
 753:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 754:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of CCU clock frequency
 755:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 756:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void)
 757:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2692              	 .loc 3 757 0
 2693              	 .cfi_startproc
 2694              	 
 2695              	 
 2696 0000 80B5     	 push {r7,lr}
 2697              	.LCFI251:
 2698              	 .cfi_def_cfa_offset 8
 2699              	 .cfi_offset 7,-8
 2700              	 .cfi_offset 14,-4
 2701 0002 82B0     	 sub sp,sp,#8
 2702              	.LCFI252:
 2703              	 .cfi_def_cfa_offset 16
 2704 0004 00AF     	 add r7,sp,#0
 2705              	.LCFI253:
 2706              	 .cfi_def_cfa_register 7
 758:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2707              	 .loc 3 758 0
 2708 0006 0023     	 movs r3,#0
 2709 0008 7B60     	 str r3,[r7,#4]
 759:../Libraries/XMCLib/src/xmc4_scu.c ****   frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2710              	 .loc 3 759 0
 2711 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2712 000e 7860     	 str r0,[r7,#4]
 760:../Libraries/XMCLib/src/xmc4_scu.c ****   
 761:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency >> ((uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >>
 2713              	 .loc 3 761 0
 2714 0010 054B     	 ldr r3,.L187
 2715 0012 1B6A     	 ldr r3,[r3,#32]
 2716 0014 03F00103 	 and r3,r3,#1
 2717 0018 7A68     	 ldr r2,[r7,#4]
 2718 001a 22FA03F3 	 lsr r3,r2,r3
 762:../Libraries/XMCLib/src/xmc4_scu.c ****                                               SCU_CLK_CCUCLKCR_CCUDIV_Pos)));
 763:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2719              	 .loc 3 763 0
 2720 001e 1846     	 mov r0,r3
 2721 0020 0837     	 adds r7,r7,#8
 2722              	.LCFI254:
 2723              	 .cfi_def_cfa_offset 8
 2724 0022 BD46     	 mov sp,r7
 2725              	.LCFI255:
 2726              	 .cfi_def_cfa_register 13
 2727              	 
 2728 0024 80BD     	 pop {r7,pc}
 2729              	.L188:
 2730 0026 00BF     	 .align 2
 2731              	.L187:
 2732 0028 00460050 	 .word 1342195200
 2733              	 .cfi_endproc
 2734              	.LFE217:
 2736              	 .section .text.XMC_SCU_CLOCK_GetUsbClockFrequency,"ax",%progbits
 2737              	 .align 2
 2738              	 .global XMC_SCU_CLOCK_GetUsbClockFrequency
 2739              	 .thumb
 2740              	 .thumb_func
 2742              	XMC_SCU_CLOCK_GetUsbClockFrequency:
 2743              	.LFB218:
 764:../Libraries/XMCLib/src/xmc4_scu.c **** 
 765:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 766:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve USB and SDMMC clock frequency
 767:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 768:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void)
 769:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2744              	 .loc 3 769 0
 2745              	 .cfi_startproc
 2746              	 
 2747              	 
 2748 0000 80B5     	 push {r7,lr}
 2749              	.LCFI256:
 2750              	 .cfi_def_cfa_offset 8
 2751              	 .cfi_offset 7,-8
 2752              	 .cfi_offset 14,-4
 2753 0002 82B0     	 sub sp,sp,#8
 2754              	.LCFI257:
 2755              	 .cfi_def_cfa_offset 16
 2756 0004 00AF     	 add r7,sp,#0
 2757              	.LCFI258:
 2758              	 .cfi_def_cfa_register 7
 770:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2759              	 .loc 3 770 0
 2760 0006 0023     	 movs r3,#0
 2761 0008 7B60     	 str r3,[r7,#4]
 771:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 772:../Libraries/XMCLib/src/xmc4_scu.c **** 
 773:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetUsbClockSource();
 2762              	 .loc 3 773 0
 2763 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbClockSource
 2764 000e 3860     	 str r0,[r7]
 774:../Libraries/XMCLib/src/xmc4_scu.c **** 
 775:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_SYSPLL)
 2765              	 .loc 3 775 0
 2766 0010 3B68     	 ldr r3,[r7]
 2767 0012 B3F5803F 	 cmp r3,#65536
 2768 0016 03D1     	 bne .L190
 776:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 777:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2769              	 .loc 3 777 0
 2770 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2771 001c 7860     	 str r0,[r7,#4]
 2772 001e 05E0     	 b .L191
 2773              	.L190:
 778:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 779:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_USBPLL)
 2774              	 .loc 3 779 0
 2775 0020 3B68     	 ldr r3,[r7]
 2776 0022 002B     	 cmp r3,#0
 2777 0024 02D1     	 bne .L191
 780:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 781:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 2778              	 .loc 3 781 0
 2779 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2780 002a 7860     	 str r0,[r7,#4]
 2781              	.L191:
 782:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 783:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 784:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 785:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 786:../Libraries/XMCLib/src/xmc4_scu.c **** 
 787:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency / (((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >>
 2782              	 .loc 3 787 0
 2783 002c 054B     	 ldr r3,.L193
 2784 002e 9B69     	 ldr r3,[r3,#24]
 2785 0030 03F00703 	 and r3,r3,#7
 788:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2786              	 .loc 3 788 0
 2787 0034 0133     	 adds r3,r3,#1
 787:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2788              	 .loc 3 787 0
 2789 0036 7A68     	 ldr r2,[r7,#4]
 2790 0038 B2FBF3F3 	 udiv r3,r2,r3
 789:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2791              	 .loc 3 789 0
 2792 003c 1846     	 mov r0,r3
 2793 003e 0837     	 adds r7,r7,#8
 2794              	.LCFI259:
 2795              	 .cfi_def_cfa_offset 8
 2796 0040 BD46     	 mov sp,r7
 2797              	.LCFI260:
 2798              	 .cfi_def_cfa_register 13
 2799              	 
 2800 0042 80BD     	 pop {r7,pc}
 2801              	.L194:
 2802              	 .align 2
 2803              	.L193:
 2804 0044 00460050 	 .word 1342195200
 2805              	 .cfi_endproc
 2806              	.LFE218:
 2808              	 .section .text.XMC_SCU_CLOCK_GetEbuClockFrequency,"ax",%progbits
 2809              	 .align 2
 2810              	 .global XMC_SCU_CLOCK_GetEbuClockFrequency
 2811              	 .thumb
 2812              	 .thumb_func
 2814              	XMC_SCU_CLOCK_GetEbuClockFrequency:
 2815              	.LFB219:
 790:../Libraries/XMCLib/src/xmc4_scu.c **** 
 791:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
 792:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 793:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve EBU clock frequency
 794:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 795:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetEbuClockFrequency(void)
 796:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2816              	 .loc 3 796 0
 2817              	 .cfi_startproc
 2818              	 
 2819              	 
 2820 0000 80B5     	 push {r7,lr}
 2821              	.LCFI261:
 2822              	 .cfi_def_cfa_offset 8
 2823              	 .cfi_offset 7,-8
 2824              	 .cfi_offset 14,-4
 2825 0002 82B0     	 sub sp,sp,#8
 2826              	.LCFI262:
 2827              	 .cfi_def_cfa_offset 16
 2828 0004 00AF     	 add r7,sp,#0
 2829              	.LCFI263:
 2830              	 .cfi_def_cfa_register 7
 797:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2831              	 .loc 3 797 0
 2832 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2833 000a 7860     	 str r0,[r7,#4]
 798:../Libraries/XMCLib/src/xmc4_scu.c ****   
 799:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency /(((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >>
 2834              	 .loc 3 799 0
 2835 000c 054B     	 ldr r3,.L197
 2836 000e DB69     	 ldr r3,[r3,#28]
 2837 0010 03F03F03 	 and r3,r3,#63
 800:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2838              	 .loc 3 800 0
 2839 0014 0133     	 adds r3,r3,#1
 799:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2840              	 .loc 3 799 0
 2841 0016 7A68     	 ldr r2,[r7,#4]
 2842 0018 B2FBF3F3 	 udiv r3,r2,r3
 801:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2843              	 .loc 3 801 0
 2844 001c 1846     	 mov r0,r3
 2845 001e 0837     	 adds r7,r7,#8
 2846              	.LCFI264:
 2847              	 .cfi_def_cfa_offset 8
 2848 0020 BD46     	 mov sp,r7
 2849              	.LCFI265:
 2850              	 .cfi_def_cfa_register 13
 2851              	 
 2852 0022 80BD     	 pop {r7,pc}
 2853              	.L198:
 2854              	 .align 2
 2855              	.L197:
 2856 0024 00460050 	 .word 1342195200
 2857              	 .cfi_endproc
 2858              	.LFE219:
 2860              	 .section .text.XMC_SCU_CLOCK_GetWdtClockFrequency,"ax",%progbits
 2861              	 .align 2
 2862              	 .global XMC_SCU_CLOCK_GetWdtClockFrequency
 2863              	 .thumb
 2864              	 .thumb_func
 2866              	XMC_SCU_CLOCK_GetWdtClockFrequency:
 2867              	.LFB220:
 802:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 803:../Libraries/XMCLib/src/xmc4_scu.c **** 
 804:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
 805:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 806:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve ECAT clock frequency
 807:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 808:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetECATClockFrequency(void)
 809:../Libraries/XMCLib/src/xmc4_scu.c **** {
 810:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency;
 811:../Libraries/XMCLib/src/xmc4_scu.c **** 
 812:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) != 0U)
 813:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 814:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 815:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 816:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 817:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 818:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 819:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 820:../Libraries/XMCLib/src/xmc4_scu.c **** 
 821:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (XMC_SCU_CLOCK_GetECATClockDivider() + 1UL)));
 822:../Libraries/XMCLib/src/xmc4_scu.c **** }
 823:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 824:../Libraries/XMCLib/src/xmc4_scu.c **** 
 825:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 826:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve WDT clock frequency
 827:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 828:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetWdtClockFrequency(void)
 829:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2868              	 .loc 3 829 0
 2869              	 .cfi_startproc
 2870              	 
 2871              	 
 2872 0000 80B5     	 push {r7,lr}
 2873              	.LCFI266:
 2874              	 .cfi_def_cfa_offset 8
 2875              	 .cfi_offset 7,-8
 2876              	 .cfi_offset 14,-4
 2877 0002 82B0     	 sub sp,sp,#8
 2878              	.LCFI267:
 2879              	 .cfi_def_cfa_offset 16
 2880 0004 00AF     	 add r7,sp,#0
 2881              	.LCFI268:
 2882              	 .cfi_def_cfa_register 7
 830:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2883              	 .loc 3 830 0
 2884 0006 0023     	 movs r3,#0
 2885 0008 7B60     	 str r3,[r7,#4]
 831:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_WDTCLKSRC_t clksrc;
 832:../Libraries/XMCLib/src/xmc4_scu.c **** 
 833:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetWdtClockSource();
 2886              	 .loc 3 833 0
 2887 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetWdtClockSource
 2888 000e 3860     	 str r0,[r7]
 834:../Libraries/XMCLib/src/xmc4_scu.c **** 
 835:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_PLL)
 2889              	 .loc 3 835 0
 2890 0010 3B68     	 ldr r3,[r7]
 2891 0012 B3F5003F 	 cmp r3,#131072
 2892 0016 03D1     	 bne .L200
 836:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 837:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2893              	 .loc 3 837 0
 2894 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2895 001c 7860     	 str r0,[r7,#4]
 2896 001e 0CE0     	 b .L201
 2897              	.L200:
 838:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 839:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_OFI)
 2898              	 .loc 3 839 0
 2899 0020 3B68     	 ldr r3,[r7]
 2900 0022 002B     	 cmp r3,#0
 2901 0024 02D1     	 bne .L202
 840:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 841:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OFI_FREQUENCY;
 2902              	 .loc 3 841 0
 2903 0026 0A4B     	 ldr r3,.L204
 2904 0028 7B60     	 str r3,[r7,#4]
 2905 002a 06E0     	 b .L201
 2906              	.L202:
 842:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 843:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_STDBY)
 2907              	 .loc 3 843 0
 2908 002c 3B68     	 ldr r3,[r7]
 2909 002e B3F5803F 	 cmp r3,#65536
 2910 0032 02D1     	 bne .L201
 844:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 845:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OSI_FREQUENCY;
 2911              	 .loc 3 845 0
 2912 0034 4FF40043 	 mov r3,#32768
 2913 0038 7B60     	 str r3,[r7,#4]
 2914              	.L201:
 846:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 847:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 848:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 849:../Libraries/XMCLib/src/xmc4_scu.c **** 
 850:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 851:../Libraries/XMCLib/src/xmc4_scu.c **** 
 852:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >>
 2915              	 .loc 3 852 0
 2916 003a 064B     	 ldr r3,.L204+4
 2917 003c 5B6A     	 ldr r3,[r3,#36]
 2918 003e DBB2     	 uxtb r3,r3
 853:../Libraries/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 2919              	 .loc 3 853 0
 2920 0040 0133     	 adds r3,r3,#1
 852:../Libraries/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 2921              	 .loc 3 852 0
 2922 0042 7A68     	 ldr r2,[r7,#4]
 2923 0044 B2FBF3F3 	 udiv r3,r2,r3
 854:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2924              	 .loc 3 854 0
 2925 0048 1846     	 mov r0,r3
 2926 004a 0837     	 adds r7,r7,#8
 2927              	.LCFI269:
 2928              	 .cfi_def_cfa_offset 8
 2929 004c BD46     	 mov sp,r7
 2930              	.LCFI270:
 2931              	 .cfi_def_cfa_register 13
 2932              	 
 2933 004e 80BD     	 pop {r7,pc}
 2934              	.L205:
 2935              	 .align 2
 2936              	.L204:
 2937 0050 00366E01 	 .word 24000000
 2938 0054 00460050 	 .word 1342195200
 2939              	 .cfi_endproc
 2940              	.LFE220:
 2942              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency,"ax",%progbits
 2943              	 .align 2
 2944              	 .global XMC_SCU_CLOCK_GetExternalOutputClockFrequency
 2945              	 .thumb
 2946              	 .thumb_func
 2948              	XMC_SCU_CLOCK_GetExternalOutputClockFrequency:
 2949              	.LFB221:
 855:../Libraries/XMCLib/src/xmc4_scu.c **** 
 856:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 857:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief API to retrieve EXTERNAL-OUT clock frequency
 858:../Libraries/XMCLib/src/xmc4_scu.c ****  * @retval Clock frequency
 859:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 860:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetExternalOutputClockFrequency(void)
 861:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2950              	 .loc 3 861 0
 2951              	 .cfi_startproc
 2952              	 
 2953              	 
 2954 0000 80B5     	 push {r7,lr}
 2955              	.LCFI271:
 2956              	 .cfi_def_cfa_offset 8
 2957              	 .cfi_offset 7,-8
 2958              	 .cfi_offset 14,-4
 2959 0002 82B0     	 sub sp,sp,#8
 2960              	.LCFI272:
 2961              	 .cfi_def_cfa_offset 16
 2962 0004 00AF     	 add r7,sp,#0
 2963              	.LCFI273:
 2964              	 .cfi_def_cfa_register 7
 862:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2965              	 .loc 3 862 0
 2966 0006 0023     	 movs r3,#0
 2967 0008 7B60     	 str r3,[r7,#4]
 863:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 864:../Libraries/XMCLib/src/xmc4_scu.c **** 
 865:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetExternalOutputClockSource();
 2968              	 .loc 3 865 0
 2969 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetExternalOutputClockSource
 2970 000e 0346     	 mov r3,r0
 2971 0010 FB70     	 strb r3,[r7,#3]
 866:../Libraries/XMCLib/src/xmc4_scu.c **** 
 867:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL)
 2972              	 .loc 3 867 0
 2973 0012 FB78     	 ldrb r3,[r7,#3]
 2974 0014 032B     	 cmp r3,#3
 2975 0016 0DD1     	 bne .L207
 868:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 869:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2976              	 .loc 3 869 0
 2977 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2978 001c 7860     	 str r0,[r7,#4]
 870:../Libraries/XMCLib/src/xmc4_scu.c ****     
 871:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 2979              	 .loc 3 871 0
 2980 001e 134B     	 ldr r3,.L211
 2981 0020 9A6A     	 ldr r2,[r3,#40]
 2982 0022 134B     	 ldr r3,.L211+4
 2983 0024 1340     	 ands r3,r3,r2
 2984 0026 1B0C     	 lsrs r3,r3,#16
 872:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 2985              	 .loc 3 872 0
 2986 0028 0133     	 adds r3,r3,#1
 871:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 2987              	 .loc 3 871 0
 2988 002a 7A68     	 ldr r2,[r7,#4]
 2989 002c B2FBF3F3 	 udiv r3,r2,r3
 2990 0030 7B60     	 str r3,[r7,#4]
 2991 0032 16E0     	 b .L208
 2992              	.L207:
 873:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 874:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS)
 2993              	 .loc 3 874 0
 2994 0034 FB78     	 ldrb r3,[r7,#3]
 2995 0036 002B     	 cmp r3,#0
 2996 0038 03D1     	 bne .L209
 875:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 876:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2997              	 .loc 3 876 0
 2998 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2999 003e 7860     	 str r0,[r7,#4]
 3000 0040 0FE0     	 b .L208
 3001              	.L209:
 877:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 878:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_USB)
 3002              	 .loc 3 878 0
 3003 0042 FB78     	 ldrb r3,[r7,#3]
 3004 0044 022B     	 cmp r3,#2
 3005 0046 0CD1     	 bne .L208
 879:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 880:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 3006              	 .loc 3 880 0
 3007 0048 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 3008 004c 7860     	 str r0,[r7,#4]
 881:../Libraries/XMCLib/src/xmc4_scu.c ****     
 882:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3009              	 .loc 3 882 0
 3010 004e 074B     	 ldr r3,.L211
 3011 0050 9A6A     	 ldr r2,[r3,#40]
 3012 0052 074B     	 ldr r3,.L211+4
 3013 0054 1340     	 ands r3,r3,r2
 3014 0056 1B0C     	 lsrs r3,r3,#16
 883:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3015              	 .loc 3 883 0
 3016 0058 0133     	 adds r3,r3,#1
 882:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3017              	 .loc 3 882 0
 3018 005a 7A68     	 ldr r2,[r7,#4]
 3019 005c B2FBF3F3 	 udiv r3,r2,r3
 3020 0060 7B60     	 str r3,[r7,#4]
 3021              	.L208:
 884:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 885:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 886:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 887:../Libraries/XMCLib/src/xmc4_scu.c **** 
 888:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 889:../Libraries/XMCLib/src/xmc4_scu.c **** 
 890:../Libraries/XMCLib/src/xmc4_scu.c ****   return (frequency);
 3022              	 .loc 3 890 0
 3023 0062 7B68     	 ldr r3,[r7,#4]
 891:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3024              	 .loc 3 891 0
 3025 0064 1846     	 mov r0,r3
 3026 0066 0837     	 adds r7,r7,#8
 3027              	.LCFI274:
 3028              	 .cfi_def_cfa_offset 8
 3029 0068 BD46     	 mov sp,r7
 3030              	.LCFI275:
 3031              	 .cfi_def_cfa_register 13
 3032              	 
 3033 006a 80BD     	 pop {r7,pc}
 3034              	.L212:
 3035              	 .align 2
 3036              	.L211:
 3037 006c 00460050 	 .word 1342195200
 3038 0070 0000FF01 	 .word 33488896
 3039              	 .cfi_endproc
 3040              	.LFE221:
 3042              	 .section .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency,"ax",%progbits
 3043              	 .align 2
 3044              	 .global XMC_SCU_CLOCK_GetPeripheralClockFrequency
 3045              	 .thumb
 3046              	 .thumb_func
 3048              	XMC_SCU_CLOCK_GetPeripheralClockFrequency:
 3049              	.LFB222:
 892:../Libraries/XMCLib/src/xmc4_scu.c **** 
 893:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 894:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve clock frequency of peripherals on the peripheral bus using a shared functional c
 895:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 896:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void)
 897:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3050              	 .loc 3 897 0
 3051              	 .cfi_startproc
 3052              	 
 3053              	 
 3054 0000 80B5     	 push {r7,lr}
 3055              	.LCFI276:
 3056              	 .cfi_def_cfa_offset 8
 3057              	 .cfi_offset 7,-8
 3058              	 .cfi_offset 14,-4
 3059 0002 00AF     	 add r7,sp,#0
 3060              	.LCFI277:
 3061              	 .cfi_def_cfa_register 7
 898:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3062              	 .loc 3 898 0
 3063 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCpuClockFrequency
 3064 0008 0246     	 mov r2,r0
 899:../Libraries/XMCLib/src/xmc4_scu.c ****          ((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos));  
 3065              	 .loc 3 899 0
 3066 000a 044B     	 ldr r3,.L215
 3067 000c 5B69     	 ldr r3,[r3,#20]
 898:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3068              	 .loc 3 898 0
 3069 000e 03F00103 	 and r3,r3,#1
 3070 0012 22FA03F3 	 lsr r3,r2,r3
 900:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3071              	 .loc 3 900 0
 3072 0016 1846     	 mov r0,r3
 3073 0018 80BD     	 pop {r7,pc}
 3074              	.L216:
 3075 001a 00BF     	 .align 2
 3076              	.L215:
 3077 001c 00460050 	 .word 1342195200
 3078              	 .cfi_endproc
 3079              	.LFE222:
 3081              	 .section .text.XMC_SCU_CLOCK_SetSystemClockSource,"ax",%progbits
 3082              	 .align 2
 3083              	 .global XMC_SCU_CLOCK_SetSystemClockSource
 3084              	 .thumb
 3085              	 .thumb_func
 3087              	XMC_SCU_CLOCK_SetSystemClockSource:
 3088              	.LFB223:
 901:../Libraries/XMCLib/src/xmc4_scu.c **** 
 902:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSYS */
 903:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source)
 904:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3089              	 .loc 3 904 0
 3090              	 .cfi_startproc
 3091              	 
 3092              	 
 3093              	 
 3094 0000 80B4     	 push {r7}
 3095              	.LCFI278:
 3096              	 .cfi_def_cfa_offset 4
 3097              	 .cfi_offset 7,-4
 3098 0002 83B0     	 sub sp,sp,#12
 3099              	.LCFI279:
 3100              	 .cfi_def_cfa_offset 16
 3101 0004 00AF     	 add r7,sp,#0
 3102              	.LCFI280:
 3103              	 .cfi_def_cfa_register 7
 3104 0006 7860     	 str r0,[r7,#4]
 905:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSSEL_Msk)) |
 3105              	 .loc 3 905 0
 3106 0008 0649     	 ldr r1,.L218
 3107 000a 064B     	 ldr r3,.L218
 3108 000c DB68     	 ldr r3,[r3,#12]
 3109 000e 23F48032 	 bic r2,r3,#65536
 3110 0012 7B68     	 ldr r3,[r7,#4]
 3111 0014 1343     	 orrs r3,r3,r2
 3112 0016 CB60     	 str r3,[r1,#12]
 906:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 907:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3113              	 .loc 3 907 0
 3114 0018 0C37     	 adds r7,r7,#12
 3115              	.LCFI281:
 3116              	 .cfi_def_cfa_offset 4
 3117 001a BD46     	 mov sp,r7
 3118              	.LCFI282:
 3119              	 .cfi_def_cfa_register 13
 3120              	 
 3121 001c 5DF8047B 	 ldr r7,[sp],#4
 3122              	.LCFI283:
 3123              	 .cfi_restore 7
 3124              	 .cfi_def_cfa_offset 0
 3125 0020 7047     	 bx lr
 3126              	.L219:
 3127 0022 00BF     	 .align 2
 3128              	.L218:
 3129 0024 00460050 	 .word 1342195200
 3130              	 .cfi_endproc
 3131              	.LFE223:
 3133              	 .section .text.XMC_SCU_CLOCK_SetUsbClockSource,"ax",%progbits
 3134              	 .align 2
 3135              	 .global XMC_SCU_CLOCK_SetUsbClockSource
 3136              	 .thumb
 3137              	 .thumb_func
 3139              	XMC_SCU_CLOCK_SetUsbClockSource:
 3140              	.LFB224:
 908:../Libraries/XMCLib/src/xmc4_scu.c **** 
 909:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fUSB */
 910:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source)
 911:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3141              	 .loc 3 911 0
 3142              	 .cfi_startproc
 3143              	 
 3144              	 
 3145              	 
 3146 0000 80B4     	 push {r7}
 3147              	.LCFI284:
 3148              	 .cfi_def_cfa_offset 4
 3149              	 .cfi_offset 7,-4
 3150 0002 83B0     	 sub sp,sp,#12
 3151              	.LCFI285:
 3152              	 .cfi_def_cfa_offset 16
 3153 0004 00AF     	 add r7,sp,#0
 3154              	.LCFI286:
 3155              	 .cfi_def_cfa_register 7
 3156 0006 7860     	 str r0,[r7,#4]
 912:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBSEL_Msk)) |
 3157              	 .loc 3 912 0
 3158 0008 0649     	 ldr r1,.L221
 3159 000a 064B     	 ldr r3,.L221
 3160 000c 9B69     	 ldr r3,[r3,#24]
 3161 000e 23F48032 	 bic r2,r3,#65536
 3162 0012 7B68     	 ldr r3,[r7,#4]
 3163 0014 1343     	 orrs r3,r3,r2
 3164 0016 8B61     	 str r3,[r1,#24]
 913:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 914:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3165              	 .loc 3 914 0
 3166 0018 0C37     	 adds r7,r7,#12
 3167              	.LCFI287:
 3168              	 .cfi_def_cfa_offset 4
 3169 001a BD46     	 mov sp,r7
 3170              	.LCFI288:
 3171              	 .cfi_def_cfa_register 13
 3172              	 
 3173 001c 5DF8047B 	 ldr r7,[sp],#4
 3174              	.LCFI289:
 3175              	 .cfi_restore 7
 3176              	 .cfi_def_cfa_offset 0
 3177 0020 7047     	 bx lr
 3178              	.L222:
 3179 0022 00BF     	 .align 2
 3180              	.L221:
 3181 0024 00460050 	 .word 1342195200
 3182              	 .cfi_endproc
 3183              	.LFE224:
 3185              	 .section .text.XMC_SCU_CLOCK_SetWdtClockSource,"ax",%progbits
 3186              	 .align 2
 3187              	 .global XMC_SCU_CLOCK_SetWdtClockSource
 3188              	 .thumb
 3189              	 .thumb_func
 3191              	XMC_SCU_CLOCK_SetWdtClockSource:
 3192              	.LFB225:
 915:../Libraries/XMCLib/src/xmc4_scu.c **** 
 916:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fWDT */
 917:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source)
 918:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3193              	 .loc 3 918 0
 3194              	 .cfi_startproc
 3195              	 
 3196              	 
 3197              	 
 3198 0000 80B4     	 push {r7}
 3199              	.LCFI290:
 3200              	 .cfi_def_cfa_offset 4
 3201              	 .cfi_offset 7,-4
 3202 0002 83B0     	 sub sp,sp,#12
 3203              	.LCFI291:
 3204              	 .cfi_def_cfa_offset 16
 3205 0004 00AF     	 add r7,sp,#0
 3206              	.LCFI292:
 3207              	 .cfi_def_cfa_register 7
 3208 0006 7860     	 str r0,[r7,#4]
 919:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTSEL_Msk)) |
 3209              	 .loc 3 919 0
 3210 0008 0649     	 ldr r1,.L224
 3211 000a 064B     	 ldr r3,.L224
 3212 000c 5B6A     	 ldr r3,[r3,#36]
 3213 000e 23F44032 	 bic r2,r3,#196608
 3214 0012 7B68     	 ldr r3,[r7,#4]
 3215 0014 1343     	 orrs r3,r3,r2
 3216 0016 4B62     	 str r3,[r1,#36]
 920:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 921:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3217              	 .loc 3 921 0
 3218 0018 0C37     	 adds r7,r7,#12
 3219              	.LCFI293:
 3220              	 .cfi_def_cfa_offset 4
 3221 001a BD46     	 mov sp,r7
 3222              	.LCFI294:
 3223              	 .cfi_def_cfa_register 13
 3224              	 
 3225 001c 5DF8047B 	 ldr r7,[sp],#4
 3226              	.LCFI295:
 3227              	 .cfi_restore 7
 3228              	 .cfi_def_cfa_offset 0
 3229 0020 7047     	 bx lr
 3230              	.L225:
 3231 0022 00BF     	 .align 2
 3232              	.L224:
 3233 0024 00460050 	 .word 1342195200
 3234              	 .cfi_endproc
 3235              	.LFE225:
 3237              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockSource,"ax",%progbits
 3238              	 .align 2
 3239              	 .global XMC_SCU_CLOCK_SetExternalOutputClockSource
 3240              	 .thumb
 3241              	 .thumb_func
 3243              	XMC_SCU_CLOCK_SetExternalOutputClockSource:
 3244              	.LFB226:
 922:../Libraries/XMCLib/src/xmc4_scu.c **** 
 923:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fEXT */
 924:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t source)
 925:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3245              	 .loc 3 925 0
 3246              	 .cfi_startproc
 3247              	 
 3248              	 
 3249              	 
 3250 0000 80B4     	 push {r7}
 3251              	.LCFI296:
 3252              	 .cfi_def_cfa_offset 4
 3253              	 .cfi_offset 7,-4
 3254 0002 83B0     	 sub sp,sp,#12
 3255              	.LCFI297:
 3256              	 .cfi_def_cfa_offset 16
 3257 0004 00AF     	 add r7,sp,#0
 3258              	.LCFI298:
 3259              	 .cfi_def_cfa_register 7
 3260 0006 0346     	 mov r3,r0
 3261 0008 FB71     	 strb r3,[r7,#7]
 926:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3262              	 .loc 3 926 0
 3263 000a 0649     	 ldr r1,.L227
 3264 000c 054B     	 ldr r3,.L227
 3265 000e 9B6A     	 ldr r3,[r3,#40]
 3266 0010 23F00302 	 bic r2,r3,#3
 927:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 3267              	 .loc 3 927 0
 3268 0014 FB79     	 ldrb r3,[r7,#7]
 926:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3269              	 .loc 3 926 0
 3270 0016 1343     	 orrs r3,r3,r2
 3271 0018 8B62     	 str r3,[r1,#40]
 928:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3272              	 .loc 3 928 0
 3273 001a 0C37     	 adds r7,r7,#12
 3274              	.LCFI299:
 3275              	 .cfi_def_cfa_offset 4
 3276 001c BD46     	 mov sp,r7
 3277              	.LCFI300:
 3278              	 .cfi_def_cfa_register 13
 3279              	 
 3280 001e 5DF8047B 	 ldr r7,[sp],#4
 3281              	.LCFI301:
 3282              	 .cfi_restore 7
 3283              	 .cfi_def_cfa_offset 0
 3284 0022 7047     	 bx lr
 3285              	.L228:
 3286              	 .align 2
 3287              	.L227:
 3288 0024 00460050 	 .word 1342195200
 3289              	 .cfi_endproc
 3290              	.LFE226:
 3292              	 .section .text.XMC_SCU_CLOCK_SetSystemPllClockSource,"ax",%progbits
 3293              	 .align 2
 3294              	 .global XMC_SCU_CLOCK_SetSystemPllClockSource
 3295              	 .thumb
 3296              	 .thumb_func
 3298              	XMC_SCU_CLOCK_SetSystemPllClockSource:
 3299              	.LFB227:
 929:../Libraries/XMCLib/src/xmc4_scu.c **** 
 930:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fPLL */
 931:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source)
 932:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3300              	 .loc 3 932 0
 3301              	 .cfi_startproc
 3302              	 
 3303              	 
 3304              	 
 3305 0000 80B4     	 push {r7}
 3306              	.LCFI302:
 3307              	 .cfi_def_cfa_offset 4
 3308              	 .cfi_offset 7,-4
 3309 0002 83B0     	 sub sp,sp,#12
 3310              	.LCFI303:
 3311              	 .cfi_def_cfa_offset 16
 3312 0004 00AF     	 add r7,sp,#0
 3313              	.LCFI304:
 3314              	 .cfi_def_cfa_register 7
 3315 0006 0346     	 mov r3,r0
 3316 0008 FB80     	 strh r3,[r7,#6]
 933:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Check input clock */
 934:../Libraries/XMCLib/src/xmc4_scu.c ****   if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) /* Select PLLClockSource */
 3317              	 .loc 3 934 0
 3318 000a FB88     	 ldrh r3,[r7,#6]
 3319 000c 002B     	 cmp r3,#0
 3320 000e 08D1     	 bne .L230
 935:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 936:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 &= (uint32_t)~(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3321              	 .loc 3 936 0
 3322 0010 0A4A     	 ldr r2,.L232
 3323 0012 0A4B     	 ldr r3,.L232
 3324 0014 DB68     	 ldr r3,[r3,#12]
 3325 0016 23F48073 	 bic r3,r3,#256
 3326 001a 23F00103 	 bic r3,r3,#1
 3327 001e D360     	 str r3,[r2,#12]
 3328 0020 07E0     	 b .L229
 3329              	.L230:
 937:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 938:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 939:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 940:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 |= (uint32_t)(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3330              	 .loc 3 940 0
 3331 0022 064A     	 ldr r2,.L232
 3332 0024 054B     	 ldr r3,.L232
 3333 0026 DB68     	 ldr r3,[r3,#12]
 3334 0028 43F48073 	 orr r3,r3,#256
 3335 002c 43F00103 	 orr r3,r3,#1
 3336 0030 D360     	 str r3,[r2,#12]
 3337              	.L229:
 941:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 942:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3338              	 .loc 3 942 0
 3339 0032 0C37     	 adds r7,r7,#12
 3340              	.LCFI305:
 3341              	 .cfi_def_cfa_offset 4
 3342 0034 BD46     	 mov sp,r7
 3343              	.LCFI306:
 3344              	 .cfi_def_cfa_register 13
 3345              	 
 3346 0036 5DF8047B 	 ldr r7,[sp],#4
 3347              	.LCFI307:
 3348              	 .cfi_restore 7
 3349              	 .cfi_def_cfa_offset 0
 3350 003a 7047     	 bx lr
 3351              	.L233:
 3352              	 .align 2
 3353              	.L232:
 3354 003c 10470050 	 .word 1342195472
 3355              	 .cfi_endproc
 3356              	.LFE227:
 3358              	 .section .text.XMC_SCU_HIB_SetRtcClockSource,"ax",%progbits
 3359              	 .align 2
 3360              	 .global XMC_SCU_HIB_SetRtcClockSource
 3361              	 .thumb
 3362              	 .thumb_func
 3364              	XMC_SCU_HIB_SetRtcClockSource:
 3365              	.LFB228:
 943:../Libraries/XMCLib/src/xmc4_scu.c **** 
 944:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fRTC */
 945:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source)
 946:../Libraries/XMCLib/src/xmc4_scu.c **** { 
 3366              	 .loc 3 946 0
 3367              	 .cfi_startproc
 3368              	 
 3369              	 
 3370              	 
 3371 0000 80B4     	 push {r7}
 3372              	.LCFI308:
 3373              	 .cfi_def_cfa_offset 4
 3374              	 .cfi_offset 7,-4
 3375 0002 83B0     	 sub sp,sp,#12
 3376              	.LCFI309:
 3377              	 .cfi_def_cfa_offset 16
 3378 0004 00AF     	 add r7,sp,#0
 3379              	.LCFI310:
 3380              	 .cfi_def_cfa_register 7
 3381 0006 0346     	 mov r3,r0
 3382 0008 FB71     	 strb r3,[r7,#7]
 947:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of HDCR register in hibernate domain is completed */
 948:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3383              	 .loc 3 948 0
 3384 000a 00BF     	 nop
 3385              	.L235:
 3386              	 .loc 3 948 0 is_stmt 0 discriminator 1
 3387 000c 094B     	 ldr r3,.L236
 3388 000e D3F8C430 	 ldr r3,[r3,#196]
 3389 0012 03F00803 	 and r3,r3,#8
 3390 0016 002B     	 cmp r3,#0
 3391 0018 F8D1     	 bne .L235
 949:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 950:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 951:../Libraries/XMCLib/src/xmc4_scu.c **** 
 952:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_RCS_Msk)) |
 3392              	 .loc 3 952 0 is_stmt 1
 3393 001a 0749     	 ldr r1,.L236+4
 3394 001c 064B     	 ldr r3,.L236+4
 3395 001e DB68     	 ldr r3,[r3,#12]
 3396 0020 23F04002 	 bic r2,r3,#64
 953:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3397              	 .loc 3 953 0
 3398 0024 FB79     	 ldrb r3,[r7,#7]
 952:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3399              	 .loc 3 952 0
 3400 0026 1343     	 orrs r3,r3,r2
 3401 0028 CB60     	 str r3,[r1,#12]
 954:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3402              	 .loc 3 954 0
 3403 002a 0C37     	 adds r7,r7,#12
 3404              	.LCFI311:
 3405              	 .cfi_def_cfa_offset 4
 3406 002c BD46     	 mov sp,r7
 3407              	.LCFI312:
 3408              	 .cfi_def_cfa_register 13
 3409              	 
 3410 002e 5DF8047B 	 ldr r7,[sp],#4
 3411              	.LCFI313:
 3412              	 .cfi_restore 7
 3413              	 .cfi_def_cfa_offset 0
 3414 0032 7047     	 bx lr
 3415              	.L237:
 3416              	 .align 2
 3417              	.L236:
 3418 0034 00400050 	 .word 1342193664
 3419 0038 00430050 	 .word 1342194432
 3420              	 .cfi_endproc
 3421              	.LFE228:
 3423              	 .section .text.XMC_SCU_HIB_SetStandbyClockSource,"ax",%progbits
 3424              	 .align 2
 3425              	 .global XMC_SCU_HIB_SetStandbyClockSource
 3426              	 .thumb
 3427              	 .thumb_func
 3429              	XMC_SCU_HIB_SetStandbyClockSource:
 3430              	.LFB229:
 955:../Libraries/XMCLib/src/xmc4_scu.c **** 
 956:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSTDBY */
 957:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source)
 958:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3431              	 .loc 3 958 0
 3432              	 .cfi_startproc
 3433              	 
 3434              	 
 3435              	 
 3436 0000 80B4     	 push {r7}
 3437              	.LCFI314:
 3438              	 .cfi_def_cfa_offset 4
 3439              	 .cfi_offset 7,-4
 3440 0002 83B0     	 sub sp,sp,#12
 3441              	.LCFI315:
 3442              	 .cfi_def_cfa_offset 16
 3443 0004 00AF     	 add r7,sp,#0
 3444              	.LCFI316:
 3445              	 .cfi_def_cfa_register 7
 3446 0006 0346     	 mov r3,r0
 3447 0008 FB71     	 strb r3,[r7,#7]
 959:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3448              	 .loc 3 959 0
 3449 000a 00BF     	 nop
 3450              	.L239:
 3451              	 .loc 3 959 0 is_stmt 0 discriminator 1
 3452 000c 094B     	 ldr r3,.L240
 3453 000e D3F8C430 	 ldr r3,[r3,#196]
 3454 0012 03F00803 	 and r3,r3,#8
 3455 0016 002B     	 cmp r3,#0
 3456 0018 F8D1     	 bne .L239
 960:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 961:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 962:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 963:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_STDBYSEL_Msk)) |
 3457              	 .loc 3 963 0 is_stmt 1
 3458 001a 0749     	 ldr r1,.L240+4
 3459 001c 064B     	 ldr r3,.L240+4
 3460 001e DB68     	 ldr r3,[r3,#12]
 3461 0020 23F08002 	 bic r2,r3,#128
 964:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3462              	 .loc 3 964 0
 3463 0024 FB79     	 ldrb r3,[r7,#7]
 963:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3464              	 .loc 3 963 0
 3465 0026 1343     	 orrs r3,r3,r2
 3466 0028 CB60     	 str r3,[r1,#12]
 965:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3467              	 .loc 3 965 0
 3468 002a 0C37     	 adds r7,r7,#12
 3469              	.LCFI317:
 3470              	 .cfi_def_cfa_offset 4
 3471 002c BD46     	 mov sp,r7
 3472              	.LCFI318:
 3473              	 .cfi_def_cfa_register 13
 3474              	 
 3475 002e 5DF8047B 	 ldr r7,[sp],#4
 3476              	.LCFI319:
 3477              	 .cfi_restore 7
 3478              	 .cfi_def_cfa_offset 0
 3479 0032 7047     	 bx lr
 3480              	.L241:
 3481              	 .align 2
 3482              	.L240:
 3483 0034 00400050 	 .word 1342193664
 3484 0038 00430050 	 .word 1342194432
 3485              	 .cfi_endproc
 3486              	.LFE229:
 3488              	 .section .text.XMC_SCU_CLOCK_SetSystemClockDivider,"ax",%progbits
 3489              	 .align 2
 3490              	 .global XMC_SCU_CLOCK_SetSystemClockDivider
 3491              	 .thumb
 3492              	 .thumb_func
 3494              	XMC_SCU_CLOCK_SetSystemClockDivider:
 3495              	.LFB230:
 966:../Libraries/XMCLib/src/xmc4_scu.c **** 
 967:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsys and its parent */
 968:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider)
 969:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3496              	 .loc 3 969 0
 3497              	 .cfi_startproc
 3498              	 
 3499              	 
 3500              	 
 3501 0000 80B4     	 push {r7}
 3502              	.LCFI320:
 3503              	 .cfi_def_cfa_offset 4
 3504              	 .cfi_offset 7,-4
 3505 0002 83B0     	 sub sp,sp,#12
 3506              	.LCFI321:
 3507              	 .cfi_def_cfa_offset 16
 3508 0004 00AF     	 add r7,sp,#0
 3509              	.LCFI322:
 3510              	 .cfi_def_cfa_register 7
 3511 0006 7860     	 str r0,[r7,#4]
 970:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSystemClockDivider:Wrong clock divider value",
 971:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_SYSCLKCR_SYSDIV_Msk + 1UL)) );
 972:../Libraries/XMCLib/src/xmc4_scu.c **** 
 973:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSDIV_Msk)) |
 3512              	 .loc 3 973 0
 3513 0008 0649     	 ldr r1,.L243
 3514 000a 064B     	 ldr r3,.L243
 3515 000c DB68     	 ldr r3,[r3,#12]
 3516 000e 23F0FF02 	 bic r2,r3,#255
 974:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3517              	 .loc 3 974 0
 3518 0012 7B68     	 ldr r3,[r7,#4]
 3519 0014 013B     	 subs r3,r3,#1
 973:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3520              	 .loc 3 973 0
 3521 0016 1343     	 orrs r3,r3,r2
 3522 0018 CB60     	 str r3,[r1,#12]
 975:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3523              	 .loc 3 975 0
 3524 001a 0C37     	 adds r7,r7,#12
 3525              	.LCFI323:
 3526              	 .cfi_def_cfa_offset 4
 3527 001c BD46     	 mov sp,r7
 3528              	.LCFI324:
 3529              	 .cfi_def_cfa_register 13
 3530              	 
 3531 001e 5DF8047B 	 ldr r7,[sp],#4
 3532              	.LCFI325:
 3533              	 .cfi_restore 7
 3534              	 .cfi_def_cfa_offset 0
 3535 0022 7047     	 bx lr
 3536              	.L244:
 3537              	 .align 2
 3538              	.L243:
 3539 0024 00460050 	 .word 1342195200
 3540              	 .cfi_endproc
 3541              	.LFE230:
 3543              	 .section .text.XMC_SCU_CLOCK_SetCcuClockDivider,"ax",%progbits
 3544              	 .align 2
 3545              	 .global XMC_SCU_CLOCK_SetCcuClockDivider
 3546              	 .thumb
 3547              	 .thumb_func
 3549              	XMC_SCU_CLOCK_SetCcuClockDivider:
 3550              	.LFB231:
 976:../Libraries/XMCLib/src/xmc4_scu.c **** 
 977:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fccu and its parent */
 978:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t divider)
 979:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3551              	 .loc 3 979 0
 3552              	 .cfi_startproc
 3553              	 
 3554              	 
 3555              	 
 3556 0000 80B4     	 push {r7}
 3557              	.LCFI326:
 3558              	 .cfi_def_cfa_offset 4
 3559              	 .cfi_offset 7,-4
 3560 0002 83B0     	 sub sp,sp,#12
 3561              	.LCFI327:
 3562              	 .cfi_def_cfa_offset 16
 3563 0004 00AF     	 add r7,sp,#0
 3564              	.LCFI328:
 3565              	 .cfi_def_cfa_register 7
 3566 0006 7860     	 str r0,[r7,#4]
 980:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCapcomClockDivider:Wrong clock divider value", (divider <= 2UL) );
 981:../Libraries/XMCLib/src/xmc4_scu.c **** 
 982:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CCUCLKCR = (SCU_CLK->CCUCLKCR & ((uint32_t)~SCU_CLK_CCUCLKCR_CCUDIV_Msk)) |
 3567              	 .loc 3 982 0
 3568 0008 0649     	 ldr r1,.L246
 3569 000a 064B     	 ldr r3,.L246
 3570 000c 1B6A     	 ldr r3,[r3,#32]
 3571 000e 23F00102 	 bic r2,r3,#1
 983:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3572              	 .loc 3 983 0
 3573 0012 7B68     	 ldr r3,[r7,#4]
 3574 0014 013B     	 subs r3,r3,#1
 982:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3575              	 .loc 3 982 0
 3576 0016 1343     	 orrs r3,r3,r2
 3577 0018 0B62     	 str r3,[r1,#32]
 984:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3578              	 .loc 3 984 0
 3579 001a 0C37     	 adds r7,r7,#12
 3580              	.LCFI329:
 3581              	 .cfi_def_cfa_offset 4
 3582 001c BD46     	 mov sp,r7
 3583              	.LCFI330:
 3584              	 .cfi_def_cfa_register 13
 3585              	 
 3586 001e 5DF8047B 	 ldr r7,[sp],#4
 3587              	.LCFI331:
 3588              	 .cfi_restore 7
 3589              	 .cfi_def_cfa_offset 0
 3590 0022 7047     	 bx lr
 3591              	.L247:
 3592              	 .align 2
 3593              	.L246:
 3594 0024 00460050 	 .word 1342195200
 3595              	 .cfi_endproc
 3596              	.LFE231:
 3598              	 .section .text.XMC_SCU_CLOCK_SetCpuClockDivider,"ax",%progbits
 3599              	 .align 2
 3600              	 .global XMC_SCU_CLOCK_SetCpuClockDivider
 3601              	 .thumb
 3602              	 .thumb_func
 3604              	XMC_SCU_CLOCK_SetCpuClockDivider:
 3605              	.LFB232:
 985:../Libraries/XMCLib/src/xmc4_scu.c **** 
 986:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fcpu and its parent */
 987:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t divider)
 988:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3606              	 .loc 3 988 0
 3607              	 .cfi_startproc
 3608              	 
 3609              	 
 3610              	 
 3611 0000 80B4     	 push {r7}
 3612              	.LCFI332:
 3613              	 .cfi_def_cfa_offset 4
 3614              	 .cfi_offset 7,-4
 3615 0002 83B0     	 sub sp,sp,#12
 3616              	.LCFI333:
 3617              	 .cfi_def_cfa_offset 16
 3618 0004 00AF     	 add r7,sp,#0
 3619              	.LCFI334:
 3620              	 .cfi_def_cfa_register 7
 3621 0006 7860     	 str r0,[r7,#4]
 989:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCpuClockDivider:Wrong clock divider value", (divider <= 2UL) );
 990:../Libraries/XMCLib/src/xmc4_scu.c **** 
 991:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CPUCLKCR = (SCU_CLK->CPUCLKCR & ((uint32_t)~SCU_CLK_CPUCLKCR_CPUDIV_Msk)) |
 3622              	 .loc 3 991 0
 3623 0008 0649     	 ldr r1,.L249
 3624 000a 064B     	 ldr r3,.L249
 3625 000c 1B69     	 ldr r3,[r3,#16]
 3626 000e 23F00102 	 bic r2,r3,#1
 992:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3627              	 .loc 3 992 0
 3628 0012 7B68     	 ldr r3,[r7,#4]
 3629 0014 013B     	 subs r3,r3,#1
 991:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3630              	 .loc 3 991 0
 3631 0016 1343     	 orrs r3,r3,r2
 3632 0018 0B61     	 str r3,[r1,#16]
 993:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3633              	 .loc 3 993 0
 3634 001a 0C37     	 adds r7,r7,#12
 3635              	.LCFI335:
 3636              	 .cfi_def_cfa_offset 4
 3637 001c BD46     	 mov sp,r7
 3638              	.LCFI336:
 3639              	 .cfi_def_cfa_register 13
 3640              	 
 3641 001e 5DF8047B 	 ldr r7,[sp],#4
 3642              	.LCFI337:
 3643              	 .cfi_restore 7
 3644              	 .cfi_def_cfa_offset 0
 3645 0022 7047     	 bx lr
 3646              	.L250:
 3647              	 .align 2
 3648              	.L249:
 3649 0024 00460050 	 .word 1342195200
 3650              	 .cfi_endproc
 3651              	.LFE232:
 3653              	 .section .text.XMC_SCU_CLOCK_SetPeripheralClockDivider,"ax",%progbits
 3654              	 .align 2
 3655              	 .global XMC_SCU_CLOCK_SetPeripheralClockDivider
 3656              	 .thumb
 3657              	 .thumb_func
 3659              	XMC_SCU_CLOCK_SetPeripheralClockDivider:
 3660              	.LFB233:
 994:../Libraries/XMCLib/src/xmc4_scu.c **** 
 995:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fperiph and its parent */
 996:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t divider)
 997:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3661              	 .loc 3 997 0
 3662              	 .cfi_startproc
 3663              	 
 3664              	 
 3665              	 
 3666 0000 80B4     	 push {r7}
 3667              	.LCFI338:
 3668              	 .cfi_def_cfa_offset 4
 3669              	 .cfi_offset 7,-4
 3670 0002 83B0     	 sub sp,sp,#12
 3671              	.LCFI339:
 3672              	 .cfi_def_cfa_offset 16
 3673 0004 00AF     	 add r7,sp,#0
 3674              	.LCFI340:
 3675              	 .cfi_def_cfa_register 7
 3676 0006 7860     	 str r0,[r7,#4]
 998:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetPeripheralClockDivider:Wrong clock divider value", (divider <= 2UL) 
 999:../Libraries/XMCLib/src/xmc4_scu.c **** 
1000:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->PBCLKCR = (SCU_CLK->PBCLKCR & ((uint32_t)~SCU_CLK_PBCLKCR_PBDIV_Msk)) |
 3677              	 .loc 3 1000 0
 3678 0008 0649     	 ldr r1,.L252
 3679 000a 064B     	 ldr r3,.L252
 3680 000c 5B69     	 ldr r3,[r3,#20]
 3681 000e 23F00102 	 bic r2,r3,#1
1001:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3682              	 .loc 3 1001 0
 3683 0012 7B68     	 ldr r3,[r7,#4]
 3684 0014 013B     	 subs r3,r3,#1
1000:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3685              	 .loc 3 1000 0
 3686 0016 1343     	 orrs r3,r3,r2
 3687 0018 4B61     	 str r3,[r1,#20]
1002:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3688              	 .loc 3 1002 0
 3689 001a 0C37     	 adds r7,r7,#12
 3690              	.LCFI341:
 3691              	 .cfi_def_cfa_offset 4
 3692 001c BD46     	 mov sp,r7
 3693              	.LCFI342:
 3694              	 .cfi_def_cfa_register 13
 3695              	 
 3696 001e 5DF8047B 	 ldr r7,[sp],#4
 3697              	.LCFI343:
 3698              	 .cfi_restore 7
 3699              	 .cfi_def_cfa_offset 0
 3700 0022 7047     	 bx lr
 3701              	.L253:
 3702              	 .align 2
 3703              	.L252:
 3704 0024 00460050 	 .word 1342195200
 3705              	 .cfi_endproc
 3706              	.LFE233:
 3708              	 .section .text.XMC_SCU_CLOCK_SetUsbClockDivider,"ax",%progbits
 3709              	 .align 2
 3710              	 .global XMC_SCU_CLOCK_SetUsbClockDivider
 3711              	 .thumb
 3712              	 .thumb_func
 3714              	XMC_SCU_CLOCK_SetUsbClockDivider:
 3715              	.LFB234:
1003:../Libraries/XMCLib/src/xmc4_scu.c **** 
1004:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsdmmc and its parent */
1005:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t divider)
1006:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3716              	 .loc 3 1006 0
 3717              	 .cfi_startproc
 3718              	 
 3719              	 
 3720              	 
 3721 0000 80B4     	 push {r7}
 3722              	.LCFI344:
 3723              	 .cfi_def_cfa_offset 4
 3724              	 .cfi_offset 7,-4
 3725 0002 83B0     	 sub sp,sp,#12
 3726              	.LCFI345:
 3727              	 .cfi_def_cfa_offset 16
 3728 0004 00AF     	 add r7,sp,#0
 3729              	.LCFI346:
 3730              	 .cfi_def_cfa_register 7
 3731 0006 7860     	 str r0,[r7,#4]
1007:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSdmmcClockDivider:Wrong clock divider value",
1008:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_USBCLKCR_USBDIV_Msk + 1UL)) );
1009:../Libraries/XMCLib/src/xmc4_scu.c **** 
1010:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBDIV_Msk)) |
 3732              	 .loc 3 1010 0
 3733 0008 0649     	 ldr r1,.L255
 3734 000a 064B     	 ldr r3,.L255
 3735 000c 9B69     	 ldr r3,[r3,#24]
 3736 000e 23F00702 	 bic r2,r3,#7
1011:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3737              	 .loc 3 1011 0
 3738 0012 7B68     	 ldr r3,[r7,#4]
 3739 0014 013B     	 subs r3,r3,#1
1010:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3740              	 .loc 3 1010 0
 3741 0016 1343     	 orrs r3,r3,r2
 3742 0018 8B61     	 str r3,[r1,#24]
1012:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3743              	 .loc 3 1012 0
 3744 001a 0C37     	 adds r7,r7,#12
 3745              	.LCFI347:
 3746              	 .cfi_def_cfa_offset 4
 3747 001c BD46     	 mov sp,r7
 3748              	.LCFI348:
 3749              	 .cfi_def_cfa_register 13
 3750              	 
 3751 001e 5DF8047B 	 ldr r7,[sp],#4
 3752              	.LCFI349:
 3753              	 .cfi_restore 7
 3754              	 .cfi_def_cfa_offset 0
 3755 0022 7047     	 bx lr
 3756              	.L256:
 3757              	 .align 2
 3758              	.L255:
 3759 0024 00460050 	 .word 1342195200
 3760              	 .cfi_endproc
 3761              	.LFE234:
 3763              	 .section .text.XMC_SCU_CLOCK_SetEbuClockDivider,"ax",%progbits
 3764              	 .align 2
 3765              	 .global XMC_SCU_CLOCK_SetEbuClockDivider
 3766              	 .thumb
 3767              	 .thumb_func
 3769              	XMC_SCU_CLOCK_SetEbuClockDivider:
 3770              	.LFB235:
1013:../Libraries/XMCLib/src/xmc4_scu.c **** 
1014:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
1015:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between febu and its parent */
1016:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t divider)
1017:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3771              	 .loc 3 1017 0
 3772              	 .cfi_startproc
 3773              	 
 3774              	 
 3775              	 
 3776 0000 80B4     	 push {r7}
 3777              	.LCFI350:
 3778              	 .cfi_def_cfa_offset 4
 3779              	 .cfi_offset 7,-4
 3780 0002 83B0     	 sub sp,sp,#12
 3781              	.LCFI351:
 3782              	 .cfi_def_cfa_offset 16
 3783 0004 00AF     	 add r7,sp,#0
 3784              	.LCFI352:
 3785              	 .cfi_def_cfa_register 7
 3786 0006 7860     	 str r0,[r7,#4]
1018:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetEbuClockDivider:Wrong clock divider value",
1019:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EBUCLKCR_EBUDIV_Msk + 1UL) ) );
1020:../Libraries/XMCLib/src/xmc4_scu.c **** 
1021:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EBUCLKCR = (SCU_CLK->EBUCLKCR & ((uint32_t)~SCU_CLK_EBUCLKCR_EBUDIV_Msk)) |
 3787              	 .loc 3 1021 0
 3788 0008 0649     	 ldr r1,.L258
 3789 000a 064B     	 ldr r3,.L258
 3790 000c DB69     	 ldr r3,[r3,#28]
 3791 000e 23F03F02 	 bic r2,r3,#63
1022:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3792              	 .loc 3 1022 0
 3793 0012 7B68     	 ldr r3,[r7,#4]
 3794 0014 013B     	 subs r3,r3,#1
1021:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3795              	 .loc 3 1021 0
 3796 0016 1343     	 orrs r3,r3,r2
 3797 0018 CB61     	 str r3,[r1,#28]
1023:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3798              	 .loc 3 1023 0
 3799 001a 0C37     	 adds r7,r7,#12
 3800              	.LCFI353:
 3801              	 .cfi_def_cfa_offset 4
 3802 001c BD46     	 mov sp,r7
 3803              	.LCFI354:
 3804              	 .cfi_def_cfa_register 13
 3805              	 
 3806 001e 5DF8047B 	 ldr r7,[sp],#4
 3807              	.LCFI355:
 3808              	 .cfi_restore 7
 3809              	 .cfi_def_cfa_offset 0
 3810 0022 7047     	 bx lr
 3811              	.L259:
 3812              	 .align 2
 3813              	.L258:
 3814 0024 00460050 	 .word 1342195200
 3815              	 .cfi_endproc
 3816              	.LFE235:
 3818              	 .section .text.XMC_SCU_CLOCK_SetWdtClockDivider,"ax",%progbits
 3819              	 .align 2
 3820              	 .global XMC_SCU_CLOCK_SetWdtClockDivider
 3821              	 .thumb
 3822              	 .thumb_func
 3824              	XMC_SCU_CLOCK_SetWdtClockDivider:
 3825              	.LFB236:
1024:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1025:../Libraries/XMCLib/src/xmc4_scu.c **** 
1026:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fwdt and its parent */
1027:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t divider)
1028:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3826              	 .loc 3 1028 0
 3827              	 .cfi_startproc
 3828              	 
 3829              	 
 3830              	 
 3831 0000 80B4     	 push {r7}
 3832              	.LCFI356:
 3833              	 .cfi_def_cfa_offset 4
 3834              	 .cfi_offset 7,-4
 3835 0002 83B0     	 sub sp,sp,#12
 3836              	.LCFI357:
 3837              	 .cfi_def_cfa_offset 16
 3838 0004 00AF     	 add r7,sp,#0
 3839              	.LCFI358:
 3840              	 .cfi_def_cfa_register 7
 3841 0006 7860     	 str r0,[r7,#4]
1029:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetWdtClockDivider:Wrong clock divider value",
1030:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_WDTCLKCR_WDTDIV_Msk + 1UL) ) );
1031:../Libraries/XMCLib/src/xmc4_scu.c **** 
1032:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTDIV_Msk)) |
 3842              	 .loc 3 1032 0
 3843 0008 0649     	 ldr r1,.L261
 3844 000a 064B     	 ldr r3,.L261
 3845 000c 5B6A     	 ldr r3,[r3,#36]
 3846 000e 23F0FF02 	 bic r2,r3,#255
1033:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3847              	 .loc 3 1033 0
 3848 0012 7B68     	 ldr r3,[r7,#4]
 3849 0014 013B     	 subs r3,r3,#1
1032:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3850              	 .loc 3 1032 0
 3851 0016 1343     	 orrs r3,r3,r2
 3852 0018 4B62     	 str r3,[r1,#36]
1034:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3853              	 .loc 3 1034 0
 3854 001a 0C37     	 adds r7,r7,#12
 3855              	.LCFI359:
 3856              	 .cfi_def_cfa_offset 4
 3857 001c BD46     	 mov sp,r7
 3858              	.LCFI360:
 3859              	 .cfi_def_cfa_register 13
 3860              	 
 3861 001e 5DF8047B 	 ldr r7,[sp],#4
 3862              	.LCFI361:
 3863              	 .cfi_restore 7
 3864              	 .cfi_def_cfa_offset 0
 3865 0022 7047     	 bx lr
 3866              	.L262:
 3867              	 .align 2
 3868              	.L261:
 3869 0024 00460050 	 .word 1342195200
 3870              	 .cfi_endproc
 3871              	.LFE236:
 3873              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider,"ax",%progbits
 3874              	 .align 2
 3875              	 .global XMC_SCU_CLOCK_SetExternalOutputClockDivider
 3876              	 .thumb
 3877              	 .thumb_func
 3879              	XMC_SCU_CLOCK_SetExternalOutputClockDivider:
 3880              	.LFB237:
1035:../Libraries/XMCLib/src/xmc4_scu.c **** 
1036:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fext and its parent */
1037:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t divider)
1038:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3881              	 .loc 3 1038 0
 3882              	 .cfi_startproc
 3883              	 
 3884              	 
 3885              	 
 3886 0000 80B4     	 push {r7}
 3887              	.LCFI362:
 3888              	 .cfi_def_cfa_offset 4
 3889              	 .cfi_offset 7,-4
 3890 0002 83B0     	 sub sp,sp,#12
 3891              	.LCFI363:
 3892              	 .cfi_def_cfa_offset 16
 3893 0004 00AF     	 add r7,sp,#0
 3894              	.LCFI364:
 3895              	 .cfi_def_cfa_register 7
 3896 0006 7860     	 str r0,[r7,#4]
1039:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetExternalOutputClockDivider:Wrong clock divider value",
1040:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EXTCLKCR_ECKDIV_Msk + 1UL) ) );
1041:../Libraries/XMCLib/src/xmc4_scu.c **** 
1042:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKDIV_Msk)) |
 3897              	 .loc 3 1042 0
 3898 0008 0849     	 ldr r1,.L264
 3899 000a 084B     	 ldr r3,.L264
 3900 000c 9B6A     	 ldr r3,[r3,#40]
 3901 000e 23F0FF73 	 bic r3,r3,#33423360
 3902 0012 23F48033 	 bic r3,r3,#65536
1043:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 3903              	 .loc 3 1043 0
 3904 0016 7A68     	 ldr r2,[r7,#4]
 3905 0018 013A     	 subs r2,r2,#1
 3906 001a 1204     	 lsls r2,r2,#16
1042:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 3907              	 .loc 3 1042 0
 3908 001c 1343     	 orrs r3,r3,r2
 3909 001e 8B62     	 str r3,[r1,#40]
1044:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3910              	 .loc 3 1044 0
 3911 0020 0C37     	 adds r7,r7,#12
 3912              	.LCFI365:
 3913              	 .cfi_def_cfa_offset 4
 3914 0022 BD46     	 mov sp,r7
 3915              	.LCFI366:
 3916              	 .cfi_def_cfa_register 13
 3917              	 
 3918 0024 5DF8047B 	 ldr r7,[sp],#4
 3919              	.LCFI367:
 3920              	 .cfi_restore 7
 3921              	 .cfi_def_cfa_offset 0
 3922 0028 7047     	 bx lr
 3923              	.L265:
 3924 002a 00BF     	 .align 2
 3925              	.L264:
 3926 002c 00460050 	 .word 1342195200
 3927              	 .cfi_endproc
 3928              	.LFE237:
 3930              	 .section .text.XMC_SCU_CLOCK_EnableClock,"ax",%progbits
 3931              	 .align 2
 3932              	 .global XMC_SCU_CLOCK_EnableClock
 3933              	 .thumb
 3934              	 .thumb_func
 3936              	XMC_SCU_CLOCK_EnableClock:
 3937              	.LFB238:
1045:../Libraries/XMCLib/src/xmc4_scu.c **** 
1046:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
1047:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the ECAT clock by setting the clock divider for the ECAT clock source */
1048:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider)
1049:../Libraries/XMCLib/src/xmc4_scu.c **** {
1050:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
1051:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_ECATCLKCR_ECADIV_Pos);
1052:../Libraries/XMCLib/src/xmc4_scu.c **** }
1053:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1054:../Libraries/XMCLib/src/xmc4_scu.c **** 
1055:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a given module clock */
1056:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock)
1057:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3938              	 .loc 3 1057 0
 3939              	 .cfi_startproc
 3940              	 
 3941              	 
 3942              	 
 3943 0000 80B4     	 push {r7}
 3944              	.LCFI368:
 3945              	 .cfi_def_cfa_offset 4
 3946              	 .cfi_offset 7,-4
 3947 0002 83B0     	 sub sp,sp,#12
 3948              	.LCFI369:
 3949              	 .cfi_def_cfa_offset 16
 3950 0004 00AF     	 add r7,sp,#0
 3951              	.LCFI370:
 3952              	 .cfi_def_cfa_register 7
 3953 0006 0346     	 mov r3,r0
 3954 0008 FB71     	 strb r3,[r7,#7]
1058:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKSET = ((uint32_t)clock);
 3955              	 .loc 3 1058 0
 3956 000a 044A     	 ldr r2,.L267
 3957 000c FB79     	 ldrb r3,[r7,#7]
 3958 000e 5360     	 str r3,[r2,#4]
1059:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3959              	 .loc 3 1059 0
 3960 0010 0C37     	 adds r7,r7,#12
 3961              	.LCFI371:
 3962              	 .cfi_def_cfa_offset 4
 3963 0012 BD46     	 mov sp,r7
 3964              	.LCFI372:
 3965              	 .cfi_def_cfa_register 13
 3966              	 
 3967 0014 5DF8047B 	 ldr r7,[sp],#4
 3968              	.LCFI373:
 3969              	 .cfi_restore 7
 3970              	 .cfi_def_cfa_offset 0
 3971 0018 7047     	 bx lr
 3972              	.L268:
 3973 001a 00BF     	 .align 2
 3974              	.L267:
 3975 001c 00460050 	 .word 1342195200
 3976              	 .cfi_endproc
 3977              	.LFE238:
 3979              	 .section .text.XMC_SCU_CLOCK_DisableClock,"ax",%progbits
 3980              	 .align 2
 3981              	 .global XMC_SCU_CLOCK_DisableClock
 3982              	 .thumb
 3983              	 .thumb_func
 3985              	XMC_SCU_CLOCK_DisableClock:
 3986              	.LFB239:
1060:../Libraries/XMCLib/src/xmc4_scu.c **** 
1061:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a given module clock */
1062:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock)
1063:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3987              	 .loc 3 1063 0
 3988              	 .cfi_startproc
 3989              	 
 3990              	 
 3991              	 
 3992 0000 80B4     	 push {r7}
 3993              	.LCFI374:
 3994              	 .cfi_def_cfa_offset 4
 3995              	 .cfi_offset 7,-4
 3996 0002 83B0     	 sub sp,sp,#12
 3997              	.LCFI375:
 3998              	 .cfi_def_cfa_offset 16
 3999 0004 00AF     	 add r7,sp,#0
 4000              	.LCFI376:
 4001              	 .cfi_def_cfa_register 7
 4002 0006 0346     	 mov r3,r0
 4003 0008 FB71     	 strb r3,[r7,#7]
1064:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKCLR = ((uint32_t)clock);
 4004              	 .loc 3 1064 0
 4005 000a 044A     	 ldr r2,.L270
 4006 000c FB79     	 ldrb r3,[r7,#7]
 4007 000e 9360     	 str r3,[r2,#8]
1065:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4008              	 .loc 3 1065 0
 4009 0010 0C37     	 adds r7,r7,#12
 4010              	.LCFI377:
 4011              	 .cfi_def_cfa_offset 4
 4012 0012 BD46     	 mov sp,r7
 4013              	.LCFI378:
 4014              	 .cfi_def_cfa_register 13
 4015              	 
 4016 0014 5DF8047B 	 ldr r7,[sp],#4
 4017              	.LCFI379:
 4018              	 .cfi_restore 7
 4019              	 .cfi_def_cfa_offset 0
 4020 0018 7047     	 bx lr
 4021              	.L271:
 4022 001a 00BF     	 .align 2
 4023              	.L270:
 4024 001c 00460050 	 .word 1342195200
 4025              	 .cfi_endproc
 4026              	.LFE239:
 4028              	 .section .text.XMC_SCU_CLOCK_IsClockEnabled,"ax",%progbits
 4029              	 .align 2
 4030              	 .global XMC_SCU_CLOCK_IsClockEnabled
 4031              	 .thumb
 4032              	 .thumb_func
 4034              	XMC_SCU_CLOCK_IsClockEnabled:
 4035              	.LFB240:
1066:../Libraries/XMCLib/src/xmc4_scu.c **** 
1067:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if module clock of the given peripheral is enabled */
1068:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock)
1069:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4036              	 .loc 3 1069 0
 4037              	 .cfi_startproc
 4038              	 
 4039              	 
 4040              	 
 4041 0000 80B4     	 push {r7}
 4042              	.LCFI380:
 4043              	 .cfi_def_cfa_offset 4
 4044              	 .cfi_offset 7,-4
 4045 0002 83B0     	 sub sp,sp,#12
 4046              	.LCFI381:
 4047              	 .cfi_def_cfa_offset 16
 4048 0004 00AF     	 add r7,sp,#0
 4049              	.LCFI382:
 4050              	 .cfi_def_cfa_register 7
 4051 0006 0346     	 mov r3,r0
 4052 0008 FB71     	 strb r3,[r7,#7]
1070:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)(SCU_CLK->CLKSTAT & ((uint32_t)clock));
 4053              	 .loc 3 1070 0
 4054 000a 074B     	 ldr r3,.L274
 4055 000c 1A68     	 ldr r2,[r3]
 4056 000e FB79     	 ldrb r3,[r7,#7]
 4057 0010 1340     	 ands r3,r3,r2
 4058 0012 002B     	 cmp r3,#0
 4059 0014 14BF     	 ite ne
 4060 0016 0123     	 movne r3,#1
 4061 0018 0023     	 moveq r3,#0
 4062 001a DBB2     	 uxtb r3,r3
1071:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4063              	 .loc 3 1071 0
 4064 001c 1846     	 mov r0,r3
 4065 001e 0C37     	 adds r7,r7,#12
 4066              	.LCFI383:
 4067              	 .cfi_def_cfa_offset 4
 4068 0020 BD46     	 mov sp,r7
 4069              	.LCFI384:
 4070              	 .cfi_def_cfa_register 13
 4071              	 
 4072 0022 5DF8047B 	 ldr r7,[sp],#4
 4073              	.LCFI385:
 4074              	 .cfi_restore 7
 4075              	 .cfi_def_cfa_offset 0
 4076 0026 7047     	 bx lr
 4077              	.L275:
 4078              	 .align 2
 4079              	.L274:
 4080 0028 00460050 	 .word 1342195200
 4081              	 .cfi_endproc
 4082              	.LFE240:
 4084              	 .section .text.XMC_SCU_CLOCK_GatePeripheralClock,"ax",%progbits
 4085              	 .align 2
 4086              	 .global XMC_SCU_CLOCK_GatePeripheralClock
 4087              	 .thumb
 4088              	 .thumb_func
 4090              	XMC_SCU_CLOCK_GatePeripheralClock:
 4091              	.LFB241:
1072:../Libraries/XMCLib/src/xmc4_scu.c **** 
1073:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(CLOCK_GATING_SUPPORTED)
1074:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to gate a given module clock */
1075:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1076:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4092              	 .loc 3 1076 0
 4093              	 .cfi_startproc
 4094              	 
 4095              	 
 4096              	 
 4097 0000 80B4     	 push {r7}
 4098              	.LCFI386:
 4099              	 .cfi_def_cfa_offset 4
 4100              	 .cfi_offset 7,-4
 4101 0002 85B0     	 sub sp,sp,#20
 4102              	.LCFI387:
 4103              	 .cfi_def_cfa_offset 24
 4104 0004 00AF     	 add r7,sp,#0
 4105              	.LCFI388:
 4106              	 .cfi_def_cfa_register 7
 4107 0006 7860     	 str r0,[r7,#4]
1077:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (peripheral & 0xf0000000UL) >> 28UL;
 4108              	 .loc 3 1077 0
 4109 0008 7B68     	 ldr r3,[r7,#4]
 4110 000a 1B0F     	 lsrs r3,r3,#28
 4111 000c FB60     	 str r3,[r7,#12]
1078:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4112              	 .loc 3 1078 0
 4113 000e 7B68     	 ldr r3,[r7,#4]
 4114 0010 23F07043 	 bic r3,r3,#-268435456
 4115 0014 BB60     	 str r3,[r7,#8]
1079:../Libraries/XMCLib/src/xmc4_scu.c **** 
1080:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)((&(SCU_CLK->CGATSET0)) + (index * 3U)) = (uint32_t)mask;
 4116              	 .loc 3 1080 0
 4117 0016 FA68     	 ldr r2,[r7,#12]
 4118 0018 1346     	 mov r3,r2
 4119 001a 5B00     	 lsls r3,r3,#1
 4120 001c 1344     	 add r3,r3,r2
 4121 001e 9B00     	 lsls r3,r3,#2
 4122 0020 1A46     	 mov r2,r3
 4123 0022 044B     	 ldr r3,.L277
 4124 0024 1344     	 add r3,r3,r2
 4125 0026 BA68     	 ldr r2,[r7,#8]
 4126 0028 1A60     	 str r2,[r3]
1081:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4127              	 .loc 3 1081 0
 4128 002a 1437     	 adds r7,r7,#20
 4129              	.LCFI389:
 4130              	 .cfi_def_cfa_offset 4
 4131 002c BD46     	 mov sp,r7
 4132              	.LCFI390:
 4133              	 .cfi_def_cfa_register 13
 4134              	 
 4135 002e 5DF8047B 	 ldr r7,[sp],#4
 4136              	.LCFI391:
 4137              	 .cfi_restore 7
 4138              	 .cfi_def_cfa_offset 0
 4139 0032 7047     	 bx lr
 4140              	.L278:
 4141              	 .align 2
 4142              	.L277:
 4143 0034 44460050 	 .word 1342195268
 4144              	 .cfi_endproc
 4145              	.LFE241:
 4147              	 .section .text.XMC_SCU_CLOCK_UngatePeripheralClock,"ax",%progbits
 4148              	 .align 2
 4149              	 .global XMC_SCU_CLOCK_UngatePeripheralClock
 4150              	 .thumb
 4151              	 .thumb_func
 4153              	XMC_SCU_CLOCK_UngatePeripheralClock:
 4154              	.LFB242:
1082:../Libraries/XMCLib/src/xmc4_scu.c **** 
1083:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1084:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1085:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4155              	 .loc 3 1085 0
 4156              	 .cfi_startproc
 4157              	 
 4158              	 
 4159              	 
 4160 0000 80B4     	 push {r7}
 4161              	.LCFI392:
 4162              	 .cfi_def_cfa_offset 4
 4163              	 .cfi_offset 7,-4
 4164 0002 85B0     	 sub sp,sp,#20
 4165              	.LCFI393:
 4166              	 .cfi_def_cfa_offset 24
 4167 0004 00AF     	 add r7,sp,#0
 4168              	.LCFI394:
 4169              	 .cfi_def_cfa_register 7
 4170 0006 7860     	 str r0,[r7,#4]
1086:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((peripheral & 0xf0000000UL) >> 28UL);
 4171              	 .loc 3 1086 0
 4172 0008 7B68     	 ldr r3,[r7,#4]
 4173 000a 1B0F     	 lsrs r3,r3,#28
 4174 000c FB60     	 str r3,[r7,#12]
1087:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4175              	 .loc 3 1087 0
 4176 000e 7B68     	 ldr r3,[r7,#4]
 4177 0010 23F07043 	 bic r3,r3,#-268435456
 4178 0014 BB60     	 str r3,[r7,#8]
1088:../Libraries/XMCLib/src/xmc4_scu.c **** 
1089:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_CLK->CGATCLR0) + (index * 3U)) = (uint32_t)mask;
 4179              	 .loc 3 1089 0
 4180 0016 FA68     	 ldr r2,[r7,#12]
 4181 0018 1346     	 mov r3,r2
 4182 001a 5B00     	 lsls r3,r3,#1
 4183 001c 1344     	 add r3,r3,r2
 4184 001e 9B00     	 lsls r3,r3,#2
 4185 0020 1A46     	 mov r2,r3
 4186 0022 044B     	 ldr r3,.L280
 4187 0024 1344     	 add r3,r3,r2
 4188 0026 BA68     	 ldr r2,[r7,#8]
 4189 0028 1A60     	 str r2,[r3]
1090:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4190              	 .loc 3 1090 0
 4191 002a 1437     	 adds r7,r7,#20
 4192              	.LCFI395:
 4193              	 .cfi_def_cfa_offset 4
 4194 002c BD46     	 mov sp,r7
 4195              	.LCFI396:
 4196              	 .cfi_def_cfa_register 13
 4197              	 
 4198 002e 5DF8047B 	 ldr r7,[sp],#4
 4199              	.LCFI397:
 4200              	 .cfi_restore 7
 4201              	 .cfi_def_cfa_offset 0
 4202 0032 7047     	 bx lr
 4203              	.L281:
 4204              	 .align 2
 4205              	.L280:
 4206 0034 48460050 	 .word 1342195272
 4207              	 .cfi_endproc
 4208              	.LFE242:
 4210              	 .section .text.XMC_SCU_CLOCK_IsPeripheralClockGated,"ax",%progbits
 4211              	 .align 2
 4212              	 .global XMC_SCU_CLOCK_IsPeripheralClockGated
 4213              	 .thumb
 4214              	 .thumb_func
 4216              	XMC_SCU_CLOCK_IsPeripheralClockGated:
 4217              	.LFB243:
1091:../Libraries/XMCLib/src/xmc4_scu.c **** 
1092:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1093:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1094:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4218              	 .loc 3 1094 0
 4219              	 .cfi_startproc
 4220              	 
 4221              	 
 4222              	 
 4223 0000 80B4     	 push {r7}
 4224              	.LCFI398:
 4225              	 .cfi_def_cfa_offset 4
 4226              	 .cfi_offset 7,-4
 4227 0002 85B0     	 sub sp,sp,#20
 4228              	.LCFI399:
 4229              	 .cfi_def_cfa_offset 24
 4230 0004 00AF     	 add r7,sp,#0
 4231              	.LCFI400:
 4232              	 .cfi_def_cfa_register 7
 4233 0006 7860     	 str r0,[r7,#4]
1095:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = ((peripheral & 0xf0000000UL) >> 28UL);
 4234              	 .loc 3 1095 0
 4235 0008 7B68     	 ldr r3,[r7,#4]
 4236 000a 1B0F     	 lsrs r3,r3,#28
 4237 000c FB60     	 str r3,[r7,#12]
1096:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4238              	 .loc 3 1096 0
 4239 000e 7B68     	 ldr r3,[r7,#4]
 4240 0010 23F07043 	 bic r3,r3,#-268435456
 4241 0014 BB60     	 str r3,[r7,#8]
1097:../Libraries/XMCLib/src/xmc4_scu.c **** 
1098:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_CLK->CGATSTAT0) + (index * 3U)) & mask) != 0U);
 4242              	 .loc 3 1098 0
 4243 0016 FA68     	 ldr r2,[r7,#12]
 4244 0018 1346     	 mov r3,r2
 4245 001a 5B00     	 lsls r3,r3,#1
 4246 001c 1344     	 add r3,r3,r2
 4247 001e 9B00     	 lsls r3,r3,#2
 4248 0020 1A46     	 mov r2,r3
 4249 0022 084B     	 ldr r3,.L284
 4250 0024 1344     	 add r3,r3,r2
 4251 0026 1A68     	 ldr r2,[r3]
 4252 0028 BB68     	 ldr r3,[r7,#8]
 4253 002a 1340     	 ands r3,r3,r2
 4254 002c 002B     	 cmp r3,#0
 4255 002e 14BF     	 ite ne
 4256 0030 0123     	 movne r3,#1
 4257 0032 0023     	 moveq r3,#0
 4258 0034 DBB2     	 uxtb r3,r3
1099:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4259              	 .loc 3 1099 0
 4260 0036 1846     	 mov r0,r3
 4261 0038 1437     	 adds r7,r7,#20
 4262              	.LCFI401:
 4263              	 .cfi_def_cfa_offset 4
 4264 003a BD46     	 mov sp,r7
 4265              	.LCFI402:
 4266              	 .cfi_def_cfa_register 13
 4267              	 
 4268 003c 5DF8047B 	 ldr r7,[sp],#4
 4269              	.LCFI403:
 4270              	 .cfi_restore 7
 4271              	 .cfi_def_cfa_offset 0
 4272 0040 7047     	 bx lr
 4273              	.L285:
 4274 0042 00BF     	 .align 2
 4275              	.L284:
 4276 0044 40460050 	 .word 1342195264
 4277              	 .cfi_endproc
 4278              	.LFE243:
 4280              	 .section .text.XMC_SCU_POWER_GetEVR13Voltage,"ax",%progbits
 4281              	 .align 2
 4282              	 .global XMC_SCU_POWER_GetEVR13Voltage
 4283              	 .thumb
 4284              	 .thumb_func
 4286              	XMC_SCU_POWER_GetEVR13Voltage:
 4287              	.LFB244:
1100:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1101:../Libraries/XMCLib/src/xmc4_scu.c **** 
1102:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR13Voltage(void)
1103:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4288              	 .loc 3 1103 0
 4289              	 .cfi_startproc
 4290              	 
 4291              	 
 4292              	 
 4293 0000 80B4     	 push {r7}
 4294              	.LCFI404:
 4295              	 .cfi_def_cfa_offset 4
 4296              	 .cfi_offset 7,-4
 4297 0002 00AF     	 add r7,sp,#0
 4298              	.LCFI405:
 4299              	 .cfi_def_cfa_register 7
1104:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC13V_Msk) * XMC_SCU_POWER_LSB13V;
 4300              	 .loc 3 1104 0
 4301 0004 084B     	 ldr r3,.L288
 4302 0006 5B69     	 ldr r3,[r3,#20]
 4303 0008 DBB2     	 uxtb r3,r3
 4304 000a 07EE903A 	 fmsr s15,r3
 4305 000e F8EE677A 	 fuitos s15,s15
 4306 0012 9FED067A 	 flds s14,.L288+4
 4307 0016 67EE877A 	 fmuls s15,s15,s14
 4308 001a 17EE903A 	 fmrs r3,s15
1105:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4309              	 .loc 3 1105 0
 4310 001e 1846     	 mov r0,r3
 4311 0020 BD46     	 mov sp,r7
 4312              	.LCFI406:
 4313              	 .cfi_def_cfa_register 13
 4314              	 
 4315 0022 5DF8047B 	 ldr r7,[sp],#4
 4316              	.LCFI407:
 4317              	 .cfi_restore 7
 4318              	 .cfi_def_cfa_offset 0
 4319 0026 7047     	 bx lr
 4320              	.L289:
 4321              	 .align 2
 4322              	.L288:
 4323 0028 00420050 	 .word 1342194176
 4324 002c ED0DBE3B 	 .word 1002311149
 4325              	 .cfi_endproc
 4326              	.LFE244:
 4328              	 .section .text.XMC_SCU_POWER_GetEVR33Voltage,"ax",%progbits
 4329              	 .align 2
 4330              	 .global XMC_SCU_POWER_GetEVR33Voltage
 4331              	 .thumb
 4332              	 .thumb_func
 4334              	XMC_SCU_POWER_GetEVR33Voltage:
 4335              	.LFB245:
1106:../Libraries/XMCLib/src/xmc4_scu.c **** 
1107:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR33Voltage(void)
1108:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4336              	 .loc 3 1108 0
 4337              	 .cfi_startproc
 4338              	 
 4339              	 
 4340              	 
 4341 0000 80B4     	 push {r7}
 4342              	.LCFI408:
 4343              	 .cfi_def_cfa_offset 4
 4344              	 .cfi_offset 7,-4
 4345 0002 00AF     	 add r7,sp,#0
 4346              	.LCFI409:
 4347              	 .cfi_def_cfa_register 7
1109:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC33V_Msk) >> SCU_POWER_EVRVADCSTAT_VAD
 4348              	 .loc 3 1109 0
 4349 0004 094B     	 ldr r3,.L292
 4350 0006 5B69     	 ldr r3,[r3,#20]
 4351 0008 03F47F43 	 and r3,r3,#65280
 4352 000c 1B0A     	 lsrs r3,r3,#8
 4353 000e 07EE903A 	 fmsr s15,r3
 4354 0012 F8EE677A 	 fuitos s15,s15
 4355 0016 9FED067A 	 flds s14,.L292+4
 4356 001a 67EE877A 	 fmuls s15,s15,s14
 4357 001e 17EE903A 	 fmrs r3,s15
1110:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4358              	 .loc 3 1110 0
 4359 0022 1846     	 mov r0,r3
 4360 0024 BD46     	 mov sp,r7
 4361              	.LCFI410:
 4362              	 .cfi_def_cfa_register 13
 4363              	 
 4364 0026 5DF8047B 	 ldr r7,[sp],#4
 4365              	.LCFI411:
 4366              	 .cfi_restore 7
 4367              	 .cfi_def_cfa_offset 0
 4368 002a 7047     	 bx lr
 4369              	.L293:
 4370              	 .align 2
 4371              	.L292:
 4372 002c 00420050 	 .word 1342194176
 4373 0030 EC51B83C 	 .word 1018712556
 4374              	 .cfi_endproc
 4375              	.LFE245:
 4377              	 .section .text.XMC_SCU_CLOCK_EnableUsbPll,"ax",%progbits
 4378              	 .align 2
 4379              	 .global XMC_SCU_CLOCK_EnableUsbPll
 4380              	 .thumb
 4381              	 .thumb_func
 4383              	XMC_SCU_CLOCK_EnableUsbPll:
 4384              	.LFB246:
1111:../Libraries/XMCLib/src/xmc4_scu.c **** 
1112:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB PLL for USB clock */
1113:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableUsbPll(void)
1114:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4385              	 .loc 3 1114 0
 4386              	 .cfi_startproc
 4387              	 
 4388              	 
 4389              	 
 4390 0000 80B4     	 push {r7}
 4391              	.LCFI412:
 4392              	 .cfi_def_cfa_offset 4
 4393              	 .cfi_offset 7,-4
 4394 0002 00AF     	 add r7,sp,#0
 4395              	.LCFI413:
 4396              	 .cfi_def_cfa_register 7
1115:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4397              	 .loc 3 1115 0
 4398 0004 054A     	 ldr r2,.L295
 4399 0006 054B     	 ldr r3,.L295
 4400 0008 5B69     	 ldr r3,[r3,#20]
 4401 000a 23F48033 	 bic r3,r3,#65536
 4402 000e 23F00203 	 bic r3,r3,#2
 4403 0012 5361     	 str r3,[r2,#20]
1116:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4404              	 .loc 3 1116 0
 4405 0014 BD46     	 mov sp,r7
 4406              	.LCFI414:
 4407              	 .cfi_def_cfa_register 13
 4408              	 
 4409 0016 5DF8047B 	 ldr r7,[sp],#4
 4410              	.LCFI415:
 4411              	 .cfi_restore 7
 4412              	 .cfi_def_cfa_offset 0
 4413 001a 7047     	 bx lr
 4414              	.L296:
 4415              	 .align 2
 4416              	.L295:
 4417 001c 10470050 	 .word 1342195472
 4418              	 .cfi_endproc
 4419              	.LFE246:
 4421              	 .section .text.XMC_SCU_CLOCK_DisableUsbPll,"ax",%progbits
 4422              	 .align 2
 4423              	 .global XMC_SCU_CLOCK_DisableUsbPll
 4424              	 .thumb
 4425              	 .thumb_func
 4427              	XMC_SCU_CLOCK_DisableUsbPll:
 4428              	.LFB247:
1117:../Libraries/XMCLib/src/xmc4_scu.c **** 
1118:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL for USB clock */
1119:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableUsbPll(void)
1120:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4429              	 .loc 3 1120 0
 4430              	 .cfi_startproc
 4431              	 
 4432              	 
 4433              	 
 4434 0000 80B4     	 push {r7}
 4435              	.LCFI416:
 4436              	 .cfi_def_cfa_offset 4
 4437              	 .cfi_offset 7,-4
 4438 0002 00AF     	 add r7,sp,#0
 4439              	.LCFI417:
 4440              	 .cfi_def_cfa_register 7
1121:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4441              	 .loc 3 1121 0
 4442 0004 054A     	 ldr r2,.L298
 4443 0006 054B     	 ldr r3,.L298
 4444 0008 5B69     	 ldr r3,[r3,#20]
 4445 000a 43F48033 	 orr r3,r3,#65536
 4446 000e 43F00203 	 orr r3,r3,#2
 4447 0012 5361     	 str r3,[r2,#20]
1122:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4448              	 .loc 3 1122 0
 4449 0014 BD46     	 mov sp,r7
 4450              	.LCFI418:
 4451              	 .cfi_def_cfa_register 13
 4452              	 
 4453 0016 5DF8047B 	 ldr r7,[sp],#4
 4454              	.LCFI419:
 4455              	 .cfi_restore 7
 4456              	 .cfi_def_cfa_offset 0
 4457 001a 7047     	 bx lr
 4458              	.L299:
 4459              	 .align 2
 4460              	.L298:
 4461 001c 10470050 	 .word 1342195472
 4462              	 .cfi_endproc
 4463              	.LFE247:
 4465              	 .section .text.XMC_SCU_CLOCK_StartUsbPll,"ax",%progbits
 4466              	 .align 2
 4467              	 .global XMC_SCU_CLOCK_StartUsbPll
 4468              	 .thumb
 4469              	 .thumb_func
 4471              	XMC_SCU_CLOCK_StartUsbPll:
 4472              	.LFB248:
1123:../Libraries/XMCLib/src/xmc4_scu.c **** 
1124:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure USB PLL */
1125:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartUsbPll(uint32_t pdiv, uint32_t ndiv)
1126:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4473              	 .loc 3 1126 0
 4474              	 .cfi_startproc
 4475              	 
 4476              	 
 4477              	 
 4478 0000 80B4     	 push {r7}
 4479              	.LCFI420:
 4480              	 .cfi_def_cfa_offset 4
 4481              	 .cfi_offset 7,-4
 4482 0002 83B0     	 sub sp,sp,#12
 4483              	.LCFI421:
 4484              	 .cfi_def_cfa_offset 16
 4485 0004 00AF     	 add r7,sp,#0
 4486              	.LCFI422:
 4487              	 .cfi_def_cfa_register 7
 4488 0006 7860     	 str r0,[r7,#4]
 4489 0008 3960     	 str r1,[r7]
1127:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Go to bypass the USB PLL */
1128:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4490              	 .loc 3 1128 0
 4491 000a 194A     	 ldr r2,.L302
 4492 000c 184B     	 ldr r3,.L302
 4493 000e 5B69     	 ldr r3,[r3,#20]
 4494 0010 43F00103 	 orr r3,r3,#1
 4495 0014 5361     	 str r3,[r2,#20]
1129:../Libraries/XMCLib/src/xmc4_scu.c **** 
1130:../Libraries/XMCLib/src/xmc4_scu.c ****   /* disconnect Oscillator from USB PLL */
1131:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_FINDIS_Msk;
 4496              	 .loc 3 1131 0
 4497 0016 164A     	 ldr r2,.L302
 4498 0018 154B     	 ldr r3,.L302
 4499 001a 5B69     	 ldr r3,[r3,#20]
 4500 001c 43F01003 	 orr r3,r3,#16
 4501 0020 5361     	 str r3,[r2,#20]
1132:../Libraries/XMCLib/src/xmc4_scu.c **** 
1133:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Setup Divider settings for USB PLL */
1134:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)((uint32_t)((ndiv -1U) << SCU_PLL_USBPLLCON_NDIV_Pos) |
 4502              	 .loc 3 1134 0
 4503 0022 1349     	 ldr r1,.L302
 4504 0024 3B68     	 ldr r3,[r7]
 4505 0026 013B     	 subs r3,r3,#1
 4506 0028 1A02     	 lsls r2,r3,#8
1135:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4507              	 .loc 3 1135 0
 4508 002a 7B68     	 ldr r3,[r7,#4]
 4509 002c 013B     	 subs r3,r3,#1
 4510 002e 1B06     	 lsls r3,r3,#24
1134:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4511              	 .loc 3 1134 0
 4512 0030 1343     	 orrs r3,r3,r2
 4513 0032 4B61     	 str r3,[r1,#20]
1136:../Libraries/XMCLib/src/xmc4_scu.c **** 
1137:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Set OSCDISCDIS */
1138:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4514              	 .loc 3 1138 0
 4515 0034 0E4A     	 ldr r2,.L302
 4516 0036 0E4B     	 ldr r3,.L302
 4517 0038 5B69     	 ldr r3,[r3,#20]
 4518 003a 43F04003 	 orr r3,r3,#64
 4519 003e 5361     	 str r3,[r2,#20]
1139:../Libraries/XMCLib/src/xmc4_scu.c **** 
1140:../Libraries/XMCLib/src/xmc4_scu.c ****   /* connect Oscillator to USB PLL */
1141:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~SCU_PLL_USBPLLCON_FINDIS_Msk;
 4520              	 .loc 3 1141 0
 4521 0040 0B4A     	 ldr r2,.L302
 4522 0042 0B4B     	 ldr r3,.L302
 4523 0044 5B69     	 ldr r3,[r3,#20]
 4524 0046 23F01003 	 bic r3,r3,#16
 4525 004a 5361     	 str r3,[r2,#20]
1142:../Libraries/XMCLib/src/xmc4_scu.c **** 
1143:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart PLL Lock detection */
1144:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_RESLD_Msk;
 4526              	 .loc 3 1144 0
 4527 004c 084A     	 ldr r2,.L302
 4528 004e 084B     	 ldr r3,.L302
 4529 0050 5B69     	 ldr r3,[r3,#20]
 4530 0052 43F48023 	 orr r3,r3,#262144
 4531 0056 5361     	 str r3,[r2,#20]
1145:../Libraries/XMCLib/src/xmc4_scu.c **** 
1146:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 4532              	 .loc 3 1146 0
 4533 0058 00BF     	 nop
 4534              	.L301:
 4535              	 .loc 3 1146 0 is_stmt 0 discriminator 1
 4536 005a 054B     	 ldr r3,.L302
 4537 005c 1B69     	 ldr r3,[r3,#16]
 4538 005e 03F00403 	 and r3,r3,#4
 4539 0062 002B     	 cmp r3,#0
 4540 0064 F9D0     	 beq .L301
1147:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1148:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for PLL Lock */
1149:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1150:../Libraries/XMCLib/src/xmc4_scu.c **** 
1151:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4541              	 .loc 3 1151 0 is_stmt 1
 4542 0066 0C37     	 adds r7,r7,#12
 4543              	.LCFI423:
 4544              	 .cfi_def_cfa_offset 4
 4545 0068 BD46     	 mov sp,r7
 4546              	.LCFI424:
 4547              	 .cfi_def_cfa_register 13
 4548              	 
 4549 006a 5DF8047B 	 ldr r7,[sp],#4
 4550              	.LCFI425:
 4551              	 .cfi_restore 7
 4552              	 .cfi_def_cfa_offset 0
 4553 006e 7047     	 bx lr
 4554              	.L303:
 4555              	 .align 2
 4556              	.L302:
 4557 0070 10470050 	 .word 1342195472
 4558              	 .cfi_endproc
 4559              	.LFE248:
 4561              	 .section .text.XMC_SCU_CLOCK_StopUsbPll,"ax",%progbits
 4562              	 .align 2
 4563              	 .global XMC_SCU_CLOCK_StopUsbPll
 4564              	 .thumb
 4565              	 .thumb_func
 4567              	XMC_SCU_CLOCK_StopUsbPll:
 4568              	.LFB249:
1152:../Libraries/XMCLib/src/xmc4_scu.c **** 
1153:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL operation */
1154:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopUsbPll(void)
1155:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4569              	 .loc 3 1155 0
 4570              	 .cfi_startproc
 4571              	 
 4572              	 
 4573              	 
 4574 0000 80B4     	 push {r7}
 4575              	.LCFI426:
 4576              	 .cfi_def_cfa_offset 4
 4577              	 .cfi_offset 7,-4
 4578 0002 00AF     	 add r7,sp,#0
 4579              	.LCFI427:
 4580              	 .cfi_def_cfa_register 7
1156:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk |
 4581              	 .loc 3 1156 0
 4582 0004 034B     	 ldr r3,.L305
 4583 0006 044A     	 ldr r2,.L305+4
 4584 0008 5A61     	 str r2,[r3,#20]
1157:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_PLL_USBPLLCON_VCOBYP_Msk);
1158:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4585              	 .loc 3 1158 0
 4586 000a BD46     	 mov sp,r7
 4587              	.LCFI428:
 4588              	 .cfi_def_cfa_register 13
 4589              	 
 4590 000c 5DF8047B 	 ldr r7,[sp],#4
 4591              	.LCFI429:
 4592              	 .cfi_restore 7
 4593              	 .cfi_def_cfa_offset 0
 4594 0010 7047     	 bx lr
 4595              	.L306:
 4596 0012 00BF     	 .align 2
 4597              	.L305:
 4598 0014 10470050 	 .word 1342195472
 4599 0018 03000100 	 .word 65539
 4600              	 .cfi_endproc
 4601              	.LFE249:
 4603              	 .section .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode,"ax",%progbits
 4604              	 .align 2
 4605              	 .global XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 4606              	 .thumb
 4607              	 .thumb_func
 4609              	XMC_SCU_CLOCK_SetBackupClockCalibrationMode:
 4610              	.LFB250:
1159:../Libraries/XMCLib/src/xmc4_scu.c **** 
1160:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to onfigure the calibration mode for internal oscillator */
1161:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetBackupClockCalibrationMode(XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t mode)
1162:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4611              	 .loc 3 1162 0
 4612              	 .cfi_startproc
 4613              	 
 4614              	 
 4615 0000 80B5     	 push {r7,lr}
 4616              	.LCFI430:
 4617              	 .cfi_def_cfa_offset 8
 4618              	 .cfi_offset 7,-8
 4619              	 .cfi_offset 14,-4
 4620 0002 82B0     	 sub sp,sp,#8
 4621              	.LCFI431:
 4622              	 .cfi_def_cfa_offset 16
 4623 0004 00AF     	 add r7,sp,#0
 4624              	.LCFI432:
 4625              	 .cfi_def_cfa_register 7
 4626 0006 0346     	 mov r3,r0
 4627 0008 FB71     	 strb r3,[r7,#7]
1163:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable factory calibration based trimming */
1164:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FOTR_Msk;
 4628              	 .loc 3 1164 0
 4629 000a 0F4A     	 ldr r2,.L309
 4630 000c 0E4B     	 ldr r3,.L309
 4631 000e 5B68     	 ldr r3,[r3,#4]
 4632 0010 43F48013 	 orr r3,r3,#1048576
 4633 0014 5360     	 str r3,[r2,#4]
1165:../Libraries/XMCLib/src/xmc4_scu.c **** 
1166:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC)
 4634              	 .loc 3 1166 0
 4635 0016 FB79     	 ldrb r3,[r7,#7]
 4636 0018 012B     	 cmp r3,#1
 4637 001a 0ED1     	 bne .L308
1167:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1168:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Disable factory calibration based trimming */
1169:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FOTR_Msk;
 4638              	 .loc 3 1169 0
 4639 001c 0A4A     	 ldr r2,.L309
 4640 001e 0A4B     	 ldr r3,.L309
 4641 0020 5B68     	 ldr r3,[r3,#4]
 4642 0022 23F48013 	 bic r3,r3,#1048576
 4643 0026 5360     	 str r3,[r2,#4]
1170:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_lDelay(100UL);
 4644              	 .loc 3 1170 0
 4645 0028 6420     	 movs r0,#100
 4646 002a FFF7FEFF 	 bl XMC_SCU_lDelay
1171:../Libraries/XMCLib/src/xmc4_scu.c **** 
1172:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Enable automatic calibration */
1173:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_AOTREN_Msk;
 4647              	 .loc 3 1173 0
 4648 002e 064A     	 ldr r2,.L309
 4649 0030 054B     	 ldr r3,.L309
 4650 0032 5B68     	 ldr r3,[r3,#4]
 4651 0034 43F40023 	 orr r3,r3,#524288
 4652 0038 5360     	 str r3,[r2,#4]
 4653              	.L308:
1174:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1175:../Libraries/XMCLib/src/xmc4_scu.c **** 
1176:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(100UL);
 4654              	 .loc 3 1176 0
 4655 003a 6420     	 movs r0,#100
 4656 003c FFF7FEFF 	 bl XMC_SCU_lDelay
1177:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4657              	 .loc 3 1177 0
 4658 0040 0837     	 adds r7,r7,#8
 4659              	.LCFI433:
 4660              	 .cfi_def_cfa_offset 8
 4661 0042 BD46     	 mov sp,r7
 4662              	.LCFI434:
 4663              	 .cfi_def_cfa_register 13
 4664              	 
 4665 0044 80BD     	 pop {r7,pc}
 4666              	.L310:
 4667 0046 00BF     	 .align 2
 4668              	.L309:
 4669 0048 10470050 	 .word 1342195472
 4670              	 .cfi_endproc
 4671              	.LFE250:
 4673              	 .section .text.XMC_SCU_POWER_EnableUsb,"ax",%progbits
 4674              	 .align 2
 4675              	 .global XMC_SCU_POWER_EnableUsb
 4676              	 .thumb
 4677              	 .thumb_func
 4679              	XMC_SCU_POWER_EnableUsb:
 4680              	.LFB251:
1178:../Libraries/XMCLib/src/xmc4_scu.c **** 
1179:../Libraries/XMCLib/src/xmc4_scu.c **** 
1180:../Libraries/XMCLib/src/xmc4_scu.c **** 
1181:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB Phy and comparator */
1182:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_EnableUsb(void)
1183:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4681              	 .loc 3 1183 0
 4682              	 .cfi_startproc
 4683              	 
 4684              	 
 4685              	 
 4686 0000 80B4     	 push {r7}
 4687              	.LCFI435:
 4688              	 .cfi_def_cfa_offset 4
 4689              	 .cfi_offset 7,-4
 4690 0002 00AF     	 add r7,sp,#0
 4691              	.LCFI436:
 4692              	 .cfi_def_cfa_register 7
1184:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1185:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)(SCU_POWER_PWRSET_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4693              	 .loc 3 1185 0
 4694 0004 034B     	 ldr r3,.L312
 4695 0006 4FF44032 	 mov r2,#196608
 4696 000a 5A60     	 str r2,[r3,#4]
1186:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1187:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_USBPHYPDQ_Msk;
1188:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1189:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4697              	 .loc 3 1189 0
 4698 000c BD46     	 mov sp,r7
 4699              	.LCFI437:
 4700              	 .cfi_def_cfa_register 13
 4701              	 
 4702 000e 5DF8047B 	 ldr r7,[sp],#4
 4703              	.LCFI438:
 4704              	 .cfi_restore 7
 4705              	 .cfi_def_cfa_offset 0
 4706 0012 7047     	 bx lr
 4707              	.L313:
 4708              	 .align 2
 4709              	.L312:
 4710 0014 00420050 	 .word 1342194176
 4711              	 .cfi_endproc
 4712              	.LFE251:
 4714              	 .section .text.XMC_SCU_POWER_DisableUsb,"ax",%progbits
 4715              	 .align 2
 4716              	 .global XMC_SCU_POWER_DisableUsb
 4717              	 .thumb
 4718              	 .thumb_func
 4720              	XMC_SCU_POWER_DisableUsb:
 4721              	.LFB252:
1190:../Libraries/XMCLib/src/xmc4_scu.c **** 
1191:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down USB Phy and comparator */
1192:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_DisableUsb(void)
1193:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4722              	 .loc 3 1193 0
 4723              	 .cfi_startproc
 4724              	 
 4725              	 
 4726              	 
 4727 0000 80B4     	 push {r7}
 4728              	.LCFI439:
 4729              	 .cfi_def_cfa_offset 4
 4730              	 .cfi_offset 7,-4
 4731 0002 00AF     	 add r7,sp,#0
 4732              	.LCFI440:
 4733              	 .cfi_def_cfa_register 7
1194:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1195:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)(SCU_POWER_PWRCLR_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4734              	 .loc 3 1195 0
 4735 0004 034B     	 ldr r3,.L315
 4736 0006 4FF44032 	 mov r2,#196608
 4737 000a 9A60     	 str r2,[r3,#8]
1196:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1197:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_USBPHYPDQ_Msk;
1198:../Libraries/XMCLib/src/xmc4_scu.c **** #endif    
1199:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4738              	 .loc 3 1199 0
 4739 000c BD46     	 mov sp,r7
 4740              	.LCFI441:
 4741              	 .cfi_def_cfa_register 13
 4742              	 
 4743 000e 5DF8047B 	 ldr r7,[sp],#4
 4744              	.LCFI442:
 4745              	 .cfi_restore 7
 4746              	 .cfi_def_cfa_offset 0
 4747 0012 7047     	 bx lr
 4748              	.L316:
 4749              	 .align 2
 4750              	.L315:
 4751 0014 00420050 	 .word 1342194176
 4752              	 .cfi_endproc
 4753              	.LFE252:
 4755              	 .section .text.XMC_SCU_CLOCK_IsUsbPllLocked,"ax",%progbits
 4756              	 .align 2
 4757              	 .global XMC_SCU_CLOCK_IsUsbPllLocked
 4758              	 .thumb
 4759              	 .thumb_func
 4761              	XMC_SCU_CLOCK_IsUsbPllLocked:
 4762              	.LFB253:
1200:../Libraries/XMCLib/src/xmc4_scu.c **** 
1201:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check USB PLL is locked or not */
1202:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsUsbPllLocked(void)
1203:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4763              	 .loc 3 1203 0
 4764              	 .cfi_startproc
 4765              	 
 4766              	 
 4767              	 
 4768 0000 80B4     	 push {r7}
 4769              	.LCFI443:
 4770              	 .cfi_def_cfa_offset 4
 4771              	 .cfi_offset 7,-4
 4772 0002 00AF     	 add r7,sp,#0
 4773              	.LCFI444:
 4774              	 .cfi_def_cfa_register 7
1204:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) != 0UL);
 4775              	 .loc 3 1204 0
 4776 0004 064B     	 ldr r3,.L319
 4777 0006 1B69     	 ldr r3,[r3,#16]
 4778 0008 03F00403 	 and r3,r3,#4
 4779 000c 002B     	 cmp r3,#0
 4780 000e 14BF     	 ite ne
 4781 0010 0123     	 movne r3,#1
 4782 0012 0023     	 moveq r3,#0
 4783 0014 DBB2     	 uxtb r3,r3
1205:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4784              	 .loc 3 1205 0
 4785 0016 1846     	 mov r0,r3
 4786 0018 BD46     	 mov sp,r7
 4787              	.LCFI445:
 4788              	 .cfi_def_cfa_register 13
 4789              	 
 4790 001a 5DF8047B 	 ldr r7,[sp],#4
 4791              	.LCFI446:
 4792              	 .cfi_restore 7
 4793              	 .cfi_def_cfa_offset 0
 4794 001e 7047     	 bx lr
 4795              	.L320:
 4796              	 .align 2
 4797              	.L319:
 4798 0020 10470050 	 .word 1342195472
 4799              	 .cfi_endproc
 4800              	.LFE253:
 4802              	 .section .text.XMC_SCU_HIB_EnableHibernateDomain,"ax",%progbits
 4803              	 .align 2
 4804              	 .global XMC_SCU_HIB_EnableHibernateDomain
 4805              	 .thumb
 4806              	 .thumb_func
 4808              	XMC_SCU_HIB_EnableHibernateDomain:
 4809              	.LFB254:
1206:../Libraries/XMCLib/src/xmc4_scu.c **** 
1207:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power up the hibernation domain */
1208:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableHibernateDomain(void)
1209:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4810              	 .loc 3 1209 0
 4811              	 .cfi_startproc
 4812              	 
 4813              	 
 4814              	 
 4815 0000 80B4     	 push {r7}
 4816              	.LCFI447:
 4817              	 .cfi_def_cfa_offset 4
 4818              	 .cfi_offset 7,-4
 4819 0002 00AF     	 add r7,sp,#0
 4820              	.LCFI448:
 4821              	 .cfi_def_cfa_register 7
1210:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up HIB domain if and only if it is currently powered down */
1211:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 4822              	 .loc 3 1211 0
 4823 0004 124B     	 ldr r3,.L326
 4824 0006 1B68     	 ldr r3,[r3]
 4825 0008 03F00103 	 and r3,r3,#1
 4826 000c 002B     	 cmp r3,#0
 4827 000e 09D1     	 bne .L322
1212:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1213:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_HIB_Msk;
 4828              	 .loc 3 1213 0
 4829 0010 0F4B     	 ldr r3,.L326
 4830 0012 0122     	 movs r2,#1
 4831 0014 5A60     	 str r2,[r3,#4]
1214:../Libraries/XMCLib/src/xmc4_scu.c ****     
1215:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 4832              	 .loc 3 1215 0
 4833 0016 00BF     	 nop
 4834              	.L323:
 4835              	 .loc 3 1215 0 is_stmt 0 discriminator 1
 4836 0018 0D4B     	 ldr r3,.L326
 4837 001a 1B68     	 ldr r3,[r3]
 4838 001c 03F00103 	 and r3,r3,#1
 4839 0020 002B     	 cmp r3,#0
 4840 0022 F9D0     	 beq .L323
 4841              	.L322:
1216:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1217:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1218:../Libraries/XMCLib/src/xmc4_scu.c ****     }    
1219:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1220:../Libraries/XMCLib/src/xmc4_scu.c ****   
1221:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Remove the reset only if HIB domain were in a state of reset */
1222:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 4842              	 .loc 3 1222 0 is_stmt 1
 4843 0024 0B4B     	 ldr r3,.L326+4
 4844 0026 1B68     	 ldr r3,[r3]
 4845 0028 03F40073 	 and r3,r3,#512
 4846 002c 002B     	 cmp r3,#0
 4847 002e 0AD0     	 beq .L321
1223:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1224:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_HIBRS_Msk;
 4848              	 .loc 3 1224 0
 4849 0030 084B     	 ldr r3,.L326+4
 4850 0032 4FF40072 	 mov r2,#512
 4851 0036 9A60     	 str r2,[r3,#8]
1225:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk) != 0UL)
 4852              	 .loc 3 1225 0
 4853 0038 00BF     	 nop
 4854              	.L325:
 4855              	 .loc 3 1225 0 is_stmt 0 discriminator 1
 4856 003a 064B     	 ldr r3,.L326+4
 4857 003c 1B68     	 ldr r3,[r3]
 4858 003e 03F40073 	 and r3,r3,#512
 4859 0042 002B     	 cmp r3,#0
 4860 0044 F9D1     	 bne .L325
 4861              	.L321:
1226:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1227:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1228:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1229:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1230:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4862              	 .loc 3 1230 0 is_stmt 1
 4863 0046 BD46     	 mov sp,r7
 4864              	.LCFI449:
 4865              	 .cfi_def_cfa_register 13
 4866              	 
 4867 0048 5DF8047B 	 ldr r7,[sp],#4
 4868              	.LCFI450:
 4869              	 .cfi_restore 7
 4870              	 .cfi_def_cfa_offset 0
 4871 004c 7047     	 bx lr
 4872              	.L327:
 4873 004e 00BF     	 .align 2
 4874              	.L326:
 4875 0050 00420050 	 .word 1342194176
 4876 0054 00440050 	 .word 1342194688
 4877              	 .cfi_endproc
 4878              	.LFE254:
 4880              	 .section .text.XMC_SCU_HIB_DisableHibernateDomain,"ax",%progbits
 4881              	 .align 2
 4882              	 .global XMC_SCU_HIB_DisableHibernateDomain
 4883              	 .thumb
 4884              	 .thumb_func
 4886              	XMC_SCU_HIB_DisableHibernateDomain:
 4887              	.LFB255:
1231:../Libraries/XMCLib/src/xmc4_scu.c **** 
1232:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down the hibernation domain */
1233:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableHibernateDomain(void)
1234:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4888              	 .loc 3 1234 0
 4889              	 .cfi_startproc
 4890              	 
 4891              	 
 4892              	 
 4893 0000 80B4     	 push {r7}
 4894              	.LCFI451:
 4895              	 .cfi_def_cfa_offset 4
 4896              	 .cfi_offset 7,-4
 4897 0002 00AF     	 add r7,sp,#0
 4898              	.LCFI452:
 4899              	 .cfi_def_cfa_register 7
1235:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Disable hibernate domain */   
1236:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_HIB_Msk;
 4900              	 .loc 3 1236 0
 4901 0004 054B     	 ldr r3,.L329
 4902 0006 0122     	 movs r2,#1
 4903 0008 9A60     	 str r2,[r3,#8]
1237:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Reset of hibernate domain reset */  
1238:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_RESET->RSTSET = (uint32_t)SCU_RESET_RSTSET_HIBRS_Msk;
 4904              	 .loc 3 1238 0
 4905 000a 054B     	 ldr r3,.L329+4
 4906 000c 4FF40072 	 mov r2,#512
 4907 0010 5A60     	 str r2,[r3,#4]
1239:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4908              	 .loc 3 1239 0
 4909 0012 BD46     	 mov sp,r7
 4910              	.LCFI453:
 4911              	 .cfi_def_cfa_register 13
 4912              	 
 4913 0014 5DF8047B 	 ldr r7,[sp],#4
 4914              	.LCFI454:
 4915              	 .cfi_restore 7
 4916              	 .cfi_def_cfa_offset 0
 4917 0018 7047     	 bx lr
 4918              	.L330:
 4919 001a 00BF     	 .align 2
 4920              	.L329:
 4921 001c 00420050 	 .word 1342194176
 4922 0020 00440050 	 .word 1342194688
 4923              	 .cfi_endproc
 4924              	.LFE255:
 4926              	 .section .text.XMC_SCU_HIB_IsHibernateDomainEnabled,"ax",%progbits
 4927              	 .align 2
 4928              	 .global XMC_SCU_HIB_IsHibernateDomainEnabled
 4929              	 .thumb
 4930              	 .thumb_func
 4932              	XMC_SCU_HIB_IsHibernateDomainEnabled:
 4933              	.LFB256:
1240:../Libraries/XMCLib/src/xmc4_scu.c **** 
1241:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check the hibernation domain is enabled or not */
1242:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HIB_IsHibernateDomainEnabled(void)
1243:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4934              	 .loc 3 1243 0
 4935              	 .cfi_startproc
 4936              	 
 4937              	 
 4938              	 
 4939 0000 80B4     	 push {r7}
 4940              	.LCFI455:
 4941              	 .cfi_def_cfa_offset 4
 4942              	 .cfi_offset 7,-4
 4943 0002 00AF     	 add r7,sp,#0
 4944              	.LCFI456:
 4945              	 .cfi_def_cfa_register 7
1244:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4946              	 .loc 3 1244 0
 4947 0004 0B4B     	 ldr r3,.L335
 4948 0006 1B68     	 ldr r3,[r3]
 4949 0008 03F00103 	 and r3,r3,#1
 4950 000c 002B     	 cmp r3,#0
 4951 000e 07D0     	 beq .L332
1245:../Libraries/XMCLib/src/xmc4_scu.c ****           !(bool)(SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk));
 4952              	 .loc 3 1245 0 discriminator 1
 4953 0010 094B     	 ldr r3,.L335+4
 4954 0012 1B68     	 ldr r3,[r3]
 4955 0014 03F40073 	 and r3,r3,#512
1244:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4956              	 .loc 3 1244 0 discriminator 1
 4957 0018 002B     	 cmp r3,#0
 4958 001a 01D1     	 bne .L332
1244:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4959              	 .loc 3 1244 0 is_stmt 0 discriminator 3
 4960 001c 0123     	 movs r3,#1
 4961 001e 00E0     	 b .L333
 4962              	.L332:
1244:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4963              	 .loc 3 1244 0 discriminator 4
 4964 0020 0023     	 movs r3,#0
 4965              	.L333:
1244:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4966              	 .loc 3 1244 0 discriminator 6
 4967 0022 03F00103 	 and r3,r3,#1
 4968 0026 DBB2     	 uxtb r3,r3
1246:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4969              	 .loc 3 1246 0 is_stmt 1 discriminator 6
 4970 0028 1846     	 mov r0,r3
 4971 002a BD46     	 mov sp,r7
 4972              	.LCFI457:
 4973              	 .cfi_def_cfa_register 13
 4974              	 
 4975 002c 5DF8047B 	 ldr r7,[sp],#4
 4976              	.LCFI458:
 4977              	 .cfi_restore 7
 4978              	 .cfi_def_cfa_offset 0
 4979 0030 7047     	 bx lr
 4980              	.L336:
 4981 0032 00BF     	 .align 2
 4982              	.L335:
 4983 0034 00420050 	 .word 1342194176
 4984 0038 00440050 	 .word 1342194688
 4985              	 .cfi_endproc
 4986              	.LFE256:
 4988              	 .section .text.XMC_SCU_HIB_EnableInternalSlowClock,"ax",%progbits
 4989              	 .align 2
 4990              	 .global XMC_SCU_HIB_EnableInternalSlowClock
 4991              	 .thumb
 4992              	 .thumb_func
 4994              	XMC_SCU_HIB_EnableInternalSlowClock:
 4995              	.LFB257:
1247:../Libraries/XMCLib/src/xmc4_scu.c **** 
1248:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1249:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableInternalSlowClock(void)
1250:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4996              	 .loc 3 1250 0
 4997              	 .cfi_startproc
 4998              	 
 4999              	 
 5000              	 
 5001 0000 80B4     	 push {r7}
 5002              	.LCFI459:
 5003              	 .cfi_def_cfa_offset 4
 5004              	 .cfi_offset 7,-4
 5005 0002 00AF     	 add r7,sp,#0
 5006              	.LCFI460:
 5007              	 .cfi_def_cfa_register 7
1251:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5008              	 .loc 3 1251 0
 5009 0004 00BF     	 nop
 5010              	.L338:
 5011              	 .loc 3 1251 0 is_stmt 0 discriminator 1
 5012 0006 084B     	 ldr r3,.L339
 5013 0008 D3F8C430 	 ldr r3,[r3,#196]
 5014 000c 03F02003 	 and r3,r3,#32
 5015 0010 002B     	 cmp r3,#0
 5016 0012 F8D1     	 bne .L338
1252:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1253:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1254:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1255:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL &= (uint32_t)~(SCU_HIBERNATE_OSCSICTRL_PWD_Msk);
 5017              	 .loc 3 1255 0 is_stmt 1
 5018 0014 054A     	 ldr r2,.L339+4
 5019 0016 054B     	 ldr r3,.L339+4
 5020 0018 5B69     	 ldr r3,[r3,#20]
 5021 001a 23F00103 	 bic r3,r3,#1
 5022 001e 5361     	 str r3,[r2,#20]
1256:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5023              	 .loc 3 1256 0
 5024 0020 BD46     	 mov sp,r7
 5025              	.LCFI461:
 5026              	 .cfi_def_cfa_register 13
 5027              	 
 5028 0022 5DF8047B 	 ldr r7,[sp],#4
 5029              	.LCFI462:
 5030              	 .cfi_restore 7
 5031              	 .cfi_def_cfa_offset 0
 5032 0026 7047     	 bx lr
 5033              	.L340:
 5034              	 .align 2
 5035              	.L339:
 5036 0028 00400050 	 .word 1342193664
 5037 002c 00430050 	 .word 1342194432
 5038              	 .cfi_endproc
 5039              	.LFE257:
 5041              	 .section .text.XMC_SCU_HIB_DisableInternalSlowClock,"ax",%progbits
 5042              	 .align 2
 5043              	 .global XMC_SCU_HIB_DisableInternalSlowClock
 5044              	 .thumb
 5045              	 .thumb_func
 5047              	XMC_SCU_HIB_DisableInternalSlowClock:
 5048              	.LFB258:
1257:../Libraries/XMCLib/src/xmc4_scu.c **** 
1258:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1259:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableInternalSlowClock(void)
1260:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5049              	 .loc 3 1260 0
 5050              	 .cfi_startproc
 5051              	 
 5052              	 
 5053              	 
 5054 0000 80B4     	 push {r7}
 5055              	.LCFI463:
 5056              	 .cfi_def_cfa_offset 4
 5057              	 .cfi_offset 7,-4
 5058 0002 00AF     	 add r7,sp,#0
 5059              	.LCFI464:
 5060              	 .cfi_def_cfa_register 7
1261:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5061              	 .loc 3 1261 0
 5062 0004 00BF     	 nop
 5063              	.L342:
 5064              	 .loc 3 1261 0 is_stmt 0 discriminator 1
 5065 0006 084B     	 ldr r3,.L343
 5066 0008 D3F8C430 	 ldr r3,[r3,#196]
 5067 000c 03F02003 	 and r3,r3,#32
 5068 0010 002B     	 cmp r3,#0
 5069 0012 F8D1     	 bne .L342
1262:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1263:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1264:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1265:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL |= (uint32_t)SCU_HIBERNATE_OSCSICTRL_PWD_Msk;
 5070              	 .loc 3 1265 0 is_stmt 1
 5071 0014 054A     	 ldr r2,.L343+4
 5072 0016 054B     	 ldr r3,.L343+4
 5073 0018 5B69     	 ldr r3,[r3,#20]
 5074 001a 43F00103 	 orr r3,r3,#1
 5075 001e 5361     	 str r3,[r2,#20]
1266:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5076              	 .loc 3 1266 0
 5077 0020 BD46     	 mov sp,r7
 5078              	.LCFI465:
 5079              	 .cfi_def_cfa_register 13
 5080              	 
 5081 0022 5DF8047B 	 ldr r7,[sp],#4
 5082              	.LCFI466:
 5083              	 .cfi_restore 7
 5084              	 .cfi_def_cfa_offset 0
 5085 0026 7047     	 bx lr
 5086              	.L344:
 5087              	 .align 2
 5088              	.L343:
 5089 0028 00400050 	 .word 1342193664
 5090 002c 00430050 	 .word 1342194432
 5091              	 .cfi_endproc
 5092              	.LFE258:
 5094              	 .section .text.XMC_SCU_HIB_ClearEventStatus,"ax",%progbits
 5095              	 .align 2
 5096              	 .global XMC_SCU_HIB_ClearEventStatus
 5097              	 .thumb
 5098              	 .thumb_func
 5100              	XMC_SCU_HIB_ClearEventStatus:
 5101              	.LFB259:
1267:../Libraries/XMCLib/src/xmc4_scu.c **** 
1268:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_ClearEventStatus(int32_t event)
1269:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5102              	 .loc 3 1269 0
 5103              	 .cfi_startproc
 5104              	 
 5105              	 
 5106              	 
 5107 0000 80B4     	 push {r7}
 5108              	.LCFI467:
 5109              	 .cfi_def_cfa_offset 4
 5110              	 .cfi_offset 7,-4
 5111 0002 83B0     	 sub sp,sp,#12
 5112              	.LCFI468:
 5113              	 .cfi_def_cfa_offset 16
 5114 0004 00AF     	 add r7,sp,#0
 5115              	.LCFI469:
 5116              	 .cfi_def_cfa_register 7
 5117 0006 7860     	 str r0,[r7,#4]
1270:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 5118              	 .loc 3 1270 0
 5119 0008 00BF     	 nop
 5120              	.L346:
 5121              	 .loc 3 1270 0 is_stmt 0 discriminator 1
 5122 000a 074B     	 ldr r3,.L347
 5123 000c D3F8C430 	 ldr r3,[r3,#196]
 5124 0010 03F00203 	 and r3,r3,#2
 5125 0014 002B     	 cmp r3,#0
 5126 0016 F8D1     	 bne .L346
1271:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1272:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCLR register in hibernate domain is ready to accept a write */  
1273:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1274:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = event;
 5127              	 .loc 3 1274 0 is_stmt 1
 5128 0018 044A     	 ldr r2,.L347+4
 5129 001a 7B68     	 ldr r3,[r7,#4]
 5130 001c 5360     	 str r3,[r2,#4]
1275:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5131              	 .loc 3 1275 0
 5132 001e 0C37     	 adds r7,r7,#12
 5133              	.LCFI470:
 5134              	 .cfi_def_cfa_offset 4
 5135 0020 BD46     	 mov sp,r7
 5136              	.LCFI471:
 5137              	 .cfi_def_cfa_register 13
 5138              	 
 5139 0022 5DF8047B 	 ldr r7,[sp],#4
 5140              	.LCFI472:
 5141              	 .cfi_restore 7
 5142              	 .cfi_def_cfa_offset 0
 5143 0026 7047     	 bx lr
 5144              	.L348:
 5145              	 .align 2
 5146              	.L347:
 5147 0028 00400050 	 .word 1342193664
 5148 002c 00430050 	 .word 1342194432
 5149              	 .cfi_endproc
 5150              	.LFE259:
 5152              	 .section .text.XMC_SCU_HIB_TriggerEvent,"ax",%progbits
 5153              	 .align 2
 5154              	 .global XMC_SCU_HIB_TriggerEvent
 5155              	 .thumb
 5156              	 .thumb_func
 5158              	XMC_SCU_HIB_TriggerEvent:
 5159              	.LFB260:
1276:../Libraries/XMCLib/src/xmc4_scu.c **** 
1277:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_TriggerEvent(int32_t event)
1278:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5160              	 .loc 3 1278 0
 5161              	 .cfi_startproc
 5162              	 
 5163              	 
 5164              	 
 5165 0000 80B4     	 push {r7}
 5166              	.LCFI473:
 5167              	 .cfi_def_cfa_offset 4
 5168              	 .cfi_offset 7,-4
 5169 0002 83B0     	 sub sp,sp,#12
 5170              	.LCFI474:
 5171              	 .cfi_def_cfa_offset 16
 5172 0004 00AF     	 add r7,sp,#0
 5173              	.LCFI475:
 5174              	 .cfi_def_cfa_register 7
 5175 0006 7860     	 str r0,[r7,#4]
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 5176              	 .loc 3 1279 0
 5177 0008 00BF     	 nop
 5178              	.L350:
 5179              	 .loc 3 1279 0 is_stmt 0 discriminator 1
 5180 000a 074B     	 ldr r3,.L351
 5181 000c D3F8C430 	 ldr r3,[r3,#196]
 5182 0010 03F00403 	 and r3,r3,#4
 5183 0014 002B     	 cmp r3,#0
 5184 0016 F8D1     	 bne .L350
1280:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1281:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDSET register in hibernate domain is ready to accept a write */    
1282:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1283:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = event;
 5185              	 .loc 3 1283 0 is_stmt 1
 5186 0018 044A     	 ldr r2,.L351+4
 5187 001a 7B68     	 ldr r3,[r7,#4]
 5188 001c 9360     	 str r3,[r2,#8]
1284:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5189              	 .loc 3 1284 0
 5190 001e 0C37     	 adds r7,r7,#12
 5191              	.LCFI476:
 5192              	 .cfi_def_cfa_offset 4
 5193 0020 BD46     	 mov sp,r7
 5194              	.LCFI477:
 5195              	 .cfi_def_cfa_register 13
 5196              	 
 5197 0022 5DF8047B 	 ldr r7,[sp],#4
 5198              	.LCFI478:
 5199              	 .cfi_restore 7
 5200              	 .cfi_def_cfa_offset 0
 5201 0026 7047     	 bx lr
 5202              	.L352:
 5203              	 .align 2
 5204              	.L351:
 5205 0028 00400050 	 .word 1342193664
 5206 002c 00430050 	 .word 1342194432
 5207              	 .cfi_endproc
 5208              	.LFE260:
 5210              	 .section .text.XMC_SCU_HIB_EnableEvent,"ax",%progbits
 5211              	 .align 2
 5212              	 .global XMC_SCU_HIB_EnableEvent
 5213              	 .thumb
 5214              	 .thumb_func
 5216              	XMC_SCU_HIB_EnableEvent:
 5217              	.LFB261:
1285:../Libraries/XMCLib/src/xmc4_scu.c **** 
1286:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableEvent(int32_t event)
1287:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5218              	 .loc 3 1287 0
 5219              	 .cfi_startproc
 5220              	 
 5221              	 
 5222              	 
 5223 0000 80B4     	 push {r7}
 5224              	.LCFI479:
 5225              	 .cfi_def_cfa_offset 4
 5226              	 .cfi_offset 7,-4
 5227 0002 83B0     	 sub sp,sp,#12
 5228              	.LCFI480:
 5229              	 .cfi_def_cfa_offset 16
 5230 0004 00AF     	 add r7,sp,#0
 5231              	.LCFI481:
 5232              	 .cfi_def_cfa_register 7
 5233 0006 7860     	 str r0,[r7,#4]
1288:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1289:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1290:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1291:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1292:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1293:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1294:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1295:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1296:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1297:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1298:../Libraries/XMCLib/src/xmc4_scu.c **** 
1299:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5234              	 .loc 3 1299 0
 5235 0008 00BF     	 nop
 5236              	.L354:
 5237              	 .loc 3 1299 0 is_stmt 0 discriminator 1
 5238 000a 094B     	 ldr r3,.L355
 5239 000c D3F8C430 	 ldr r3,[r3,#196]
 5240 0010 03F00803 	 and r3,r3,#8
 5241 0014 002B     	 cmp r3,#0
 5242 0016 F8D1     	 bne .L354
1300:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1301:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1302:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1303:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= event;
 5243              	 .loc 3 1303 0 is_stmt 1
 5244 0018 0649     	 ldr r1,.L355+4
 5245 001a 064B     	 ldr r3,.L355+4
 5246 001c DA68     	 ldr r2,[r3,#12]
 5247 001e 7B68     	 ldr r3,[r7,#4]
 5248 0020 1343     	 orrs r3,r3,r2
 5249 0022 CB60     	 str r3,[r1,#12]
1304:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5250              	 .loc 3 1304 0
 5251 0024 0C37     	 adds r7,r7,#12
 5252              	.LCFI482:
 5253              	 .cfi_def_cfa_offset 4
 5254 0026 BD46     	 mov sp,r7
 5255              	.LCFI483:
 5256              	 .cfi_def_cfa_register 13
 5257              	 
 5258 0028 5DF8047B 	 ldr r7,[sp],#4
 5259              	.LCFI484:
 5260              	 .cfi_restore 7
 5261              	 .cfi_def_cfa_offset 0
 5262 002c 7047     	 bx lr
 5263              	.L356:
 5264 002e 00BF     	 .align 2
 5265              	.L355:
 5266 0030 00400050 	 .word 1342193664
 5267 0034 00430050 	 .word 1342194432
 5268              	 .cfi_endproc
 5269              	.LFE261:
 5271              	 .section .text.XMC_SCU_HIB_DisableEvent,"ax",%progbits
 5272              	 .align 2
 5273              	 .global XMC_SCU_HIB_DisableEvent
 5274              	 .thumb
 5275              	 .thumb_func
 5277              	XMC_SCU_HIB_DisableEvent:
 5278              	.LFB262:
1305:../Libraries/XMCLib/src/xmc4_scu.c **** 
1306:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableEvent(int32_t event)
1307:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5279              	 .loc 3 1307 0
 5280              	 .cfi_startproc
 5281              	 
 5282              	 
 5283              	 
 5284 0000 80B4     	 push {r7}
 5285              	.LCFI485:
 5286              	 .cfi_def_cfa_offset 4
 5287              	 .cfi_offset 7,-4
 5288 0002 83B0     	 sub sp,sp,#12
 5289              	.LCFI486:
 5290              	 .cfi_def_cfa_offset 16
 5291 0004 00AF     	 add r7,sp,#0
 5292              	.LCFI487:
 5293              	 .cfi_def_cfa_register 7
 5294 0006 7860     	 str r0,[r7,#4]
1308:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1309:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1310:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1311:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1312:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1313:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1314:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1315:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1316:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1317:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1318:../Libraries/XMCLib/src/xmc4_scu.c **** 
1319:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5295              	 .loc 3 1319 0
 5296 0008 00BF     	 nop
 5297              	.L358:
 5298              	 .loc 3 1319 0 is_stmt 0 discriminator 1
 5299 000a 094B     	 ldr r3,.L359
 5300 000c D3F8C430 	 ldr r3,[r3,#196]
 5301 0010 03F00803 	 and r3,r3,#8
 5302 0014 002B     	 cmp r3,#0
 5303 0016 F8D1     	 bne .L358
1320:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1321:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1322:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1323:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR &= ~event;
 5304              	 .loc 3 1323 0 is_stmt 1
 5305 0018 0649     	 ldr r1,.L359+4
 5306 001a 064B     	 ldr r3,.L359+4
 5307 001c DB68     	 ldr r3,[r3,#12]
 5308 001e 7A68     	 ldr r2,[r7,#4]
 5309 0020 D243     	 mvns r2,r2
 5310 0022 1340     	 ands r3,r3,r2
 5311 0024 CB60     	 str r3,[r1,#12]
1324:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5312              	 .loc 3 1324 0
 5313 0026 0C37     	 adds r7,r7,#12
 5314              	.LCFI488:
 5315              	 .cfi_def_cfa_offset 4
 5316 0028 BD46     	 mov sp,r7
 5317              	.LCFI489:
 5318              	 .cfi_def_cfa_register 13
 5319              	 
 5320 002a 5DF8047B 	 ldr r7,[sp],#4
 5321              	.LCFI490:
 5322              	 .cfi_restore 7
 5323              	 .cfi_def_cfa_offset 0
 5324 002e 7047     	 bx lr
 5325              	.L360:
 5326              	 .align 2
 5327              	.L359:
 5328 0030 00400050 	 .word 1342193664
 5329 0034 00430050 	 .word 1342194432
 5330              	 .cfi_endproc
 5331              	.LFE262:
 5333              	 .section .text.XMC_SCU_HIB_EnterHibernateState,"ax",%progbits
 5334              	 .align 2
 5335              	 .global XMC_SCU_HIB_EnterHibernateState
 5336              	 .thumb
 5337              	 .thumb_func
 5339              	XMC_SCU_HIB_EnterHibernateState:
 5340              	.LFB263:
1325:../Libraries/XMCLib/src/xmc4_scu.c **** 
1326:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateState(void) 
1327:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5341              	 .loc 3 1327 0
 5342              	 .cfi_startproc
 5343              	 
 5344              	 
 5345              	 
 5346 0000 80B4     	 push {r7}
 5347              	.LCFI491:
 5348              	 .cfi_def_cfa_offset 4
 5349              	 .cfi_offset 7,-4
 5350 0002 00AF     	 add r7,sp,#0
 5351              	.LCFI492:
 5352              	 .cfi_def_cfa_register 7
1328:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5353              	 .loc 3 1328 0
 5354 0004 00BF     	 nop
 5355              	.L362:
 5356              	 .loc 3 1328 0 is_stmt 0 discriminator 1
 5357 0006 084B     	 ldr r3,.L363
 5358 0008 D3F8C430 	 ldr r3,[r3,#196]
 5359 000c 03F00803 	 and r3,r3,#8
 5360 0010 002B     	 cmp r3,#0
 5361 0012 F8D1     	 bne .L362
1329:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1330:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1331:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1332:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_HIB_Msk;
 5362              	 .loc 3 1332 0 is_stmt 1
 5363 0014 054A     	 ldr r2,.L363+4
 5364 0016 054B     	 ldr r3,.L363+4
 5365 0018 DB68     	 ldr r3,[r3,#12]
 5366 001a 43F01003 	 orr r3,r3,#16
 5367 001e D360     	 str r3,[r2,#12]
1333:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5368              	 .loc 3 1333 0
 5369 0020 BD46     	 mov sp,r7
 5370              	.LCFI493:
 5371              	 .cfi_def_cfa_register 13
 5372              	 
 5373 0022 5DF8047B 	 ldr r7,[sp],#4
 5374              	.LCFI494:
 5375              	 .cfi_restore 7
 5376              	 .cfi_def_cfa_offset 0
 5377 0026 7047     	 bx lr
 5378              	.L364:
 5379              	 .align 2
 5380              	.L363:
 5381 0028 00400050 	 .word 1342193664
 5382 002c 00430050 	 .word 1342194432
 5383              	 .cfi_endproc
 5384              	.LFE263:
 5386              	 .section .text.XMC_SCU_HIB_EnterHibernateStateEx,"ax",%progbits
 5387              	 .align 2
 5388              	 .global XMC_SCU_HIB_EnterHibernateStateEx
 5389              	 .thumb
 5390              	 .thumb_func
 5392              	XMC_SCU_HIB_EnterHibernateStateEx:
 5393              	.LFB264:
1334:../Libraries/XMCLib/src/xmc4_scu.c **** 
1335:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateStateEx(XMC_SCU_HIB_HIBERNATE_MODE_t mode)
1336:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5394              	 .loc 3 1336 0
 5395              	 .cfi_startproc
 5396              	 
 5397              	 
 5398 0000 80B5     	 push {r7,lr}
 5399              	.LCFI495:
 5400              	 .cfi_def_cfa_offset 8
 5401              	 .cfi_offset 7,-8
 5402              	 .cfi_offset 14,-4
 5403 0002 82B0     	 sub sp,sp,#8
 5404              	.LCFI496:
 5405              	 .cfi_def_cfa_offset 16
 5406 0004 00AF     	 add r7,sp,#0
 5407              	.LCFI497:
 5408              	 .cfi_def_cfa_register 7
 5409 0006 0346     	 mov r3,r0
 5410 0008 FB71     	 strb r3,[r7,#7]
1337:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 5411              	 .loc 3 1337 0
 5412 000a FB79     	 ldrb r3,[r7,#7]
 5413 000c 002B     	 cmp r3,#0
 5414 000e 01D1     	 bne .L365
1338:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1339:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_HIB_EnterHibernateState();
 5415              	 .loc 3 1339 0
 5416 0010 FFF7FEFF 	 bl XMC_SCU_HIB_EnterHibernateState
 5417              	.L365:
1340:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1341:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1342:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL)
1343:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1344:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HINTSET_Msk)
1345:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1346:../Libraries/XMCLib/src/xmc4_scu.c ****       /* Wait until HDCR register in hibernate domain is ready to accept a write */
1347:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1348:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HINTSET = SCU_HIBERNATE_HINTSET_HIBNINT_Msk;
1349:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1350:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1351:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5418              	 .loc 3 1351 0
 5419 0014 0837     	 adds r7,r7,#8
 5420              	.LCFI498:
 5421              	 .cfi_def_cfa_offset 8
 5422 0016 BD46     	 mov sp,r7
 5423              	.LCFI499:
 5424              	 .cfi_def_cfa_register 13
 5425              	 
 5426 0018 80BD     	 pop {r7,pc}
 5427              	 .cfi_endproc
 5428              	.LFE264:
 5430 001a 00BF     	 .section .text.XMC_SCU_HIB_SetWakeupTriggerInput,"ax",%progbits
 5431              	 .align 2
 5432              	 .global XMC_SCU_HIB_SetWakeupTriggerInput
 5433              	 .thumb
 5434              	 .thumb_func
 5436              	XMC_SCU_HIB_SetWakeupTriggerInput:
 5437              	.LFB265:
1352:../Libraries/XMCLib/src/xmc4_scu.c **** 
1353:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetWakeupTriggerInput(XMC_SCU_HIB_IO_t pin)
1354:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5438              	 .loc 3 1354 0
 5439              	 .cfi_startproc
 5440              	 
 5441              	 
 5442              	 
 5443 0000 80B4     	 push {r7}
 5444              	.LCFI500:
 5445              	 .cfi_def_cfa_offset 4
 5446              	 .cfi_offset 7,-4
 5447 0002 83B0     	 sub sp,sp,#12
 5448              	.LCFI501:
 5449              	 .cfi_def_cfa_offset 16
 5450 0004 00AF     	 add r7,sp,#0
 5451              	.LCFI502:
 5452              	 .cfi_def_cfa_register 7
 5453 0006 0346     	 mov r3,r0
 5454 0008 FB71     	 strb r3,[r7,#7]
1355:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5455              	 .loc 3 1355 0
 5456 000a 00BF     	 nop
 5457              	.L368:
 5458              	 .loc 3 1355 0 is_stmt 0 discriminator 1
 5459 000c 0D4B     	 ldr r3,.L371
 5460 000e D3F8C430 	 ldr r3,[r3,#196]
 5461 0012 03F00803 	 and r3,r3,#8
 5462 0016 002B     	 cmp r3,#0
 5463 0018 F8D1     	 bne .L368
1356:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1357:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1358:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1359:../Libraries/XMCLib/src/xmc4_scu.c **** 
1360:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5464              	 .loc 3 1360 0 is_stmt 1
 5465 001a FB79     	 ldrb r3,[r7,#7]
 5466 001c 002B     	 cmp r3,#0
 5467 001e 06D1     	 bne .L369
1361:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1362:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5468              	 .loc 3 1362 0
 5469 0020 094A     	 ldr r2,.L371+4
 5470 0022 094B     	 ldr r3,.L371+4
 5471 0024 DB68     	 ldr r3,[r3,#12]
 5472 0026 43F48073 	 orr r3,r3,#256
 5473 002a D360     	 str r3,[r2,#12]
 5474 002c 05E0     	 b .L367
 5475              	.L369:
1363:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1364:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1365:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1366:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_WKUPSEL_Msk; 
 5476              	 .loc 3 1366 0
 5477 002e 064A     	 ldr r2,.L371+4
 5478 0030 054B     	 ldr r3,.L371+4
 5479 0032 DB68     	 ldr r3,[r3,#12]
 5480 0034 23F48073 	 bic r3,r3,#256
 5481 0038 D360     	 str r3,[r2,#12]
 5482              	.L367:
1367:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1368:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5483              	 .loc 3 1368 0
 5484 003a 0C37     	 adds r7,r7,#12
 5485              	.LCFI503:
 5486              	 .cfi_def_cfa_offset 4
 5487 003c BD46     	 mov sp,r7
 5488              	.LCFI504:
 5489              	 .cfi_def_cfa_register 13
 5490              	 
 5491 003e 5DF8047B 	 ldr r7,[sp],#4
 5492              	.LCFI505:
 5493              	 .cfi_restore 7
 5494              	 .cfi_def_cfa_offset 0
 5495 0042 7047     	 bx lr
 5496              	.L372:
 5497              	 .align 2
 5498              	.L371:
 5499 0044 00400050 	 .word 1342193664
 5500 0048 00430050 	 .word 1342194432
 5501              	 .cfi_endproc
 5502              	.LFE265:
 5504              	 .section .text.XMC_SCU_HIB_SetPinMode,"ax",%progbits
 5505              	 .align 2
 5506              	 .global XMC_SCU_HIB_SetPinMode
 5507              	 .thumb
 5508              	 .thumb_func
 5510              	XMC_SCU_HIB_SetPinMode:
 5511              	.LFB266:
1369:../Libraries/XMCLib/src/xmc4_scu.c **** 
1370:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinMode(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_PIN_MODE_t mode)
1371:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5512              	 .loc 3 1371 0
 5513              	 .cfi_startproc
 5514              	 
 5515              	 
 5516              	 
 5517 0000 80B4     	 push {r7}
 5518              	.LCFI506:
 5519              	 .cfi_def_cfa_offset 4
 5520              	 .cfi_offset 7,-4
 5521 0002 83B0     	 sub sp,sp,#12
 5522              	.LCFI507:
 5523              	 .cfi_def_cfa_offset 16
 5524 0004 00AF     	 add r7,sp,#0
 5525              	.LCFI508:
 5526              	 .cfi_def_cfa_register 7
 5527 0006 0346     	 mov r3,r0
 5528 0008 3960     	 str r1,[r7]
 5529 000a FB71     	 strb r3,[r7,#7]
1372:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5530              	 .loc 3 1372 0
 5531 000c 00BF     	 nop
 5532              	.L374:
 5533              	 .loc 3 1372 0 is_stmt 0 discriminator 1
 5534 000e 0F4B     	 ldr r3,.L375
 5535 0010 D3F8C430 	 ldr r3,[r3,#196]
 5536 0014 03F00803 	 and r3,r3,#8
 5537 0018 002B     	 cmp r3,#0
 5538 001a F8D1     	 bne .L374
1373:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1374:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1375:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1376:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0SEL_Msk << (SCU_HIBERNATE
 5539              	 .loc 3 1376 0 is_stmt 1
 5540 001c 0C49     	 ldr r1,.L375+4
 5541 001e 0C4B     	 ldr r3,.L375+4
 5542 0020 DA68     	 ldr r2,[r3,#12]
 5543 0022 FB79     	 ldrb r3,[r7,#7]
 5544 0024 9B00     	 lsls r3,r3,#2
 5545 0026 1846     	 mov r0,r3
 5546 0028 4FF47023 	 mov r3,#983040
 5547 002c 8340     	 lsls r3,r3,r0
 5548 002e DB43     	 mvns r3,r3
 5549 0030 1A40     	 ands r2,r2,r3
1377:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5550              	 .loc 3 1377 0
 5551 0032 FB79     	 ldrb r3,[r7,#7]
 5552 0034 9B00     	 lsls r3,r3,#2
1376:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5553              	 .loc 3 1376 0
 5554 0036 1846     	 mov r0,r3
 5555              	 .loc 3 1377 0
 5556 0038 3B68     	 ldr r3,[r7]
 5557 003a 8340     	 lsls r3,r3,r0
1376:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5558              	 .loc 3 1376 0
 5559 003c 1343     	 orrs r3,r3,r2
 5560 003e CB60     	 str r3,[r1,#12]
1378:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5561              	 .loc 3 1378 0
 5562 0040 0C37     	 adds r7,r7,#12
 5563              	.LCFI509:
 5564              	 .cfi_def_cfa_offset 4
 5565 0042 BD46     	 mov sp,r7
 5566              	.LCFI510:
 5567              	 .cfi_def_cfa_register 13
 5568              	 
 5569 0044 5DF8047B 	 ldr r7,[sp],#4
 5570              	.LCFI511:
 5571              	 .cfi_restore 7
 5572              	 .cfi_def_cfa_offset 0
 5573 0048 7047     	 bx lr
 5574              	.L376:
 5575 004a 00BF     	 .align 2
 5576              	.L375:
 5577 004c 00400050 	 .word 1342193664
 5578 0050 00430050 	 .word 1342194432
 5579              	 .cfi_endproc
 5580              	.LFE266:
 5582              	 .section .text.XMC_SCU_HIB_SetPinOutputLevel,"ax",%progbits
 5583              	 .align 2
 5584              	 .global XMC_SCU_HIB_SetPinOutputLevel
 5585              	 .thumb
 5586              	 .thumb_func
 5588              	XMC_SCU_HIB_SetPinOutputLevel:
 5589              	.LFB267:
1379:../Libraries/XMCLib/src/xmc4_scu.c **** 
1380:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinOutputLevel(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_IO_OUTPUT_LEVEL_t level)
1381:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5590              	 .loc 3 1381 0
 5591              	 .cfi_startproc
 5592              	 
 5593              	 
 5594              	 
 5595 0000 80B4     	 push {r7}
 5596              	.LCFI512:
 5597              	 .cfi_def_cfa_offset 4
 5598              	 .cfi_offset 7,-4
 5599 0002 83B0     	 sub sp,sp,#12
 5600              	.LCFI513:
 5601              	 .cfi_def_cfa_offset 16
 5602 0004 00AF     	 add r7,sp,#0
 5603              	.LCFI514:
 5604              	 .cfi_def_cfa_register 7
 5605 0006 0346     	 mov r3,r0
 5606 0008 0A46     	 mov r2,r1
 5607 000a FB71     	 strb r3,[r7,#7]
 5608 000c 1346     	 mov r3,r2
 5609 000e BB80     	 strh r3,[r7,#4]
1382:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5610              	 .loc 3 1382 0
 5611 0010 00BF     	 nop
 5612              	.L378:
 5613              	 .loc 3 1382 0 is_stmt 0 discriminator 1
 5614 0012 0E4B     	 ldr r3,.L379
 5615 0014 D3F8C430 	 ldr r3,[r3,#196]
 5616 0018 03F00803 	 and r3,r3,#8
 5617 001c 002B     	 cmp r3,#0
 5618 001e F8D1     	 bne .L378
1383:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1384:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1385:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1386:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0POL_Msk << pin)) |
 5619              	 .loc 3 1386 0 is_stmt 1
 5620 0020 0B48     	 ldr r0,.L379+4
 5621 0022 0B4B     	 ldr r3,.L379+4
 5622 0024 DA68     	 ldr r2,[r3,#12]
 5623 0026 FB79     	 ldrb r3,[r7,#7]
 5624 0028 4FF48051 	 mov r1,#4096
 5625 002c 01FA03F3 	 lsl r3,r1,r3
 5626 0030 DB43     	 mvns r3,r3
 5627 0032 1340     	 ands r3,r3,r2
1387:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5628              	 .loc 3 1387 0
 5629 0034 B988     	 ldrh r1,[r7,#4]
 5630 0036 FA79     	 ldrb r2,[r7,#7]
 5631 0038 01FA02F2 	 lsl r2,r1,r2
1386:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5632              	 .loc 3 1386 0
 5633 003c 1343     	 orrs r3,r3,r2
 5634 003e C360     	 str r3,[r0,#12]
1388:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5635              	 .loc 3 1388 0
 5636 0040 0C37     	 adds r7,r7,#12
 5637              	.LCFI515:
 5638              	 .cfi_def_cfa_offset 4
 5639 0042 BD46     	 mov sp,r7
 5640              	.LCFI516:
 5641              	 .cfi_def_cfa_register 13
 5642              	 
 5643 0044 5DF8047B 	 ldr r7,[sp],#4
 5644              	.LCFI517:
 5645              	 .cfi_restore 7
 5646              	 .cfi_def_cfa_offset 0
 5647 0048 7047     	 bx lr
 5648              	.L380:
 5649 004a 00BF     	 .align 2
 5650              	.L379:
 5651 004c 00400050 	 .word 1342193664
 5652 0050 00430050 	 .word 1342194432
 5653              	 .cfi_endproc
 5654              	.LFE267:
 5656              	 .section .text.XMC_SCU_HIB_SetInput0,"ax",%progbits
 5657              	 .align 2
 5658              	 .global XMC_SCU_HIB_SetInput0
 5659              	 .thumb
 5660              	 .thumb_func
 5662              	XMC_SCU_HIB_SetInput0:
 5663              	.LFB268:
1389:../Libraries/XMCLib/src/xmc4_scu.c **** 
1390:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetInput0(XMC_SCU_HIB_IO_t pin)
1391:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5664              	 .loc 3 1391 0
 5665              	 .cfi_startproc
 5666              	 
 5667              	 
 5668              	 
 5669 0000 80B4     	 push {r7}
 5670              	.LCFI518:
 5671              	 .cfi_def_cfa_offset 4
 5672              	 .cfi_offset 7,-4
 5673 0002 83B0     	 sub sp,sp,#12
 5674              	.LCFI519:
 5675              	 .cfi_def_cfa_offset 16
 5676 0004 00AF     	 add r7,sp,#0
 5677              	.LCFI520:
 5678              	 .cfi_def_cfa_register 7
 5679 0006 0346     	 mov r3,r0
 5680 0008 FB71     	 strb r3,[r7,#7]
1392:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5681              	 .loc 3 1392 0
 5682 000a 00BF     	 nop
 5683              	.L382:
 5684              	 .loc 3 1392 0 is_stmt 0 discriminator 1
 5685 000c 0D4B     	 ldr r3,.L385
 5686 000e D3F8C430 	 ldr r3,[r3,#196]
 5687 0012 03F00803 	 and r3,r3,#8
 5688 0016 002B     	 cmp r3,#0
 5689 0018 F8D1     	 bne .L382
1393:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1394:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1395:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1396:../Libraries/XMCLib/src/xmc4_scu.c **** 
1397:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5690              	 .loc 3 1397 0 is_stmt 1
 5691 001a FB79     	 ldrb r3,[r7,#7]
 5692 001c 002B     	 cmp r3,#0
 5693 001e 06D1     	 bne .L383
1398:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1399:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5694              	 .loc 3 1399 0
 5695 0020 094A     	 ldr r2,.L385+4
 5696 0022 094B     	 ldr r3,.L385+4
 5697 0024 DB68     	 ldr r3,[r3,#12]
 5698 0026 43F48063 	 orr r3,r3,#1024
 5699 002a D360     	 str r3,[r2,#12]
 5700 002c 05E0     	 b .L381
 5701              	.L383:
1400:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1401:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1402:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1403:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_GPI0SEL_Msk; 
 5702              	 .loc 3 1403 0
 5703 002e 064A     	 ldr r2,.L385+4
 5704 0030 054B     	 ldr r3,.L385+4
 5705 0032 DB68     	 ldr r3,[r3,#12]
 5706 0034 23F48063 	 bic r3,r3,#1024
 5707 0038 D360     	 str r3,[r2,#12]
 5708              	.L381:
1404:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1405:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5709              	 .loc 3 1405 0
 5710 003a 0C37     	 adds r7,r7,#12
 5711              	.LCFI521:
 5712              	 .cfi_def_cfa_offset 4
 5713 003c BD46     	 mov sp,r7
 5714              	.LCFI522:
 5715              	 .cfi_def_cfa_register 13
 5716              	 
 5717 003e 5DF8047B 	 ldr r7,[sp],#4
 5718              	.LCFI523:
 5719              	 .cfi_restore 7
 5720              	 .cfi_def_cfa_offset 0
 5721 0042 7047     	 bx lr
 5722              	.L386:
 5723              	 .align 2
 5724              	.L385:
 5725 0044 00400050 	 .word 1342193664
 5726 0048 00430050 	 .word 1342194432
 5727              	 .cfi_endproc
 5728              	.LFE268:
 5730              	 .section .text.XMC_SCU_HIB_SetSR0Input,"ax",%progbits
 5731              	 .align 2
 5732              	 .global XMC_SCU_HIB_SetSR0Input
 5733              	 .thumb
 5734              	 .thumb_func
 5736              	XMC_SCU_HIB_SetSR0Input:
 5737              	.LFB269:
1406:../Libraries/XMCLib/src/xmc4_scu.c **** 
1407:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR0Input(XMC_SCU_HIB_SR0_INPUT_t input)
1408:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5738              	 .loc 3 1408 0
 5739              	 .cfi_startproc
 5740              	 
 5741              	 
 5742              	 
 5743 0000 80B4     	 push {r7}
 5744              	.LCFI524:
 5745              	 .cfi_def_cfa_offset 4
 5746              	 .cfi_offset 7,-4
 5747 0002 83B0     	 sub sp,sp,#12
 5748              	.LCFI525:
 5749              	 .cfi_def_cfa_offset 16
 5750 0004 00AF     	 add r7,sp,#0
 5751              	.LCFI526:
 5752              	 .cfi_def_cfa_register 7
 5753 0006 0346     	 mov r3,r0
 5754 0008 FB80     	 strh r3,[r7,#6]
1409:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5755              	 .loc 3 1409 0
 5756 000a 00BF     	 nop
 5757              	.L388:
 5758              	 .loc 3 1409 0 is_stmt 0 discriminator 1
 5759 000c 094B     	 ldr r3,.L389
 5760 000e D3F8C430 	 ldr r3,[r3,#196]
 5761 0012 03F00803 	 and r3,r3,#8
 5762 0016 002B     	 cmp r3,#0
 5763 0018 F8D1     	 bne .L388
1410:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1411:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1412:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1413:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1414:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
1415:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1416:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk)) | 
 5764              	 .loc 3 1416 0 is_stmt 1
 5765 001a 0749     	 ldr r1,.L389+4
 5766 001c 064B     	 ldr r3,.L389+4
 5767 001e DB68     	 ldr r3,[r3,#12]
 5768 0020 23F48062 	 bic r2,r3,#1024
 5769 0024 FB88     	 ldrh r3,[r7,#6]
 5770 0026 1343     	 orrs r3,r3,r2
 5771 0028 CB60     	 str r3,[r1,#12]
1417:../Libraries/XMCLib/src/xmc4_scu.c **** #endif  
1418:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1419:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5772              	 .loc 3 1419 0
 5773 002a 0C37     	 adds r7,r7,#12
 5774              	.LCFI527:
 5775              	 .cfi_def_cfa_offset 4
 5776 002c BD46     	 mov sp,r7
 5777              	.LCFI528:
 5778              	 .cfi_def_cfa_register 13
 5779              	 
 5780 002e 5DF8047B 	 ldr r7,[sp],#4
 5781              	.LCFI529:
 5782              	 .cfi_restore 7
 5783              	 .cfi_def_cfa_offset 0
 5784 0032 7047     	 bx lr
 5785              	.L390:
 5786              	 .align 2
 5787              	.L389:
 5788 0034 00400050 	 .word 1342193664
 5789 0038 00430050 	 .word 1342194432
 5790              	 .cfi_endproc
 5791              	.LFE269:
 5793              	 .section .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable,"ax",%progbits
 5794              	 .align 2
 5795              	 .global XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 5796              	 .thumb
 5797              	 .thumb_func
 5799              	XMC_SCU_CLOCK_IsLowPowerOscillatorStable:
 5800              	.LFB270:
1420:../Libraries/XMCLib/src/xmc4_scu.c **** 
1421:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1422:../Libraries/XMCLib/src/xmc4_scu.c **** 
1423:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1424:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR1Input(XMC_SCU_HIB_SR1_INPUT_t input)
1425:../Libraries/XMCLib/src/xmc4_scu.c **** {
1426:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
1427:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1428:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1429:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1430:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI1SEL_Msk | SCU_HIB
1431:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1432:../Libraries/XMCLib/src/xmc4_scu.c **** }
1433:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1434:../Libraries/XMCLib/src/xmc4_scu.c **** 
1435:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetInput(XMC_SCU_HIB_LPAC_INPUT_t input)
1436:../Libraries/XMCLib/src/xmc4_scu.c **** {
1437:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1438:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1439:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1440:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1441:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_CMPEN_Msk
1442:../Libraries/XMCLib/src/xmc4_scu.c ****                             input;
1443:../Libraries/XMCLib/src/xmc4_scu.c **** }
1444:../Libraries/XMCLib/src/xmc4_scu.c **** 
1445:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTrigger(XMC_SCU_HIB_LPAC_TRIGGER_t trigger)
1446:../Libraries/XMCLib/src/xmc4_scu.c **** {
1447:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1448:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1449:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1450:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1451:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_TRIGSEL_M
1452:../Libraries/XMCLib/src/xmc4_scu.c ****                             trigger;
1453:../Libraries/XMCLib/src/xmc4_scu.c **** }
1454:../Libraries/XMCLib/src/xmc4_scu.c **** 
1455:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTiming(bool enable_delay, uint16_t interval_count, uint8_t settle_count)
1456:../Libraries/XMCLib/src/xmc4_scu.c **** {
1457:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t config = 0;
1458:../Libraries/XMCLib/src/xmc4_scu.c **** 
1459:../Libraries/XMCLib/src/xmc4_scu.c ****   if (enable_delay)
1460:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1461:../Libraries/XMCLib/src/xmc4_scu.c ****     config = SCU_HIBERNATE_LPACCONF_CONVDEL_Msk;
1462:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1463:../Libraries/XMCLib/src/xmc4_scu.c **** 
1464:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= interval_count << SCU_HIBERNATE_LPACCONF_INTERVCNT_Pos;
1465:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= settle_count << SCU_HIBERNATE_LPACCONF_SETTLECNT_Pos;
1466:../Libraries/XMCLib/src/xmc4_scu.c **** 
1467:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1468:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1469:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1470:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1471:../Libraries/XMCLib/src/xmc4_scu.c **** 
1472:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~(SCU_HIBERNATE_LPACCONF_CONVDEL_
1473:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_INTERVCN
1474:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_SETTLECN
1475:../Libraries/XMCLib/src/xmc4_scu.c ****                             config;
1476:../Libraries/XMCLib/src/xmc4_scu.c **** 
1477:../Libraries/XMCLib/src/xmc4_scu.c **** }
1478:../Libraries/XMCLib/src/xmc4_scu.c **** 
1479:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetVBATThresholds(uint8_t lower, uint8_t upper)
1480:../Libraries/XMCLib/src/xmc4_scu.c **** {
1481:../Libraries/XMCLib/src/xmc4_scu.c **** 
1482:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH0_Msk)
1483:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1484:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1485:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1486:../Libraries/XMCLib/src/xmc4_scu.c **** 
1487:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH0 = (lower << SCU_HIBERNATE_LPACTH0_VBATLO_Pos) | (upper << SCU_HIBERNATE_LP
1488:../Libraries/XMCLib/src/xmc4_scu.c **** 
1489:../Libraries/XMCLib/src/xmc4_scu.c **** 
1490:../Libraries/XMCLib/src/xmc4_scu.c **** 
1491:../Libraries/XMCLib/src/xmc4_scu.c **** }
1492:../Libraries/XMCLib/src/xmc4_scu.c **** 
1493:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds(uint8_t lower, uint8_t upper)
1494:../Libraries/XMCLib/src/xmc4_scu.c **** {
1495:../Libraries/XMCLib/src/xmc4_scu.c **** 
1496:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1497:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1498:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1499:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1500:../Libraries/XMCLib/src/xmc4_scu.c **** 
1501:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Ms
1502:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
1503:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO0HI_Pos);
1504:../Libraries/XMCLib/src/xmc4_scu.c **** 
1505:../Libraries/XMCLib/src/xmc4_scu.c **** }
1506:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1507:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds(uint8_t lower, uint8_t upper)
1508:../Libraries/XMCLib/src/xmc4_scu.c **** {
1509:../Libraries/XMCLib/src/xmc4_scu.c **** 
1510:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1511:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1512:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1513:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1514:../Libraries/XMCLib/src/xmc4_scu.c **** 
1515:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Ms
1516:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
1517:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO1HI_Pos);
1518:../Libraries/XMCLib/src/xmc4_scu.c **** 
1519:../Libraries/XMCLib/src/xmc4_scu.c **** }
1520:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1521:../Libraries/XMCLib/src/xmc4_scu.c **** int32_t XMC_SCU_HIB_LPAC_GetStatus(void)
1522:../Libraries/XMCLib/src/xmc4_scu.c **** {
1523:../Libraries/XMCLib/src/xmc4_scu.c ****   return SCU_HIBERNATE->LPACST;
1524:../Libraries/XMCLib/src/xmc4_scu.c **** }
1525:../Libraries/XMCLib/src/xmc4_scu.c **** 
1526:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_ClearStatus(int32_t status)
1527:../Libraries/XMCLib/src/xmc4_scu.c **** {
1528:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCLR_Msk)
1529:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1530:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACCLR register in hibernate domain is ready to accept a write */
1531:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1532:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCLR = status;;
1533:../Libraries/XMCLib/src/xmc4_scu.c **** }
1534:../Libraries/XMCLib/src/xmc4_scu.c **** 
1535:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_TriggerCompare(XMC_SCU_HIB_LPAC_INPUT_t input)
1536:../Libraries/XMCLib/src/xmc4_scu.c **** {
1537:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACSET_Msk)
1538:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1539:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACSET register in hibernate domain is ready to accept a write */
1540:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1541:../Libraries/XMCLib/src/xmc4_scu.c **** 
1542:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACSET = input;
1543:../Libraries/XMCLib/src/xmc4_scu.c **** }
1544:../Libraries/XMCLib/src/xmc4_scu.c **** 
1545:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1546:../Libraries/XMCLib/src/xmc4_scu.c **** 
1547:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void)
1548:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5801              	 .loc 3 1548 0
 5802              	 .cfi_startproc
 5803              	 
 5804              	 
 5805              	 
 5806 0000 80B4     	 push {r7}
 5807              	.LCFI530:
 5808              	 .cfi_def_cfa_offset 4
 5809              	 .cfi_offset 7,-4
 5810 0002 00AF     	 add r7,sp,#0
 5811              	.LCFI531:
 5812              	 .cfi_def_cfa_register 7
1549:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) == 0UL);
 5813              	 .loc 3 1549 0
 5814 0004 064B     	 ldr r3,.L393
 5815 0006 1B68     	 ldr r3,[r3]
 5816 0008 03F00803 	 and r3,r3,#8
 5817 000c 002B     	 cmp r3,#0
 5818 000e 0CBF     	 ite eq
 5819 0010 0123     	 moveq r3,#1
 5820 0012 0023     	 movne r3,#0
 5821 0014 DBB2     	 uxtb r3,r3
1550:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5822              	 .loc 3 1550 0
 5823 0016 1846     	 mov r0,r3
 5824 0018 BD46     	 mov sp,r7
 5825              	.LCFI532:
 5826              	 .cfi_def_cfa_register 13
 5827              	 
 5828 001a 5DF8047B 	 ldr r7,[sp],#4
 5829              	.LCFI533:
 5830              	 .cfi_restore 7
 5831              	 .cfi_def_cfa_offset 0
 5832 001e 7047     	 bx lr
 5833              	.L394:
 5834              	 .align 2
 5835              	.L393:
 5836 0020 00430050 	 .word 1342194432
 5837              	 .cfi_endproc
 5838              	.LFE270:
 5840              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillator,"ax",%progbits
 5841              	 .align 2
 5842              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillator
 5843              	 .thumb
 5844              	 .thumb_func
 5846              	XMC_SCU_CLOCK_EnableLowPowerOscillator:
 5847              	.LFB271:
1551:../Libraries/XMCLib/src/xmc4_scu.c **** 
1552:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1553:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void)
1554:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5848              	 .loc 3 1554 0
 5849              	 .cfi_startproc
 5850              	 
 5851              	 
 5852 0000 80B5     	 push {r7,lr}
 5853              	.LCFI534:
 5854              	 .cfi_def_cfa_offset 8
 5855              	 .cfi_offset 7,-8
 5856              	 .cfi_offset 14,-4
 5857 0002 00AF     	 add r7,sp,#0
 5858              	.LCFI535:
 5859              	 .cfi_def_cfa_register 7
1555:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP */
1556:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED);
 5860              	 .loc 3 1556 0
 5861 0004 4FF40000 	 mov r0,#8388608
 5862 0008 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1557:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 5863              	 .loc 3 1557 0
 5864 000c 174A     	 ldr r2,.L399
 5865 000e 174B     	 ldr r3,.L399
 5866 0010 DB69     	 ldr r3,[r3,#28]
 5867 0012 23F03003 	 bic r3,r3,#48
 5868 0016 D361     	 str r3,[r2,#28]
1558:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED) == 0);
 5869              	 .loc 3 1558 0
 5870 0018 00BF     	 nop
 5871              	.L396:
 5872              	 .loc 3 1558 0 is_stmt 0 discriminator 1
 5873 001a FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 5874 001e 0346     	 mov r3,r0
 5875 0020 03F40003 	 and r3,r3,#8388608
 5876 0024 002B     	 cmp r3,#0
 5877 0026 F8D0     	 beq .L396
1559:../Libraries/XMCLib/src/xmc4_scu.c **** 
1560:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Clear ULP WDG status */
1561:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED);
 5878              	 .loc 3 1561 0 is_stmt 1
 5879 0028 4FF40030 	 mov r0,#131072
 5880 002c FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1562:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = (uint32_t)SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 5881              	 .loc 3 1562 0
 5882 0030 0E4B     	 ldr r3,.L399
 5883 0032 0822     	 movs r2,#8
 5884 0034 5A60     	 str r2,[r3,#4]
1563:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED) == 0);
 5885              	 .loc 3 1563 0
 5886 0036 00BF     	 nop
 5887              	.L397:
 5888              	 .loc 3 1563 0 is_stmt 0 discriminator 1
 5889 0038 FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 5890 003c 0346     	 mov r3,r0
 5891 003e 03F40033 	 and r3,r3,#131072
 5892 0042 002B     	 cmp r3,#0
 5893 0044 F8D0     	 beq .L397
1564:../Libraries/XMCLib/src/xmc4_scu.c **** 
1565:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable ULP WDG */
1566:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED);
 5894              	 .loc 3 1566 0 is_stmt 1
 5895 0046 4FF40020 	 mov r0,#524288
 5896 004a FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1567:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 5897              	 .loc 3 1567 0
 5898 004e 074A     	 ldr r2,.L399
 5899 0050 064B     	 ldr r3,.L399
 5900 0052 DB68     	 ldr r3,[r3,#12]
 5901 0054 43F00803 	 orr r3,r3,#8
 5902 0058 D360     	 str r3,[r2,#12]
1568:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED) == 0);
 5903              	 .loc 3 1568 0
 5904 005a 00BF     	 nop
 5905              	.L398:
 5906              	 .loc 3 1568 0 is_stmt 0 discriminator 1
 5907 005c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 5908 0060 0346     	 mov r3,r0
 5909 0062 03F40023 	 and r3,r3,#524288
 5910 0066 002B     	 cmp r3,#0
 5911 0068 F8D0     	 beq .L398
1569:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5912              	 .loc 3 1569 0 is_stmt 1
 5913 006a 80BD     	 pop {r7,pc}
 5914              	.L400:
 5915              	 .align 2
 5916              	.L399:
 5917 006c 00430050 	 .word 1342194432
 5918              	 .cfi_endproc
 5919              	.LFE271:
 5921              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillator,"ax",%progbits
 5922              	 .align 2
 5923              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillator
 5924              	 .thumb
 5925              	 .thumb_func
 5927              	XMC_SCU_CLOCK_DisableLowPowerOscillator:
 5928              	.LFB272:
1570:../Libraries/XMCLib/src/xmc4_scu.c **** 
1571:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1572:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void)
1573:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5929              	 .loc 3 1573 0
 5930              	 .cfi_startproc
 5931              	 
 5932              	 
 5933              	 
 5934 0000 80B4     	 push {r7}
 5935              	.LCFI536:
 5936              	 .cfi_def_cfa_offset 4
 5937              	 .cfi_offset 7,-4
 5938 0002 00AF     	 add r7,sp,#0
 5939              	.LCFI537:
 5940              	 .cfi_def_cfa_register 7
1574:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 5941              	 .loc 3 1574 0
 5942 0004 00BF     	 nop
 5943              	.L402:
 5944              	 .loc 3 1574 0 is_stmt 0 discriminator 1
 5945 0006 084B     	 ldr r3,.L403
 5946 0008 D3F8C430 	 ldr r3,[r3,#196]
 5947 000c 03F08003 	 and r3,r3,#128
 5948 0010 002B     	 cmp r3,#0
 5949 0012 F8D1     	 bne .L402
1575:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1576:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1577:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1578:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= (uint32_t)SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 5950              	 .loc 3 1578 0 is_stmt 1
 5951 0014 054A     	 ldr r2,.L403+4
 5952 0016 054B     	 ldr r3,.L403+4
 5953 0018 DB69     	 ldr r3,[r3,#28]
 5954 001a 43F03003 	 orr r3,r3,#48
 5955 001e D361     	 str r3,[r2,#28]
1579:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5956              	 .loc 3 1579 0
 5957 0020 BD46     	 mov sp,r7
 5958              	.LCFI538:
 5959              	 .cfi_def_cfa_register 13
 5960              	 
 5961 0022 5DF8047B 	 ldr r7,[sp],#4
 5962              	.LCFI539:
 5963              	 .cfi_restore 7
 5964              	 .cfi_def_cfa_offset 0
 5965 0026 7047     	 bx lr
 5966              	.L404:
 5967              	 .align 2
 5968              	.L403:
 5969 0028 00400050 	 .word 1342193664
 5970 002c 00430050 	 .word 1342194432
 5971              	 .cfi_endproc
 5972              	.LFE272:
 5974              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 5975              	 .align 2
 5976              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
 5977              	 .thumb
 5978              	 .thumb_func
 5980              	XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:
 5981              	.LFB273:
1580:../Libraries/XMCLib/src/xmc4_scu.c **** 
1581:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void)
1582:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5982              	 .loc 3 1582 0
 5983              	 .cfi_startproc
 5984              	 
 5985              	 
 5986              	 
 5987 0000 80B4     	 push {r7}
 5988              	.LCFI540:
 5989              	 .cfi_def_cfa_offset 4
 5990              	 .cfi_offset 7,-4
 5991 0002 00AF     	 add r7,sp,#0
 5992              	.LCFI541:
 5993              	 .cfi_def_cfa_register 7
1583:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 5994              	 .loc 3 1583 0
 5995 0004 00BF     	 nop
 5996              	.L406:
 5997              	 .loc 3 1583 0 is_stmt 0 discriminator 1
 5998 0006 084B     	 ldr r3,.L407
 5999 0008 D3F8C430 	 ldr r3,[r3,#196]
 6000 000c 03F08003 	 and r3,r3,#128
 6001 0010 002B     	 cmp r3,#0
 6002 0012 F8D1     	 bne .L406
1584:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1585:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1586:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1587:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= SCU_HIBERNATE_OSCULCTRL_X1DEN_Msk | SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6003              	 .loc 3 1587 0 is_stmt 1
 6004 0014 054A     	 ldr r2,.L407+4
 6005 0016 054B     	 ldr r3,.L407+4
 6006 0018 DB69     	 ldr r3,[r3,#28]
 6007 001a 43F03103 	 orr r3,r3,#49
 6008 001e D361     	 str r3,[r2,#28]
1588:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6009              	 .loc 3 1588 0
 6010 0020 BD46     	 mov sp,r7
 6011              	.LCFI542:
 6012              	 .cfi_def_cfa_register 13
 6013              	 
 6014 0022 5DF8047B 	 ldr r7,[sp],#4
 6015              	.LCFI543:
 6016              	 .cfi_restore 7
 6017              	 .cfi_def_cfa_offset 0
 6018 0026 7047     	 bx lr
 6019              	.L408:
 6020              	 .align 2
 6021              	.L407:
 6022 0028 00400050 	 .word 1342193664
 6023 002c 00430050 	 .word 1342194432
 6024              	 .cfi_endproc
 6025              	.LFE273:
 6027              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6028              	 .align 2
 6029              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
 6030              	 .thumb
 6031              	 .thumb_func
 6033              	XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:
 6034              	.LFB274:
1589:../Libraries/XMCLib/src/xmc4_scu.c **** 
1590:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void)
1591:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6035              	 .loc 3 1591 0
 6036              	 .cfi_startproc
 6037              	 
 6038              	 
 6039              	 
 6040 0000 80B4     	 push {r7}
 6041              	.LCFI544:
 6042              	 .cfi_def_cfa_offset 4
 6043              	 .cfi_offset 7,-4
 6044 0002 00AF     	 add r7,sp,#0
 6045              	.LCFI545:
 6046              	 .cfi_def_cfa_register 7
1592:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6047              	 .loc 3 1592 0
 6048 0004 00BF     	 nop
 6049              	.L410:
 6050              	 .loc 3 1592 0 is_stmt 0 discriminator 1
 6051 0006 094B     	 ldr r3,.L411
 6052 0008 D3F8C430 	 ldr r3,[r3,#196]
 6053 000c 03F08003 	 and r3,r3,#128
 6054 0010 002B     	 cmp r3,#0
 6055 0012 F8D1     	 bne .L410
1593:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1594:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1595:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1596:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL = (SCU_HIBERNATE->OSCULCTRL & ~(uint32_t)(SCU_HIBERNATE_OSCULCTRL_X1DEN_
 6056              	 .loc 3 1596 0 is_stmt 1
 6057 0014 064A     	 ldr r2,.L411+4
 6058 0016 064B     	 ldr r3,.L411+4
 6059 0018 DB69     	 ldr r3,[r3,#28]
 6060 001a 23F03103 	 bic r3,r3,#49
 6061 001e 43F02003 	 orr r3,r3,#32
 6062 0022 D361     	 str r3,[r2,#28]
1597:../Libraries/XMCLib/src/xmc4_scu.c ****                              (SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN << SCU_HIBERNATE_OSCULCTR
1598:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6063              	 .loc 3 1598 0
 6064 0024 BD46     	 mov sp,r7
 6065              	.LCFI546:
 6066              	 .cfi_def_cfa_register 13
 6067              	 
 6068 0026 5DF8047B 	 ldr r7,[sp],#4
 6069              	.LCFI547:
 6070              	 .cfi_restore 7
 6071              	 .cfi_def_cfa_offset 0
 6072 002a 7047     	 bx lr
 6073              	.L412:
 6074              	 .align 2
 6075              	.L411:
 6076 002c 00400050 	 .word 1342193664
 6077 0030 00430050 	 .word 1342194432
 6078              	 .cfi_endproc
 6079              	.LFE274:
 6081              	 .section .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6082              	 .align 2
 6083              	 .global XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
 6084              	 .thumb
 6085              	 .thumb_func
 6087              	XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:
 6088              	.LFB275:
1599:../Libraries/XMCLib/src/xmc4_scu.c **** 
1600:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void)
1601:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6089              	 .loc 3 1601 0
 6090              	 .cfi_startproc
 6091              	 
 6092              	 
 6093              	 
 6094 0000 80B4     	 push {r7}
 6095              	.LCFI548:
 6096              	 .cfi_def_cfa_offset 4
 6097              	 .cfi_offset 7,-4
 6098 0002 00AF     	 add r7,sp,#0
 6099              	.LCFI549:
 6100              	 .cfi_def_cfa_register 7
1602:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_HIBERNATE->OSCULSTAT & SCU_HIBERNATE_OSCULSTAT_X1D_Msk);
 6101              	 .loc 3 1602 0
 6102 0004 044B     	 ldr r3,.L415
 6103 0006 9B69     	 ldr r3,[r3,#24]
 6104 0008 03F00103 	 and r3,r3,#1
1603:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6105              	 .loc 3 1603 0
 6106 000c 1846     	 mov r0,r3
 6107 000e BD46     	 mov sp,r7
 6108              	.LCFI550:
 6109              	 .cfi_def_cfa_register 13
 6110              	 
 6111 0010 5DF8047B 	 ldr r7,[sp],#4
 6112              	.LCFI551:
 6113              	 .cfi_restore 7
 6114              	 .cfi_def_cfa_offset 0
 6115 0014 7047     	 bx lr
 6116              	.L416:
 6117 0016 00BF     	 .align 2
 6118              	.L415:
 6119 0018 00430050 	 .word 1342194432
 6120              	 .cfi_endproc
 6121              	.LFE275:
 6123              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator,"ax",%progbits
 6124              	 .align 2
 6125              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 6126              	 .thumb
 6127              	 .thumb_func
 6129              	XMC_SCU_CLOCK_EnableHighPerformanceOscillator:
 6130              	.LFB276:
1604:../Libraries/XMCLib/src/xmc4_scu.c **** 
1605:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable High Precision High Speed oscillator */
1606:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void)
1607:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6131              	 .loc 3 1607 0
 6132              	 .cfi_startproc
 6133              	 
 6134              	 
 6135 0000 B0B5     	 push {r4,r5,r7,lr}
 6136              	.LCFI552:
 6137              	 .cfi_def_cfa_offset 16
 6138              	 .cfi_offset 4,-16
 6139              	 .cfi_offset 5,-12
 6140              	 .cfi_offset 7,-8
 6141              	 .cfi_offset 14,-4
 6142 0002 00AF     	 add r7,sp,#0
 6143              	.LCFI553:
 6144              	 .cfi_def_cfa_register 7
1608:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_PLLPWD_Msk;
 6145              	 .loc 3 1608 0
 6146 0004 0F4A     	 ldr r2,.L418
 6147 0006 0F4B     	 ldr r3,.L418
 6148 0008 5B68     	 ldr r3,[r3,#4]
 6149 000a 23F48033 	 bic r3,r3,#65536
 6150 000e 5360     	 str r3,[r2,#4]
1609:../Libraries/XMCLib/src/xmc4_scu.c **** 
1610:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL = (uint32_t)((SCU_OSC->OSCHPCTRL & ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCH
 6151              	 .loc 3 1610 0
 6152 0010 0D4D     	 ldr r5,.L418+4
 6153 0012 0D4B     	 ldr r3,.L418+4
 6154 0014 5B68     	 ldr r3,[r3,#4]
 6155 0016 23F47024 	 bic r4,r3,#983040
 6156 001a 24F03004 	 bic r4,r4,#48
1611:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6157              	 .loc 3 1611 0
 6158 001e FFF7FEFF 	 bl OSCHP_GetFrequency
 6159 0022 0246     	 mov r2,r0
 6160 0024 094B     	 ldr r3,.L418+8
 6161 0026 A3FB0223 	 umull r2,r3,r3,r2
 6162 002a 1B0D     	 lsrs r3,r3,#20
 6163 002c 013B     	 subs r3,r3,#1
 6164 002e 1B04     	 lsls r3,r3,#16
1610:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6165              	 .loc 3 1610 0
 6166 0030 2343     	 orrs r3,r3,r4
 6167 0032 6B60     	 str r3,[r5,#4]
1612:../Libraries/XMCLib/src/xmc4_scu.c **** 
1613:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart OSC Watchdog */
1614:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_OSCRES_Msk;
 6168              	 .loc 3 1614 0
 6169 0034 034A     	 ldr r2,.L418
 6170 0036 034B     	 ldr r3,.L418
 6171 0038 5B68     	 ldr r3,[r3,#4]
 6172 003a 23F40033 	 bic r3,r3,#131072
 6173 003e 5360     	 str r3,[r2,#4]
1615:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6174              	 .loc 3 1615 0
 6175 0040 B0BD     	 pop {r4,r5,r7,pc}
 6176              	.L419:
 6177 0042 00BF     	 .align 2
 6178              	.L418:
 6179 0044 10470050 	 .word 1342195472
 6180 0048 00470050 	 .word 1342195456
 6181 004c 6BCA5F6B 	 .word 1801439851
 6182              	 .cfi_endproc
 6183              	.LFE276:
 6185              	 .section .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable,"ax",%progbits
 6186              	 .align 2
 6187              	 .global XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 6188              	 .thumb
 6189              	 .thumb_func
 6191              	XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:
 6192              	.LFB277:
1616:../Libraries/XMCLib/src/xmc4_scu.c **** 
1617:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void)
1618:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6193              	 .loc 3 1618 0
 6194              	 .cfi_startproc
 6195              	 
 6196              	 
 6197              	 
 6198 0000 80B4     	 push {r7}
 6199              	.LCFI554:
 6200              	 .cfi_def_cfa_offset 4
 6201              	 .cfi_offset 7,-4
 6202 0002 00AF     	 add r7,sp,#0
 6203              	.LCFI555:
 6204              	 .cfi_def_cfa_register 7
1619:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_PLL->PLLSTAT & XMC_SCU_PLL_PLLSTAT_OSC_USABLE) == XMC_SCU_PLL_PLLSTAT_OSC_USABLE);
 6205              	 .loc 3 1619 0
 6206 0004 074B     	 ldr r3,.L422
 6207 0006 1B68     	 ldr r3,[r3]
 6208 0008 03F46073 	 and r3,r3,#896
 6209 000c B3F5607F 	 cmp r3,#896
 6210 0010 0CBF     	 ite eq
 6211 0012 0123     	 moveq r3,#1
 6212 0014 0023     	 movne r3,#0
 6213 0016 DBB2     	 uxtb r3,r3
1620:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6214              	 .loc 3 1620 0
 6215 0018 1846     	 mov r0,r3
 6216 001a BD46     	 mov sp,r7
 6217              	.LCFI556:
 6218              	 .cfi_def_cfa_register 13
 6219              	 
 6220 001c 5DF8047B 	 ldr r7,[sp],#4
 6221              	.LCFI557:
 6222              	 .cfi_restore 7
 6223              	 .cfi_def_cfa_offset 0
 6224 0020 7047     	 bx lr
 6225              	.L423:
 6226 0022 00BF     	 .align 2
 6227              	.L422:
 6228 0024 10470050 	 .word 1342195472
 6229              	 .cfi_endproc
 6230              	.LFE277:
 6232              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator,"ax",%progbits
 6233              	 .align 2
 6234              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillator
 6235              	 .thumb
 6236              	 .thumb_func
 6238              	XMC_SCU_CLOCK_DisableHighPerformanceOscillator:
 6239              	.LFB278:
1621:../Libraries/XMCLib/src/xmc4_scu.c **** 
1622:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable High Precision High Speed oscillator */
1623:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void)
1624:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6240              	 .loc 3 1624 0
 6241              	 .cfi_startproc
 6242              	 
 6243              	 
 6244              	 
 6245 0000 80B4     	 push {r7}
 6246              	.LCFI558:
 6247              	 .cfi_def_cfa_offset 4
 6248              	 .cfi_offset 7,-4
 6249 0002 00AF     	 add r7,sp,#0
 6250              	.LCFI559:
 6251              	 .cfi_def_cfa_register 7
1625:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= (uint32_t)SCU_OSC_OSCHPCTRL_MODE_Msk;
 6252              	 .loc 3 1625 0
 6253 0004 044A     	 ldr r2,.L425
 6254 0006 044B     	 ldr r3,.L425
 6255 0008 5B68     	 ldr r3,[r3,#4]
 6256 000a 43F03003 	 orr r3,r3,#48
 6257 000e 5360     	 str r3,[r2,#4]
1626:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6258              	 .loc 3 1626 0
 6259 0010 BD46     	 mov sp,r7
 6260              	.LCFI560:
 6261              	 .cfi_def_cfa_register 13
 6262              	 
 6263 0012 5DF8047B 	 ldr r7,[sp],#4
 6264              	.LCFI561:
 6265              	 .cfi_restore 7
 6266              	 .cfi_def_cfa_offset 0
 6267 0016 7047     	 bx lr
 6268              	.L426:
 6269              	 .align 2
 6270              	.L425:
 6271 0018 00470050 	 .word 1342195456
 6272              	 .cfi_endproc
 6273              	.LFE278:
 6275              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6276              	 .align 2
 6277              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
 6278              	 .thumb
 6279              	 .thumb_func
 6281              	XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:
 6282              	.LFB279:
1627:../Libraries/XMCLib/src/xmc4_scu.c **** 
1628:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void)
1629:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6283              	 .loc 3 1629 0
 6284              	 .cfi_startproc
 6285              	 
 6286              	 
 6287              	 
 6288 0000 80B4     	 push {r7}
 6289              	.LCFI562:
 6290              	 .cfi_def_cfa_offset 4
 6291              	 .cfi_offset 7,-4
 6292 0002 00AF     	 add r7,sp,#0
 6293              	.LCFI563:
 6294              	 .cfi_def_cfa_register 7
1630:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6295              	 .loc 3 1630 0
 6296 0004 044A     	 ldr r2,.L428
 6297 0006 044B     	 ldr r3,.L428
 6298 0008 5B68     	 ldr r3,[r3,#4]
 6299 000a 43F00103 	 orr r3,r3,#1
 6300 000e 5360     	 str r3,[r2,#4]
1631:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6301              	 .loc 3 1631 0
 6302 0010 BD46     	 mov sp,r7
 6303              	.LCFI564:
 6304              	 .cfi_def_cfa_register 13
 6305              	 
 6306 0012 5DF8047B 	 ldr r7,[sp],#4
 6307              	.LCFI565:
 6308              	 .cfi_restore 7
 6309              	 .cfi_def_cfa_offset 0
 6310 0016 7047     	 bx lr
 6311              	.L429:
 6312              	 .align 2
 6313              	.L428:
 6314 0018 00470050 	 .word 1342195456
 6315              	 .cfi_endproc
 6316              	.LFE279:
 6318              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6319              	 .align 2
 6320              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
 6321              	 .thumb
 6322              	 .thumb_func
 6324              	XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:
 6325              	.LFB280:
1632:../Libraries/XMCLib/src/xmc4_scu.c **** 
1633:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void)
1634:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6326              	 .loc 3 1634 0
 6327              	 .cfi_startproc
 6328              	 
 6329              	 
 6330              	 
 6331 0000 80B4     	 push {r7}
 6332              	.LCFI566:
 6333              	 .cfi_def_cfa_offset 4
 6334              	 .cfi_offset 7,-4
 6335 0002 00AF     	 add r7,sp,#0
 6336              	.LCFI567:
 6337              	 .cfi_def_cfa_register 7
1635:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL &= ~SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6338              	 .loc 3 1635 0
 6339 0004 044A     	 ldr r2,.L431
 6340 0006 044B     	 ldr r3,.L431
 6341 0008 5B68     	 ldr r3,[r3,#4]
 6342 000a 23F00103 	 bic r3,r3,#1
 6343 000e 5360     	 str r3,[r2,#4]
1636:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6344              	 .loc 3 1636 0
 6345 0010 BD46     	 mov sp,r7
 6346              	.LCFI568:
 6347              	 .cfi_def_cfa_register 13
 6348              	 
 6349 0012 5DF8047B 	 ldr r7,[sp],#4
 6350              	.LCFI569:
 6351              	 .cfi_restore 7
 6352              	 .cfi_def_cfa_offset 0
 6353 0016 7047     	 bx lr
 6354              	.L432:
 6355              	 .align 2
 6356              	.L431:
 6357 0018 00470050 	 .word 1342195456
 6358              	 .cfi_endproc
 6359              	.LFE280:
 6361              	 .section .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6362              	 .align 2
 6363              	 .global XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
 6364              	 .thumb
 6365              	 .thumb_func
 6367              	XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:
 6368              	.LFB281:
1637:../Libraries/XMCLib/src/xmc4_scu.c **** 
1638:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void)
1639:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6369              	 .loc 3 1639 0
 6370              	 .cfi_startproc
 6371              	 
 6372              	 
 6373              	 
 6374 0000 80B4     	 push {r7}
 6375              	.LCFI570:
 6376              	 .cfi_def_cfa_offset 4
 6377              	 .cfi_offset 7,-4
 6378 0002 00AF     	 add r7,sp,#0
 6379              	.LCFI571:
 6380              	 .cfi_def_cfa_register 7
1640:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_OSC->OSCHPSTAT & SCU_OSC_OSCHPSTAT_X1D_Msk);
 6381              	 .loc 3 1640 0
 6382 0004 044B     	 ldr r3,.L435
 6383 0006 1B68     	 ldr r3,[r3]
 6384 0008 03F00103 	 and r3,r3,#1
1641:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6385              	 .loc 3 1641 0
 6386 000c 1846     	 mov r0,r3
 6387 000e BD46     	 mov sp,r7
 6388              	.LCFI572:
 6389              	 .cfi_def_cfa_register 13
 6390              	 
 6391 0010 5DF8047B 	 ldr r7,[sp],#4
 6392              	.LCFI573:
 6393              	 .cfi_restore 7
 6394              	 .cfi_def_cfa_offset 0
 6395 0014 7047     	 bx lr
 6396              	.L436:
 6397 0016 00BF     	 .align 2
 6398              	.L435:
 6399 0018 00470050 	 .word 1342195456
 6400              	 .cfi_endproc
 6401              	.LFE281:
 6403              	 .section .text.XMC_SCU_CLOCK_EnableSystemPll,"ax",%progbits
 6404              	 .align 2
 6405              	 .global XMC_SCU_CLOCK_EnableSystemPll
 6406              	 .thumb
 6407              	 .thumb_func
 6409              	XMC_SCU_CLOCK_EnableSystemPll:
 6410              	.LFB282:
1642:../Libraries/XMCLib/src/xmc4_scu.c **** 
1643:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable main PLL */
1644:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableSystemPll(void)
1645:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6411              	 .loc 3 1645 0
 6412              	 .cfi_startproc
 6413              	 
 6414              	 
 6415              	 
 6416 0000 80B4     	 push {r7}
 6417              	.LCFI574:
 6418              	 .cfi_def_cfa_offset 4
 6419              	 .cfi_offset 7,-4
 6420 0002 00AF     	 add r7,sp,#0
 6421              	.LCFI575:
 6422              	 .cfi_def_cfa_register 7
1646:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6423              	 .loc 3 1646 0
 6424 0004 054A     	 ldr r2,.L438
 6425 0006 054B     	 ldr r3,.L438
 6426 0008 5B68     	 ldr r3,[r3,#4]
 6427 000a 23F48033 	 bic r3,r3,#65536
 6428 000e 23F00203 	 bic r3,r3,#2
 6429 0012 5360     	 str r3,[r2,#4]
1647:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6430              	 .loc 3 1647 0
 6431 0014 BD46     	 mov sp,r7
 6432              	.LCFI576:
 6433              	 .cfi_def_cfa_register 13
 6434              	 
 6435 0016 5DF8047B 	 ldr r7,[sp],#4
 6436              	.LCFI577:
 6437              	 .cfi_restore 7
 6438              	 .cfi_def_cfa_offset 0
 6439 001a 7047     	 bx lr
 6440              	.L439:
 6441              	 .align 2
 6442              	.L438:
 6443 001c 10470050 	 .word 1342195472
 6444              	 .cfi_endproc
 6445              	.LFE282:
 6447              	 .section .text.XMC_SCU_CLOCK_DisableSystemPll,"ax",%progbits
 6448              	 .align 2
 6449              	 .global XMC_SCU_CLOCK_DisableSystemPll
 6450              	 .thumb
 6451              	 .thumb_func
 6453              	XMC_SCU_CLOCK_DisableSystemPll:
 6454              	.LFB283:
1648:../Libraries/XMCLib/src/xmc4_scu.c **** 
1649:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable main PLL */
1650:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableSystemPll(void)
1651:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6455              	 .loc 3 1651 0
 6456              	 .cfi_startproc
 6457              	 
 6458              	 
 6459              	 
 6460 0000 80B4     	 push {r7}
 6461              	.LCFI578:
 6462              	 .cfi_def_cfa_offset 4
 6463              	 .cfi_offset 7,-4
 6464 0002 00AF     	 add r7,sp,#0
 6465              	.LCFI579:
 6466              	 .cfi_def_cfa_register 7
1652:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6467              	 .loc 3 1652 0
 6468 0004 054A     	 ldr r2,.L441
 6469 0006 054B     	 ldr r3,.L441
 6470 0008 5B68     	 ldr r3,[r3,#4]
 6471 000a 43F48033 	 orr r3,r3,#65536
 6472 000e 43F00203 	 orr r3,r3,#2
 6473 0012 5360     	 str r3,[r2,#4]
1653:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6474              	 .loc 3 1653 0
 6475 0014 BD46     	 mov sp,r7
 6476              	.LCFI580:
 6477              	 .cfi_def_cfa_register 13
 6478              	 
 6479 0016 5DF8047B 	 ldr r7,[sp],#4
 6480              	.LCFI581:
 6481              	 .cfi_restore 7
 6482              	 .cfi_def_cfa_offset 0
 6483 001a 7047     	 bx lr
 6484              	.L442:
 6485              	 .align 2
 6486              	.L441:
 6487 001c 10470050 	 .word 1342195472
 6488              	 .cfi_endproc
 6489              	.LFE283:
 6491              	 .section .text.XMC_SCU_CLOCK_StartSystemPll,"ax",%progbits
 6492              	 .align 2
 6493              	 .global XMC_SCU_CLOCK_StartSystemPll
 6494              	 .thumb
 6495              	 .thumb_func
 6497              	XMC_SCU_CLOCK_StartSystemPll:
 6498              	.LFB284:
1654:../Libraries/XMCLib/src/xmc4_scu.c **** 
1655:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure main PLL */
1656:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartSystemPll(XMC_SCU_CLOCK_SYSPLLCLKSRC_t source,
1657:../Libraries/XMCLib/src/xmc4_scu.c ****                                   XMC_SCU_CLOCK_SYSPLL_MODE_t mode,
1658:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t pdiv,
1659:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t ndiv,
1660:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t kdiv)
1661:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6499              	 .loc 3 1661 0
 6500              	 .cfi_startproc
 6501              	 
 6502              	 
 6503 0000 80B5     	 push {r7,lr}
 6504              	.LCFI582:
 6505              	 .cfi_def_cfa_offset 8
 6506              	 .cfi_offset 7,-8
 6507              	 .cfi_offset 14,-4
 6508 0002 86B0     	 sub sp,sp,#24
 6509              	.LCFI583:
 6510              	 .cfi_def_cfa_offset 32
 6511 0004 00AF     	 add r7,sp,#0
 6512              	.LCFI584:
 6513              	 .cfi_def_cfa_register 7
 6514 0006 BA60     	 str r2,[r7,#8]
 6515 0008 7B60     	 str r3,[r7,#4]
 6516 000a 0346     	 mov r3,r0
 6517 000c FB81     	 strh r3,[r7,#14]
 6518 000e 0B46     	 mov r3,r1
 6519 0010 7B73     	 strb r3,[r7,#13]
1662:../Libraries/XMCLib/src/xmc4_scu.c **** 
1663:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t vco_frequency; /* Q10.22, max VCO frequency = 520MHz */
1664:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t kdiv_temp;
1665:../Libraries/XMCLib/src/xmc4_scu.c **** 
1666:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemPllClockSource(source);
 6520              	 .loc 3 1666 0
 6521 0012 FB89     	 ldrh r3,[r7,#14]
 6522 0014 1846     	 mov r0,r3
 6523 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemPllClockSource
1667:../Libraries/XMCLib/src/xmc4_scu.c **** 
1668:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)
 6524              	 .loc 3 1668 0
 6525 001a 7B7B     	 ldrb r3,[r7,#13]
 6526 001c 012B     	 cmp r3,#1
 6527 001e 40F08480 	 bne .L444
1669:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1670:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Calculate initial step to be close to fOFI */
1671:../Libraries/XMCLib/src/xmc4_scu.c ****     if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 6528              	 .loc 3 1671 0
 6529 0022 FB89     	 ldrh r3,[r7,#14]
 6530 0024 002B     	 cmp r3,#0
 6531 0026 09D1     	 bne .L445
1672:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1673:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OSCHP_GetFrequency() / 1000000U) << 22;
 6532              	 .loc 3 1673 0
 6533 0028 FFF7FEFF 	 bl OSCHP_GetFrequency
 6534 002c 0246     	 mov r2,r0
 6535 002e 4B4B     	 ldr r3,.L453
 6536 0030 A3FB0223 	 umull r2,r3,r3,r2
 6537 0034 9B0C     	 lsrs r3,r3,#18
 6538 0036 9B05     	 lsls r3,r3,#22
 6539 0038 7B61     	 str r3,[r7,#20]
 6540 003a 02E0     	 b .L446
 6541              	.L445:
1674:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1675:../Libraries/XMCLib/src/xmc4_scu.c ****     else
1676:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1677:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OFI_FREQUENCY / 1000000U) << 22;
 6542              	 .loc 3 1677 0
 6543 003c 4FF0C063 	 mov r3,#100663296
 6544 0040 7B61     	 str r3,[r7,#20]
 6545              	.L446:
1678:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1679:../Libraries/XMCLib/src/xmc4_scu.c ****     vco_frequency = ((vco_frequency * ndiv) / pdiv);
 6546              	 .loc 3 1679 0
 6547 0042 7B69     	 ldr r3,[r7,#20]
 6548 0044 7A68     	 ldr r2,[r7,#4]
 6549 0046 02FB03F2 	 mul r2,r2,r3
 6550 004a BB68     	 ldr r3,[r7,#8]
 6551 004c B2FBF3F3 	 udiv r3,r2,r3
 6552 0050 7B61     	 str r3,[r7,#20]
1680:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
 6553              	 .loc 3 1680 0
 6554 0052 7B69     	 ldr r3,[r7,#20]
 6555 0054 424A     	 ldr r2,.L453+4
 6556 0056 A2FB0323 	 umull r2,r3,r2,r3
 6557 005a 1B09     	 lsrs r3,r3,#4
 6558 005c 9B0D     	 lsrs r3,r3,#22
 6559 005e 3B61     	 str r3,[r7,#16]
1681:../Libraries/XMCLib/src/xmc4_scu.c **** 
1682:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1683:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6560              	 .loc 3 1683 0
 6561 0060 404A     	 ldr r2,.L453+8
 6562 0062 404B     	 ldr r3,.L453+8
 6563 0064 5B68     	 ldr r3,[r3,#4]
 6564 0066 43F00103 	 orr r3,r3,#1
 6565 006a 5360     	 str r3,[r2,#4]
1684:../Libraries/XMCLib/src/xmc4_scu.c **** 
1685:../Libraries/XMCLib/src/xmc4_scu.c ****     /* disconnect Oscillator from PLL */
1686:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FINDIS_Msk;
 6566              	 .loc 3 1686 0
 6567 006c 3D4A     	 ldr r2,.L453+8
 6568 006e 3D4B     	 ldr r3,.L453+8
 6569 0070 5B68     	 ldr r3,[r3,#4]
 6570 0072 43F01003 	 orr r3,r3,#16
 6571 0076 5360     	 str r3,[r2,#4]
1687:../Libraries/XMCLib/src/xmc4_scu.c **** 
1688:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Setup divider settings for main PLL */
1689:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~(SCU_PLL_PLLCON1_NDIV_Msk | SCU_PLL_PLLCON1_
 6572              	 .loc 3 1689 0
 6573 0078 3A49     	 ldr r1,.L453+8
 6574 007a 3A4B     	 ldr r3,.L453+8
 6575 007c 9A68     	 ldr r2,[r3,#8]
 6576 007e 3A4B     	 ldr r3,.L453+12
 6577 0080 1340     	 ands r3,r3,r2
1690:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6578              	 .loc 3 1690 0
 6579 0082 7A68     	 ldr r2,[r7,#4]
 6580 0084 013A     	 subs r2,r2,#1
 6581 0086 1202     	 lsls r2,r2,#8
 6582 0088 1A43     	 orrs r2,r2,r3
1691:../Libraries/XMCLib/src/xmc4_scu.c ****                                    ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
 6583              	 .loc 3 1691 0
 6584 008a 3B69     	 ldr r3,[r7,#16]
 6585 008c 013B     	 subs r3,r3,#1
 6586 008e 1B04     	 lsls r3,r3,#16
1690:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6587              	 .loc 3 1690 0
 6588 0090 1A43     	 orrs r2,r2,r3
1692:../Libraries/XMCLib/src/xmc4_scu.c ****                                    ((pdiv - 1UL)<< SCU_PLL_PLLCON1_PDIV_Pos));
 6589              	 .loc 3 1692 0
 6590 0092 BB68     	 ldr r3,[r7,#8]
 6591 0094 013B     	 subs r3,r3,#1
 6592 0096 1B06     	 lsls r3,r3,#24
1689:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6593              	 .loc 3 1689 0
 6594 0098 1343     	 orrs r3,r3,r2
 6595 009a 8B60     	 str r3,[r1,#8]
1693:../Libraries/XMCLib/src/xmc4_scu.c **** 
1694:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Set OSCDISCDIS, OSC clock remains connected to the VCO in case of loss of lock */
1695:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 6596              	 .loc 3 1695 0
 6597 009c 314A     	 ldr r2,.L453+8
 6598 009e 314B     	 ldr r3,.L453+8
 6599 00a0 5B68     	 ldr r3,[r3,#4]
 6600 00a2 43F04003 	 orr r3,r3,#64
 6601 00a6 5360     	 str r3,[r2,#4]
1696:../Libraries/XMCLib/src/xmc4_scu.c **** 
1697:../Libraries/XMCLib/src/xmc4_scu.c ****     /* connect Oscillator to PLL */
1698:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FINDIS_Msk;
 6602              	 .loc 3 1698 0
 6603 00a8 2E4A     	 ldr r2,.L453+8
 6604 00aa 2E4B     	 ldr r3,.L453+8
 6605 00ac 5B68     	 ldr r3,[r3,#4]
 6606 00ae 23F01003 	 bic r3,r3,#16
 6607 00b2 5360     	 str r3,[r2,#4]
1699:../Libraries/XMCLib/src/xmc4_scu.c **** 
1700:../Libraries/XMCLib/src/xmc4_scu.c ****     /* restart PLL Lock detection */
1701:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_RESLD_Msk;
 6608              	 .loc 3 1701 0
 6609 00b4 2B4A     	 ldr r2,.L453+8
 6610 00b6 2B4B     	 ldr r3,.L453+8
 6611 00b8 5B68     	 ldr r3,[r3,#4]
 6612 00ba 43F48023 	 orr r3,r3,#262144
 6613 00be 5360     	 str r3,[r2,#4]
1702:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 6614              	 .loc 3 1702 0
 6615 00c0 00BF     	 nop
 6616              	.L447:
 6617              	 .loc 3 1702 0 is_stmt 0 discriminator 1
 6618 00c2 284B     	 ldr r3,.L453+8
 6619 00c4 1B68     	 ldr r3,[r3]
 6620 00c6 03F00403 	 and r3,r3,#4
 6621 00ca 002B     	 cmp r3,#0
 6622 00cc F9D0     	 beq .L447
1703:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1704:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for PLL Lock */
1705:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1706:../Libraries/XMCLib/src/xmc4_scu.c **** 
1707:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to normal mode */
1708:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_VCOBYP_Msk;
 6623              	 .loc 3 1708 0 is_stmt 1
 6624 00ce 254A     	 ldr r2,.L453+8
 6625 00d0 244B     	 ldr r3,.L453+8
 6626 00d2 5B68     	 ldr r3,[r3,#4]
 6627 00d4 23F00103 	 bic r3,r3,#1
 6628 00d8 5360     	 str r3,[r2,#4]
1709:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 6629              	 .loc 3 1709 0
 6630 00da 00BF     	 nop
 6631              	.L448:
 6632              	 .loc 3 1709 0 is_stmt 0 discriminator 1
 6633 00dc 214B     	 ldr r3,.L453+8
 6634 00de 1B68     	 ldr r3,[r3]
 6635 00e0 03F00103 	 and r3,r3,#1
 6636 00e4 002B     	 cmp r3,#0
 6637 00e6 F9D1     	 bne .L448
1710:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1711:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for normal mode */
1712:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1713:../Libraries/XMCLib/src/xmc4_scu.c **** 
1714:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Ramp up PLL frequency in steps */
1715:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 60UL) >> 22;
 6638              	 .loc 3 1715 0 is_stmt 1
 6639 00e8 7B69     	 ldr r3,[r7,#20]
 6640 00ea 204A     	 ldr r2,.L453+16
 6641 00ec A2FB0323 	 umull r2,r3,r2,r3
 6642 00f0 5B09     	 lsrs r3,r3,#5
 6643 00f2 9B0D     	 lsrs r3,r3,#22
 6644 00f4 3B61     	 str r3,[r7,#16]
1716:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6645              	 .loc 3 1716 0
 6646 00f6 3A6A     	 ldr r2,[r7,#32]
 6647 00f8 3B69     	 ldr r3,[r7,#16]
 6648 00fa 9A42     	 cmp r2,r3
 6649 00fc 02D2     	 bcs .L449
1717:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1718:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6650              	 .loc 3 1718 0
 6651 00fe 3869     	 ldr r0,[r7,#16]
 6652 0100 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6653              	.L449:
1719:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1720:../Libraries/XMCLib/src/xmc4_scu.c **** 
1721:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 90UL) >> 22;
 6654              	 .loc 3 1721 0
 6655 0104 7B69     	 ldr r3,[r7,#20]
 6656 0106 5B08     	 lsrs r3,r3,#1
 6657 0108 194A     	 ldr r2,.L453+20
 6658 010a A2FB0323 	 umull r2,r3,r2,r3
 6659 010e 5B09     	 lsrs r3,r3,#5
 6660 0110 9B0D     	 lsrs r3,r3,#22
 6661 0112 3B61     	 str r3,[r7,#16]
1722:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6662              	 .loc 3 1722 0
 6663 0114 3A6A     	 ldr r2,[r7,#32]
 6664 0116 3B69     	 ldr r3,[r7,#16]
 6665 0118 9A42     	 cmp r2,r3
 6666 011a 02D2     	 bcs .L450
1723:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1724:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6667              	 .loc 3 1724 0
 6668 011c 3869     	 ldr r0,[r7,#16]
 6669 011e FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6670              	.L450:
1725:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1726:../Libraries/XMCLib/src/xmc4_scu.c **** 
1727:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv);
 6671              	 .loc 3 1727 0
 6672 0122 386A     	 ldr r0,[r7,#32]
 6673 0124 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6674 0128 15E0     	 b .L443
 6675              	.L444:
1728:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1729:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1730:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1731:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K1DIV_Msk) |
 6676              	 .loc 3 1731 0
 6677 012a 0E49     	 ldr r1,.L453+8
 6678 012c 0D4B     	 ldr r3,.L453+8
 6679 012e 9B68     	 ldr r3,[r3,#8]
 6680 0130 23F07F02 	 bic r2,r3,#127
1732:../Libraries/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6681              	 .loc 3 1732 0
 6682 0134 3B6A     	 ldr r3,[r7,#32]
 6683 0136 013B     	 subs r3,r3,#1
1731:../Libraries/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6684              	 .loc 3 1731 0
 6685 0138 1343     	 orrs r3,r3,r2
 6686 013a 8B60     	 str r3,[r1,#8]
1733:../Libraries/XMCLib/src/xmc4_scu.c **** 
1734:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1735:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6687              	 .loc 3 1735 0
 6688 013c 094A     	 ldr r2,.L453+8
 6689 013e 094B     	 ldr r3,.L453+8
 6690 0140 5B68     	 ldr r3,[r3,#4]
 6691 0142 43F00103 	 orr r3,r3,#1
 6692 0146 5360     	 str r3,[r2,#4]
1736:../Libraries/XMCLib/src/xmc4_scu.c **** 
1737:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 6693              	 .loc 3 1737 0
 6694 0148 00BF     	 nop
 6695              	.L452:
 6696              	 .loc 3 1737 0 is_stmt 0 discriminator 1
 6697 014a 064B     	 ldr r3,.L453+8
 6698 014c 1B68     	 ldr r3,[r3]
 6699 014e 03F00103 	 and r3,r3,#1
 6700 0152 002B     	 cmp r3,#0
 6701 0154 F9D0     	 beq .L452
 6702              	.L443:
1738:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1739:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1740:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1741:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1742:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6703              	 .loc 3 1742 0 is_stmt 1
 6704 0156 1837     	 adds r7,r7,#24
 6705              	.LCFI585:
 6706              	 .cfi_def_cfa_offset 8
 6707 0158 BD46     	 mov sp,r7
 6708              	.LCFI586:
 6709              	 .cfi_def_cfa_register 13
 6710              	 
 6711 015a 80BD     	 pop {r7,pc}
 6712              	.L454:
 6713              	 .align 2
 6714              	.L453:
 6715 015c 83DE1B43 	 .word 1125899907
 6716 0160 ABAAAAAA 	 .word -1431655765
 6717 0164 10470050 	 .word 1342195472
 6718 0168 FF8080F0 	 .word -260013825
 6719 016c 89888888 	 .word -2004318071
 6720 0170 B7600BB6 	 .word -1240768329
 6721              	 .cfi_endproc
 6722              	.LFE284:
 6724              	 .section .text.XMC_SCU_CLOCK_StopSystemPll,"ax",%progbits
 6725              	 .align 2
 6726              	 .global XMC_SCU_CLOCK_StopSystemPll
 6727              	 .thumb
 6728              	 .thumb_func
 6730              	XMC_SCU_CLOCK_StopSystemPll:
 6731              	.LFB285:
1743:../Libraries/XMCLib/src/xmc4_scu.c **** 
1744:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to stop main PLL operation */
1745:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopSystemPll(void)
1746:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6732              	 .loc 3 1746 0
 6733              	 .cfi_startproc
 6734              	 
 6735              	 
 6736              	 
 6737 0000 80B4     	 push {r7}
 6738              	.LCFI587:
 6739              	 .cfi_def_cfa_offset 4
 6740              	 .cfi_offset 7,-4
 6741 0002 00AF     	 add r7,sp,#0
 6742              	.LCFI588:
 6743              	 .cfi_def_cfa_register 7
1747:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_PLLPWD_Msk;
 6744              	 .loc 3 1747 0
 6745 0004 044A     	 ldr r2,.L456
 6746 0006 044B     	 ldr r3,.L456
 6747 0008 5B68     	 ldr r3,[r3,#4]
 6748 000a 43F48033 	 orr r3,r3,#65536
 6749 000e 5360     	 str r3,[r2,#4]
1748:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6750              	 .loc 3 1748 0
 6751 0010 BD46     	 mov sp,r7
 6752              	.LCFI589:
 6753              	 .cfi_def_cfa_register 13
 6754              	 
 6755 0012 5DF8047B 	 ldr r7,[sp],#4
 6756              	.LCFI590:
 6757              	 .cfi_restore 7
 6758              	 .cfi_def_cfa_offset 0
 6759 0016 7047     	 bx lr
 6760              	.L457:
 6761              	 .align 2
 6762              	.L456:
 6763 0018 10470050 	 .word 1342195472
 6764              	 .cfi_endproc
 6765              	.LFE285:
 6767              	 .section .text.XMC_SCU_CLOCK_StepSystemPllFrequency,"ax",%progbits
 6768              	 .align 2
 6769              	 .global XMC_SCU_CLOCK_StepSystemPllFrequency
 6770              	 .thumb
 6771              	 .thumb_func
 6773              	XMC_SCU_CLOCK_StepSystemPllFrequency:
 6774              	.LFB286:
1749:../Libraries/XMCLib/src/xmc4_scu.c **** 
1750:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to step up/down the main PLL frequency */
1751:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StepSystemPllFrequency(uint32_t kdiv)
1752:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6775              	 .loc 3 1752 0
 6776              	 .cfi_startproc
 6777              	 
 6778              	 
 6779 0000 80B5     	 push {r7,lr}
 6780              	.LCFI591:
 6781              	 .cfi_def_cfa_offset 8
 6782              	 .cfi_offset 7,-8
 6783              	 .cfi_offset 14,-4
 6784 0002 82B0     	 sub sp,sp,#8
 6785              	.LCFI592:
 6786              	 .cfi_def_cfa_offset 16
 6787 0004 00AF     	 add r7,sp,#0
 6788              	.LCFI593:
 6789              	 .cfi_def_cfa_register 7
 6790 0006 7860     	 str r0,[r7,#4]
1753:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 6791              	 .loc 3 1753 0
 6792 0008 0749     	 ldr r1,.L459
 6793 000a 074B     	 ldr r3,.L459
 6794 000c 9B68     	 ldr r3,[r3,#8]
 6795 000e 23F4FE02 	 bic r2,r3,#8323072
1754:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((kdiv - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos));
 6796              	 .loc 3 1754 0
 6797 0012 7B68     	 ldr r3,[r7,#4]
 6798 0014 013B     	 subs r3,r3,#1
 6799 0016 1B04     	 lsls r3,r3,#16
1753:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 6800              	 .loc 3 1753 0
 6801 0018 1343     	 orrs r3,r3,r2
 6802 001a 8B60     	 str r3,[r1,#8]
1755:../Libraries/XMCLib/src/xmc4_scu.c **** 
1756:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(50U);
 6803              	 .loc 3 1756 0
 6804 001c 3220     	 movs r0,#50
 6805 001e FFF7FEFF 	 bl XMC_SCU_lDelay
1757:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6806              	 .loc 3 1757 0
 6807 0022 0837     	 adds r7,r7,#8
 6808              	.LCFI594:
 6809              	 .cfi_def_cfa_offset 8
 6810 0024 BD46     	 mov sp,r7
 6811              	.LCFI595:
 6812              	 .cfi_def_cfa_register 13
 6813              	 
 6814 0026 80BD     	 pop {r7,pc}
 6815              	.L460:
 6816              	 .align 2
 6817              	.L459:
 6818 0028 10470050 	 .word 1342195472
 6819              	 .cfi_endproc
 6820              	.LFE286:
 6822              	 .section .text.XMC_SCU_CLOCK_IsSystemPllLocked,"ax",%progbits
 6823              	 .align 2
 6824              	 .global XMC_SCU_CLOCK_IsSystemPllLocked
 6825              	 .thumb
 6826              	 .thumb_func
 6828              	XMC_SCU_CLOCK_IsSystemPllLocked:
 6829              	.LFB287:
1758:../Libraries/XMCLib/src/xmc4_scu.c **** 
1759:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check main PLL is locked or not */
1760:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsSystemPllLocked(void)
1761:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6830              	 .loc 3 1761 0
 6831              	 .cfi_startproc
 6832              	 
 6833              	 
 6834              	 
 6835 0000 80B4     	 push {r7}
 6836              	.LCFI596:
 6837              	 .cfi_def_cfa_offset 4
 6838              	 .cfi_offset 7,-4
 6839 0002 00AF     	 add r7,sp,#0
 6840              	.LCFI597:
 6841              	 .cfi_def_cfa_register 7
1762:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) != 0UL);
 6842              	 .loc 3 1762 0
 6843 0004 064B     	 ldr r3,.L463
 6844 0006 1B68     	 ldr r3,[r3]
 6845 0008 03F00403 	 and r3,r3,#4
 6846 000c 002B     	 cmp r3,#0
 6847 000e 14BF     	 ite ne
 6848 0010 0123     	 movne r3,#1
 6849 0012 0023     	 moveq r3,#0
 6850 0014 DBB2     	 uxtb r3,r3
1763:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6851              	 .loc 3 1763 0
 6852 0016 1846     	 mov r0,r3
 6853 0018 BD46     	 mov sp,r7
 6854              	.LCFI598:
 6855              	 .cfi_def_cfa_register 13
 6856              	 
 6857 001a 5DF8047B 	 ldr r7,[sp],#4
 6858              	.LCFI599:
 6859              	 .cfi_restore 7
 6860              	 .cfi_def_cfa_offset 0
 6861 001e 7047     	 bx lr
 6862              	.L464:
 6863              	 .align 2
 6864              	.L463:
 6865 0020 10470050 	 .word 1342195472
 6866              	 .cfi_endproc
 6867              	.LFE287:
 6869              	 .section .text.XMC_SCU_INTERRUPT_SetEventHandler,"ax",%progbits
 6870              	 .align 2
 6871              	 .global XMC_SCU_INTERRUPT_SetEventHandler
 6872              	 .thumb
 6873              	 .thumb_func
 6875              	XMC_SCU_INTERRUPT_SetEventHandler:
 6876              	.LFB288:
1764:../Libraries/XMCLib/src/xmc4_scu.c **** 
1765:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1766:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to assign the event handler function to be executed on occurrence of the selected event.
1767:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1768:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler(const XMC_SCU_INTERRUPT_EVENT_t event,
1769:../Libraries/XMCLib/src/xmc4_scu.c ****                                                    const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)
1770:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6877              	 .loc 3 1770 0
 6878              	 .cfi_startproc
 6879              	 
 6880              	 
 6881              	 
 6882 0000 80B4     	 push {r7}
 6883              	.LCFI600:
 6884              	 .cfi_def_cfa_offset 4
 6885              	 .cfi_offset 7,-4
 6886 0002 85B0     	 sub sp,sp,#20
 6887              	.LCFI601:
 6888              	 .cfi_def_cfa_offset 24
 6889 0004 00AF     	 add r7,sp,#0
 6890              	.LCFI602:
 6891              	 .cfi_def_cfa_register 7
 6892 0006 7860     	 str r0,[r7,#4]
 6893 0008 3960     	 str r1,[r7]
1771:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1772:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status;
1773:../Libraries/XMCLib/src/xmc4_scu.c ****   
1774:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 6894              	 .loc 3 1774 0
 6895 000a 0023     	 movs r3,#0
 6896 000c FB60     	 str r3,[r7,#12]
1775:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 6897              	 .loc 3 1775 0
 6898 000e 02E0     	 b .L466
 6899              	.L468:
1776:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1777:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;
 6900              	 .loc 3 1777 0
 6901 0010 FB68     	 ldr r3,[r7,#12]
 6902 0012 0133     	 adds r3,r3,#1
 6903 0014 FB60     	 str r3,[r7,#12]
 6904              	.L466:
1775:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 6905              	 .loc 3 1775 0
 6906 0016 FB68     	 ldr r3,[r7,#12]
 6907 0018 7A68     	 ldr r2,[r7,#4]
 6908 001a 22FA03F3 	 lsr r3,r2,r3
 6909 001e 03F00103 	 and r3,r3,#1
 6910 0022 002B     	 cmp r3,#0
 6911 0024 02D1     	 bne .L467
1775:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 6912              	 .loc 3 1775 0 is_stmt 0 discriminator 1
 6913 0026 FB68     	 ldr r3,[r7,#12]
 6914 0028 1F2B     	 cmp r3,#31
 6915 002a F1D9     	 bls .L468
 6916              	.L467:
1778:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1779:../Libraries/XMCLib/src/xmc4_scu.c ****   
1780:../Libraries/XMCLib/src/xmc4_scu.c ****   if (index == XMC_SCU_INTERRUPT_EVENT_MAX)
 6917              	 .loc 3 1780 0 is_stmt 1
 6918 002c FB68     	 ldr r3,[r7,#12]
 6919 002e 202B     	 cmp r3,#32
 6920 0030 02D1     	 bne .L469
1781:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1782:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 6921              	 .loc 3 1782 0
 6922 0032 0123     	 movs r3,#1
 6923 0034 FB72     	 strb r3,[r7,#11]
 6924 0036 06E0     	 b .L470
 6925              	.L469:
1783:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1784:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1785:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1786:../Libraries/XMCLib/src/xmc4_scu.c ****     event_handler_list[index] = handler;
 6926              	 .loc 3 1786 0
 6927 0038 0649     	 ldr r1,.L472
 6928 003a FB68     	 ldr r3,[r7,#12]
 6929 003c 3A68     	 ldr r2,[r7]
 6930 003e 41F82320 	 str r2,[r1,r3,lsl#2]
1787:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_OK;      
 6931              	 .loc 3 1787 0
 6932 0042 0023     	 movs r3,#0
 6933 0044 FB72     	 strb r3,[r7,#11]
 6934              	.L470:
1788:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1789:../Libraries/XMCLib/src/xmc4_scu.c ****   
1790:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 6935              	 .loc 3 1790 0
 6936 0046 FB7A     	 ldrb r3,[r7,#11]
1791:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6937              	 .loc 3 1791 0
 6938 0048 1846     	 mov r0,r3
 6939 004a 1437     	 adds r7,r7,#20
 6940              	.LCFI603:
 6941              	 .cfi_def_cfa_offset 4
 6942 004c BD46     	 mov sp,r7
 6943              	.LCFI604:
 6944              	 .cfi_def_cfa_register 13
 6945              	 
 6946 004e 5DF8047B 	 ldr r7,[sp],#4
 6947              	.LCFI605:
 6948              	 .cfi_restore 7
 6949              	 .cfi_def_cfa_offset 0
 6950 0052 7047     	 bx lr
 6951              	.L473:
 6952              	 .align 2
 6953              	.L472:
 6954 0054 00000000 	 .word event_handler_list
 6955              	 .cfi_endproc
 6956              	.LFE288:
 6958              	 .section .text.XMC_SCU_IRQHandler,"ax",%progbits
 6959              	 .align 2
 6960              	 .global XMC_SCU_IRQHandler
 6961              	 .thumb
 6962              	 .thumb_func
 6964              	XMC_SCU_IRQHandler:
 6965              	.LFB289:
1792:../Libraries/XMCLib/src/xmc4_scu.c **** 
1793:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1794:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to execute callback functions for multiple events.
1795:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1796:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_IRQHandler(uint32_t sr_num)
1797:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6966              	 .loc 3 1797 0
 6967              	 .cfi_startproc
 6968              	 
 6969              	 
 6970 0000 80B5     	 push {r7,lr}
 6971              	.LCFI606:
 6972              	 .cfi_def_cfa_offset 8
 6973              	 .cfi_offset 7,-8
 6974              	 .cfi_offset 14,-4
 6975 0002 86B0     	 sub sp,sp,#24
 6976              	.LCFI607:
 6977              	 .cfi_def_cfa_offset 32
 6978 0004 00AF     	 add r7,sp,#0
 6979              	.LCFI608:
 6980              	 .cfi_def_cfa_register 7
 6981 0006 7860     	 str r0,[r7,#4]
1798:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1799:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_t event;
1800:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler;
1801:../Libraries/XMCLib/src/xmc4_scu.c ****   
1802:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_UNUSED_ARG(sr_num);
1803:../Libraries/XMCLib/src/xmc4_scu.c ****   
1804:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 6982              	 .loc 3 1804 0
 6983 0008 0023     	 movs r3,#0
 6984 000a 7B61     	 str r3,[r7,#20]
1805:../Libraries/XMCLib/src/xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
 6985              	 .loc 3 1805 0
 6986 000c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6987 0010 3861     	 str r0,[r7,#16]
1806:../Libraries/XMCLib/src/xmc4_scu.c ****   while (index < XMC_SCU_INTERRUPT_EVENT_MAX)
 6988              	 .loc 3 1806 0
 6989 0012 1CE0     	 b .L475
 6990              	.L479:
1807:../Libraries/XMCLib/src/xmc4_scu.c ****   {    
1808:../Libraries/XMCLib/src/xmc4_scu.c ****     if ((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) != 0U)
 6991              	 .loc 3 1808 0
 6992 0014 7B69     	 ldr r3,[r7,#20]
 6993 0016 3A69     	 ldr r2,[r7,#16]
 6994 0018 22FA03F3 	 lsr r3,r2,r3
 6995 001c 03F00103 	 and r3,r3,#1
 6996 0020 002B     	 cmp r3,#0
 6997 0022 11D0     	 beq .L476
1809:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1810:../Libraries/XMCLib/src/xmc4_scu.c ****       event_handler = event_handler_list[index];
 6998              	 .loc 3 1810 0
 6999 0024 0D4A     	 ldr r2,.L480
 7000 0026 7B69     	 ldr r3,[r7,#20]
 7001 0028 52F82330 	 ldr r3,[r2,r3,lsl#2]
 7002 002c FB60     	 str r3,[r7,#12]
1811:../Libraries/XMCLib/src/xmc4_scu.c ****       if (event_handler != NULL)
 7003              	 .loc 3 1811 0
 7004 002e FB68     	 ldr r3,[r7,#12]
 7005 0030 002B     	 cmp r3,#0
 7006 0032 01D0     	 beq .L477
1812:../Libraries/XMCLib/src/xmc4_scu.c ****       {
1813:../Libraries/XMCLib/src/xmc4_scu.c ****           (event_handler)();
 7007              	 .loc 3 1813 0
 7008 0034 FB68     	 ldr r3,[r7,#12]
 7009 0036 9847     	 blx r3
 7010              	.L477:
1814:../Libraries/XMCLib/src/xmc4_scu.c ****       }
1815:../Libraries/XMCLib/src/xmc4_scu.c ****       
1816:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_INTERRUPT_ClearEventStatus((uint32_t)(1UL << index));
 7011              	 .loc 3 1816 0
 7012 0038 7B69     	 ldr r3,[r7,#20]
 7013 003a 0122     	 movs r2,#1
 7014 003c 02FA03F3 	 lsl r3,r2,r3
 7015 0040 1846     	 mov r0,r3
 7016 0042 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1817:../Libraries/XMCLib/src/xmc4_scu.c ****       
1818:../Libraries/XMCLib/src/xmc4_scu.c ****       break;
 7017              	 .loc 3 1818 0
 7018 0046 05E0     	 b .L474
 7019              	.L476:
1819:../Libraries/XMCLib/src/xmc4_scu.c ****     }   
1820:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;    
 7020              	 .loc 3 1820 0
 7021 0048 7B69     	 ldr r3,[r7,#20]
 7022 004a 0133     	 adds r3,r3,#1
 7023 004c 7B61     	 str r3,[r7,#20]
 7024              	.L475:
1806:../Libraries/XMCLib/src/xmc4_scu.c ****   {    
 7025              	 .loc 3 1806 0
 7026 004e 7B69     	 ldr r3,[r7,#20]
 7027 0050 1F2B     	 cmp r3,#31
 7028 0052 DFD9     	 bls .L479
 7029              	.L474:
1821:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1822:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7030              	 .loc 3 1822 0
 7031 0054 1837     	 adds r7,r7,#24
 7032              	.LCFI609:
 7033              	 .cfi_def_cfa_offset 8
 7034 0056 BD46     	 mov sp,r7
 7035              	.LCFI610:
 7036              	 .cfi_def_cfa_register 13
 7037              	 
 7038 0058 80BD     	 pop {r7,pc}
 7039              	.L481:
 7040 005a 00BF     	 .align 2
 7041              	.L480:
 7042 005c 00000000 	 .word event_handler_list
 7043              	 .cfi_endproc
 7044              	.LFE289:
 7046              	 .text
 7047              	.Letext0:
 7048              	 .file 4 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 7049              	 .file 5 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 7050              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 7051              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 7052              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
 7053              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_scu.c
    {standard input}:20     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 $t
    {standard input}:24     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 XMC_SCU_CLOCK_GetUsbClockSource
    {standard input}:57     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000018 $d
    {standard input}:62     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 $t
    {standard input}:66     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 XMC_SCU_CLOCK_GetWdtClockSource
    {standard input}:98     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000018 $d
    {standard input}:103    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 $t
    {standard input}:107    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_GetExternalOutputClockSource
    {standard input}:141    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:0000001c $d
    {standard input}:146    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:150    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:185    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:191    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 $t
    {standard input}:195    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 XMC_SCU_CLOCK_GetCpuClockFrequency
    {standard input}:227    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000014 $d
    {standard input}:232    .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:236    .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:267    .text.XMC_SCU_GetMirrorStatus:00000014 $d
                            *COM*:00000080 event_handler_list
    {standard input}:273    .text.XMC_SCU_lDelay:00000000 $t
    {standard input}:277    .text.XMC_SCU_lDelay:00000000 XMC_SCU_lDelay
    {standard input}:339    .text.XMC_SCU_lDelay:0000003c $d
    {standard input}:345    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 $t
    {standard input}:350    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 XMC_SCU_INTERRUPT_EnableEvent
    {standard input}:391    .text.XMC_SCU_INTERRUPT_EnableEvent:00000020 $d
    {standard input}:396    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 $t
    {standard input}:401    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 XMC_SCU_INTERRUPT_DisableEvent
    {standard input}:443    .text.XMC_SCU_INTERRUPT_DisableEvent:00000020 $d
    {standard input}:448    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 $t
    {standard input}:453    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 XMC_SCU_INTERRUPT_TriggerEvent
    {standard input}:494    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000020 $d
    {standard input}:499    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 $t
    {standard input}:504    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 XMC_SCU_INTERUPT_GetEventStatus
    {standard input}:535    .text.XMC_SCU_INTERUPT_GetEventStatus:00000014 $d
    {standard input}:540    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 $t
    {standard input}:545    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 XMC_SCU_INTERRUPT_ClearEventStatus
    {standard input}:583    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000018 $d
    {standard input}:588    .text.XMC_SCU_GetBootMode:00000000 $t
    {standard input}:593    .text.XMC_SCU_GetBootMode:00000000 XMC_SCU_GetBootMode
    {standard input}:625    .text.XMC_SCU_GetBootMode:00000018 $d
    {standard input}:630    .text.XMC_SCU_SetBootMode:00000000 $t
    {standard input}:635    .text.XMC_SCU_SetBootMode:00000000 XMC_SCU_SetBootMode
    {standard input}:674    .text.XMC_SCU_SetBootMode:0000001c $d
    {standard input}:679    .text.XMC_SCU_ReadGPR:00000000 $t
    {standard input}:684    .text.XMC_SCU_ReadGPR:00000000 XMC_SCU_ReadGPR
    {standard input}:726    .text.XMC_SCU_ReadGPR:00000020 $d
    {standard input}:731    .text.XMC_SCU_WriteGPR:00000000 $t
    {standard input}:736    .text.XMC_SCU_WriteGPR:00000000 XMC_SCU_WriteGPR
    {standard input}:779    .text.XMC_SCU_WriteGPR:00000024 $d
    {standard input}:784    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 $t
    {standard input}:789    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 XMC_SCU_EnableOutOfRangeComparator
    {standard input}:837    .text.XMC_SCU_EnableOutOfRangeComparator:00000034 $d
    {standard input}:842    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 $t
    {standard input}:847    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 XMC_SCU_DisableOutOfRangeComparator
    {standard input}:896    .text.XMC_SCU_DisableOutOfRangeComparator:00000034 $d
    {standard input}:901    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 $t
    {standard input}:906    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 XMC_SCU_CalibrateTemperatureSensor
    {standard input}:954    .text.XMC_SCU_CalibrateTemperatureSensor:00000028 $d
    {standard input}:959    .text.XMC_SCU_EnableTemperatureSensor:00000000 $t
    {standard input}:964    .text.XMC_SCU_EnableTemperatureSensor:00000000 XMC_SCU_EnableTemperatureSensor
    {standard input}:997    .text.XMC_SCU_EnableTemperatureSensor:0000001c $d
    {standard input}:1002   .text.XMC_SCU_DisableTemperatureSensor:00000000 $t
    {standard input}:1007   .text.XMC_SCU_DisableTemperatureSensor:00000000 XMC_SCU_DisableTemperatureSensor
    {standard input}:1040   .text.XMC_SCU_DisableTemperatureSensor:0000001c $d
    {standard input}:1045   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 $t
    {standard input}:1050   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 XMC_SCU_IsTemperatureSensorEnabled
    {standard input}:1087   .text.XMC_SCU_IsTemperatureSensorEnabled:00000024 $d
    {standard input}:1092   .text.XMC_SCU_IsTemperatureSensorReady:00000000 $t
    {standard input}:1097   .text.XMC_SCU_IsTemperatureSensorReady:00000000 XMC_SCU_IsTemperatureSensorReady
    {standard input}:1134   .text.XMC_SCU_IsTemperatureSensorReady:00000024 $d
    {standard input}:1139   .text.XMC_SCU_StartTemperatureMeasurement:00000000 $t
    {standard input}:1144   .text.XMC_SCU_StartTemperatureMeasurement:00000000 XMC_SCU_StartTemperatureMeasurement
    {standard input}:1275   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 XMC_SCU_IsTemperatureSensorBusy
    {standard input}:1205   .text.XMC_SCU_StartTemperatureMeasurement:00000048 $d
    {standard input}:1210   .text.XMC_SCU_GetTemperatureMeasurement:00000000 $t
    {standard input}:1215   .text.XMC_SCU_GetTemperatureMeasurement:00000000 XMC_SCU_GetTemperatureMeasurement
    {standard input}:1265   .text.XMC_SCU_GetTemperatureMeasurement:00000034 $d
    {standard input}:1270   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 $t
    {standard input}:1312   .text.XMC_SCU_IsTemperatureSensorBusy:00000024 $d
    {standard input}:1317   .text.XMC_SCU_WriteToRetentionMemory:00000000 $t
    {standard input}:1322   .text.XMC_SCU_WriteToRetentionMemory:00000000 XMC_SCU_WriteToRetentionMemory
    {standard input}:1383   .text.XMC_SCU_WriteToRetentionMemory:00000048 $d
    {standard input}:1388   .text.XMC_SCU_ReadFromRetentionMemory:00000000 $t
    {standard input}:1393   .text.XMC_SCU_ReadFromRetentionMemory:00000000 XMC_SCU_ReadFromRetentionMemory
    {standard input}:1453   .text.XMC_SCU_ReadFromRetentionMemory:00000044 $d
    {standard input}:1458   .text.XMC_SCU_CLOCK_Init:00000000 $t
    {standard input}:1463   .text.XMC_SCU_CLOCK_Init:00000000 XMC_SCU_CLOCK_Init
    {standard input}:3087   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 XMC_SCU_CLOCK_SetSystemClockSource
    {standard input}:4808   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 XMC_SCU_HIB_EnableHibernateDomain
    {standard input}:5846   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillator
    {standard input}:5799   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 XMC_SCU_CLOCK_IsLowPowerOscillatorStable
    {standard input}:3429   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 XMC_SCU_HIB_SetStandbyClockSource
    {standard input}:4609   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 XMC_SCU_CLOCK_SetBackupClockCalibrationMode
    {standard input}:3494   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 XMC_SCU_CLOCK_SetSystemClockDivider
    {standard input}:3604   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 XMC_SCU_CLOCK_SetCpuClockDivider
    {standard input}:3549   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 XMC_SCU_CLOCK_SetCcuClockDivider
    {standard input}:3659   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 XMC_SCU_CLOCK_SetPeripheralClockDivider
    {standard input}:6129   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillator
    {standard input}:6191   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
    {standard input}:6453   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 XMC_SCU_CLOCK_DisableSystemPll
    {standard input}:6409   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 XMC_SCU_CLOCK_EnableSystemPll
    {standard input}:6497   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 XMC_SCU_CLOCK_StartSystemPll
    {standard input}:1623   .text.XMC_SCU_TRAP_Enable:00000000 $t
    {standard input}:1628   .text.XMC_SCU_TRAP_Enable:00000000 XMC_SCU_TRAP_Enable
    {standard input}:1670   .text.XMC_SCU_TRAP_Enable:00000020 $d
    {standard input}:1675   .text.XMC_SCU_TRAP_Disable:00000000 $t
    {standard input}:1680   .text.XMC_SCU_TRAP_Disable:00000000 XMC_SCU_TRAP_Disable
    {standard input}:1721   .text.XMC_SCU_TRAP_Disable:00000020 $d
    {standard input}:1726   .text.XMC_SCU_TRAP_GetStatus:00000000 $t
    {standard input}:1731   .text.XMC_SCU_TRAP_GetStatus:00000000 XMC_SCU_TRAP_GetStatus
    {standard input}:1762   .text.XMC_SCU_TRAP_GetStatus:00000014 $d
    {standard input}:1767   .text.XMC_SCU_TRAP_Trigger:00000000 $t
    {standard input}:1772   .text.XMC_SCU_TRAP_Trigger:00000000 XMC_SCU_TRAP_Trigger
    {standard input}:1810   .text.XMC_SCU_TRAP_Trigger:00000018 $d
    {standard input}:1815   .text.XMC_SCU_TRAP_ClearStatus:00000000 $t
    {standard input}:1820   .text.XMC_SCU_TRAP_ClearStatus:00000000 XMC_SCU_TRAP_ClearStatus
    {standard input}:1858   .text.XMC_SCU_TRAP_ClearStatus:00000018 $d
    {standard input}:1863   .text.XMC_SCU_PARITY_ClearStatus:00000000 $t
    {standard input}:1868   .text.XMC_SCU_PARITY_ClearStatus:00000000 XMC_SCU_PARITY_ClearStatus
    {standard input}:1909   .text.XMC_SCU_PARITY_ClearStatus:00000020 $d
    {standard input}:1914   .text.XMC_SCU_PARITY_GetStatus:00000000 $t
    {standard input}:1919   .text.XMC_SCU_PARITY_GetStatus:00000000 XMC_SCU_PARITY_GetStatus
    {standard input}:1950   .text.XMC_SCU_PARITY_GetStatus:00000014 $d
    {standard input}:1955   .text.XMC_SCU_PARITY_Enable:00000000 $t
    {standard input}:1960   .text.XMC_SCU_PARITY_Enable:00000000 XMC_SCU_PARITY_Enable
    {standard input}:2001   .text.XMC_SCU_PARITY_Enable:00000020 $d
    {standard input}:2006   .text.XMC_SCU_PARITY_Disable:00000000 $t
    {standard input}:2011   .text.XMC_SCU_PARITY_Disable:00000000 XMC_SCU_PARITY_Disable
    {standard input}:2053   .text.XMC_SCU_PARITY_Disable:00000020 $d
    {standard input}:2058   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 $t
    {standard input}:2063   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 XMC_SCU_PARITY_EnableTrapGeneration
    {standard input}:2104   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000020 $d
    {standard input}:2109   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 $t
    {standard input}:2114   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 XMC_SCU_PARITY_DisableTrapGeneration
    {standard input}:2156   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000020 $d
    {standard input}:2161   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 $t
    {standard input}:2166   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 XMC_SCU_INTERRUPT_EnableNmiRequest
    {standard input}:2207   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000020 $d
    {standard input}:2212   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 $t
    {standard input}:2217   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 XMC_SCU_INTERRUPT_DisableNmiRequest
    {standard input}:2259   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000020 $d
    {standard input}:2264   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 $t
    {standard input}:2269   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 XMC_SCU_RESET_AssertPeripheralReset
    {standard input}:2322   .text.XMC_SCU_RESET_AssertPeripheralReset:00000034 $d
    {standard input}:2327   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 $t
    {standard input}:2332   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 XMC_SCU_RESET_DeassertPeripheralReset
    {standard input}:2385   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000034 $d
    {standard input}:2390   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 $t
    {standard input}:2395   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 XMC_SCU_RESET_IsPeripheralResetAsserted
    {standard input}:2455   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000044 $d
    {standard input}:2460   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 $t
    {standard input}:2465   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockFrequency
    {standard input}:2558   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
    {standard input}:2548   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000078 $d
    {standard input}:2553   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 $t
    {standard input}:2605   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000028 $d
    {standard input}:2611   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 $t
    {standard input}:2616   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbPllClockFrequency
    {standard input}:2680   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000050 $d
    {standard input}:2685   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 $t
    {standard input}:2690   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 XMC_SCU_CLOCK_GetCcuClockFrequency
    {standard input}:2732   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000028 $d
    {standard input}:2737   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 $t
    {standard input}:2742   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbClockFrequency
    {standard input}:2804   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000044 $d
    {standard input}:2809   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 $t
    {standard input}:2814   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 XMC_SCU_CLOCK_GetEbuClockFrequency
    {standard input}:2856   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000024 $d
    {standard input}:2861   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 $t
    {standard input}:2866   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 XMC_SCU_CLOCK_GetWdtClockFrequency
    {standard input}:2937   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000050 $d
    {standard input}:2943   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 $t
    {standard input}:2948   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 XMC_SCU_CLOCK_GetExternalOutputClockFrequency
    {standard input}:3037   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:0000006c $d
    {standard input}:3043   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 $t
    {standard input}:3048   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 XMC_SCU_CLOCK_GetPeripheralClockFrequency
    {standard input}:3077   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:0000001c $d
    {standard input}:3082   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 $t
    {standard input}:3129   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000024 $d
    {standard input}:3134   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 $t
    {standard input}:3139   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 XMC_SCU_CLOCK_SetUsbClockSource
    {standard input}:3181   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000024 $d
    {standard input}:3186   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 $t
    {standard input}:3191   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 XMC_SCU_CLOCK_SetWdtClockSource
    {standard input}:3233   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000024 $d
    {standard input}:3238   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 $t
    {standard input}:3243   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_SetExternalOutputClockSource
    {standard input}:3288   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000024 $d
    {standard input}:3293   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 $t
    {standard input}:3298   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 XMC_SCU_CLOCK_SetSystemPllClockSource
    {standard input}:3354   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:0000003c $d
    {standard input}:3359   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 $t
    {standard input}:3364   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 XMC_SCU_HIB_SetRtcClockSource
    {standard input}:3418   .text.XMC_SCU_HIB_SetRtcClockSource:00000034 $d
    {standard input}:3424   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 $t
    {standard input}:3483   .text.XMC_SCU_HIB_SetStandbyClockSource:00000034 $d
    {standard input}:3489   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 $t
    {standard input}:3539   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000024 $d
    {standard input}:3544   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 $t
    {standard input}:3594   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000024 $d
    {standard input}:3599   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 $t
    {standard input}:3649   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000024 $d
    {standard input}:3654   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 $t
    {standard input}:3704   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000024 $d
    {standard input}:3709   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 $t
    {standard input}:3714   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 XMC_SCU_CLOCK_SetUsbClockDivider
    {standard input}:3759   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000024 $d
    {standard input}:3764   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 $t
    {standard input}:3769   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 XMC_SCU_CLOCK_SetEbuClockDivider
    {standard input}:3814   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000024 $d
    {standard input}:3819   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 $t
    {standard input}:3824   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 XMC_SCU_CLOCK_SetWdtClockDivider
    {standard input}:3869   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000024 $d
    {standard input}:3874   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 $t
    {standard input}:3879   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 XMC_SCU_CLOCK_SetExternalOutputClockDivider
    {standard input}:3926   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:0000002c $d
    {standard input}:3931   .text.XMC_SCU_CLOCK_EnableClock:00000000 $t
    {standard input}:3936   .text.XMC_SCU_CLOCK_EnableClock:00000000 XMC_SCU_CLOCK_EnableClock
    {standard input}:3975   .text.XMC_SCU_CLOCK_EnableClock:0000001c $d
    {standard input}:3980   .text.XMC_SCU_CLOCK_DisableClock:00000000 $t
    {standard input}:3985   .text.XMC_SCU_CLOCK_DisableClock:00000000 XMC_SCU_CLOCK_DisableClock
    {standard input}:4024   .text.XMC_SCU_CLOCK_DisableClock:0000001c $d
    {standard input}:4029   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 $t
    {standard input}:4034   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 XMC_SCU_CLOCK_IsClockEnabled
    {standard input}:4080   .text.XMC_SCU_CLOCK_IsClockEnabled:00000028 $d
    {standard input}:4085   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 $t
    {standard input}:4090   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 XMC_SCU_CLOCK_GatePeripheralClock
    {standard input}:4143   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000034 $d
    {standard input}:4148   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 $t
    {standard input}:4153   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 XMC_SCU_CLOCK_UngatePeripheralClock
    {standard input}:4206   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000034 $d
    {standard input}:4211   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 $t
    {standard input}:4216   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 XMC_SCU_CLOCK_IsPeripheralClockGated
    {standard input}:4276   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000044 $d
    {standard input}:4281   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 $t
    {standard input}:4286   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 XMC_SCU_POWER_GetEVR13Voltage
    {standard input}:4323   .text.XMC_SCU_POWER_GetEVR13Voltage:00000028 $d
    {standard input}:4329   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 $t
    {standard input}:4334   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 XMC_SCU_POWER_GetEVR33Voltage
    {standard input}:4372   .text.XMC_SCU_POWER_GetEVR33Voltage:0000002c $d
    {standard input}:4378   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 $t
    {standard input}:4383   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 XMC_SCU_CLOCK_EnableUsbPll
    {standard input}:4417   .text.XMC_SCU_CLOCK_EnableUsbPll:0000001c $d
    {standard input}:4422   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 $t
    {standard input}:4427   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 XMC_SCU_CLOCK_DisableUsbPll
    {standard input}:4461   .text.XMC_SCU_CLOCK_DisableUsbPll:0000001c $d
    {standard input}:4466   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 $t
    {standard input}:4471   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 XMC_SCU_CLOCK_StartUsbPll
    {standard input}:4557   .text.XMC_SCU_CLOCK_StartUsbPll:00000070 $d
    {standard input}:4562   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 $t
    {standard input}:4567   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 XMC_SCU_CLOCK_StopUsbPll
    {standard input}:4598   .text.XMC_SCU_CLOCK_StopUsbPll:00000014 $d
    {standard input}:4604   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 $t
    {standard input}:4669   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000048 $d
    {standard input}:4674   .text.XMC_SCU_POWER_EnableUsb:00000000 $t
    {standard input}:4679   .text.XMC_SCU_POWER_EnableUsb:00000000 XMC_SCU_POWER_EnableUsb
    {standard input}:4710   .text.XMC_SCU_POWER_EnableUsb:00000014 $d
    {standard input}:4715   .text.XMC_SCU_POWER_DisableUsb:00000000 $t
    {standard input}:4720   .text.XMC_SCU_POWER_DisableUsb:00000000 XMC_SCU_POWER_DisableUsb
    {standard input}:4751   .text.XMC_SCU_POWER_DisableUsb:00000014 $d
    {standard input}:4756   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 $t
    {standard input}:4761   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 XMC_SCU_CLOCK_IsUsbPllLocked
    {standard input}:4798   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000020 $d
    {standard input}:4803   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 $t
    {standard input}:4875   .text.XMC_SCU_HIB_EnableHibernateDomain:00000050 $d
    {standard input}:4881   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 $t
    {standard input}:4886   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 XMC_SCU_HIB_DisableHibernateDomain
    {standard input}:4921   .text.XMC_SCU_HIB_DisableHibernateDomain:0000001c $d
    {standard input}:4927   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 $t
    {standard input}:4932   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 XMC_SCU_HIB_IsHibernateDomainEnabled
    {standard input}:4983   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000034 $d
    {standard input}:4989   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 $t
    {standard input}:4994   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 XMC_SCU_HIB_EnableInternalSlowClock
    {standard input}:5036   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000028 $d
    {standard input}:5042   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 $t
    {standard input}:5047   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 XMC_SCU_HIB_DisableInternalSlowClock
    {standard input}:5089   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000028 $d
    {standard input}:5095   .text.XMC_SCU_HIB_ClearEventStatus:00000000 $t
    {standard input}:5100   .text.XMC_SCU_HIB_ClearEventStatus:00000000 XMC_SCU_HIB_ClearEventStatus
    {standard input}:5147   .text.XMC_SCU_HIB_ClearEventStatus:00000028 $d
    {standard input}:5153   .text.XMC_SCU_HIB_TriggerEvent:00000000 $t
    {standard input}:5158   .text.XMC_SCU_HIB_TriggerEvent:00000000 XMC_SCU_HIB_TriggerEvent
    {standard input}:5205   .text.XMC_SCU_HIB_TriggerEvent:00000028 $d
    {standard input}:5211   .text.XMC_SCU_HIB_EnableEvent:00000000 $t
    {standard input}:5216   .text.XMC_SCU_HIB_EnableEvent:00000000 XMC_SCU_HIB_EnableEvent
    {standard input}:5266   .text.XMC_SCU_HIB_EnableEvent:00000030 $d
    {standard input}:5272   .text.XMC_SCU_HIB_DisableEvent:00000000 $t
    {standard input}:5277   .text.XMC_SCU_HIB_DisableEvent:00000000 XMC_SCU_HIB_DisableEvent
    {standard input}:5328   .text.XMC_SCU_HIB_DisableEvent:00000030 $d
    {standard input}:5334   .text.XMC_SCU_HIB_EnterHibernateState:00000000 $t
    {standard input}:5339   .text.XMC_SCU_HIB_EnterHibernateState:00000000 XMC_SCU_HIB_EnterHibernateState
    {standard input}:5381   .text.XMC_SCU_HIB_EnterHibernateState:00000028 $d
    {standard input}:5387   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 $t
    {standard input}:5392   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 XMC_SCU_HIB_EnterHibernateStateEx
    {standard input}:5431   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 $t
    {standard input}:5436   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 XMC_SCU_HIB_SetWakeupTriggerInput
    {standard input}:5499   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000044 $d
    {standard input}:5505   .text.XMC_SCU_HIB_SetPinMode:00000000 $t
    {standard input}:5510   .text.XMC_SCU_HIB_SetPinMode:00000000 XMC_SCU_HIB_SetPinMode
    {standard input}:5577   .text.XMC_SCU_HIB_SetPinMode:0000004c $d
    {standard input}:5583   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 $t
    {standard input}:5588   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 XMC_SCU_HIB_SetPinOutputLevel
    {standard input}:5651   .text.XMC_SCU_HIB_SetPinOutputLevel:0000004c $d
    {standard input}:5657   .text.XMC_SCU_HIB_SetInput0:00000000 $t
    {standard input}:5662   .text.XMC_SCU_HIB_SetInput0:00000000 XMC_SCU_HIB_SetInput0
    {standard input}:5725   .text.XMC_SCU_HIB_SetInput0:00000044 $d
    {standard input}:5731   .text.XMC_SCU_HIB_SetSR0Input:00000000 $t
    {standard input}:5736   .text.XMC_SCU_HIB_SetSR0Input:00000000 XMC_SCU_HIB_SetSR0Input
    {standard input}:5788   .text.XMC_SCU_HIB_SetSR0Input:00000034 $d
    {standard input}:5794   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 $t
    {standard input}:5836   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000020 $d
    {standard input}:5841   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 $t
    {standard input}:5917   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:0000006c $d
    {standard input}:5922   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 $t
    {standard input}:5927   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillator
    {standard input}:5969   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000028 $d
    {standard input}:5975   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:5980   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6022   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000028 $d
    {standard input}:6028   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6033   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6076   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:0000002c $d
    {standard input}:6082   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6087   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
    {standard input}:6119   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6124   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 $t
    {standard input}:6179   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000044 $d
    {standard input}:6186   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 $t
    {standard input}:6228   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000024 $d
    {standard input}:6233   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 $t
    {standard input}:6238   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillator
    {standard input}:6271   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000018 $d
    {standard input}:6276   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6281   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6314   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:6319   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6324   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6357   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:6362   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6367   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
    {standard input}:6399   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6404   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 $t
    {standard input}:6443   .text.XMC_SCU_CLOCK_EnableSystemPll:0000001c $d
    {standard input}:6448   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 $t
    {standard input}:6487   .text.XMC_SCU_CLOCK_DisableSystemPll:0000001c $d
    {standard input}:6492   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 $t
    {standard input}:6773   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 XMC_SCU_CLOCK_StepSystemPllFrequency
    {standard input}:6715   .text.XMC_SCU_CLOCK_StartSystemPll:0000015c $d
    {standard input}:6725   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 $t
    {standard input}:6730   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 XMC_SCU_CLOCK_StopSystemPll
    {standard input}:6763   .text.XMC_SCU_CLOCK_StopSystemPll:00000018 $d
    {standard input}:6768   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 $t
    {standard input}:6818   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000028 $d
    {standard input}:6823   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 $t
    {standard input}:6828   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 XMC_SCU_CLOCK_IsSystemPllLocked
    {standard input}:6865   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000020 $d
    {standard input}:6870   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 $t
    {standard input}:6875   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 XMC_SCU_INTERRUPT_SetEventHandler
    {standard input}:6954   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000054 $d
    {standard input}:6959   .text.XMC_SCU_IRQHandler:00000000 $t
    {standard input}:6964   .text.XMC_SCU_IRQHandler:00000000 XMC_SCU_IRQHandler
    {standard input}:7042   .text.XMC_SCU_IRQHandler:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
SystemCoreClockUpdate
OSCHP_GetFrequency
