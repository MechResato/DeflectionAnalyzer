   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tft.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm _msCounter,4,4
  20              	 .comm tft_tick,1,1
  21              	 .comm MeasurementCounter,4,4
  22              	 .comm InputBuffer1_idx,2,2
  23              	 .comm InputType,1,1
  24              	 .comm frameover,1,1
  25              	 .comm ReadData,1,1
  26              	 .global G_x
  27              	 .section .data.G_x,"aw",%progbits
  28              	 .align 1
  31              	G_x:
  32 0000 0A00     	 .short 10
  33              	 .global G_y
  34              	 .section .data.G_y,"aw",%progbits
  35              	 .align 1
  38              	G_y:
  39 0000 5100     	 .short 81
  40              	 .global G_width
  41              	 .section .data.G_width,"aw",%progbits
  42              	 .align 1
  45              	G_width:
  46 0000 B801     	 .short 440
  47              	 .global G_height
  48              	 .section .data.G_height,"aw",%progbits
  49              	 .align 1
  52              	G_height:
  53 0000 A100     	 .short 161
  54              	 .global unit_Sensor
  55              	 .section .rodata.unit_Sensor,"a",%progbits
  56              	 .align 2
  59              	unit_Sensor:
  60 0000 205600   	 .ascii " V\000"
  61              	 .global G_amp_max
  62 0003 00       	 .section .data.G_amp_max,"aw",%progbits
  63              	 .align 3
  66              	G_amp_max:
  67 0000 00000000 	 .word 0
  68 0004 00002440 	 .word 1076101120
  69              	 .global G_t_max
  70              	 .section .data.G_t_max,"aw",%progbits
  71              	 .align 3
  74              	G_t_max:
  75 0000 9A999999 	 .word -1717986918
  76 0004 99990140 	 .word 1073846681
  77              	 .global G_y_max
  78              	 .section .data.G_y_max,"aw",%progbits
  79              	 .align 3
  82              	G_y_max:
  83 0000 00000000 	 .word 0
  84 0004 00FEAF40 	 .word 1085275648
  85              	 .global G_h_grid_lines
  86              	 .section .data.G_h_grid_lines,"aw",%progbits
  87              	 .align 3
  90              	G_h_grid_lines:
  91 0000 00000000 	 .word 0
  92 0004 00001040 	 .word 1074790400
  93              	 .global G_v_grid_lines
  94              	 .section .data.G_v_grid_lines,"aw",%progbits
  95              	 .align 3
  98              	G_v_grid_lines:
  99 0000 9A999999 	 .word -1717986918
 100 0004 99990140 	 .word 1073846681
 101              	 .comm num_dl_static,4,4
 102              	 .global tft_active
 103              	 .section .bss.tft_active,"aw",%nobits
 106              	tft_active:
 107 0000 00       	 .space 1
 108              	 .global toggle_state_graphmode
 109              	 .section .bss.toggle_state_graphmode,"aw",%nobits
 110              	 .align 1
 113              	toggle_state_graphmode:
 114 0000 0000     	 .space 2
 115              	 .global toggle_state_dimmer
 116              	 .section .bss.toggle_state_dimmer,"aw",%nobits
 117              	 .align 1
 120              	toggle_state_dimmer:
 121 0000 0000     	 .space 2
 122              	 .global __aeabi_ui2d
 123              	 .global __aeabi_ddiv
 124              	 .section .rodata
 125              	 .align 2
 126              	.LC3:
 127 0000 5600     	 .ascii "V\000"
 128 0002 0000     	 .align 2
 129              	.LC4:
 130 0004 7400     	 .ascii "t\000"
 131              	 .global __aeabi_i2d
 132              	 .global __aeabi_dmul
 133              	 .global __aeabi_d2uiz
 134              	 .global __aeabi_d2iz
 135              	 .global __aeabi_dsub
 136              	 .global __aeabi_dcmpeq
 137 0006 0000     	 .align 2
 138              	.LC5:
 139 0008 252E316C 	 .ascii "%.1lf\000"
 139      6600
 140 000e 0000     	 .align 2
 141              	.LC0:
 142 0010 00000000 	 .word EVE_cmd_dl
 143 0014 00000000 	 .word EVE_cmd_dl_burst
 144              	 .align 2
 145              	.LC1:
 146 0018 00000000 	 .word EVE_cmd_text
 147 001c 00000000 	 .word EVE_cmd_text_burst
 148              	 .align 2
 149              	.LC2:
 150 0020 00000000 	 .word EVE_cmd_number
 151 0024 00000000 	 .word EVE_cmd_number_burst
 152              	 .section .text.TFT_GraphStatic,"ax",%progbits
 153              	 .align 2
 154              	 .global TFT_GraphStatic
 155              	 .thumb
 156              	 .thumb_func
 158              	TFT_GraphStatic:
 159              	.LFB446:
 160              	 .file 1 "../Libraries/FT800-FT813-5.x/tft.c"
   1:../Libraries/FT800-FT813-5.x/tft.c **** /*
   2:../Libraries/FT800-FT813-5.x/tft.c **** @file    		tft.c
   3:../Libraries/FT800-FT813-5.x/tft.c **** @brief   		Implementation of display communication using the EVE Library. Meant to display a menu a
   4:../Libraries/FT800-FT813-5.x/tft.c **** @version 		2.0 (base lib version was 1.13)
   5:../Libraries/FT800-FT813-5.x/tft.c **** @date    		2020-09-05
   6:../Libraries/FT800-FT813-5.x/tft.c **** @initialauthor  Rudolph Riedel
   7:../Libraries/FT800-FT813-5.x/tft.c **** @author 		RS (Rene Santeler & Stefan Reinm√ºller) @ MCI 2020/21 (initially created by Rudolph Riede
   8:../Libraries/FT800-FT813-5.x/tft.c **** 
   9:../Libraries/FT800-FT813-5.x/tft.c **** @section History
  10:../Libraries/FT800-FT813-5.x/tft.c **** 2.0 (adapted from Rudolph Riedel base version 1.13 - below changes are from RS 2020/21)
  11:../Libraries/FT800-FT813-5.x/tft.c **** - Added color scheme, adaptable banner, dynamic graph implementation (TFT_GraphStatic & TFT_GraphDa
  12:../Libraries/FT800-FT813-5.x/tft.c **** - Adapted TFT_init to only do the most necessary thins for init (no static DL creation! you need to
  13:../Libraries/FT800-FT813-5.x/tft.c **** 
  14:../Libraries/FT800-FT813-5.x/tft.c **** // See https://brtchip.com/eve-toolchains/ for helpful Tools
  15:../Libraries/FT800-FT813-5.x/tft.c ****  */
  16:../Libraries/FT800-FT813-5.x/tft.c **** 
  17:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdint.h>
  18:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdio.h>
  19:../Libraries/FT800-FT813-5.x/tft.c **** #include <string.h>
  20:../Libraries/FT800-FT813-5.x/tft.c **** #include <math.h>
  21:../Libraries/FT800-FT813-5.x/tft.c **** #include <globals.h>
  22:../Libraries/FT800-FT813-5.x/tft.c **** #include "EVE.h"
  23:../Libraries/FT800-FT813-5.x/tft.c **** #include "tft_data.h"
  24:../Libraries/FT800-FT813-5.x/tft.c **** 
  25:../Libraries/FT800-FT813-5.x/tft.c **** 
  26:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Banner line strip edge positions (from left to right: Y1 is held horizontal till X1, in
  27:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y1 66
  28:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y2 50
  29:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X1 280
  30:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X2 320
  31:../Libraries/FT800-FT813-5.x/tft.c **** 
  32:../Libraries/FT800-FT813-5.x/tft.c **** 
  33:../Libraries/FT800-FT813-5.x/tft.c **** /////////// COLOR SCHEME
  34:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BGCOLOR       0x00F5F1EE // background
  35:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_TEXTCOLOR     0x00F3CD29 // main text
  36:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BANNERCOLOR   0x0064584B // banner
  37:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_DIVIDERCOLOR  0x00F3CD29 // divider
  38:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCOLOR  	   0x00EAA92B // button
  39:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCTSCOLOR   0x00AD9666 // button contrast
  40:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNTXTCOLOR   0x00FFF8EE // button text
  41:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNGRDCOLOR   0x008C4B12 // 3D gradient color
  42:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_AXISCOLOR    0x003B1E0B // graph axis
  43:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_GRIDCOLOR    0x00C5DAE2 // graph grid
  44:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA1COLOR   0x00003F9E // graph data 1
  45:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA2COLOR   0x0064584B // graph data 2 (alternative/additional color)
  46:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_POSMARKCOLOR 0x00ff0000 // graph position marker
  47:../Libraries/FT800-FT813-5.x/tft.c **** 
  48:../Libraries/FT800-FT813-5.x/tft.c **** /* simple pre-definded colors */
  49:../Libraries/FT800-FT813-5.x/tft.c **** #define RED		0xff0000UL
  50:../Libraries/FT800-FT813-5.x/tft.c **** #define ORANGE	0xffa500UL
  51:../Libraries/FT800-FT813-5.x/tft.c **** #define GREEN	0x00ff00UL
  52:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE	0x0000ffUL
  53:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE_1	0x5dade2L
  54:../Libraries/FT800-FT813-5.x/tft.c **** #define YELLOW	0xffff00UL
  55:../Libraries/FT800-FT813-5.x/tft.c **** #define PINK	0xff00ffUL
  56:../Libraries/FT800-FT813-5.x/tft.c **** #define PURPLE	0x800080UL
  57:../Libraries/FT800-FT813-5.x/tft.c **** #define WHITE	0xffffffUL
  58:../Libraries/FT800-FT813-5.x/tft.c **** #define BLACK	0x000000UL
  59:../Libraries/FT800-FT813-5.x/tft.c **** 
  60:../Libraries/FT800-FT813-5.x/tft.c **** 
  61:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions
  62:../Libraries/FT800-FT813-5.x/tft.c **** // Graph position and size. Here -> quick an dirty estimation where x, y, width and height must be 
  63:../Libraries/FT800-FT813-5.x/tft.c **** #define G_PADDING 10 									// Only needed because we want to calc how much width and height can 
  64:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_x        = 10;													 // 10 px from left to leave some room
  65:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_y      	= (LAYOUT_Y1 + 15);										 // end of banner plus 10 to leave some room  (for 
  66:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_width 	= (0 + EVE_HSIZE - 10 - (2*G_PADDING) - 10);			   // actual width of the data are
  67:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_height	= (0 + EVE_VSIZE - (LAYOUT_Y1 + 15) - (2*G_PADDING) - 10); // actual height of th
  68:../Libraries/FT800-FT813-5.x/tft.c **** // axes
  69:../Libraries/FT800-FT813-5.x/tft.c **** const char unit_Sensor[] = " V"; // unit string used at print of current sensor value
  70:../Libraries/FT800-FT813-5.x/tft.c **** double G_amp_max = 10.0; // volts - used at print of vertical grid value labels
  71:../Libraries/FT800-FT813-5.x/tft.c **** double G_t_max = 2.2;    // seconds - used at print of horizontal grid value labels
  72:../Libraries/FT800-FT813-5.x/tft.c **** // data properties
  73:../Libraries/FT800-FT813-5.x/tft.c **** double G_y_max = 4095.0; // maximum allowed amplitude y (here for 12bit sensor value)
  74:../Libraries/FT800-FT813-5.x/tft.c **** // grid
  75:../Libraries/FT800-FT813-5.x/tft.c **** double G_h_grid_lines = 4.0; // number of grey horizontal grid lines
  76:../Libraries/FT800-FT813-5.x/tft.c **** double G_v_grid_lines = 2.2; // number of grey vertical grid lines
  77:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions END
  78:../Libraries/FT800-FT813-5.x/tft.c **** 
  79:../Libraries/FT800-FT813-5.x/tft.c **** 
  80:../Libraries/FT800-FT813-5.x/tft.c **** // Memory-map definitions
  81:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_LOGO 0x00000000 // start-address of logo, needs about 20228 bytes of memory. Will be wr
  82:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_DL_STATIC (EVE_RAM_G_SIZE - 4096) // 0xff000 -> Start-address of the static part of the
  83:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t num_dl_static; // amount of bytes in the static part of our display-list
  84:../Libraries/FT800-FT813-5.x/tft.c **** 
  85:../Libraries/FT800-FT813-5.x/tft.c **** 
  86:../Libraries/FT800-FT813-5.x/tft.c **** /////////// General Variables
  87:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t tft_active = 0;  // Prevents TFT_display of doing anything if EVE_init isn't successful of 
  88:../Libraries/FT800-FT813-5.x/tft.c **** //volatile uint8_t frameover = 0; // Debug value - is set to one if the sensor buffer gets full the
  89:../Libraries/FT800-FT813-5.x/tft.c **** // Input signal type used in main for measurement and here for swithcen on touch
  90:../Libraries/FT800-FT813-5.x/tft.c **** //volatile uint8_t InputType = 3; // 0=Sensor5, 1=TestImpulse, 2=TestSawTooth, 3=TestSine
  91:../Libraries/FT800-FT813-5.x/tft.c **** 
  92:../Libraries/FT800-FT813-5.x/tft.c **** 
  93:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Button states
  94:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_graphmode = 0;
  95:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_dimmer = 0;
  96:../Libraries/FT800-FT813-5.x/tft.c **** 
  97:../Libraries/FT800-FT813-5.x/tft.c **** 
  98:../Libraries/FT800-FT813-5.x/tft.c **** 
  99:../Libraries/FT800-FT813-5.x/tft.c **** 
 100:../Libraries/FT800-FT813-5.x/tft.c **** 
 101:../Libraries/FT800-FT813-5.x/tft.c **** 
 102:../Libraries/FT800-FT813-5.x/tft.c **** 
 103:../Libraries/FT800-FT813-5.x/tft.c **** 
 104:../Libraries/FT800-FT813-5.x/tft.c **** 
 105:../Libraries/FT800-FT813-5.x/tft.c **** 
 106:../Libraries/FT800-FT813-5.x/tft.c **** 
 107:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphStatic(uint8_t burst, uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16
 161              	 .loc 1 107 0
 162              	 .cfi_startproc
 163              	 
 164              	 
 165 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 166              	.LCFI0:
 167              	 .cfi_def_cfa_offset 20
 168              	 .cfi_offset 4,-20
 169              	 .cfi_offset 5,-16
 170              	 .cfi_offset 6,-12
 171              	 .cfi_offset 7,-8
 172              	 .cfi_offset 14,-4
 173 0002 A3B0     	 sub sp,sp,#140
 174              	.LCFI1:
 175              	 .cfi_def_cfa_offset 160
 176 0004 02AF     	 add r7,sp,#8
 177              	.LCFI2:
 178              	 .cfi_def_cfa 7,152
 179 0006 0446     	 mov r4,r0
 180 0008 0846     	 mov r0,r1
 181 000a 1146     	 mov r1,r2
 182 000c 1A46     	 mov r2,r3
 183 000e 2346     	 mov r3,r4
 184 0010 FB71     	 strb r3,[r7,#7]
 185 0012 0346     	 mov r3,r0
 186 0014 BB80     	 strh r3,[r7,#4]
 187 0016 0B46     	 mov r3,r1
 188 0018 7B80     	 strh r3,[r7,#2]
 189 001a 1346     	 mov r3,r2
 190 001c 3B80     	 strh r3,[r7]
 108:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the non-dynamic parts of an Graph to the TFT (axes & labels, grids and values, axis-arro
 109:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 110:../Libraries/FT800-FT813-5.x/tft.c **** 	///  burst	... determines if the normal or the burst version of the EVE Library is used to transmi
 111:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 112:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 113:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 114:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 115:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding ... clearance from the outer corners (x,y) to the axes
 116:../Libraries/FT800-FT813-5.x/tft.c **** 	///  amp_max ... maximum represented value of amplitude (e.g. 10 Volts), will be used at 100% hori
 117:../Libraries/FT800-FT813-5.x/tft.c **** 	///  t_max 	 ... maximum represented value of time (e.g. 2.2 Seconds), will be used at 100% horizo
 118:../Libraries/FT800-FT813-5.x/tft.c **** 	///  h_grid_lines ... number of horizontal grid lines
 119:../Libraries/FT800-FT813-5.x/tft.c **** 	///  v_grid_lines ... number of vertical grid lines
 120:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: The predefined GRAPH_AXISCOLOR and GRAPH_GRIDCOLOR are used directly!
 121:../Libraries/FT800-FT813-5.x/tft.c **** 
 122:../Libraries/FT800-FT813-5.x/tft.c **** 	// Define a array of function pointers for every used "EVE_cmd_dl..." function. First one is norma
 123:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_dl__fptr_arr[])(uint32_t) = {EVE_cmd_dl, EVE_cmd_dl_burst};
 191              	 .loc 1 123 0
 192 001e A04A     	 ldr r2,.L20
 193 0020 07F13803 	 add r3,r7,#56
 194 0024 92E80300 	 ldmia r2,{r0,r1}
 195 0028 83E80300 	 stmia r3,{r0,r1}
 124:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_text__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, const char*) = {EVE_cmd_text
 196              	 .loc 1 124 0
 197 002c 9D4A     	 ldr r2,.L20+4
 198 002e 07F13003 	 add r3,r7,#48
 199 0032 92E80300 	 ldmia r2,{r0,r1}
 200 0036 83E80300 	 stmia r3,{r0,r1}
 125:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_number__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, int32_t) = {EVE_cmd_number
 201              	 .loc 1 125 0
 202 003a 9B4A     	 ldr r2,.L20+8
 203 003c 07F12803 	 add r3,r7,#40
 204 0040 92E80300 	 ldmia r2,{r0,r1}
 205 0044 83E80300 	 stmia r3,{r0,r1}
 126:../Libraries/FT800-FT813-5.x/tft.c **** 
 127:../Libraries/FT800-FT813-5.x/tft.c **** 
 128:../Libraries/FT800-FT813-5.x/tft.c **** 	// Internal offsets and sizes
 129:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t arrow_offset = 5;   // Offset of the ARROW HEAD corners
 206              	 .loc 1 129 0
 207 0048 0523     	 movs r3,#5
 208 004a 87F86F30 	 strb r3,[r7,#111]
 130:../Libraries/FT800-FT813-5.x/tft.c **** 
 131:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t grid_linewidth = 9; // linewidth of the grid in 1/16 pixel (16=1px)
 209              	 .loc 1 131 0
 210 004e 0923     	 movs r3,#9
 211 0050 87F86E30 	 strb r3,[r7,#110]
 132:../Libraries/FT800-FT813-5.x/tft.c **** 
 133:../Libraries/FT800-FT813-5.x/tft.c **** 	#define axis_lbl_txt_size 26 	  // Font for axis labels
 134:../Libraries/FT800-FT813-5.x/tft.c **** 	#define grid_lbl_txt_size 20 	  // Font for grid labels
 135:../Libraries/FT800-FT813-5.x/tft.c **** 
 136:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_x = 6;  // Offset used to print the horizontal axis label at the right
 212              	 .loc 1 136 0
 213 0054 0623     	 movs r3,#6
 214 0056 87F86D30 	 strb r3,[r7,#109]
 137:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_y = 20; // Offset used to print the horizontal axis label at the right
 215              	 .loc 1 137 0
 216 005a 1423     	 movs r3,#20
 217 005c 87F86C30 	 strb r3,[r7,#108]
 138:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_x = 2;  // Offset used to print the vertical axis label at the right p
 218              	 .loc 1 138 0
 219 0060 0223     	 movs r3,#2
 220 0062 87F86B30 	 strb r3,[r7,#107]
 139:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_y = 22; // Offset used to print the vertical axis label at the right p
 221              	 .loc 1 139 0
 222 0066 1623     	 movs r3,#22
 223 0068 87F86A30 	 strb r3,[r7,#106]
 140:../Libraries/FT800-FT813-5.x/tft.c **** 
 141:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_x = 3;  // Offset used to print the horizontal grid labels (numbers)
 224              	 .loc 1 141 0
 225 006c 0323     	 movs r3,#3
 226 006e 87F86930 	 strb r3,[r7,#105]
 142:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_y = 10; // Offset used to print the horizontal grid labels (numbers)
 227              	 .loc 1 142 0
 228 0072 0A23     	 movs r3,#10
 229 0074 87F86830 	 strb r3,[r7,#104]
 143:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_x = 7;  // Offset used to print the vertical grid labels (numbers) a
 230              	 .loc 1 143 0
 231 0078 0723     	 movs r3,#7
 232 007a 87F86730 	 strb r3,[r7,#103]
 144:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_y = 0;  // Offset used to print the vertical grid labels (numbers) a
 233              	 .loc 1 144 0
 234 007e 0023     	 movs r3,#0
 235 0080 87F86630 	 strb r3,[r7,#102]
 145:../Libraries/FT800-FT813-5.x/tft.c **** 
 146:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Calculate pixels between lines and labels of the grid
 147:../Libraries/FT800-FT813-5.x/tft.c **** 	// Used by grid lines and labels (space between them)
 148:../Libraries/FT800-FT813-5.x/tft.c **** 	double widthPerSection = (double)(width)/v_grid_lines;
 236              	 .loc 1 148 0
 237 0084 3B88     	 ldrh r3,[r7]
 238 0086 1846     	 mov r0,r3
 239 0088 FFF7FEFF 	 bl __aeabi_ui2d
 240 008c 0246     	 mov r2,r0
 241 008e 0B46     	 mov r3,r1
 242 0090 1046     	 mov r0,r2
 243 0092 1946     	 mov r1,r3
 244 0094 D7E92E23 	 ldrd r2,[r7,#184]
 245 0098 FFF7FEFF 	 bl __aeabi_ddiv
 246 009c 0246     	 mov r2,r0
 247 009e 0B46     	 mov r3,r1
 248 00a0 C7E91623 	 strd r2,[r7,#88]
 149:../Libraries/FT800-FT813-5.x/tft.c **** 	double heightPerSection = (double)(height)/h_grid_lines;
 249              	 .loc 1 149 0
 250 00a4 B7F89830 	 ldrh r3,[r7,#152]
 251 00a8 1846     	 mov r0,r3
 252 00aa FFF7FEFF 	 bl __aeabi_ui2d
 253 00ae 0246     	 mov r2,r0
 254 00b0 0B46     	 mov r3,r1
 255 00b2 1046     	 mov r0,r2
 256 00b4 1946     	 mov r1,r3
 257 00b6 D7E92C23 	 ldrd r2,[r7,#176]
 258 00ba FFF7FEFF 	 bl __aeabi_ddiv
 259 00be 0246     	 mov r2,r0
 260 00c0 0B46     	 mov r3,r1
 261 00c2 C7E91423 	 strd r2,[r7,#80]
 150:../Libraries/FT800-FT813-5.x/tft.c **** 
 151:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Axes LABELS
 152:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 262              	 .loc 1 152 0
 263 00c6 FB79     	 ldrb r3,[r7,#7]
 264 00c8 9B00     	 lsls r3,r3,#2
 265 00ca 07F18002 	 add r2,r7,#128
 266 00ce 1344     	 add r3,r3,r2
 267 00d0 53F8483C 	 ldr r3,[r3,#-72]
 268 00d4 7548     	 ldr r0,.L20+12
 269 00d6 9847     	 blx r3
 153:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding         + h_ax_lbl_comp_x, y + padding          - h_a
 270              	 .loc 1 153 0
 271 00d8 FB79     	 ldrb r3,[r7,#7]
 272 00da 9B00     	 lsls r3,r3,#2
 273 00dc 07F18002 	 add r2,r7,#128
 274 00e0 1344     	 add r3,r3,r2
 275 00e2 53F8504C 	 ldr r4,[r3,#-80]
 276 00e6 BA88     	 ldrh r2,[r7,#4]
 277 00e8 B7F89C30 	 ldrh r3,[r7,#156]
 278 00ec 1344     	 add r3,r3,r2
 279 00ee 9AB2     	 uxth r2,r3
 280 00f0 97F86D30 	 ldrb r3,[r7,#109]
 281 00f4 9BB2     	 uxth r3,r3
 282 00f6 1344     	 add r3,r3,r2
 283 00f8 9BB2     	 uxth r3,r3
 284 00fa 99B2     	 uxth r1,r3
 285 00fc 7A88     	 ldrh r2,[r7,#2]
 286 00fe B7F89C30 	 ldrh r3,[r7,#156]
 287 0102 1344     	 add r3,r3,r2
 288 0104 9AB2     	 uxth r2,r3
 289 0106 97F86C30 	 ldrb r3,[r7,#108]
 290 010a 9BB2     	 uxth r3,r3
 291 010c D31A     	 subs r3,r2,r3
 292 010e 9BB2     	 uxth r3,r3
 293 0110 9BB2     	 uxth r3,r3
 294 0112 09B2     	 sxth r1,r1
 295 0114 1AB2     	 sxth r2,r3
 296 0116 664B     	 ldr r3,.L20+16
 297 0118 0093     	 str r3,[sp]
 298 011a 0846     	 mov r0,r1
 299 011c 1146     	 mov r1,r2
 300 011e 1A22     	 movs r2,#26
 301 0120 0023     	 movs r3,#0
 302 0122 A047     	 blx r4
 154:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding + width + v_ax_lbl_comp_x, y + padding + height - v_a
 303              	 .loc 1 154 0
 304 0124 FB79     	 ldrb r3,[r7,#7]
 305 0126 9B00     	 lsls r3,r3,#2
 306 0128 07F18002 	 add r2,r7,#128
 307 012c 1344     	 add r3,r3,r2
 308 012e 53F8504C 	 ldr r4,[r3,#-80]
 309 0132 BA88     	 ldrh r2,[r7,#4]
 310 0134 B7F89C30 	 ldrh r3,[r7,#156]
 311 0138 1344     	 add r3,r3,r2
 312 013a 9AB2     	 uxth r2,r3
 313 013c 3B88     	 ldrh r3,[r7]
 314 013e 1344     	 add r3,r3,r2
 315 0140 9AB2     	 uxth r2,r3
 316 0142 97F86B30 	 ldrb r3,[r7,#107]
 317 0146 9BB2     	 uxth r3,r3
 318 0148 1344     	 add r3,r3,r2
 319 014a 9BB2     	 uxth r3,r3
 320 014c 99B2     	 uxth r1,r3
 321 014e 7A88     	 ldrh r2,[r7,#2]
 322 0150 B7F89C30 	 ldrh r3,[r7,#156]
 323 0154 1344     	 add r3,r3,r2
 324 0156 9AB2     	 uxth r2,r3
 325 0158 B7F89830 	 ldrh r3,[r7,#152]
 326 015c 1344     	 add r3,r3,r2
 327 015e 9AB2     	 uxth r2,r3
 328 0160 97F86A30 	 ldrb r3,[r7,#106]
 329 0164 9BB2     	 uxth r3,r3
 330 0166 D31A     	 subs r3,r2,r3
 331 0168 9BB2     	 uxth r3,r3
 332 016a 9BB2     	 uxth r3,r3
 333 016c 09B2     	 sxth r1,r1
 334 016e 1AB2     	 sxth r2,r3
 335 0170 504B     	 ldr r3,.L20+20
 336 0172 0093     	 str r3,[sp]
 337 0174 0846     	 mov r0,r1
 338 0176 1146     	 mov r1,r2
 339 0178 1A22     	 movs r2,#26
 340 017a 0023     	 movs r3,#0
 341 017c A047     	 blx r4
 155:../Libraries/FT800-FT813-5.x/tft.c **** 
 156:../Libraries/FT800-FT813-5.x/tft.c **** 	/// AXES lines
 157:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 158:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINES);
 342              	 .loc 1 158 0
 343 017e FB79     	 ldrb r3,[r7,#7]
 344 0180 9B00     	 lsls r3,r3,#2
 345 0182 07F18002 	 add r2,r7,#128
 346 0186 1344     	 add r3,r3,r2
 347 0188 53F8483C 	 ldr r3,[r3,#-72]
 348 018c 4A48     	 ldr r0,.L20+24
 349 018e 9847     	 blx r3
 159:../Libraries/FT800-FT813-5.x/tft.c **** 	// left vertical line (Amplitude)
 160:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y));
 350              	 .loc 1 160 0
 351 0190 FB79     	 ldrb r3,[r7,#7]
 352 0192 9B00     	 lsls r3,r3,#2
 353 0194 07F18002 	 add r2,r7,#128
 354 0198 1344     	 add r3,r3,r2
 355 019a 53F8483C 	 ldr r3,[r3,#-72]
 356 019e B988     	 ldrh r1,[r7,#4]
 357 01a0 B7F89C20 	 ldrh r2,[r7,#156]
 358 01a4 0A44     	 add r2,r2,r1
 359 01a6 C2F30E02 	 ubfx r2,r2,#0,#15
 360 01aa D103     	 lsls r1,r2,#15
 361 01ac 7A88     	 ldrh r2,[r7,#2]
 362 01ae C2F30E02 	 ubfx r2,r2,#0,#15
 363 01b2 0A43     	 orrs r2,r2,r1
 364 01b4 42F08042 	 orr r2,r2,#1073741824
 365 01b8 1046     	 mov r0,r2
 366 01ba 9847     	 blx r3
 161:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y + padding + height + padding));
 367              	 .loc 1 161 0
 368 01bc FB79     	 ldrb r3,[r7,#7]
 369 01be 9B00     	 lsls r3,r3,#2
 370 01c0 07F18002 	 add r2,r7,#128
 371 01c4 1344     	 add r3,r3,r2
 372 01c6 53F8483C 	 ldr r3,[r3,#-72]
 373 01ca B988     	 ldrh r1,[r7,#4]
 374 01cc B7F89C20 	 ldrh r2,[r7,#156]
 375 01d0 0A44     	 add r2,r2,r1
 376 01d2 C2F30E02 	 ubfx r2,r2,#0,#15
 377 01d6 D103     	 lsls r1,r2,#15
 378 01d8 7888     	 ldrh r0,[r7,#2]
 379 01da B7F89C20 	 ldrh r2,[r7,#156]
 380 01de 1044     	 add r0,r0,r2
 381 01e0 B7F89820 	 ldrh r2,[r7,#152]
 382 01e4 1044     	 add r0,r0,r2
 383 01e6 B7F89C20 	 ldrh r2,[r7,#156]
 384 01ea 0244     	 add r2,r2,r0
 385 01ec C2F30E02 	 ubfx r2,r2,#0,#15
 386 01f0 0A43     	 orrs r2,r2,r1
 387 01f2 42F08042 	 orr r2,r2,#1073741824
 388 01f6 1046     	 mov r0,r2
 389 01f8 9847     	 blx r3
 162:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal line (Time)
 163:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x                            , y + padding + height ));
 390              	 .loc 1 163 0
 391 01fa FB79     	 ldrb r3,[r7,#7]
 392 01fc 9B00     	 lsls r3,r3,#2
 393 01fe 07F18002 	 add r2,r7,#128
 394 0202 1344     	 add r3,r3,r2
 395 0204 53F8483C 	 ldr r3,[r3,#-72]
 396 0208 BA88     	 ldrh r2,[r7,#4]
 397 020a C2F30E02 	 ubfx r2,r2,#0,#15
 398 020e D103     	 lsls r1,r2,#15
 399 0210 7888     	 ldrh r0,[r7,#2]
 400 0212 B7F89C20 	 ldrh r2,[r7,#156]
 401 0216 1044     	 add r0,r0,r2
 402 0218 B7F89820 	 ldrh r2,[r7,#152]
 403 021c 0244     	 add r2,r2,r0
 404 021e C2F30E02 	 ubfx r2,r2,#0,#15
 405 0222 0A43     	 orrs r2,r2,r1
 406 0224 42F08042 	 orr r2,r2,#1073741824
 407 0228 1046     	 mov r0,r2
 408 022a 9847     	 blx r3
 164:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding, y + padding + height ));
 409              	 .loc 1 164 0
 410 022c FB79     	 ldrb r3,[r7,#7]
 411 022e 9B00     	 lsls r3,r3,#2
 412 0230 07F18002 	 add r2,r7,#128
 413 0234 1344     	 add r3,r3,r2
 414 0236 53F8483C 	 ldr r3,[r3,#-72]
 415 023a B988     	 ldrh r1,[r7,#4]
 416 023c B7F89C20 	 ldrh r2,[r7,#156]
 417 0240 1144     	 add r1,r1,r2
 418 0242 3A88     	 ldrh r2,[r7]
 419 0244 1144     	 add r1,r1,r2
 420 0246 B7F89C20 	 ldrh r2,[r7,#156]
 421 024a 0A44     	 add r2,r2,r1
 422 024c C2F30E02 	 ubfx r2,r2,#0,#15
 423 0250 D103     	 lsls r1,r2,#15
 424 0252 7888     	 ldrh r0,[r7,#2]
 425 0254 B7F89C20 	 ldrh r2,[r7,#156]
 426 0258 1044     	 add r0,r0,r2
 427 025a B7F89820 	 ldrh r2,[r7,#152]
 428 025e 0244     	 add r2,r2,r0
 429 0260 C2F30E02 	 ubfx r2,r2,#0,#15
 430 0264 0A43     	 orrs r2,r2,r1
 431 0266 42F08042 	 orr r2,r2,#1073741824
 432 026a 1046     	 mov r0,r2
 433 026c 9847     	 blx r3
 165:../Libraries/FT800-FT813-5.x/tft.c **** 
 166:../Libraries/FT800-FT813-5.x/tft.c **** 	/// GRID lines
 167:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(LINE_WIDTH(grid_linewidth)); /* size is in 1/16 pixel */
 434              	 .loc 1 167 0
 435 026e FB79     	 ldrb r3,[r7,#7]
 436 0270 9B00     	 lsls r3,r3,#2
 437 0272 07F18002 	 add r2,r7,#128
 438 0276 1344     	 add r3,r3,r2
 439 0278 53F8483C 	 ldr r3,[r3,#-72]
 440 027c 97F86E20 	 ldrb r2,[r7,#110]
 441 0280 42F06062 	 orr r2,r2,#234881024
 442 0284 1046     	 mov r0,r2
 443 0286 9847     	 blx r3
 168:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_GRIDCOLOR);
 444              	 .loc 1 168 0
 445 0288 FB79     	 ldrb r3,[r7,#7]
 446 028a 9B00     	 lsls r3,r3,#2
 447 028c 07F18002 	 add r2,r7,#128
 448 0290 1344     	 add r3,r3,r2
 449 0292 53F8483C 	 ldr r3,[r3,#-72]
 450 0296 0948     	 ldr r0,.L20+28
 451 0298 9847     	 blx r3
 452              	.LBB2:
 169:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid
 170:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(v_grid_lines); i++){
 453              	 .loc 1 170 0
 454 029a 0123     	 movs r3,#1
 455 029c FB67     	 str r3,[r7,#124]
 456 029e 6FE0     	 b .L2
 457              	.L21:
 458              	 .align 2
 459              	.L20:
 460 02a0 10000000 	 .word .LC0
 461 02a4 18000000 	 .word .LC1
 462 02a8 20000000 	 .word .LC2
 463 02ac 0B1E3B04 	 .word 70983179
 464 02b0 00000000 	 .word .LC3
 465 02b4 04000000 	 .word .LC4
 466 02b8 0300001F 	 .word 520093699
 467 02bc E2DAC504 	 .word 80075490
 468              	.L3:
 171:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 172:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 469              	 .loc 1 172 0 discriminator 3
 470 02c0 FB79     	 ldrb r3,[r7,#7]
 471 02c2 9B00     	 lsls r3,r3,#2
 472 02c4 07F18002 	 add r2,r7,#128
 473 02c8 1344     	 add r3,r3,r2
 474 02ca 53F8484C 	 ldr r4,[r3,#-72]
 475 02ce BA88     	 ldrh r2,[r7,#4]
 476 02d0 B7F89C30 	 ldrh r3,[r7,#156]
 477 02d4 D518     	 adds r5,r2,r3
 478 02d6 F86F     	 ldr r0,[r7,#124]
 479 02d8 FFF7FEFF 	 bl __aeabi_i2d
 480 02dc 0246     	 mov r2,r0
 481 02de 0B46     	 mov r3,r1
 482 02e0 1046     	 mov r0,r2
 483 02e2 1946     	 mov r1,r3
 484 02e4 D7E91623 	 ldrd r2,[r7,#88]
 485 02e8 FFF7FEFF 	 bl __aeabi_dmul
 486 02ec 0246     	 mov r2,r0
 487 02ee 0B46     	 mov r3,r1
 488 02f0 1046     	 mov r0,r2
 489 02f2 1946     	 mov r1,r3
 490 02f4 FFF7FEFF 	 bl __aeabi_d2uiz
 491 02f8 0346     	 mov r3,r0
 492 02fa 9BB2     	 uxth r3,r3
 493 02fc 2B44     	 add r3,r3,r5
 494 02fe C3F30E03 	 ubfx r3,r3,#0,#15
 495 0302 DA03     	 lsls r2,r3,#15
 496 0304 7988     	 ldrh r1,[r7,#2]
 497 0306 B7F89C30 	 ldrh r3,[r7,#156]
 498 030a 0B44     	 add r3,r3,r1
 499 030c C3F30E03 	 ubfx r3,r3,#0,#15
 500 0310 1343     	 orrs r3,r3,r2
 501 0312 43F08043 	 orr r3,r3,#1073741824
 502 0316 1846     	 mov r0,r3
 503 0318 A047     	 blx r4
 173:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 504              	 .loc 1 173 0 discriminator 3
 505 031a FB79     	 ldrb r3,[r7,#7]
 506 031c 9B00     	 lsls r3,r3,#2
 507 031e 07F18002 	 add r2,r7,#128
 508 0322 1344     	 add r3,r3,r2
 509 0324 53F8484C 	 ldr r4,[r3,#-72]
 510 0328 BA88     	 ldrh r2,[r7,#4]
 511 032a B7F89C30 	 ldrh r3,[r7,#156]
 512 032e D518     	 adds r5,r2,r3
 513 0330 F86F     	 ldr r0,[r7,#124]
 514 0332 FFF7FEFF 	 bl __aeabi_i2d
 515 0336 0246     	 mov r2,r0
 516 0338 0B46     	 mov r3,r1
 517 033a 1046     	 mov r0,r2
 518 033c 1946     	 mov r1,r3
 519 033e D7E91623 	 ldrd r2,[r7,#88]
 520 0342 FFF7FEFF 	 bl __aeabi_dmul
 521 0346 0246     	 mov r2,r0
 522 0348 0B46     	 mov r3,r1
 523 034a 1046     	 mov r0,r2
 524 034c 1946     	 mov r1,r3
 525 034e FFF7FEFF 	 bl __aeabi_d2uiz
 526 0352 0346     	 mov r3,r0
 527 0354 9BB2     	 uxth r3,r3
 528 0356 2B44     	 add r3,r3,r5
 529 0358 C3F30E03 	 ubfx r3,r3,#0,#15
 530 035c DA03     	 lsls r2,r3,#15
 531 035e 7988     	 ldrh r1,[r7,#2]
 532 0360 B7F89C30 	 ldrh r3,[r7,#156]
 533 0364 1944     	 add r1,r1,r3
 534 0366 B7F89830 	 ldrh r3,[r7,#152]
 535 036a 0B44     	 add r3,r3,r1
 536 036c C3F30E03 	 ubfx r3,r3,#0,#15
 537 0370 1343     	 orrs r3,r3,r2
 538 0372 43F08043 	 orr r3,r3,#1073741824
 539 0376 1846     	 mov r0,r3
 540 0378 A047     	 blx r4
 170:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 541              	 .loc 1 170 0 discriminator 3
 542 037a FB6F     	 ldr r3,[r7,#124]
 543 037c 0133     	 adds r3,r3,#1
 544 037e FB67     	 str r3,[r7,#124]
 545              	.L2:
 170:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 546              	 .loc 1 170 0 is_stmt 0 discriminator 1
 547 0380 D7E92E01 	 ldrd r0,[r7,#184]
 548 0384 FFF7FEFF 	 bl floor
 549 0388 0246     	 mov r2,r0
 550 038a 0B46     	 mov r3,r1
 551 038c 1046     	 mov r0,r2
 552 038e 1946     	 mov r1,r3
 553 0390 FFF7FEFF 	 bl __aeabi_d2iz
 554 0394 0246     	 mov r2,r0
 555 0396 FB6F     	 ldr r3,[r7,#124]
 556 0398 9A42     	 cmp r2,r3
 557 039a 91DA     	 bge .L3
 558              	.LBE2:
 559              	.LBB3:
 174:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 175:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid
 176:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){
 560              	 .loc 1 176 0 is_stmt 1
 561 039c 0123     	 movs r3,#1
 562 039e BB67     	 str r3,[r7,#120]
 563 03a0 64E0     	 b .L4
 564              	.L5:
 177:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 178:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding        , y + padding + height - (uint16_t)(he
 565              	 .loc 1 178 0 discriminator 3
 566 03a2 FB79     	 ldrb r3,[r7,#7]
 567 03a4 9B00     	 lsls r3,r3,#2
 568 03a6 07F18002 	 add r2,r7,#128
 569 03aa 1344     	 add r3,r3,r2
 570 03ac 53F8484C 	 ldr r4,[r3,#-72]
 571 03b0 BA88     	 ldrh r2,[r7,#4]
 572 03b2 B7F89C30 	 ldrh r3,[r7,#156]
 573 03b6 1344     	 add r3,r3,r2
 574 03b8 C3F30E03 	 ubfx r3,r3,#0,#15
 575 03bc DD03     	 lsls r5,r3,#15
 576 03be 7A88     	 ldrh r2,[r7,#2]
 577 03c0 B7F89C30 	 ldrh r3,[r7,#156]
 578 03c4 1A44     	 add r2,r2,r3
 579 03c6 B7F89830 	 ldrh r3,[r7,#152]
 580 03ca D618     	 adds r6,r2,r3
 581 03cc B86F     	 ldr r0,[r7,#120]
 582 03ce FFF7FEFF 	 bl __aeabi_i2d
 583 03d2 0246     	 mov r2,r0
 584 03d4 0B46     	 mov r3,r1
 585 03d6 1046     	 mov r0,r2
 586 03d8 1946     	 mov r1,r3
 587 03da D7E91423 	 ldrd r2,[r7,#80]
 588 03de FFF7FEFF 	 bl __aeabi_dmul
 589 03e2 0246     	 mov r2,r0
 590 03e4 0B46     	 mov r3,r1
 591 03e6 1046     	 mov r0,r2
 592 03e8 1946     	 mov r1,r3
 593 03ea FFF7FEFF 	 bl __aeabi_d2uiz
 594 03ee 0346     	 mov r3,r0
 595 03f0 9BB2     	 uxth r3,r3
 596 03f2 F31A     	 subs r3,r6,r3
 597 03f4 C3F30E03 	 ubfx r3,r3,#0,#15
 598 03f8 2B43     	 orrs r3,r3,r5
 599 03fa 43F08043 	 orr r3,r3,#1073741824
 600 03fe 1846     	 mov r0,r3
 601 0400 A047     	 blx r4
 179:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width, y + padding + height - (uint16_t)(he
 602              	 .loc 1 179 0 discriminator 3
 603 0402 FB79     	 ldrb r3,[r7,#7]
 604 0404 9B00     	 lsls r3,r3,#2
 605 0406 07F18002 	 add r2,r7,#128
 606 040a 1344     	 add r3,r3,r2
 607 040c 53F8484C 	 ldr r4,[r3,#-72]
 608 0410 BA88     	 ldrh r2,[r7,#4]
 609 0412 B7F89C30 	 ldrh r3,[r7,#156]
 610 0416 1A44     	 add r2,r2,r3
 611 0418 3B88     	 ldrh r3,[r7]
 612 041a 1344     	 add r3,r3,r2
 613 041c C3F30E03 	 ubfx r3,r3,#0,#15
 614 0420 DD03     	 lsls r5,r3,#15
 615 0422 7A88     	 ldrh r2,[r7,#2]
 616 0424 B7F89C30 	 ldrh r3,[r7,#156]
 617 0428 1A44     	 add r2,r2,r3
 618 042a B7F89830 	 ldrh r3,[r7,#152]
 619 042e D618     	 adds r6,r2,r3
 620 0430 B86F     	 ldr r0,[r7,#120]
 621 0432 FFF7FEFF 	 bl __aeabi_i2d
 622 0436 0246     	 mov r2,r0
 623 0438 0B46     	 mov r3,r1
 624 043a 1046     	 mov r0,r2
 625 043c 1946     	 mov r1,r3
 626 043e D7E91423 	 ldrd r2,[r7,#80]
 627 0442 FFF7FEFF 	 bl __aeabi_dmul
 628 0446 0246     	 mov r2,r0
 629 0448 0B46     	 mov r3,r1
 630 044a 1046     	 mov r0,r2
 631 044c 1946     	 mov r1,r3
 632 044e FFF7FEFF 	 bl __aeabi_d2uiz
 633 0452 0346     	 mov r3,r0
 634 0454 9BB2     	 uxth r3,r3
 635 0456 F31A     	 subs r3,r6,r3
 636 0458 C3F30E03 	 ubfx r3,r3,#0,#15
 637 045c 2B43     	 orrs r3,r3,r5
 638 045e 43F08043 	 orr r3,r3,#1073741824
 639 0462 1846     	 mov r0,r3
 640 0464 A047     	 blx r4
 176:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 641              	 .loc 1 176 0 discriminator 3
 642 0466 BB6F     	 ldr r3,[r7,#120]
 643 0468 0133     	 adds r3,r3,#1
 644 046a BB67     	 str r3,[r7,#120]
 645              	.L4:
 176:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 646              	 .loc 1 176 0 is_stmt 0 discriminator 1
 647 046c D7E92C01 	 ldrd r0,[r7,#176]
 648 0470 FFF7FEFF 	 bl floor
 649 0474 0246     	 mov r2,r0
 650 0476 0B46     	 mov r3,r1
 651 0478 1046     	 mov r0,r2
 652 047a 1946     	 mov r1,r3
 653 047c FFF7FEFF 	 bl __aeabi_d2iz
 654 0480 0246     	 mov r2,r0
 655 0482 BB6F     	 ldr r3,[r7,#120]
 656 0484 9A42     	 cmp r2,r3
 657 0486 8CDA     	 bge .L5
 658              	.LBE3:
 180:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 181:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 659              	 .loc 1 181 0 is_stmt 1
 660 0488 FB79     	 ldrb r3,[r7,#7]
 661 048a 9B00     	 lsls r3,r3,#2
 662 048c 07F18002 	 add r2,r7,#128
 663 0490 1344     	 add r3,r3,r2
 664 0492 53F8483C 	 ldr r3,[r3,#-72]
 665 0496 4FF00450 	 mov r0,#553648128
 666 049a 9847     	 blx r3
 182:../Libraries/FT800-FT813-5.x/tft.c **** 
 183:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Grid VALUES
 184:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 667              	 .loc 1 184 0
 668 049c FB79     	 ldrb r3,[r7,#7]
 669 049e 9B00     	 lsls r3,r3,#2
 670 04a0 07F18002 	 add r2,r7,#128
 671 04a4 1344     	 add r3,r3,r2
 672 04a6 53F8483C 	 ldr r3,[r3,#-72]
 673 04aa A448     	 ldr r0,.L22
 674 04ac 9847     	 blx r3
 675              	.LBB4:
 185:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid (time)
 186:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)ceil(v_grid_lines); i++){ // "ceil" and "i-1" at val -> print also the 0 valu
 676              	 .loc 1 186 0
 677 04ae 0123     	 movs r3,#1
 678 04b0 7B67     	 str r3,[r7,#116]
 679 04b2 BEE0     	 b .L6
 680              	.L10:
 681              	.LBB5:
 187:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 188:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (t_max/v_grid_lines*(double)(i-1));
 682              	 .loc 1 188 0
 683 04b4 D7E92A01 	 ldrd r0,[r7,#168]
 684 04b8 D7E92E23 	 ldrd r2,[r7,#184]
 685 04bc FFF7FEFF 	 bl __aeabi_ddiv
 686 04c0 0246     	 mov r2,r0
 687 04c2 0B46     	 mov r3,r1
 688 04c4 1446     	 mov r4,r2
 689 04c6 1D46     	 mov r5,r3
 690 04c8 7B6F     	 ldr r3,[r7,#116]
 691 04ca 013B     	 subs r3,r3,#1
 692 04cc 1846     	 mov r0,r3
 693 04ce FFF7FEFF 	 bl __aeabi_i2d
 694 04d2 0246     	 mov r2,r0
 695 04d4 0B46     	 mov r3,r1
 696 04d6 2046     	 mov r0,r4
 697 04d8 2946     	 mov r1,r5
 698 04da FFF7FEFF 	 bl __aeabi_dmul
 699 04de 0246     	 mov r2,r0
 700 04e0 0B46     	 mov r3,r1
 701 04e2 C7E91223 	 strd r2,[r7,#72]
 189:../Libraries/FT800-FT813-5.x/tft.c **** 
 190:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 191:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 702              	 .loc 1 191 0
 703 04e6 D7E91201 	 ldrd r0,[r7,#72]
 704 04ea FFF7FEFF 	 bl __aeabi_d2uiz
 705 04ee 0346     	 mov r3,r0
 706 04f0 1846     	 mov r0,r3
 707 04f2 FFF7FEFF 	 bl __aeabi_ui2d
 708 04f6 0246     	 mov r2,r0
 709 04f8 0B46     	 mov r3,r1
 710 04fa D7E91201 	 ldrd r0,[r7,#72]
 711 04fe FFF7FEFF 	 bl __aeabi_dsub
 712 0502 0246     	 mov r2,r0
 713 0504 0B46     	 mov r3,r1
 714 0506 1046     	 mov r0,r2
 715 0508 1946     	 mov r1,r3
 716 050a 4FF00002 	 mov r2,#0
 717 050e 4FF00003 	 mov r3,#0
 718 0512 FFF7FEFF 	 bl __aeabi_dcmpeq
 719 0516 0346     	 mov r3,r0
 720 0518 002B     	 cmp r3,#0
 721 051a 41D0     	 beq .L18
 192:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_g
 722              	 .loc 1 192 0
 723 051c FB79     	 ldrb r3,[r7,#7]
 724 051e 9B00     	 lsls r3,r3,#2
 725 0520 07F18002 	 add r2,r7,#128
 726 0524 1344     	 add r3,r3,r2
 727 0526 53F8584C 	 ldr r4,[r3,#-88]
 728 052a BA88     	 ldrh r2,[r7,#4]
 729 052c B7F89C30 	 ldrh r3,[r7,#156]
 730 0530 1344     	 add r3,r3,r2
 731 0532 9DB2     	 uxth r5,r3
 732 0534 7B6F     	 ldr r3,[r7,#116]
 733 0536 013B     	 subs r3,r3,#1
 734 0538 1846     	 mov r0,r3
 735 053a FFF7FEFF 	 bl __aeabi_i2d
 736 053e 0246     	 mov r2,r0
 737 0540 0B46     	 mov r3,r1
 738 0542 1046     	 mov r0,r2
 739 0544 1946     	 mov r1,r3
 740 0546 D7E91623 	 ldrd r2,[r7,#88]
 741 054a FFF7FEFF 	 bl __aeabi_dmul
 742 054e 0246     	 mov r2,r0
 743 0550 0B46     	 mov r3,r1
 744 0552 1046     	 mov r0,r2
 745 0554 1946     	 mov r1,r3
 746 0556 FFF7FEFF 	 bl __aeabi_d2uiz
 747 055a 0346     	 mov r3,r0
 748 055c 9BB2     	 uxth r3,r3
 749 055e 2B44     	 add r3,r3,r5
 750 0560 9AB2     	 uxth r2,r3
 751 0562 97F86930 	 ldrb r3,[r7,#105]
 752 0566 9BB2     	 uxth r3,r3
 753 0568 1344     	 add r3,r3,r2
 754 056a 9BB2     	 uxth r3,r3
 755 056c 9EB2     	 uxth r6,r3
 756 056e 7A88     	 ldrh r2,[r7,#2]
 757 0570 B7F89830 	 ldrh r3,[r7,#152]
 758 0574 1344     	 add r3,r3,r2
 759 0576 9AB2     	 uxth r2,r3
 760 0578 97F86830 	 ldrb r3,[r7,#104]
 761 057c 9BB2     	 uxth r3,r3
 762 057e 1344     	 add r3,r3,r2
 763 0580 9BB2     	 uxth r3,r3
 764 0582 9DB2     	 uxth r5,r3
 765 0584 D7E91201 	 ldrd r0,[r7,#72]
 766 0588 FFF7FEFF 	 bl __aeabi_d2iz
 767 058c 0146     	 mov r1,r0
 768 058e 32B2     	 sxth r2,r6
 769 0590 2BB2     	 sxth r3,r5
 770 0592 0091     	 str r1,[sp]
 771 0594 1046     	 mov r0,r2
 772 0596 1946     	 mov r1,r3
 773 0598 1422     	 movs r2,#20
 774 059a 0023     	 movs r3,#0
 775 059c A047     	 blx r4
 776 059e 45E0     	 b .L9
 777              	.L18:
 778              	.LBB6:
 193:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 194:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 195:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 196:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 779              	 .loc 1 196 0
 780 05a0 07F10803 	 add r3,r7,#8
 781 05a4 1846     	 mov r0,r3
 782 05a6 6649     	 ldr r1,.L22+4
 783 05a8 D7E91223 	 ldrd r2,[r7,#72]
 784 05ac FFF7FEFF 	 bl sprintf
 197:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_gri
 785              	 .loc 1 197 0
 786 05b0 FB79     	 ldrb r3,[r7,#7]
 787 05b2 9B00     	 lsls r3,r3,#2
 788 05b4 07F18002 	 add r2,r7,#128
 789 05b8 1344     	 add r3,r3,r2
 790 05ba 53F8504C 	 ldr r4,[r3,#-80]
 791 05be BA88     	 ldrh r2,[r7,#4]
 792 05c0 B7F89C30 	 ldrh r3,[r7,#156]
 793 05c4 1344     	 add r3,r3,r2
 794 05c6 9DB2     	 uxth r5,r3
 795 05c8 7B6F     	 ldr r3,[r7,#116]
 796 05ca 013B     	 subs r3,r3,#1
 797 05cc 1846     	 mov r0,r3
 798 05ce FFF7FEFF 	 bl __aeabi_i2d
 799 05d2 0246     	 mov r2,r0
 800 05d4 0B46     	 mov r3,r1
 801 05d6 1046     	 mov r0,r2
 802 05d8 1946     	 mov r1,r3
 803 05da D7E91623 	 ldrd r2,[r7,#88]
 804 05de FFF7FEFF 	 bl __aeabi_dmul
 805 05e2 0246     	 mov r2,r0
 806 05e4 0B46     	 mov r3,r1
 807 05e6 1046     	 mov r0,r2
 808 05e8 1946     	 mov r1,r3
 809 05ea FFF7FEFF 	 bl __aeabi_d2uiz
 810 05ee 0346     	 mov r3,r0
 811 05f0 9BB2     	 uxth r3,r3
 812 05f2 2B44     	 add r3,r3,r5
 813 05f4 9AB2     	 uxth r2,r3
 814 05f6 97F86930 	 ldrb r3,[r7,#105]
 815 05fa 9BB2     	 uxth r3,r3
 816 05fc 1344     	 add r3,r3,r2
 817 05fe 9BB2     	 uxth r3,r3
 818 0600 99B2     	 uxth r1,r3
 819 0602 7A88     	 ldrh r2,[r7,#2]
 820 0604 B7F89830 	 ldrh r3,[r7,#152]
 821 0608 1344     	 add r3,r3,r2
 822 060a 9AB2     	 uxth r2,r3
 823 060c 97F86830 	 ldrb r3,[r7,#104]
 824 0610 9BB2     	 uxth r3,r3
 825 0612 1344     	 add r3,r3,r2
 826 0614 9BB2     	 uxth r3,r3
 827 0616 9BB2     	 uxth r3,r3
 828 0618 09B2     	 sxth r1,r1
 829 061a 1AB2     	 sxth r2,r3
 830 061c 07F10803 	 add r3,r7,#8
 831 0620 0093     	 str r3,[sp]
 832 0622 0846     	 mov r0,r1
 833 0624 1146     	 mov r1,r2
 834 0626 1422     	 movs r2,#20
 835 0628 0023     	 movs r3,#0
 836 062a A047     	 blx r4
 837              	.L9:
 838              	.LBE6:
 839              	.LBE5:
 186:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 840              	 .loc 1 186 0 discriminator 2
 841 062c 7B6F     	 ldr r3,[r7,#116]
 842 062e 0133     	 adds r3,r3,#1
 843 0630 7B67     	 str r3,[r7,#116]
 844              	.L6:
 186:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 845              	 .loc 1 186 0 is_stmt 0 discriminator 1
 846 0632 D7E92E01 	 ldrd r0,[r7,#184]
 847 0636 FFF7FEFF 	 bl ceil
 848 063a 0246     	 mov r2,r0
 849 063c 0B46     	 mov r3,r1
 850 063e 1046     	 mov r0,r2
 851 0640 1946     	 mov r1,r3
 852 0642 FFF7FEFF 	 bl __aeabi_d2iz
 853 0646 0246     	 mov r2,r0
 854 0648 7B6F     	 ldr r3,[r7,#116]
 855 064a 9A42     	 cmp r2,r3
 856 064c BFF632AF 	 bge .L10
 857              	.LBE4:
 858              	.LBB7:
 198:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 199:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 200:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid (amplitude)
 201:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 202:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){  // "floor" and "i" at val -> don't print the 0 va
 859              	 .loc 1 202 0 is_stmt 1
 860 0650 0123     	 movs r3,#1
 861 0652 3B67     	 str r3,[r7,#112]
 862 0654 BDE0     	 b .L11
 863              	.L15:
 864              	.LBB8:
 203:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 204:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (amp_max/h_grid_lines*(double)i);
 865              	 .loc 1 204 0
 866 0656 D7E92801 	 ldrd r0,[r7,#160]
 867 065a D7E92C23 	 ldrd r2,[r7,#176]
 868 065e FFF7FEFF 	 bl __aeabi_ddiv
 869 0662 0246     	 mov r2,r0
 870 0664 0B46     	 mov r3,r1
 871 0666 1446     	 mov r4,r2
 872 0668 1D46     	 mov r5,r3
 873 066a 386F     	 ldr r0,[r7,#112]
 874 066c FFF7FEFF 	 bl __aeabi_i2d
 875 0670 0246     	 mov r2,r0
 876 0672 0B46     	 mov r3,r1
 877 0674 2046     	 mov r0,r4
 878 0676 2946     	 mov r1,r5
 879 0678 FFF7FEFF 	 bl __aeabi_dmul
 880 067c 0246     	 mov r2,r0
 881 067e 0B46     	 mov r3,r1
 882 0680 C7E91023 	 strd r2,[r7,#64]
 205:../Libraries/FT800-FT813-5.x/tft.c **** 
 206:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 207:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 883              	 .loc 1 207 0
 884 0684 D7E91001 	 ldrd r0,[r7,#64]
 885 0688 FFF7FEFF 	 bl __aeabi_d2uiz
 886 068c 0346     	 mov r3,r0
 887 068e 1846     	 mov r0,r3
 888 0690 FFF7FEFF 	 bl __aeabi_ui2d
 889 0694 0246     	 mov r2,r0
 890 0696 0B46     	 mov r3,r1
 891 0698 D7E91001 	 ldrd r0,[r7,#64]
 892 069c FFF7FEFF 	 bl __aeabi_dsub
 893 06a0 0246     	 mov r2,r0
 894 06a2 0B46     	 mov r3,r1
 895 06a4 1046     	 mov r0,r2
 896 06a6 1946     	 mov r1,r3
 897 06a8 4FF00002 	 mov r2,#0
 898 06ac 4FF00003 	 mov r3,#0
 899 06b0 FFF7FEFF 	 bl __aeabi_dcmpeq
 900 06b4 0346     	 mov r3,r0
 901 06b6 002B     	 cmp r3,#0
 902 06b8 44D0     	 beq .L19
 208:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(heig
 903              	 .loc 1 208 0
 904 06ba FB79     	 ldrb r3,[r7,#7]
 905 06bc 9B00     	 lsls r3,r3,#2
 906 06be 07F18002 	 add r2,r7,#128
 907 06c2 1344     	 add r3,r3,r2
 908 06c4 53F8584C 	 ldr r4,[r3,#-88]
 909 06c8 97F86730 	 ldrb r3,[r7,#103]
 910 06cc 9BB2     	 uxth r3,r3
 911 06ce BA88     	 ldrh r2,[r7,#4]
 912 06d0 D31A     	 subs r3,r2,r3
 913 06d2 9BB2     	 uxth r3,r3
 914 06d4 9EB2     	 uxth r6,r3
 915 06d6 7A88     	 ldrh r2,[r7,#2]
 916 06d8 B7F89C30 	 ldrh r3,[r7,#156]
 917 06dc 1344     	 add r3,r3,r2
 918 06de 9AB2     	 uxth r2,r3
 919 06e0 B7F89830 	 ldrh r3,[r7,#152]
 920 06e4 1344     	 add r3,r3,r2
 921 06e6 9DB2     	 uxth r5,r3
 922 06e8 386F     	 ldr r0,[r7,#112]
 923 06ea FFF7FEFF 	 bl __aeabi_i2d
 924 06ee 0246     	 mov r2,r0
 925 06f0 0B46     	 mov r3,r1
 926 06f2 1046     	 mov r0,r2
 927 06f4 1946     	 mov r1,r3
 928 06f6 D7E91423 	 ldrd r2,[r7,#80]
 929 06fa FFF7FEFF 	 bl __aeabi_dmul
 930 06fe 0246     	 mov r2,r0
 931 0700 0B46     	 mov r3,r1
 932 0702 1046     	 mov r0,r2
 933 0704 1946     	 mov r1,r3
 934 0706 FFF7FEFF 	 bl __aeabi_d2uiz
 935 070a 0346     	 mov r3,r0
 936 070c 9BB2     	 uxth r3,r3
 937 070e EB1A     	 subs r3,r5,r3
 938 0710 9AB2     	 uxth r2,r3
 939 0712 97F86630 	 ldrb r3,[r7,#102]
 940 0716 9BB2     	 uxth r3,r3
 941 0718 1344     	 add r3,r3,r2
 942 071a 9BB2     	 uxth r3,r3
 943 071c 9DB2     	 uxth r5,r3
 944 071e D7E91001 	 ldrd r0,[r7,#64]
 945 0722 FFF7FEFF 	 bl __aeabi_d2iz
 946 0726 0146     	 mov r1,r0
 947 0728 32B2     	 sxth r2,r6
 948 072a 2BB2     	 sxth r3,r5
 949 072c 0091     	 str r1,[sp]
 950 072e 1046     	 mov r0,r2
 951 0730 1946     	 mov r1,r3
 952 0732 1422     	 movs r2,#20
 953 0734 0023     	 movs r3,#0
 954 0736 A047     	 blx r4
 955 0738 48E0     	 b .L14
 956              	.L23:
 957 073a 00BF     	 .align 2
 958              	.L22:
 959 073c 0B1E3B04 	 .word 70983179
 960 0740 08000000 	 .word .LC5
 961              	.L19:
 962              	.LBB9:
 209:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 210:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 211:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 212:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 963              	 .loc 1 212 0
 964 0744 07F10803 	 add r3,r7,#8
 965 0748 1846     	 mov r0,r3
 966 074a 9C49     	 ldr r1,.L24
 967 074c D7E91023 	 ldrd r2,[r7,#64]
 968 0750 FFF7FEFF 	 bl sprintf
 213:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(height
 969              	 .loc 1 213 0
 970 0754 FB79     	 ldrb r3,[r7,#7]
 971 0756 9B00     	 lsls r3,r3,#2
 972 0758 07F18002 	 add r2,r7,#128
 973 075c 1344     	 add r3,r3,r2
 974 075e 53F8504C 	 ldr r4,[r3,#-80]
 975 0762 97F86730 	 ldrb r3,[r7,#103]
 976 0766 9BB2     	 uxth r3,r3
 977 0768 BA88     	 ldrh r2,[r7,#4]
 978 076a D31A     	 subs r3,r2,r3
 979 076c 9BB2     	 uxth r3,r3
 980 076e 9EB2     	 uxth r6,r3
 981 0770 7A88     	 ldrh r2,[r7,#2]
 982 0772 B7F89C30 	 ldrh r3,[r7,#156]
 983 0776 1344     	 add r3,r3,r2
 984 0778 9AB2     	 uxth r2,r3
 985 077a B7F89830 	 ldrh r3,[r7,#152]
 986 077e 1344     	 add r3,r3,r2
 987 0780 9DB2     	 uxth r5,r3
 988 0782 386F     	 ldr r0,[r7,#112]
 989 0784 FFF7FEFF 	 bl __aeabi_i2d
 990 0788 0246     	 mov r2,r0
 991 078a 0B46     	 mov r3,r1
 992 078c 1046     	 mov r0,r2
 993 078e 1946     	 mov r1,r3
 994 0790 D7E91423 	 ldrd r2,[r7,#80]
 995 0794 FFF7FEFF 	 bl __aeabi_dmul
 996 0798 0246     	 mov r2,r0
 997 079a 0B46     	 mov r3,r1
 998 079c 1046     	 mov r0,r2
 999 079e 1946     	 mov r1,r3
 1000 07a0 FFF7FEFF 	 bl __aeabi_d2uiz
 1001 07a4 0346     	 mov r3,r0
 1002 07a6 9BB2     	 uxth r3,r3
 1003 07a8 EB1A     	 subs r3,r5,r3
 1004 07aa 9AB2     	 uxth r2,r3
 1005 07ac 97F86630 	 ldrb r3,[r7,#102]
 1006 07b0 9BB2     	 uxth r3,r3
 1007 07b2 1344     	 add r3,r3,r2
 1008 07b4 9BB2     	 uxth r3,r3
 1009 07b6 9BB2     	 uxth r3,r3
 1010 07b8 31B2     	 sxth r1,r6
 1011 07ba 1AB2     	 sxth r2,r3
 1012 07bc 07F10803 	 add r3,r7,#8
 1013 07c0 0093     	 str r3,[sp]
 1014 07c2 0846     	 mov r0,r1
 1015 07c4 1146     	 mov r1,r2
 1016 07c6 1422     	 movs r2,#20
 1017 07c8 0023     	 movs r3,#0
 1018 07ca A047     	 blx r4
 1019              	.L14:
 1020              	.LBE9:
 1021              	.LBE8:
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1022              	 .loc 1 202 0 discriminator 2
 1023 07cc 3B6F     	 ldr r3,[r7,#112]
 1024 07ce 0133     	 adds r3,r3,#1
 1025 07d0 3B67     	 str r3,[r7,#112]
 1026              	.L11:
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1027              	 .loc 1 202 0 is_stmt 0 discriminator 1
 1028 07d2 D7E92C01 	 ldrd r0,[r7,#176]
 1029 07d6 FFF7FEFF 	 bl floor
 1030 07da 0246     	 mov r2,r0
 1031 07dc 0B46     	 mov r3,r1
 1032 07de 1046     	 mov r0,r2
 1033 07e0 1946     	 mov r1,r3
 1034 07e2 FFF7FEFF 	 bl __aeabi_d2iz
 1035 07e6 0246     	 mov r2,r0
 1036 07e8 3B6F     	 ldr r3,[r7,#112]
 1037 07ea 9A42     	 cmp r2,r3
 1038 07ec BFF633AF 	 bge .L15
 1039              	.LBE7:
 214:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 215:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 216:../Libraries/FT800-FT813-5.x/tft.c **** 
 217:../Libraries/FT800-FT813-5.x/tft.c **** 	/// ARROWS on axes
 218:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 219:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom vertical arrow (Amplitude)
 220:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1040              	 .loc 1 220 0 is_stmt 1
 1041 07f0 FB79     	 ldrb r3,[r7,#7]
 1042 07f2 9B00     	 lsls r3,r3,#2
 1043 07f4 07F18002 	 add r2,r7,#128
 1044 07f8 1344     	 add r3,r3,r2
 1045 07fa 53F8483C 	 ldr r3,[r3,#-72]
 1046 07fe 7048     	 ldr r0,.L24+4
 1047 0800 9847     	 blx r3
 221:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + arrow_offset, y + arrow_offset ));
 1048              	 .loc 1 221 0
 1049 0802 FB79     	 ldrb r3,[r7,#7]
 1050 0804 9B00     	 lsls r3,r3,#2
 1051 0806 07F18002 	 add r2,r7,#128
 1052 080a 1344     	 add r3,r3,r2
 1053 080c 53F8483C 	 ldr r3,[r3,#-72]
 1054 0810 B988     	 ldrh r1,[r7,#4]
 1055 0812 B7F89C20 	 ldrh r2,[r7,#156]
 1056 0816 1144     	 add r1,r1,r2
 1057 0818 97F86F20 	 ldrb r2,[r7,#111]
 1058 081c 0A44     	 add r2,r2,r1
 1059 081e C2F30E02 	 ubfx r2,r2,#0,#15
 1060 0822 D103     	 lsls r1,r2,#15
 1061 0824 7888     	 ldrh r0,[r7,#2]
 1062 0826 97F86F20 	 ldrb r2,[r7,#111]
 1063 082a 0244     	 add r2,r2,r0
 1064 082c C2F30E02 	 ubfx r2,r2,#0,#15
 1065 0830 0A43     	 orrs r2,r2,r1
 1066 0832 42F08042 	 orr r2,r2,#1073741824
 1067 0836 1046     	 mov r0,r2
 1068 0838 9847     	 blx r3
 222:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding               , y                ));
 1069              	 .loc 1 222 0
 1070 083a FB79     	 ldrb r3,[r7,#7]
 1071 083c 9B00     	 lsls r3,r3,#2
 1072 083e 07F18002 	 add r2,r7,#128
 1073 0842 1344     	 add r3,r3,r2
 1074 0844 53F8483C 	 ldr r3,[r3,#-72]
 1075 0848 B988     	 ldrh r1,[r7,#4]
 1076 084a B7F89C20 	 ldrh r2,[r7,#156]
 1077 084e 0A44     	 add r2,r2,r1
 1078 0850 C2F30E02 	 ubfx r2,r2,#0,#15
 1079 0854 D103     	 lsls r1,r2,#15
 1080 0856 7A88     	 ldrh r2,[r7,#2]
 1081 0858 C2F30E02 	 ubfx r2,r2,#0,#15
 1082 085c 0A43     	 orrs r2,r2,r1
 1083 085e 42F08042 	 orr r2,r2,#1073741824
 1084 0862 1046     	 mov r0,r2
 1085 0864 9847     	 blx r3
 223:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding - arrow_offset, y + arrow_offset ));
 1086              	 .loc 1 223 0
 1087 0866 FB79     	 ldrb r3,[r7,#7]
 1088 0868 9B00     	 lsls r3,r3,#2
 1089 086a 07F18002 	 add r2,r7,#128
 1090 086e 1344     	 add r3,r3,r2
 1091 0870 53F8483C 	 ldr r3,[r3,#-72]
 1092 0874 B988     	 ldrh r1,[r7,#4]
 1093 0876 B7F89C20 	 ldrh r2,[r7,#156]
 1094 087a 1144     	 add r1,r1,r2
 1095 087c 97F86F20 	 ldrb r2,[r7,#111]
 1096 0880 8A1A     	 subs r2,r1,r2
 1097 0882 C2F30E02 	 ubfx r2,r2,#0,#15
 1098 0886 D103     	 lsls r1,r2,#15
 1099 0888 7888     	 ldrh r0,[r7,#2]
 1100 088a 97F86F20 	 ldrb r2,[r7,#111]
 1101 088e 0244     	 add r2,r2,r0
 1102 0890 C2F30E02 	 ubfx r2,r2,#0,#15
 1103 0894 0A43     	 orrs r2,r2,r1
 1104 0896 42F08042 	 orr r2,r2,#1073741824
 1105 089a 1046     	 mov r0,r2
 1106 089c 9847     	 blx r3
 224:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1107              	 .loc 1 224 0
 1108 089e FB79     	 ldrb r3,[r7,#7]
 1109 08a0 9B00     	 lsls r3,r3,#2
 1110 08a2 07F18002 	 add r2,r7,#128
 1111 08a6 1344     	 add r3,r3,r2
 1112 08a8 53F8483C 	 ldr r3,[r3,#-72]
 1113 08ac 4FF00450 	 mov r0,#553648128
 1114 08b0 9847     	 blx r3
 225:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal arrow (Time)
 226:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1115              	 .loc 1 226 0
 1116 08b2 FB79     	 ldrb r3,[r7,#7]
 1117 08b4 9B00     	 lsls r3,r3,#2
 1118 08b6 07F18002 	 add r2,r7,#128
 1119 08ba 1344     	 add r3,r3,r2
 1120 08bc 53F8483C 	 ldr r3,[r3,#-72]
 1121 08c0 3F48     	 ldr r0,.L24+4
 1122 08c2 9847     	 blx r3
 227:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1123              	 .loc 1 227 0
 1124 08c4 FB79     	 ldrb r3,[r7,#7]
 1125 08c6 9B00     	 lsls r3,r3,#2
 1126 08c8 07F18002 	 add r2,r7,#128
 1127 08cc 1344     	 add r3,r3,r2
 1128 08ce 53F8483C 	 ldr r3,[r3,#-72]
 1129 08d2 B988     	 ldrh r1,[r7,#4]
 1130 08d4 B7F89C20 	 ldrh r2,[r7,#156]
 1131 08d8 1144     	 add r1,r1,r2
 1132 08da 3A88     	 ldrh r2,[r7]
 1133 08dc 1144     	 add r1,r1,r2
 1134 08de B7F89C20 	 ldrh r2,[r7,#156]
 1135 08e2 1144     	 add r1,r1,r2
 1136 08e4 97F86F20 	 ldrb r2,[r7,#111]
 1137 08e8 8A1A     	 subs r2,r1,r2
 1138 08ea C2F30E02 	 ubfx r2,r2,#0,#15
 1139 08ee D103     	 lsls r1,r2,#15
 1140 08f0 7888     	 ldrh r0,[r7,#2]
 1141 08f2 B7F89C20 	 ldrh r2,[r7,#156]
 1142 08f6 1044     	 add r0,r0,r2
 1143 08f8 B7F89820 	 ldrh r2,[r7,#152]
 1144 08fc 1044     	 add r0,r0,r2
 1145 08fe 97F86F20 	 ldrb r2,[r7,#111]
 1146 0902 0244     	 add r2,r2,r0
 1147 0904 C2F30E02 	 ubfx r2,r2,#0,#15
 1148 0908 0A43     	 orrs r2,r2,r1
 1149 090a 42F08042 	 orr r2,r2,#1073741824
 1150 090e 1046     	 mov r0,r2
 1151 0910 9847     	 blx r3
 228:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding               , y + padding 
 1152              	 .loc 1 228 0
 1153 0912 FB79     	 ldrb r3,[r7,#7]
 1154 0914 9B00     	 lsls r3,r3,#2
 1155 0916 07F18002 	 add r2,r7,#128
 1156 091a 1344     	 add r3,r3,r2
 1157 091c 53F8483C 	 ldr r3,[r3,#-72]
 1158 0920 B988     	 ldrh r1,[r7,#4]
 1159 0922 B7F89C20 	 ldrh r2,[r7,#156]
 1160 0926 1144     	 add r1,r1,r2
 1161 0928 3A88     	 ldrh r2,[r7]
 1162 092a 1144     	 add r1,r1,r2
 1163 092c B7F89C20 	 ldrh r2,[r7,#156]
 1164 0930 0A44     	 add r2,r2,r1
 1165 0932 C2F30E02 	 ubfx r2,r2,#0,#15
 1166 0936 D103     	 lsls r1,r2,#15
 1167 0938 7888     	 ldrh r0,[r7,#2]
 1168 093a B7F89C20 	 ldrh r2,[r7,#156]
 1169 093e 1044     	 add r0,r0,r2
 1170 0940 B7F89820 	 ldrh r2,[r7,#152]
 1171 0944 0244     	 add r2,r2,r0
 1172 0946 C2F30E02 	 ubfx r2,r2,#0,#15
 1173 094a 0A43     	 orrs r2,r2,r1
 1174 094c 42F08042 	 orr r2,r2,#1073741824
 1175 0950 1046     	 mov r0,r2
 1176 0952 9847     	 blx r3
 229:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1177              	 .loc 1 229 0
 1178 0954 FB79     	 ldrb r3,[r7,#7]
 1179 0956 9B00     	 lsls r3,r3,#2
 1180 0958 07F18002 	 add r2,r7,#128
 1181 095c 1344     	 add r3,r3,r2
 1182 095e 53F8483C 	 ldr r3,[r3,#-72]
 1183 0962 B988     	 ldrh r1,[r7,#4]
 1184 0964 B7F89C20 	 ldrh r2,[r7,#156]
 1185 0968 1144     	 add r1,r1,r2
 1186 096a 3A88     	 ldrh r2,[r7]
 1187 096c 1144     	 add r1,r1,r2
 1188 096e B7F89C20 	 ldrh r2,[r7,#156]
 1189 0972 1144     	 add r1,r1,r2
 1190 0974 97F86F20 	 ldrb r2,[r7,#111]
 1191 0978 8A1A     	 subs r2,r1,r2
 1192 097a C2F30E02 	 ubfx r2,r2,#0,#15
 1193 097e D103     	 lsls r1,r2,#15
 1194 0980 7888     	 ldrh r0,[r7,#2]
 1195 0982 B7F89C20 	 ldrh r2,[r7,#156]
 1196 0986 1044     	 add r0,r0,r2
 1197 0988 B7F89820 	 ldrh r2,[r7,#152]
 1198 098c 1044     	 add r0,r0,r2
 1199 098e 97F86F20 	 ldrb r2,[r7,#111]
 1200 0992 821A     	 subs r2,r0,r2
 1201 0994 C2F30E02 	 ubfx r2,r2,#0,#15
 1202 0998 0A43     	 orrs r2,r2,r1
 1203 099a 42F08042 	 orr r2,r2,#1073741824
 1204 099e 1046     	 mov r0,r2
 1205 09a0 9847     	 blx r3
 230:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1206              	 .loc 1 230 0
 1207 09a2 FB79     	 ldrb r3,[r7,#7]
 1208 09a4 9B00     	 lsls r3,r3,#2
 1209 09a6 07F18002 	 add r2,r7,#128
 1210 09aa 1344     	 add r3,r3,r2
 1211 09ac 53F8483C 	 ldr r3,[r3,#-72]
 1212 09b0 4FF00450 	 mov r0,#553648128
 1213 09b4 9847     	 blx r3
 231:../Libraries/FT800-FT813-5.x/tft.c **** 
 232:../Libraries/FT800-FT813-5.x/tft.c **** }
 1214              	 .loc 1 232 0
 1215 09b6 8437     	 adds r7,r7,#132
 1216              	.LCFI3:
 1217              	 .cfi_def_cfa_offset 20
 1218 09b8 BD46     	 mov sp,r7
 1219              	.LCFI4:
 1220              	 .cfi_def_cfa_register 13
 1221              	 
 1222 09ba F0BD     	 pop {r4,r5,r6,r7,pc}
 1223              	.L25:
 1224              	 .align 2
 1225              	.L24:
 1226 09bc 08000000 	 .word .LC5
 1227 09c0 0400001F 	 .word 520093700
 1228              	 .cfi_endproc
 1229              	.LFE446:
 1231              	 .section .text.TFT_GraphData,"ax",%progbits
 1232              	 .align 2
 1233              	 .global TFT_GraphData
 1234              	 .thumb
 1235              	 .thumb_func
 1237              	TFT_GraphData:
 1238              	.LFB447:
 233:../Libraries/FT800-FT813-5.x/tft.c **** 
 234:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphData(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t padding, doubl
 1239              	 .loc 1 234 0
 1240              	 .cfi_startproc
 1241              	 
 1242              	 
 1243 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 1244              	.LCFI5:
 1245              	 .cfi_def_cfa_offset 24
 1246              	 .cfi_offset 4,-24
 1247              	 .cfi_offset 5,-20
 1248              	 .cfi_offset 7,-16
 1249              	 .cfi_offset 8,-12
 1250              	 .cfi_offset 9,-8
 1251              	 .cfi_offset 14,-4
 1252 0004 84B0     	 sub sp,sp,#16
 1253              	.LCFI6:
 1254              	 .cfi_def_cfa_offset 40
 1255 0006 00AF     	 add r7,sp,#0
 1256              	.LCFI7:
 1257              	 .cfi_def_cfa_register 7
 1258 0008 0446     	 mov r4,r0
 1259 000a 0846     	 mov r0,r1
 1260 000c 1146     	 mov r1,r2
 1261 000e 1A46     	 mov r2,r3
 1262 0010 2346     	 mov r3,r4
 1263 0012 FB80     	 strh r3,[r7,#6]
 1264 0014 0346     	 mov r3,r0
 1265 0016 BB80     	 strh r3,[r7,#4]
 1266 0018 0B46     	 mov r3,r1
 1267 001a 7B80     	 strh r3,[r7,#2]
 1268 001c 1346     	 mov r3,r2
 1269 001e 3B80     	 strh r3,[r7]
 235:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the dynamic parts of an Graph to the TFT (data and markers). Used at recurring display l
 236:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 237:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 238:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 239:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 240:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 241:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding	...	clearance from the outer corners (x,y) to the axes
 242:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y_max   ... maximum expected value of input (e.g. for 12bit ADC 4095), will represent 100%
 243:../Libraries/FT800-FT813-5.x/tft.c **** 	///  SBuffer[] 		...	Array of data values
 244:../Libraries/FT800-FT813-5.x/tft.c **** 	///  size	 		... size of array of data values
 245:../Libraries/FT800-FT813-5.x/tft.c **** 	///  *SBuffer_curidx ... current position (index of most recent value)
 246:../Libraries/FT800-FT813-5.x/tft.c **** 	///  graphmode 		... 0 = frame-mode, 1 = roll-mode
 247:../Libraries/FT800-FT813-5.x/tft.c **** 	///  datacolor 		... 24bit color (as 32 bit integer with leading 0's) used for the dataline
 248:../Libraries/FT800-FT813-5.x/tft.c **** 	///  markercolor		... 24bit color (as 32 bit integer with leading 0's) used for the current positi
 249:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: No predefined graph settings are used direct (#define ...)!
 250:../Libraries/FT800-FT813-5.x/tft.c **** 
 251:../Libraries/FT800-FT813-5.x/tft.c **** 
 252:../Libraries/FT800-FT813-5.x/tft.c **** 
 253:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display current DATA as line strip in frame or roll mode
 254:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | datacolor);
 1270              	 .loc 1 254 0
 1271 0020 BB6C     	 ldr r3,[r7,#72]
 1272 0022 43F08063 	 orr r3,r3,#67108864
 1273 0026 1846     	 mov r0,r3
 1274 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 255:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1275              	 .loc 1 255 0
 1276 002c 7748     	 ldr r0,.L35
 1277 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 256:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph frame-mode
 257:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1278              	 .loc 1 257 0
 1279 0032 97F84430 	 ldrb r3,[r7,#68]
 1280 0036 002B     	 cmp r3,#0
 1281 0038 46D1     	 bne .L27
 1282              	.LBB10:
 258:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print values in the order they are stored
 259:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int x_cur = 0; x_cur < size; ++x_cur) {
 1283              	 .loc 1 259 0
 1284 003a 0023     	 movs r3,#0
 1285 003c FB60     	 str r3,[r7,#12]
 1286 003e 3EE0     	 b .L28
 1287              	.L29:
 260:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1288              	 .loc 1 260 0 discriminator 3
 1289 0040 FA88     	 ldrh r2,[r7,#6]
 1290 0042 3B8D     	 ldrh r3,[r7,#40]
 1291 0044 1A44     	 add r2,r2,r3
 1292 0046 FB68     	 ldr r3,[r7,#12]
 1293 0048 1344     	 add r3,r3,r2
 1294 004a C3F30E03 	 ubfx r3,r3,#0,#15
 1295 004e DC03     	 lsls r4,r3,#15
 1296 0050 BA88     	 ldrh r2,[r7,#4]
 1297 0052 3B8D     	 ldrh r3,[r7,#40]
 1298 0054 1A44     	 add r2,r2,r3
 1299 0056 3B88     	 ldrh r3,[r7]
 1300 0058 D518     	 adds r5,r2,r3
 1301 005a FB68     	 ldr r3,[r7,#12]
 1302 005c 5B00     	 lsls r3,r3,#1
 1303 005e BA6B     	 ldr r2,[r7,#56]
 1304 0060 1344     	 add r3,r3,r2
 1305 0062 1B88     	 ldrh r3,[r3]
 1306 0064 1846     	 mov r0,r3
 1307 0066 FFF7FEFF 	 bl __aeabi_ui2d
 1308 006a 0246     	 mov r2,r0
 1309 006c 0B46     	 mov r3,r1
 1310 006e 1046     	 mov r0,r2
 1311 0070 1946     	 mov r1,r3
 1312 0072 D7E90C23 	 ldrd r2,[r7,#48]
 1313 0076 FFF7FEFF 	 bl __aeabi_ddiv
 1314 007a 0246     	 mov r2,r0
 1315 007c 0B46     	 mov r3,r1
 1316 007e 9046     	 mov r8,r2
 1317 0080 9946     	 mov r9,r3
 1318 0082 3B88     	 ldrh r3,[r7]
 1319 0084 1846     	 mov r0,r3
 1320 0086 FFF7FEFF 	 bl __aeabi_ui2d
 1321 008a 0246     	 mov r2,r0
 1322 008c 0B46     	 mov r3,r1
 1323 008e 4046     	 mov r0,r8
 1324 0090 4946     	 mov r1,r9
 1325 0092 FFF7FEFF 	 bl __aeabi_dmul
 1326 0096 0246     	 mov r2,r0
 1327 0098 0B46     	 mov r3,r1
 1328 009a 1046     	 mov r0,r2
 1329 009c 1946     	 mov r1,r3
 1330 009e FFF7FEFF 	 bl __aeabi_d2uiz
 1331 00a2 0346     	 mov r3,r0
 1332 00a4 9BB2     	 uxth r3,r3
 1333 00a6 EB1A     	 subs r3,r5,r3
 1334 00a8 C3F30E03 	 ubfx r3,r3,#0,#15
 1335 00ac 2343     	 orrs r3,r3,r4
 1336 00ae 43F08043 	 orr r3,r3,#1073741824
 1337 00b2 1846     	 mov r0,r3
 1338 00b4 FFF7FEFF 	 bl EVE_cmd_dl_burst
 259:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1339              	 .loc 1 259 0 discriminator 3
 1340 00b8 FB68     	 ldr r3,[r7,#12]
 1341 00ba 0133     	 adds r3,r3,#1
 1342 00bc FB60     	 str r3,[r7,#12]
 1343              	.L28:
 259:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1344              	 .loc 1 259 0 is_stmt 0 discriminator 1
 1345 00be BA8F     	 ldrh r2,[r7,#60]
 1346 00c0 FB68     	 ldr r3,[r7,#12]
 1347 00c2 9A42     	 cmp r2,r3
 1348 00c4 BCDC     	 bgt .L29
 1349              	.LBE10:
 1350 00c6 5BE0     	 b .L30
 1351              	.L27:
 1352              	.LBB11:
 261:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 262:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 263:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph roll-mode
 264:../Libraries/FT800-FT813-5.x/tft.c **** 	else {
 265:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print newest value always at the rightmost corner with all older values to the right
 266:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Display    x position at rightmost corner and decrement till 0 (last run will make it
 267:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Arrayindex i at current index and decrement every loop. If i goes below 0, reset to m
 268:../Libraries/FT800-FT813-5.x/tft.c **** 		//    value before current is hit.
 269:../Libraries/FT800-FT813-5.x/tft.c **** 
 270:../Libraries/FT800-FT813-5.x/tft.c **** 		int16_t i = *SBuffer_curidx;
 1353              	 .loc 1 270 0 is_stmt 1
 1354 00c8 3B6C     	 ldr r3,[r7,#64]
 1355 00ca 1B88     	 ldrh r3,[r3]
 1356 00cc 7B81     	 strh r3,[r7,#10]
 1357              	.LBB12:
 271:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int16_t x_cur = size-1; x_cur >= 0; x_cur--) {
 1358              	 .loc 1 271 0
 1359 00ce BB8F     	 ldrh r3,[r7,#60]
 1360 00d0 013B     	 subs r3,r3,#1
 1361 00d2 9BB2     	 uxth r3,r3
 1362 00d4 3B81     	 strh r3,[r7,#8]
 1363 00d6 4FE0     	 b .L31
 1364              	.L33:
 272:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 273:../Libraries/FT800-FT813-5.x/tft.c **** 			if(i < 0){i = size-1;}
 1365              	 .loc 1 273 0
 1366 00d8 B7F90A30 	 ldrsh r3,[r7,#10]
 1367 00dc 002B     	 cmp r3,#0
 1368 00de 03DA     	 bge .L32
 1369              	 .loc 1 273 0 is_stmt 0 discriminator 1
 1370 00e0 BB8F     	 ldrh r3,[r7,#60]
 1371 00e2 013B     	 subs r3,r3,#1
 1372 00e4 9BB2     	 uxth r3,r3
 1373 00e6 7B81     	 strh r3,[r7,#10]
 1374              	.L32:
 274:../Libraries/FT800-FT813-5.x/tft.c **** 
 275:../Libraries/FT800-FT813-5.x/tft.c **** 			// Send next point for EVE_LINE_STRIP at current x+padding and normalized buffer value
 276:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1375              	 .loc 1 276 0 is_stmt 1 discriminator 2
 1376 00e8 FA88     	 ldrh r2,[r7,#6]
 1377 00ea 3B8D     	 ldrh r3,[r7,#40]
 1378 00ec 1A44     	 add r2,r2,r3
 1379 00ee B7F90830 	 ldrsh r3,[r7,#8]
 1380 00f2 1344     	 add r3,r3,r2
 1381 00f4 C3F30E03 	 ubfx r3,r3,#0,#15
 1382 00f8 DC03     	 lsls r4,r3,#15
 1383 00fa BA88     	 ldrh r2,[r7,#4]
 1384 00fc 3B8D     	 ldrh r3,[r7,#40]
 1385 00fe 1A44     	 add r2,r2,r3
 1386 0100 3B88     	 ldrh r3,[r7]
 1387 0102 D518     	 adds r5,r2,r3
 1388 0104 B7F90A30 	 ldrsh r3,[r7,#10]
 1389 0108 5B00     	 lsls r3,r3,#1
 1390 010a BA6B     	 ldr r2,[r7,#56]
 1391 010c 1344     	 add r3,r3,r2
 1392 010e 1B88     	 ldrh r3,[r3]
 1393 0110 1846     	 mov r0,r3
 1394 0112 FFF7FEFF 	 bl __aeabi_ui2d
 1395 0116 0246     	 mov r2,r0
 1396 0118 0B46     	 mov r3,r1
 1397 011a 1046     	 mov r0,r2
 1398 011c 1946     	 mov r1,r3
 1399 011e D7E90C23 	 ldrd r2,[r7,#48]
 1400 0122 FFF7FEFF 	 bl __aeabi_ddiv
 1401 0126 0246     	 mov r2,r0
 1402 0128 0B46     	 mov r3,r1
 1403 012a 9046     	 mov r8,r2
 1404 012c 9946     	 mov r9,r3
 1405 012e 3B88     	 ldrh r3,[r7]
 1406 0130 1846     	 mov r0,r3
 1407 0132 FFF7FEFF 	 bl __aeabi_ui2d
 1408 0136 0246     	 mov r2,r0
 1409 0138 0B46     	 mov r3,r1
 1410 013a 4046     	 mov r0,r8
 1411 013c 4946     	 mov r1,r9
 1412 013e FFF7FEFF 	 bl __aeabi_dmul
 1413 0142 0246     	 mov r2,r0
 1414 0144 0B46     	 mov r3,r1
 1415 0146 1046     	 mov r0,r2
 1416 0148 1946     	 mov r1,r3
 1417 014a FFF7FEFF 	 bl __aeabi_d2uiz
 1418 014e 0346     	 mov r3,r0
 1419 0150 9BB2     	 uxth r3,r3
 1420 0152 EB1A     	 subs r3,r5,r3
 1421 0154 C3F30E03 	 ubfx r3,r3,#0,#15
 1422 0158 2343     	 orrs r3,r3,r4
 1423 015a 43F08043 	 orr r3,r3,#1073741824
 1424 015e 1846     	 mov r0,r3
 1425 0160 FFF7FEFF 	 bl EVE_cmd_dl_burst
 277:../Libraries/FT800-FT813-5.x/tft.c **** 
 278:../Libraries/FT800-FT813-5.x/tft.c **** 			// decrement index
 279:../Libraries/FT800-FT813-5.x/tft.c **** 			i--;
 1426              	 .loc 1 279 0 discriminator 2
 1427 0164 7B89     	 ldrh r3,[r7,#10]
 1428 0166 9BB2     	 uxth r3,r3
 1429 0168 013B     	 subs r3,r3,#1
 1430 016a 9BB2     	 uxth r3,r3
 1431 016c 7B81     	 strh r3,[r7,#10]
 271:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1432              	 .loc 1 271 0 discriminator 2
 1433 016e 3B89     	 ldrh r3,[r7,#8]
 1434 0170 9BB2     	 uxth r3,r3
 1435 0172 013B     	 subs r3,r3,#1
 1436 0174 9BB2     	 uxth r3,r3
 1437 0176 3B81     	 strh r3,[r7,#8]
 1438              	.L31:
 271:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1439              	 .loc 1 271 0 is_stmt 0 discriminator 1
 1440 0178 B7F90830 	 ldrsh r3,[r7,#8]
 1441 017c 002B     	 cmp r3,#0
 1442 017e ABDA     	 bge .L33
 1443              	.L30:
 1444              	.LBE12:
 1445              	.LBE11:
 280:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 281:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 282:../Libraries/FT800-FT813-5.x/tft.c **** 	// End EVE_LINE_STRIP and therefore DATA
 283:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_END);
 1446              	 .loc 1 283 0 is_stmt 1
 1447 0180 4FF00450 	 mov r0,#553648128
 1448 0184 FFF7FEFF 	 bl EVE_cmd_dl_burst
 284:../Libraries/FT800-FT813-5.x/tft.c **** 
 285:../Libraries/FT800-FT813-5.x/tft.c **** 
 286:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw current POSITION MARKER in frame mode
 287:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1449              	 .loc 1 287 0
 1450 0188 97F84430 	 ldrb r3,[r7,#68]
 1451 018c 002B     	 cmp r3,#0
 1452 018e 38D1     	 bne .L26
 288:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_COLOR_RGB | markercolor);
 1453              	 .loc 1 288 0
 1454 0190 FB6C     	 ldr r3,[r7,#76]
 1455 0192 43F08063 	 orr r3,r3,#67108864
 1456 0196 1846     	 mov r0,r3
 1457 0198 FFF7FEFF 	 bl EVE_cmd_dl_burst
 289:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1458              	 .loc 1 289 0
 1459 019c 1B48     	 ldr r0,.L35
 1460 019e FFF7FEFF 	 bl EVE_cmd_dl_burst
 290:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding - 5 ));
 1461              	 .loc 1 290 0
 1462 01a2 FA88     	 ldrh r2,[r7,#6]
 1463 01a4 3B8D     	 ldrh r3,[r7,#40]
 1464 01a6 1344     	 add r3,r3,r2
 1465 01a8 3A6C     	 ldr r2,[r7,#64]
 1466 01aa 1288     	 ldrh r2,[r2]
 1467 01ac 1344     	 add r3,r3,r2
 1468 01ae C3F30E03 	 ubfx r3,r3,#0,#15
 1469 01b2 DA03     	 lsls r2,r3,#15
 1470 01b4 B988     	 ldrh r1,[r7,#4]
 1471 01b6 3B8D     	 ldrh r3,[r7,#40]
 1472 01b8 0B44     	 add r3,r3,r1
 1473 01ba 053B     	 subs r3,r3,#5
 1474 01bc C3F30E03 	 ubfx r3,r3,#0,#15
 1475 01c0 1343     	 orrs r3,r3,r2
 1476 01c2 43F08043 	 orr r3,r3,#1073741824
 1477 01c6 1846     	 mov r0,r3
 1478 01c8 FFF7FEFF 	 bl EVE_cmd_dl_burst
 291:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding + height + 5 ));
 1479              	 .loc 1 291 0
 1480 01cc FA88     	 ldrh r2,[r7,#6]
 1481 01ce 3B8D     	 ldrh r3,[r7,#40]
 1482 01d0 1344     	 add r3,r3,r2
 1483 01d2 3A6C     	 ldr r2,[r7,#64]
 1484 01d4 1288     	 ldrh r2,[r2]
 1485 01d6 1344     	 add r3,r3,r2
 1486 01d8 C3F30E03 	 ubfx r3,r3,#0,#15
 1487 01dc DA03     	 lsls r2,r3,#15
 1488 01de B988     	 ldrh r1,[r7,#4]
 1489 01e0 3B8D     	 ldrh r3,[r7,#40]
 1490 01e2 1944     	 add r1,r1,r3
 1491 01e4 3B88     	 ldrh r3,[r7]
 1492 01e6 0B44     	 add r3,r3,r1
 1493 01e8 0533     	 adds r3,r3,#5
 1494 01ea C3F30E03 	 ubfx r3,r3,#0,#15
 1495 01ee 1343     	 orrs r3,r3,r2
 1496 01f0 43F08043 	 orr r3,r3,#1073741824
 1497 01f4 1846     	 mov r0,r3
 1498 01f6 FFF7FEFF 	 bl EVE_cmd_dl_burst
 292:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1499              	 .loc 1 292 0
 1500 01fa 4FF00450 	 mov r0,#553648128
 1501 01fe FFF7FEFF 	 bl EVE_cmd_dl_burst
 1502              	.L26:
 293:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 294:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH END
 295:../Libraries/FT800-FT813-5.x/tft.c **** 
 296:../Libraries/FT800-FT813-5.x/tft.c **** }
 1503              	 .loc 1 296 0
 1504 0202 1037     	 adds r7,r7,#16
 1505              	.LCFI8:
 1506              	 .cfi_def_cfa_offset 24
 1507 0204 BD46     	 mov sp,r7
 1508              	.LCFI9:
 1509              	 .cfi_def_cfa_register 13
 1510              	 
 1511 0206 BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 1512              	.L36:
 1513 020a 00BF     	 .align 2
 1514              	.L35:
 1515 020c 0400001F 	 .word 520093700
 1516              	 .cfi_endproc
 1517              	.LFE447:
 1519              	 .section .text.touch_calibrate,"ax",%progbits
 1520              	 .align 2
 1521              	 .global touch_calibrate
 1522              	 .thumb
 1523              	 .thumb_func
 1525              	touch_calibrate:
 1526              	.LFB448:
 297:../Libraries/FT800-FT813-5.x/tft.c **** 
 298:../Libraries/FT800-FT813-5.x/tft.c **** 
 299:../Libraries/FT800-FT813-5.x/tft.c **** void touch_calibrate(void) {
 1527              	 .loc 1 299 0
 1528              	 .cfi_startproc
 1529              	 
 1530              	 
 1531 0000 80B5     	 push {r7,lr}
 1532              	.LCFI10:
 1533              	 .cfi_def_cfa_offset 8
 1534              	 .cfi_offset 7,-8
 1535              	 .cfi_offset 14,-4
 1536 0002 00AF     	 add r7,sp,#0
 1537              	.LCFI11:
 1538              	 .cfi_def_cfa_register 7
 300:../Libraries/FT800-FT813-5.x/tft.c **** // Sends pre-recorded touch calibration values, depending on the display the code is compiled for. 
 301:../Libraries/FT800-FT813-5.x/tft.c **** 
 302:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF240400C1_030SC)
 303:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x0000ed11);
 304:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00001139);
 305:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff76809);
 306:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00000000);
 307:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00010690);
 308:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xfffadf2e);
 309:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 310:../Libraries/FT800-FT813-5.x/tft.c **** 
 311:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF320240F_035T)
 312:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00005614);
 313:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000009e);
 314:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff43422);
 315:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x0000001d);
 316:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0xffffbda4);
 317:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x00f8f2ef);
 318:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 319:../Libraries/FT800-FT813-5.x/tft.c **** 
 320:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF480128A0_039TC)
 321:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00010485);
 322:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000017f);
 323:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfffb0bd3);
 324:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00000073);
 325:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000e293);
 326:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x00069904);
 327:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 328:../Libraries/FT800-FT813-5.x/tft.c **** 
 329:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF800480E0_050SC)
 330:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000107f9);
 331:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xffffff8c);
 332:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff451ae);
 333:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000000d2);
 334:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000feac);
 335:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xfffcfaaf);
 336:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 337:../Libraries/FT800-FT813-5.x/tft.c **** 
 338:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_PAF90)
 339:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00000159);
 340:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0001019c);
 341:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff93625);
 342:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00010157);
 343:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00000000);
 344:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x0000c101);
 345:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 346:../Libraries/FT800-FT813-5.x/tft.c **** 
 347:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_RiTFT43)
 348:../Libraries/FT800-FT813-5.x/tft.c **** 	// Original library values
 349:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000062cd);
 350:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xfffffe45);
 351:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff45e0a);
 352:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000001a3);
 353:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b33);
 354:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFbb870);
 355:../Libraries/FT800-FT813-5.x/tft.c **** 
 356:../Libraries/FT800-FT813-5.x/tft.c **** 	// Actual values (measured with routine down below) by Rene S. at 20.12.2020 on Display SM-RVT43UL
 357:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000061c4);
 1539              	 .loc 1 357 0
 1540 0004 0E48     	 ldr r0,.L38
 1541 0006 46F2C411 	 movw r1,#25028
 1542 000a FFF7FEFF 	 bl EVE_memWrite32
 358:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000025d);
 1543              	 .loc 1 358 0
 1544 000e 0D48     	 ldr r0,.L38+4
 1545 0010 40F25D21 	 movw r1,#605
 1546 0014 FFF7FEFF 	 bl EVE_memWrite32
 359:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff14ab1);
 1547              	 .loc 1 359 0
 1548 0018 0B48     	 ldr r0,.L38+8
 1549 001a 0C49     	 ldr r1,.L38+12
 1550 001c FFF7FEFF 	 bl EVE_memWrite32
 360:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xffffff91);
 1551              	 .loc 1 360 0
 1552 0020 0B48     	 ldr r0,.L38+16
 1553 0022 6FF06E01 	 mvn r1,#110
 1554 0026 FFF7FEFF 	 bl EVE_memWrite32
 361:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b6b);
 1555              	 .loc 1 361 0
 1556 002a 0A48     	 ldr r0,.L38+20
 1557 002c 45F66B31 	 movw r1,#23403
 1558 0030 FFF7FEFF 	 bl EVE_memWrite32
 362:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFac7ab);
 1559              	 .loc 1 362 0
 1560 0034 0848     	 ldr r0,.L38+24
 1561 0036 0949     	 ldr r1,.L38+28
 1562 0038 FFF7FEFF 	 bl EVE_memWrite32
 363:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 364:../Libraries/FT800-FT813-5.x/tft.c **** 
 365:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_38)
 366:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00007bed);
 367:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000001b0);
 368:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff60aa5);
 369:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00000095);
 370:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0xffffdcda);
 371:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x00829c08);
 372:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 373:../Libraries/FT800-FT813-5.x/tft.c **** 
 374:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_35G) ||  defined (EVE_EVE3_35G)
 375:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000109E4);
 376:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000007A6);
 377:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xFFEC1EBA);
 378:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x0000072C);
 379:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0001096A);
 380:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFF469CF);
 381:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 382:../Libraries/FT800-FT813-5.x/tft.c **** 
 383:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_43G) ||  defined (EVE_EVE3_43G)
 384:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x0000a1ff);
 385:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00000680);
 386:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xffe54cc2);
 387:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xffffff53);
 388:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000912c);
 389:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xfffe628d);
 390:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 391:../Libraries/FT800-FT813-5.x/tft.c **** 
 392:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_50G) || defined (EVE_EVE3_50G)
 393:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000109E4);
 394:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000007A6);
 395:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xFFEC1EBA);
 396:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x0000072C);
 397:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0001096A);
 398:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFF469CF);
 399:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 400:../Libraries/FT800-FT813-5.x/tft.c **** 
 401:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_70G)
 402:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000105BC);
 403:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xFFFFFA8A);
 404:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0x00004670);
 405:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xFFFFFF75);
 406:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00010074);
 407:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFF14C8);
 408:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 409:../Libraries/FT800-FT813-5.x/tft.c **** 
 410:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_NHD_35)
 411:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x0000f78b);
 412:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00000427);
 413:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfffcedf8);
 414:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xfffffba4);
 415:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000f756);
 416:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x0009279e);
 417:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 418:../Libraries/FT800-FT813-5.x/tft.c **** 
 419:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_RVT70)
 420:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000074df);
 421:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000000e6);
 422:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfffd5474);
 423:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000001af);
 424:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00007e79);
 425:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xffe9a63c);
 426:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 427:../Libraries/FT800-FT813-5.x/tft.c **** 
 428:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_FT811CB_HY50HD)
 429:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 66353);
 430:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 712);
 431:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 4293876677);
 432:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 4294966157);
 433:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 67516);
 434:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 418276);
 435:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 436:../Libraries/FT800-FT813-5.x/tft.c **** 
 437:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_ADAM101)
 438:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000101E3);
 439:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00000114);
 440:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xFFF5EEBA);
 441:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xFFFFFF5E);
 442:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00010226);
 443:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x0000C783);
 444:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 445:../Libraries/FT800-FT813-5.x/tft.c **** 
 446:../Libraries/FT800-FT813-5.x/tft.c **** /* activate this if you are using a module for the first time or if you need to re-calibrate it */
 447:../Libraries/FT800-FT813-5.x/tft.c **** /* write down the numbers on the screen and either place them in one of the pre-defined blocks abov
 448:../Libraries/FT800-FT813-5.x/tft.c **** #if 0
 449:../Libraries/FT800-FT813-5.x/tft.c **** 	/* calibrate touch and displays values to screen */
 450:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 451:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 452:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 453:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text((EVE_HSIZE/2), 50, 26, EVE_OPT_CENTER, "Please tap on the dot.");
 454:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_calibrate();
 455:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);
 456:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP);
 457:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 458:../Libraries/FT800-FT813-5.x/tft.c **** 
 459:../Libraries/FT800-FT813-5.x/tft.c **** 	uint32_t touch_a, touch_b, touch_c, touch_d, touch_e, touch_f;
 460:../Libraries/FT800-FT813-5.x/tft.c **** 
 461:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_a = EVE_memRead32(REG_TOUCH_TRANSFORM_A);
 462:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_b = EVE_memRead32(REG_TOUCH_TRANSFORM_B);
 463:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_c = EVE_memRead32(REG_TOUCH_TRANSFORM_C);
 464:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_d = EVE_memRead32(REG_TOUCH_TRANSFORM_D);
 465:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_e = EVE_memRead32(REG_TOUCH_TRANSFORM_E);
 466:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_f = EVE_memRead32(REG_TOUCH_TRANSFORM_F);
 467:../Libraries/FT800-FT813-5.x/tft.c **** 
 468:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 469:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 470:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 471:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0));
 472:../Libraries/FT800-FT813-5.x/tft.c **** 
 473:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 15, 26, 0, "TOUCH_TRANSFORM_A:");
 474:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 30, 26, 0, "TOUCH_TRANSFORM_B:");
 475:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 45, 26, 0, "TOUCH_TRANSFORM_C:");
 476:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 60, 26, 0, "TOUCH_TRANSFORM_D:");
 477:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 75, 26, 0, "TOUCH_TRANSFORM_E:");
 478:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 90, 26, 0, "TOUCH_TRANSFORM_F:");
 479:../Libraries/FT800-FT813-5.x/tft.c **** 
 480:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_setbase(16L);
 481:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 15, 26, EVE_OPT_RIGHTX|8, touch_a);
 482:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 30, 26, EVE_OPT_RIGHTX|8, touch_b);
 483:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 45, 26, EVE_OPT_RIGHTX|8, touch_c);
 484:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 60, 26, EVE_OPT_RIGHTX|8, touch_d);
 485:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 75, 26, EVE_OPT_RIGHTX|8, touch_e);
 486:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 90, 26, EVE_OPT_RIGHTX|8, touch_f);
 487:../Libraries/FT800-FT813-5.x/tft.c **** 
 488:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);	/* instruct the graphics processor to show the list */
 489:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP); /* make this list active */
 490:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 491:../Libraries/FT800-FT813-5.x/tft.c **** 
 492:../Libraries/FT800-FT813-5.x/tft.c **** 	while(1);
 493:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 494:../Libraries/FT800-FT813-5.x/tft.c **** }
 1563              	 .loc 1 494 0
 1564 003c 80BD     	 pop {r7,pc}
 1565              	.L39:
 1566 003e 00BF     	 .align 2
 1567              	.L38:
 1568 0040 50213000 	 .word 3154256
 1569 0044 54213000 	 .word 3154260
 1570 0048 58213000 	 .word 3154264
 1571 004c B14AF1FF 	 .word -963919
 1572 0050 5C213000 	 .word 3154268
 1573 0054 60213000 	 .word 3154272
 1574 0058 64213000 	 .word 3154276
 1575 005c ABC7FAFF 	 .word -342101
 1576              	 .cfi_endproc
 1577              	.LFE448:
 1579              	 .section .text.TFT_display_init_screen,"ax",%progbits
 1580              	 .align 2
 1581              	 .global TFT_display_init_screen
 1582              	 .thumb
 1583              	 .thumb_func
 1585              	TFT_display_init_screen:
 1586              	.LFB449:
 495:../Libraries/FT800-FT813-5.x/tft.c **** 
 496:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_init_screen(void)
 497:../Libraries/FT800-FT813-5.x/tft.c **** {
 1587              	 .loc 1 497 0
 1588              	 .cfi_startproc
 1589              	 
 1590              	 
 1591 0000 80B5     	 push {r7,lr}
 1592              	.LCFI12:
 1593              	 .cfi_def_cfa_offset 8
 1594              	 .cfi_offset 7,-8
 1595              	 .cfi_offset 14,-4
 1596 0002 00AF     	 add r7,sp,#0
 1597              	.LCFI13:
 1598              	 .cfi_def_cfa_register 7
 498:../Libraries/FT800-FT813-5.x/tft.c **** 
 499:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 1599              	 .loc 1 499 0
 1600 0004 1A4B     	 ldr r3,.L42
 1601 0006 1B78     	 ldrb r3,[r3]
 1602 0008 002B     	 cmp r3,#0
 1603 000a 30D0     	 beq .L40
 500:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 501:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_inflate(MEM_LOGO, logo_init, sizeof(logo_init)); /* load logo into gfx-memory and de-comp
 1604              	 .loc 1 501 0
 1605 000c 0020     	 movs r0,#0
 1606 000e 1949     	 ldr r1,.L42+4
 1607 0010 44F60472 	 movw r2,#20228
 1608 0014 FFF7FEFF 	 bl EVE_cmd_inflate
 502:../Libraries/FT800-FT813-5.x/tft.c **** 
 503:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1609              	 .loc 1 503 0
 1610 0018 FFF7FEFF 	 bl EVE_start_cmd_burst
 504:../Libraries/FT800-FT813-5.x/tft.c **** 
 505:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1611              	 .loc 1 505 0
 1612 001c 6FF0FF00 	 mvn r0,#255
 1613 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 506:../Libraries/FT800-FT813-5.x/tft.c **** 		//EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16
 507:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1614              	 .loc 1 507 0
 1615 0024 6FF07D40 	 mvn r0,#-50331648
 1616 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 508:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1617              	 .loc 1 508 0
 1618 002c 1248     	 ldr r0,.L42+8
 1619 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 509:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 1620              	 .loc 1 509 0
 1621 0032 4FF04070 	 mov r0,#50331648
 1622 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 510:../Libraries/FT800-FT813-5.x/tft.c **** 
 511:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_setbitmap_burst(MEM_LOGO, EVE_ARGB1555, 308, 250);
 1623              	 .loc 1 511 0
 1624 003a 0020     	 movs r0,#0
 1625 003c 0021     	 movs r1,#0
 1626 003e 4FF49A72 	 mov r2,#308
 1627 0042 FA23     	 movs r3,#250
 1628 0044 FFF7FEFF 	 bl EVE_cmd_setbitmap_burst
 512:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_BITMAPS);
 1629              	 .loc 1 512 0
 1630 0048 0C48     	 ldr r0,.L42+12
 1631 004a FFF7FEFF 	 bl EVE_cmd_dl_burst
 513:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(86*16, 11*16));  //105*16
 1632              	 .loc 1 513 0
 1633 004e 0C48     	 ldr r0,.L42+16
 1634 0050 FFF7FEFF 	 bl EVE_cmd_dl_burst
 514:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1635              	 .loc 1 514 0
 1636 0054 4FF00450 	 mov r0,#553648128
 1637 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 515:../Libraries/FT800-FT813-5.x/tft.c **** 
 516:../Libraries/FT800-FT813-5.x/tft.c **** 
 517:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1638              	 .loc 1 517 0
 1639 005c 0020     	 movs r0,#0
 1640 005e FFF7FEFF 	 bl EVE_cmd_dl_burst
 518:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1641              	 .loc 1 518 0
 1642 0062 6FF0FE00 	 mvn r0,#254
 1643 0066 FFF7FEFF 	 bl EVE_cmd_dl_burst
 519:../Libraries/FT800-FT813-5.x/tft.c **** 
 520:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1644              	 .loc 1 520 0
 1645 006a FFF7FEFF 	 bl EVE_end_cmd_burst
 1646              	.L40:
 521:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 522:../Libraries/FT800-FT813-5.x/tft.c **** }
 1647              	 .loc 1 522 0
 1648 006e 80BD     	 pop {r7,pc}
 1649              	.L43:
 1650              	 .align 2
 1651              	.L42:
 1652 0070 00000000 	 .word tft_active
 1653 0074 00000000 	 .word logo_init
 1654 0078 07000026 	 .word 637534215
 1655 007c 0100001F 	 .word 520093697
 1656 0080 B000B042 	 .word 1118830768
 1657              	 .cfi_endproc
 1658              	.LFE449:
 1660              	 .section .rodata
 1661              	 .align 2
 1662              	.LC6:
 1663 0028 444C2D73 	 .ascii "DL-size:\000"
 1663      697A653A 
 1663      00
 1664 0031 000000   	 .align 2
 1665              	.LC7:
 1666 0034 53656E73 	 .ascii "Sensor:\000"
 1666      6F723A00 
 1667              	 .section .text.initStaticGraphBackground,"ax",%progbits
 1668              	 .align 2
 1669              	 .global initStaticGraphBackground
 1670              	 .thumb
 1671              	 .thumb_func
 1673              	initStaticGraphBackground:
 1674              	.LFB450:
 523:../Libraries/FT800-FT813-5.x/tft.c **** 
 524:../Libraries/FT800-FT813-5.x/tft.c **** void initStaticGraphBackground(void)
 525:../Libraries/FT800-FT813-5.x/tft.c **** {
 1675              	 .loc 1 525 0
 1676              	 .cfi_startproc
 1677              	 
 1678              	 
 1679 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 1680              	.LCFI14:
 1681              	 .cfi_def_cfa_offset 32
 1682              	 .cfi_offset 4,-32
 1683              	 .cfi_offset 5,-28
 1684              	 .cfi_offset 6,-24
 1685              	 .cfi_offset 7,-20
 1686              	 .cfi_offset 8,-16
 1687              	 .cfi_offset 9,-12
 1688              	 .cfi_offset 10,-8
 1689              	 .cfi_offset 14,-4
 1690 0004 8AB0     	 sub sp,sp,#40
 1691              	.LCFI15:
 1692              	 .cfi_def_cfa_offset 72
 1693 0006 0AAF     	 add r7,sp,#40
 1694              	.LCFI16:
 1695              	 .cfi_def_cfa 7,32
 526:../Libraries/FT800-FT813-5.x/tft.c **** 	// Static portion of display-handling, meant to be called once at startup. Created by Rudolph Ried
 527:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART); // Start a new display list (resets REG_CMD_DL to 0)
 1696              	 .loc 1 527 0
 1697 0008 6FF0FF00 	 mvn r0,#255
 1698 000c FFF7FEFF 	 bl EVE_cmd_dl
 528:../Libraries/FT800-FT813-5.x/tft.c **** 
 529:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Main settings
 530:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 1699              	 .loc 1 530 0
 1700 0010 4FF04070 	 mov r0,#50331648
 1701 0014 FFF7FEFF 	 bl EVE_cmd_dl
 531:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor(MAIN_BGCOLOR); /* light grey */
 1702              	 .loc 1 531 0
 1703 0018 4848     	 ldr r0,.L47
 1704 001a FFF7FEFF 	 bl EVE_cmd_bgcolor
 532:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 pixel de
 1705              	 .loc 1 532 0
 1706 001e 4FF01C50 	 mov r0,#654311424
 1707 0022 FFF7FEFF 	 bl EVE_cmd_dl
 533:../Libraries/FT800-FT813-5.x/tft.c **** 
 534:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw Banner and divider line on top
 535:../Libraries/FT800-FT813-5.x/tft.c **** 	// Banner
 536:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 1708              	 .loc 1 536 0
 1709 0026 4648     	 ldr r0,.L47+4
 1710 0028 FFF7FEFF 	 bl EVE_cmd_dl
 537:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 1711              	 .loc 1 537 0
 1712 002c 4548     	 ldr r0,.L47+8
 1713 002e FFF7FEFF 	 bl EVE_cmd_dl
 538:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 1714              	 .loc 1 538 0
 1715 0032 4548     	 ldr r0,.L47+12
 1716 0034 FFF7FEFF 	 bl EVE_cmd_dl
 539:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 1717              	 .loc 1 539 0
 1718 0038 4448     	 ldr r0,.L47+16
 1719 003a FFF7FEFF 	 bl EVE_cmd_dl
 540:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 1720              	 .loc 1 540 0
 1721 003e 4448     	 ldr r0,.L47+20
 1722 0040 FFF7FEFF 	 bl EVE_cmd_dl
 541:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 1723              	 .loc 1 541 0
 1724 0044 4348     	 ldr r0,.L47+24
 1725 0046 FFF7FEFF 	 bl EVE_cmd_dl
 542:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 1726              	 .loc 1 542 0
 1727 004a 4348     	 ldr r0,.L47+28
 1728 004c FFF7FEFF 	 bl EVE_cmd_dl
 543:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1729              	 .loc 1 543 0
 1730 0050 4FF00450 	 mov r0,#553648128
 1731 0054 FFF7FEFF 	 bl EVE_cmd_dl
 544:../Libraries/FT800-FT813-5.x/tft.c **** 	// Divider
 545:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 1732              	 .loc 1 545 0
 1733 0058 4048     	 ldr r0,.L47+32
 1734 005a FFF7FEFF 	 bl EVE_cmd_dl
 546:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 1735              	 .loc 1 546 0
 1736 005e 4048     	 ldr r0,.L47+36
 1737 0060 FFF7FEFF 	 bl EVE_cmd_dl
 547:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 1738              	 .loc 1 547 0
 1739 0064 3948     	 ldr r0,.L47+16
 1740 0066 FFF7FEFF 	 bl EVE_cmd_dl
 548:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 1741              	 .loc 1 548 0
 1742 006a 3948     	 ldr r0,.L47+20
 1743 006c FFF7FEFF 	 bl EVE_cmd_dl
 549:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 1744              	 .loc 1 549 0
 1745 0070 3848     	 ldr r0,.L47+24
 1746 0072 FFF7FEFF 	 bl EVE_cmd_dl
 550:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 1747              	 .loc 1 550 0
 1748 0076 3848     	 ldr r0,.L47+28
 1749 0078 FFF7FEFF 	 bl EVE_cmd_dl
 551:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1750              	 .loc 1 551 0
 1751 007c 4FF00450 	 mov r0,#553648128
 1752 0080 FFF7FEFF 	 bl EVE_cmd_dl
 552:../Libraries/FT800-FT813-5.x/tft.c **** 
 553:../Libraries/FT800-FT813-5.x/tft.c **** 
 554:../Libraries/FT800-FT813-5.x/tft.c **** 	// Add the static text
 555:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 1753              	 .loc 1 555 0
 1754 0084 3548     	 ldr r0,.L47+32
 1755 0086 FFF7FEFF 	 bl EVE_cmd_dl
 556:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 557:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_text(10, EVE_VSIZE - 65, 26, 0, "Bytes: ");
 558:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 559:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 10, 26, 0, "DL-size:");
 1756              	 .loc 1 559 0
 1757 008a 364B     	 ldr r3,.L47+40
 1758 008c 0093     	 str r3,[sp]
 1759 008e 4FF4B470 	 mov r0,#360
 1760 0092 0A21     	 movs r1,#10
 1761 0094 1A22     	 movs r2,#26
 1762 0096 0023     	 movs r3,#0
 1763 0098 FFF7FEFF 	 bl EVE_cmd_text
 560:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 25, 26, 0, "Sensor:");
 1764              	 .loc 1 560 0
 1765 009c 324B     	 ldr r3,.L47+44
 1766 009e 0093     	 str r3,[sp]
 1767 00a0 4FF4B470 	 mov r0,#360
 1768 00a4 1921     	 movs r1,#25
 1769 00a6 1A22     	 movs r2,#26
 1770 00a8 0023     	 movs r3,#0
 1771 00aa FFF7FEFF 	 bl EVE_cmd_text
 561:../Libraries/FT800-FT813-5.x/tft.c **** 
 562:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the static part of the Graph to the display list
 563:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphStatic(0, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, G_v
 1772              	 .loc 1 563 0
 1773 00ae 2F4B     	 ldr r3,.L47+48
 1774 00b0 B3F800A0 	 ldrh r10,[r3]
 1775 00b4 2E4B     	 ldr r3,.L47+52
 1776 00b6 B3F800C0 	 ldrh ip,[r3]
 1777 00ba 2E4B     	 ldr r3,.L47+56
 1778 00bc B3F800E0 	 ldrh lr,[r3]
 1779 00c0 2D4B     	 ldr r3,.L47+60
 1780 00c2 1E88     	 ldrh r6,[r3]
 1781 00c4 2D4B     	 ldr r3,.L47+64
 1782 00c6 D3E90089 	 ldrd r8,[r3]
 1783 00ca 2D4B     	 ldr r3,.L47+68
 1784 00cc D3E90045 	 ldrd r4,[r3]
 1785 00d0 2C4B     	 ldr r3,.L47+72
 1786 00d2 D3E90001 	 ldrd r0,[r3]
 1787 00d6 2C4B     	 ldr r3,.L47+76
 1788 00d8 D3E90023 	 ldrd r2,[r3]
 1789 00dc 0096     	 str r6,[sp]
 1790 00de 0A26     	 movs r6,#10
 1791 00e0 0196     	 str r6,[sp,#4]
 1792 00e2 CDE90289 	 strd r8,[sp,#8]
 1793 00e6 CDE90445 	 strd r4,[sp,#16]
 1794 00ea CDE90601 	 strd r0,[sp,#24]
 1795 00ee CDE90823 	 strd r2,[sp,#32]
 1796 00f2 0020     	 movs r0,#0
 1797 00f4 5146     	 mov r1,r10
 1798 00f6 6246     	 mov r2,ip
 1799 00f8 7346     	 mov r3,lr
 1800 00fa FFF7FEFF 	 bl TFT_GraphStatic
 564:../Libraries/FT800-FT813-5.x/tft.c **** 
 565:../Libraries/FT800-FT813-5.x/tft.c **** 	// Wait for Display to be finished
 566:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1801              	 .loc 1 566 0
 1802 00fe 00BF     	 nop
 1803              	.L45:
 1804              	 .loc 1 566 0 is_stmt 0 discriminator 1
 1805 0100 FFF7FEFF 	 bl EVE_busy
 1806 0104 0346     	 mov r3,r0
 1807 0106 002B     	 cmp r3,#0
 1808 0108 FAD1     	 bne .L45
 567:../Libraries/FT800-FT813-5.x/tft.c **** 
 568:../Libraries/FT800-FT813-5.x/tft.c **** 	// Get size of the current display list
 569:../Libraries/FT800-FT813-5.x/tft.c **** 	num_dl_static = EVE_memRead16(REG_CMD_DL); // REG_CMD_DL = Command display list offset
 1809              	 .loc 1 569 0 is_stmt 1
 1810 010a 2048     	 ldr r0,.L47+80
 1811 010c FFF7FEFF 	 bl EVE_memRead16
 1812 0110 0346     	 mov r3,r0
 1813 0112 1A46     	 mov r2,r3
 1814 0114 1E4B     	 ldr r3,.L47+84
 1815 0116 1A60     	 str r2,[r3]
 570:../Libraries/FT800-FT813-5.x/tft.c **** 
 571:../Libraries/FT800-FT813-5.x/tft.c **** 	// Copy "num_dl_static" bytes from pointer "EVE_RAM_DL" to pointer "MEM_DL_STATIC"
 572:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_memcpy(MEM_DL_STATIC, EVE_RAM_DL, num_dl_static);
 1816              	 .loc 1 572 0
 1817 0118 1D4B     	 ldr r3,.L47+84
 1818 011a 1B68     	 ldr r3,[r3]
 1819 011c 4FF47F20 	 mov r0,#1044480
 1820 0120 4FF44011 	 mov r1,#3145728
 1821 0124 1A46     	 mov r2,r3
 1822 0126 FFF7FEFF 	 bl EVE_cmd_memcpy
 573:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1823              	 .loc 1 573 0
 1824 012a 00BF     	 nop
 1825              	.L46:
 1826              	 .loc 1 573 0 is_stmt 0 discriminator 1
 1827 012c FFF7FEFF 	 bl EVE_busy
 1828 0130 0346     	 mov r3,r0
 1829 0132 002B     	 cmp r3,#0
 1830 0134 FAD1     	 bne .L46
 574:../Libraries/FT800-FT813-5.x/tft.c **** 
 575:../Libraries/FT800-FT813-5.x/tft.c **** }
 1831              	 .loc 1 575 0 is_stmt 1
 1832 0136 BD46     	 mov sp,r7
 1833              	.LCFI17:
 1834              	 .cfi_def_cfa_register 13
 1835              	 
 1836 0138 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 1837              	.L48:
 1838              	 .align 2
 1839              	.L47:
 1840 013c EEF1F500 	 .word 16118254
 1841 0140 1000000E 	 .word 234881040
 1842 0144 4B586404 	 .word 73685067
 1843 0148 0700001F 	 .word 520093703
 1844 014c 42000040 	 .word 1073741890
 1845 0150 42008C40 	 .word 1082916930
 1846 0154 3200A040 	 .word 1084227634
 1847 0158 3200F040 	 .word 1089470514
 1848 015c 29CDF304 	 .word 83086633
 1849 0160 0400001F 	 .word 520093700
 1850 0164 28000000 	 .word .LC6
 1851 0168 34000000 	 .word .LC7
 1852 016c 00000000 	 .word G_x
 1853 0170 00000000 	 .word G_y
 1854 0174 00000000 	 .word G_width
 1855 0178 00000000 	 .word G_height
 1856 017c 00000000 	 .word G_amp_max
 1857 0180 00000000 	 .word G_t_max
 1858 0184 00000000 	 .word G_h_grid_lines
 1859 0188 00000000 	 .word G_v_grid_lines
 1860 018c 00213000 	 .word 3154176
 1861 0190 00000000 	 .word num_dl_static
 1862              	 .cfi_endproc
 1863              	.LFE450:
 1865              	 .section .text.TFT_init,"ax",%progbits
 1866              	 .align 2
 1867              	 .global TFT_init
 1868              	 .thumb
 1869              	 .thumb_func
 1871              	TFT_init:
 1872              	.LFB451:
 576:../Libraries/FT800-FT813-5.x/tft.c **** 
 577:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t TFT_init(void)
 578:../Libraries/FT800-FT813-5.x/tft.c **** {
 1873              	 .loc 1 578 0
 1874              	 .cfi_startproc
 1875              	 
 1876              	 
 1877 0000 80B5     	 push {r7,lr}
 1878              	.LCFI18:
 1879              	 .cfi_def_cfa_offset 8
 1880              	 .cfi_offset 7,-8
 1881              	 .cfi_offset 14,-4
 1882 0002 00AF     	 add r7,sp,#0
 1883              	.LCFI19:
 1884              	 .cfi_def_cfa_register 7
 579:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Initializes EVE (or checks if its already initialized). Only at first sucessful EVE_init() the
 580:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_init() != 0)
 1885              	 .loc 1 580 0
 1886 0004 FFF7FEFF 	 bl EVE_init
 1887 0008 0346     	 mov r3,r0
 1888 000a 002B     	 cmp r3,#0
 1889 000c 2BD0     	 beq .L50
 581:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 582:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (DEBUG_ENABLE)
 583:../Libraries/FT800-FT813-5.x/tft.c **** 			printf("TFT_init - EVE_init was ok, starting to init TFT!\n");
 584:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 585:../Libraries/FT800-FT813-5.x/tft.c **** 		// Mark Display as active (TFT_display only does anythin after his)
 586:../Libraries/FT800-FT813-5.x/tft.c **** 		tft_active = 1;
 1890              	 .loc 1 586 0
 1891 000e 174B     	 ldr r3,.L52
 1892 0010 0122     	 movs r2,#1
 1893 0012 1A70     	 strb r2,[r3]
 587:../Libraries/FT800-FT813-5.x/tft.c **** 
 588:../Libraries/FT800-FT813-5.x/tft.c **** 		// Initial Backlight strength
 589:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_memWrite8(REG_PWM_DUTY, 0x30);	/* setup backlight, range is from 0 = off to 0x80 = max */
 1894              	 .loc 1 589 0
 1895 0014 1648     	 ldr r0,.L52+4
 1896 0016 3021     	 movs r1,#48
 1897 0018 FFF7FEFF 	 bl EVE_memWrite8
 590:../Libraries/FT800-FT813-5.x/tft.c **** 
 591:../Libraries/FT800-FT813-5.x/tft.c **** 		// Write prerecorded touchscreen calibration back to display
 592:../Libraries/FT800-FT813-5.x/tft.c **** 		touch_calibrate();
 1898              	 .loc 1 592 0
 1899 001c FFF7FEFF 	 bl touch_calibrate
 593:../Libraries/FT800-FT813-5.x/tft.c **** 
 594:../Libraries/FT800-FT813-5.x/tft.c **** 		// Clear screen, set precision for VERTEX2F to 1 pixel and show DL for the first time
 595:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1900              	 .loc 1 595 0
 1901 0020 FFF7FEFF 	 bl EVE_start_cmd_burst
 596:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1902              	 .loc 1 596 0
 1903 0024 6FF0FF00 	 mvn r0,#255
 1904 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 597:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0)); /* do not use the following objects for touch-detection */
 1905              	 .loc 1 597 0
 1906 002c 4FF04070 	 mov r0,#50331648
 1907 0030 FFF7FEFF 	 bl EVE_cmd_dl_burst
 598:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_bgcolor_burst(MAIN_BGCOLOR);
 1908              	 .loc 1 598 0
 1909 0034 0F48     	 ldr r0,.L52+8
 1910 0036 FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 599:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 p
 1911              	 .loc 1 599 0
 1912 003a 4FF01C50 	 mov r0,#654311424
 1913 003e FFF7FEFF 	 bl EVE_cmd_dl_burst
 600:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1914              	 .loc 1 600 0
 1915 0042 6FF07D40 	 mvn r0,#-50331648
 1916 0046 FFF7FEFF 	 bl EVE_cmd_dl_burst
 601:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1917              	 .loc 1 601 0
 1918 004a 0B48     	 ldr r0,.L52+12
 1919 004c FFF7FEFF 	 bl EVE_cmd_dl_burst
 602:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1920              	 .loc 1 602 0
 1921 0050 0020     	 movs r0,#0
 1922 0052 FFF7FEFF 	 bl EVE_cmd_dl_burst
 603:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1923              	 .loc 1 603 0
 1924 0056 6FF0FE00 	 mvn r0,#254
 1925 005a FFF7FEFF 	 bl EVE_cmd_dl_burst
 604:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1926              	 .loc 1 604 0
 1927 005e FFF7FEFF 	 bl EVE_end_cmd_burst
 605:../Libraries/FT800-FT813-5.x/tft.c **** 		return 1;
 1928              	 .loc 1 605 0
 1929 0062 0123     	 movs r3,#1
 1930 0064 00E0     	 b .L51
 1931              	.L50:
 606:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 607:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 608:../Libraries/FT800-FT813-5.x/tft.c **** 		return 0;
 1932              	 .loc 1 608 0
 1933 0066 0023     	 movs r3,#0
 1934              	.L51:
 609:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 610:../Libraries/FT800-FT813-5.x/tft.c **** }
 1935              	 .loc 1 610 0
 1936 0068 1846     	 mov r0,r3
 1937 006a 80BD     	 pop {r7,pc}
 1938              	.L53:
 1939              	 .align 2
 1940              	.L52:
 1941 006c 00000000 	 .word tft_active
 1942 0070 D4203000 	 .word 3154132
 1943 0074 EEF1F500 	 .word 16118254
 1944 0078 07000026 	 .word 637534215
 1945              	 .cfi_endproc
 1946              	.LFE451:
 1948              	 .section .text.TFT_touch,"ax",%progbits
 1949              	 .align 2
 1950              	 .global TFT_touch
 1951              	 .thumb
 1952              	 .thumb_func
 1954              	TFT_touch:
 1955              	.LFB452:
 611:../Libraries/FT800-FT813-5.x/tft.c **** 
 612:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch(void)
 613:../Libraries/FT800-FT813-5.x/tft.c **** {
 1956              	 .loc 1 613 0
 1957              	 .cfi_startproc
 1958              	 
 1959              	 
 1960 0000 80B5     	 push {r7,lr}
 1961              	.LCFI20:
 1962              	 .cfi_def_cfa_offset 8
 1963              	 .cfi_offset 7,-8
 1964              	 .cfi_offset 14,-4
 1965 0002 82B0     	 sub sp,sp,#8
 1966              	.LCFI21:
 1967              	 .cfi_def_cfa_offset 16
 1968 0004 00AF     	 add r7,sp,#0
 1969              	.LCFI22:
 1970              	 .cfi_def_cfa_register 7
 614:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Check for touch events and setup vars for TFT_display() (Buttons). Created by Rudolph Riedel, 
 615:../Libraries/FT800-FT813-5.x/tft.c **** 	// Init vars
 616:../Libraries/FT800-FT813-5.x/tft.c **** 	uint8_t tag; // temporary store of received touched tag
 617:../Libraries/FT800-FT813-5.x/tft.c **** 	static uint8_t toggle_lock = 0; // "Debouncing of touches" -> If something is touched, this is set
 618:../Libraries/FT800-FT813-5.x/tft.c **** 	
 619:../Libraries/FT800-FT813-5.x/tft.c **** 	// If Display is still busy, skip this evaluation to prevent hanging, glitches and flickers
 620:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_busy()) { return; } /* is EVE still processing the last display list? */
 1971              	 .loc 1 620 0
 1972 0006 FFF7FEFF 	 bl EVE_busy
 1973 000a 0346     	 mov r3,r0
 1974 000c 002B     	 cmp r3,#0
 1975 000e 00D0     	 beq .L55
 1976 0010 72E0     	 b .L54
 1977              	.L55:
 621:../Libraries/FT800-FT813-5.x/tft.c **** 
 622:../Libraries/FT800-FT813-5.x/tft.c **** 	// Read the value for the first touch point
 623:../Libraries/FT800-FT813-5.x/tft.c **** 	tag = EVE_memRead8(REG_TOUCH_TAG);
 1978              	 .loc 1 623 0
 1979 0012 3B48     	 ldr r0,.L67
 1980 0014 FFF7FEFF 	 bl EVE_memRead8
 1981 0018 0346     	 mov r3,r0
 1982 001a FB71     	 strb r3,[r7,#7]
 624:../Libraries/FT800-FT813-5.x/tft.c **** 
 625:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 626:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 1983              	 .loc 1 626 0
 1984 001c FB79     	 ldrb r3,[r7,#7]
 1985 001e 0D2B     	 cmp r3,#13
 1986 0020 6AD8     	 bhi .L54
 1987 0022 01A2     	 adr r2,.L58
 1988 0024 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1989              	 .p2align 2
 1990              	.L58:
 1991 0028 61000000 	 .word .L57+1
 1992 002c F9000000 	 .word .L54+1
 1993 0030 F9000000 	 .word .L54+1
 1994 0034 F9000000 	 .word .L54+1
 1995 0038 F9000000 	 .word .L54+1
 1996 003c F9000000 	 .word .L54+1
 1997 0040 F9000000 	 .word .L54+1
 1998 0044 F9000000 	 .word .L54+1
 1999 0048 F9000000 	 .word .L54+1
 2000 004c F9000000 	 .word .L54+1
 2001 0050 69000000 	 .word .L59+1
 2002 0054 F9000000 	 .word .L54+1
 2003 0058 A3000000 	 .word .L60+1
 2004 005c CB000000 	 .word .L61+1
 2005              	 .p2align 1
 2006              	.L57:
 627:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 628:../Libraries/FT800-FT813-5.x/tft.c **** 		// nothing touched - reset states and locks
 629:../Libraries/FT800-FT813-5.x/tft.c **** 		case 0:
 630:../Libraries/FT800-FT813-5.x/tft.c **** 			toggle_lock = 0;
 2007              	 .loc 1 630 0
 2008 0060 284B     	 ldr r3,.L67+4
 2009 0062 0022     	 movs r2,#0
 2010 0064 1A70     	 strb r2,[r3]
 631:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2011              	 .loc 1 631 0
 2012 0066 47E0     	 b .L54
 2013              	.L59:
 632:../Libraries/FT800-FT813-5.x/tft.c **** 		// dimmer button on top as on/off radio-switch
 633:../Libraries/FT800-FT813-5.x/tft.c **** 		case 10:
 634:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2014              	 .loc 1 634 0
 2015 0068 264B     	 ldr r3,.L67+4
 2016 006a 1B78     	 ldrb r3,[r3]
 2017 006c 002B     	 cmp r3,#0
 2018 006e 17D1     	 bne .L62
 635:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Button Dimmer touched\n");
 636:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2019              	 .loc 1 636 0
 2020 0070 244B     	 ldr r3,.L67+4
 2021 0072 2A22     	 movs r2,#42
 2022 0074 1A70     	 strb r2,[r3]
 637:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_dimmer == 0){
 2023              	 .loc 1 637 0
 2024 0076 244B     	 ldr r3,.L67+8
 2025 0078 1B88     	 ldrh r3,[r3]
 2026 007a 002B     	 cmp r3,#0
 2027 007c 08D1     	 bne .L63
 638:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = EVE_OPT_FLAT;
 2028              	 .loc 1 638 0
 2029 007e 224B     	 ldr r3,.L67+8
 2030 0080 4FF48072 	 mov r2,#256
 2031 0084 1A80     	 strh r2,[r3]
 639:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x01);	/* setup backlight, range is from 0 = off to 0x80 = max */
 2032              	 .loc 1 639 0
 2033 0086 2148     	 ldr r0,.L67+12
 2034 0088 0121     	 movs r1,#1
 2035 008a FFF7FEFF 	 bl EVE_memWrite8
 2036 008e 07E0     	 b .L62
 2037              	.L63:
 640:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 641:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 642:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = 0;
 2038              	 .loc 1 642 0
 2039 0090 1D4B     	 ldr r3,.L67+8
 2040 0092 0022     	 movs r2,#0
 2041 0094 1A80     	 strh r2,[r3]
 643:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x80);	/* setup backlight, range is from 0 = off to 0x80 = max */
 2042              	 .loc 1 643 0
 2043 0096 1D48     	 ldr r0,.L67+12
 2044 0098 8021     	 movs r1,#128
 2045 009a FFF7FEFF 	 bl EVE_memWrite8
 644:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 645:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 646:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2046              	 .loc 1 646 0
 2047 009e 2BE0     	 b .L54
 2048              	.L62:
 2049 00a0 2AE0     	 b .L54
 2050              	.L60:
 647:../Libraries/FT800-FT813-5.x/tft.c **** 		// roll/frame mode toggle on top
 648:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 649:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2051              	 .loc 1 649 0
 2052 00a2 184B     	 ldr r3,.L67+4
 2053 00a4 1B78     	 ldrb r3,[r3]
 2054 00a6 002B     	 cmp r3,#0
 2055 00a8 0ED1     	 bne .L64
 650:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle Roll touched\n");
 651:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2056              	 .loc 1 651 0
 2057 00aa 164B     	 ldr r3,.L67+4
 2058 00ac 2A22     	 movs r2,#42
 2059 00ae 1A70     	 strb r2,[r3]
 652:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 2060              	 .loc 1 652 0
 2061 00b0 174B     	 ldr r3,.L67+16
 2062 00b2 1B88     	 ldrh r3,[r3]
 2063 00b4 002B     	 cmp r3,#0
 2064 00b6 03D1     	 bne .L65
 653:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 2065              	 .loc 1 653 0
 2066 00b8 154B     	 ldr r3,.L67+16
 2067 00ba 0122     	 movs r2,#1
 2068 00bc 1A80     	 strh r2,[r3]
 2069 00be 03E0     	 b .L64
 2070              	.L65:
 654:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 655:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 656:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 2071              	 .loc 1 656 0
 2072 00c0 134B     	 ldr r3,.L67+16
 2073 00c2 0022     	 movs r2,#0
 2074 00c4 1A80     	 strh r2,[r3]
 657:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 658:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 659:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2075              	 .loc 1 659 0
 2076 00c6 17E0     	 b .L54
 2077              	.L64:
 2078 00c8 16E0     	 b .L54
 2079              	.L61:
 660:../Libraries/FT800-FT813-5.x/tft.c **** 		// signal switcher button
 661:../Libraries/FT800-FT813-5.x/tft.c **** 		case 13:
 662:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2080              	 .loc 1 662 0
 2081 00ca 0E4B     	 ldr r3,.L67+4
 2082 00cc 1B78     	 ldrb r3,[r3]
 2083 00ce 002B     	 cmp r3,#0
 2084 00d0 11D1     	 bne .L66
 663:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Switch Signal\n");
 664:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2085              	 .loc 1 664 0
 2086 00d2 0C4B     	 ldr r3,.L67+4
 2087 00d4 2A22     	 movs r2,#42
 2088 00d6 1A70     	 strb r2,[r3]
 665:../Libraries/FT800-FT813-5.x/tft.c **** 				InputType++;
 2089              	 .loc 1 665 0
 2090 00d8 0E4B     	 ldr r3,.L67+20
 2091 00da 1B78     	 ldrb r3,[r3]
 2092 00dc DBB2     	 uxtb r3,r3
 2093 00de 0133     	 adds r3,r3,#1
 2094 00e0 DAB2     	 uxtb r2,r3
 2095 00e2 0C4B     	 ldr r3,.L67+20
 2096 00e4 1A70     	 strb r2,[r3]
 666:../Libraries/FT800-FT813-5.x/tft.c **** 				if(InputType > 3){ InputType = 0; }
 2097              	 .loc 1 666 0
 2098 00e6 0B4B     	 ldr r3,.L67+20
 2099 00e8 1B78     	 ldrb r3,[r3]
 2100 00ea DBB2     	 uxtb r3,r3
 2101 00ec 032B     	 cmp r3,#3
 2102 00ee 02D9     	 bls .L66
 2103              	 .loc 1 666 0 is_stmt 0 discriminator 1
 2104 00f0 084B     	 ldr r3,.L67+20
 2105 00f2 0022     	 movs r2,#0
 2106 00f4 1A70     	 strb r2,[r3]
 2107              	.L66:
 667:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 668:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2108              	 .loc 1 668 0 is_stmt 1
 2109 00f6 00BF     	 nop
 2110              	.L54:
 669:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 670:../Libraries/FT800-FT813-5.x/tft.c **** }
 2111              	 .loc 1 670 0
 2112 00f8 0837     	 adds r7,r7,#8
 2113              	.LCFI23:
 2114              	 .cfi_def_cfa_offset 8
 2115 00fa BD46     	 mov sp,r7
 2116              	.LCFI24:
 2117              	 .cfi_def_cfa_register 13
 2118              	 
 2119 00fc 80BD     	 pop {r7,pc}
 2120              	.L68:
 2121 00fe 00BF     	 .align 2
 2122              	.L67:
 2123 0100 2C213000 	 .word 3154220
 2124 0104 00000000 	 .word toggle_lock.12321
 2125 0108 00000000 	 .word toggle_state_dimmer
 2126 010c D4203000 	 .word 3154132
 2127 0110 00000000 	 .word toggle_state_graphmode
 2128 0114 00000000 	 .word InputType
 2129              	 .cfi_endproc
 2130              	.LFE452:
 2132              	 .section .rodata
 2133              	 .align 2
 2134              	.LC8:
 2135 003c 53656E73 	 .ascii "Sensor\000"
 2135      6F7200
 2136 0043 00       	 .align 2
 2137              	.LC9:
 2138 0044 496D7000 	 .ascii "Imp\000"
 2139              	 .align 2
 2140              	.LC10:
 2141 0048 53617700 	 .ascii "Saw\000"
 2142              	 .align 2
 2143              	.LC11:
 2144 004c 53696E65 	 .ascii "Sine\000"
 2144      00
 2145 0051 000000   	 .align 2
 2146              	.LC12:
 2147 0054 526F6C6C 	 .ascii "Roll\000"
 2147      00
 2148 0059 000000   	 .align 2
 2149              	.LC13:
 2150 005c 4672616D 	 .ascii "Frame\000"
 2150      6500
 2151 0062 0000     	 .align 2
 2152              	.LC14:
 2153 0064 44696D6D 	 .ascii "Dimmer\000"
 2153      657200
 2154 006b 00       	 .align 2
 2155              	.LC15:
 2156 006c 252E326C 	 .ascii "%.2lf\000"
 2156      6600
 2157 0072 0000     	 .align 2
 2158              	.LC16:
 2159 0074 205600   	 .ascii " V\000"
 2160 0077 00       	 .section .text.TFT_display,"ax",%progbits
 2161              	 .align 2
 2162              	 .global TFT_display
 2163              	 .thumb
 2164              	 .thumb_func
 2166              	TFT_display:
 2167              	.LFB453:
 671:../Libraries/FT800-FT813-5.x/tft.c **** 
 672:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display(XMC_VADC_RESULT_SIZE_t SBuffer[], uint16_t size, uint16_t *SBuffer_curidx)
 673:../Libraries/FT800-FT813-5.x/tft.c **** {
 2168              	 .loc 1 673 0
 2169              	 .cfi_startproc
 2170              	 
 2171              	 
 2172 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2173              	.LCFI25:
 2174              	 .cfi_def_cfa_offset 20
 2175              	 .cfi_offset 4,-20
 2176              	 .cfi_offset 5,-16
 2177              	 .cfi_offset 6,-12
 2178              	 .cfi_offset 7,-8
 2179              	 .cfi_offset 14,-4
 2180 0002 99B0     	 sub sp,sp,#100
 2181              	.LCFI26:
 2182              	 .cfi_def_cfa_offset 120
 2183 0004 0AAF     	 add r7,sp,#40
 2184              	.LCFI27:
 2185              	 .cfi_def_cfa 7,80
 2186 0006 F860     	 str r0,[r7,#12]
 2187 0008 0B46     	 mov r3,r1
 2188 000a 7A60     	 str r2,[r7,#4]
 2189 000c 7B81     	 strh r3,[r7,#10]
 674:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Dynamic portion of display-handling, meant to be called every 20ms or more. Created by Rudolph
 675:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 676:../Libraries/FT800-FT813-5.x/tft.c **** 	/// The inputs are used to draw the Graph data. Note that also some predefined graph settings are 
 677:../Libraries/FT800-FT813-5.x/tft.c **** 
 678:../Libraries/FT800-FT813-5.x/tft.c **** 	//static int32_t rotate = 0;
 679:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t display_list_size = 0;
 2190              	 .loc 1 679 0
 2191 000e 0023     	 movs r3,#0
 2192 0010 FB86     	 strh r3,[r7,#54]
 680:../Libraries/FT800-FT813-5.x/tft.c **** 
 681:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 2193              	 .loc 1 681 0
 2194 0012 924B     	 ldr r3,.L77
 2195 0014 1B78     	 ldrb r3,[r3]
 2196 0016 002B     	 cmp r3,#0
 2197 0018 00F01D81 	 beq .L69
 2198              	.LBB13:
 682:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 683:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (EVE_DMA)
 684:../Libraries/FT800-FT813-5.x/tft.c **** 			uint16_t cmd_fifo_size;
 685:../Libraries/FT800-FT813-5.x/tft.c **** 			cmd_fifo_size = EVE_dma_buffer_index*4; /* without DMA there is no way to tell how many bytes ar
 686:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 687:../Libraries/FT800-FT813-5.x/tft.c **** 
 688:../Libraries/FT800-FT813-5.x/tft.c **** 		// get size of last display list to be printed on screen (section "Debug Values")
 689:../Libraries/FT800-FT813-5.x/tft.c **** 		display_list_size = EVE_memRead16(REG_CMD_DL);
 2199              	 .loc 1 689 0
 2200 001c 9048     	 ldr r0,.L77+4
 2201 001e FFF7FEFF 	 bl EVE_memRead16
 2202 0022 0346     	 mov r3,r0
 2203 0024 FB86     	 strh r3,[r7,#54]
 690:../Libraries/FT800-FT813-5.x/tft.c **** 
 691:../Libraries/FT800-FT813-5.x/tft.c **** 		// start Burst (start writing to the cmd-fifo as one stream of bytes, only sending the address on
 692:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst();
 2204              	 .loc 1 692 0
 2205 0026 FFF7FEFF 	 bl EVE_start_cmd_burst
 693:../Libraries/FT800-FT813-5.x/tft.c **** 
 694:../Libraries/FT800-FT813-5.x/tft.c **** 
 695:../Libraries/FT800-FT813-5.x/tft.c **** 
 696:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Start the actual display list
 697:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART);
 2206              	 .loc 1 697 0
 2207 002a 6FF0FF00 	 mvn r0,#255
 2208 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 698:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 2209              	 .loc 1 698 0
 2210 0032 6FF07D40 	 mvn r0,#-50331648
 2211 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 699:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 2212              	 .loc 1 699 0
 2213 003a 8A48     	 ldr r0,.L77+8
 2214 003c FFF7FEFF 	 bl EVE_cmd_dl_burst
 700:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 2215              	 .loc 1 700 0
 2216 0040 4FF04070 	 mov r0,#50331648
 2217 0044 FFF7FEFF 	 bl EVE_cmd_dl_burst
 701:../Libraries/FT800-FT813-5.x/tft.c **** 
 702:../Libraries/FT800-FT813-5.x/tft.c **** 		// insert static part of display-list from copy in gfx-mem
 703:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_append_burst(MEM_DL_STATIC, num_dl_static);
 2218              	 .loc 1 703 0
 2219 0048 874B     	 ldr r3,.L77+12
 2220 004a 1B68     	 ldr r3,[r3]
 2221 004c 4FF47F20 	 mov r0,#1044480
 2222 0050 1946     	 mov r1,r3
 2223 0052 FFF7FEFF 	 bl EVE_cmd_append_burst
 704:../Libraries/FT800-FT813-5.x/tft.c **** 
 705:../Libraries/FT800-FT813-5.x/tft.c **** 
 706:../Libraries/FT800-FT813-5.x/tft.c **** 
 707:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Display BUTTONS and Toggles
 708:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 2224              	 .loc 1 708 0
 2225 0056 8548     	 ldr r0,.L77+16
 2226 0058 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 709:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 2227              	 .loc 1 709 0
 2228 005c 8448     	 ldr r0,.L77+20
 2229 005e FFF7FEFF 	 bl EVE_cmd_dl_burst
 710:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 2230              	 .loc 1 710 0
 2231 0062 8448     	 ldr r0,.L77+24
 2232 0064 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 711:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 2233              	 .loc 1 711 0
 2234 0068 8348     	 ldr r0,.L77+28
 2235 006a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 712:../Libraries/FT800-FT813-5.x/tft.c **** 
 713:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(13)); /* assign tag-value '13' to the button that follows */
 2236              	 .loc 1 713 0
 2237 006e 8348     	 ldr r0,.L77+32
 2238 0070 FFF7FEFF 	 bl EVE_cmd_dl_burst
 714:../Libraries/FT800-FT813-5.x/tft.c **** 		if(InputType == 0){ 		EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sensor");	}
 2239              	 .loc 1 714 0
 2240 0074 824B     	 ldr r3,.L77+36
 2241 0076 1B78     	 ldrb r3,[r3]
 2242 0078 DBB2     	 uxtb r3,r3
 2243 007a 002B     	 cmp r3,#0
 2244 007c 0CD1     	 bne .L71
 2245              	 .loc 1 714 0 is_stmt 0 discriminator 1
 2246 007e 1B23     	 movs r3,#27
 2247 0080 0093     	 str r3,[sp]
 2248 0082 0023     	 movs r3,#0
 2249 0084 0193     	 str r3,[sp,#4]
 2250 0086 7F4B     	 ldr r3,.L77+40
 2251 0088 0293     	 str r3,[sp,#8]
 2252 008a 1420     	 movs r0,#20
 2253 008c 0F21     	 movs r1,#15
 2254 008e 5022     	 movs r2,#80
 2255 0090 1E23     	 movs r3,#30
 2256 0092 FFF7FEFF 	 bl EVE_cmd_button_burst
 2257 0096 2FE0     	 b .L72
 2258              	.L71:
 715:../Libraries/FT800-FT813-5.x/tft.c **** 		else if(InputType == 1){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Imp");	}
 2259              	 .loc 1 715 0 is_stmt 1
 2260 0098 794B     	 ldr r3,.L77+36
 2261 009a 1B78     	 ldrb r3,[r3]
 2262 009c DBB2     	 uxtb r3,r3
 2263 009e 012B     	 cmp r3,#1
 2264 00a0 0CD1     	 bne .L73
 2265              	 .loc 1 715 0 is_stmt 0 discriminator 1
 2266 00a2 1B23     	 movs r3,#27
 2267 00a4 0093     	 str r3,[sp]
 2268 00a6 0023     	 movs r3,#0
 2269 00a8 0193     	 str r3,[sp,#4]
 2270 00aa 774B     	 ldr r3,.L77+44
 2271 00ac 0293     	 str r3,[sp,#8]
 2272 00ae 1420     	 movs r0,#20
 2273 00b0 0F21     	 movs r1,#15
 2274 00b2 5022     	 movs r2,#80
 2275 00b4 1E23     	 movs r3,#30
 2276 00b6 FFF7FEFF 	 bl EVE_cmd_button_burst
 2277 00ba 1DE0     	 b .L72
 2278              	.L73:
 716:../Libraries/FT800-FT813-5.x/tft.c **** 		else if(InputType == 2){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Saw");	}
 2279              	 .loc 1 716 0 is_stmt 1
 2280 00bc 704B     	 ldr r3,.L77+36
 2281 00be 1B78     	 ldrb r3,[r3]
 2282 00c0 DBB2     	 uxtb r3,r3
 2283 00c2 022B     	 cmp r3,#2
 2284 00c4 0CD1     	 bne .L74
 2285              	 .loc 1 716 0 is_stmt 0 discriminator 1
 2286 00c6 1B23     	 movs r3,#27
 2287 00c8 0093     	 str r3,[sp]
 2288 00ca 0023     	 movs r3,#0
 2289 00cc 0193     	 str r3,[sp,#4]
 2290 00ce 6F4B     	 ldr r3,.L77+48
 2291 00d0 0293     	 str r3,[sp,#8]
 2292 00d2 1420     	 movs r0,#20
 2293 00d4 0F21     	 movs r1,#15
 2294 00d6 5022     	 movs r2,#80
 2295 00d8 1E23     	 movs r3,#30
 2296 00da FFF7FEFF 	 bl EVE_cmd_button_burst
 2297 00de 0BE0     	 b .L72
 2298              	.L74:
 717:../Libraries/FT800-FT813-5.x/tft.c **** 		else{						EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sine");	}
 2299              	 .loc 1 717 0 is_stmt 1
 2300 00e0 1B23     	 movs r3,#27
 2301 00e2 0093     	 str r3,[sp]
 2302 00e4 0023     	 movs r3,#0
 2303 00e6 0193     	 str r3,[sp,#4]
 2304 00e8 694B     	 ldr r3,.L77+52
 2305 00ea 0293     	 str r3,[sp,#8]
 2306 00ec 1420     	 movs r0,#20
 2307 00ee 0F21     	 movs r1,#15
 2308 00f0 5022     	 movs r2,#80
 2309 00f2 1E23     	 movs r3,#30
 2310 00f4 FFF7FEFF 	 bl EVE_cmd_button_burst
 2311              	.L72:
 718:../Libraries/FT800-FT813-5.x/tft.c **** 
 719:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 2312              	 .loc 1 719 0
 2313 00f8 6648     	 ldr r0,.L77+56
 2314 00fa FFF7FEFF 	 bl EVE_cmd_dl_burst
 720:../Libraries/FT800-FT813-5.x/tft.c **** 		if(toggle_state_graphmode){
 2315              	 .loc 1 720 0
 2316 00fe 664B     	 ldr r3,.L77+60
 2317 0100 1B88     	 ldrh r3,[r3]
 2318 0102 002B     	 cmp r3,#0
 2319 0104 0DD0     	 beq .L75
 721:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "Roll");
 2320              	 .loc 1 721 0
 2321 0106 0023     	 movs r3,#0
 2322 0108 0093     	 str r3,[sp]
 2323 010a 4FF6FF73 	 movw r3,#65535
 2324 010e 0193     	 str r3,[sp,#4]
 2325 0110 624B     	 ldr r3,.L77+64
 2326 0112 0293     	 str r3,[sp,#8]
 2327 0114 7820     	 movs r0,#120
 2328 0116 1821     	 movs r1,#24
 2329 0118 3E22     	 movs r2,#62
 2330 011a 1B23     	 movs r3,#27
 2331 011c FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2332 0120 0BE0     	 b .L76
 2333              	.L75:
 722:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 723:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 724:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "Frame");
 2334              	 .loc 1 724 0
 2335 0122 0023     	 movs r3,#0
 2336 0124 0093     	 str r3,[sp]
 2337 0126 0023     	 movs r3,#0
 2338 0128 0193     	 str r3,[sp,#4]
 2339 012a 5D4B     	 ldr r3,.L77+68
 2340 012c 0293     	 str r3,[sp,#8]
 2341 012e 7820     	 movs r0,#120
 2342 0130 1821     	 movs r1,#24
 2343 0132 3E22     	 movs r2,#62
 2344 0134 1B23     	 movs r3,#27
 2345 0136 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2346              	.L76:
 725:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 726:../Libraries/FT800-FT813-5.x/tft.c **** 
 727:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(10)); /* assign tag-value '10' to the button that follows */
 2347              	 .loc 1 727 0
 2348 013a 5A48     	 ldr r0,.L77+72
 2349 013c FFF7FEFF 	 bl EVE_cmd_dl_burst
 728:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_button_burst(205,15,80,30, 27, toggle_state_dimmer,"Dimmer");
 2350              	 .loc 1 728 0
 2351 0140 594B     	 ldr r3,.L77+76
 2352 0142 1B88     	 ldrh r3,[r3]
 2353 0144 1B22     	 movs r2,#27
 2354 0146 0092     	 str r2,[sp]
 2355 0148 0193     	 str r3,[sp,#4]
 2356 014a 584B     	 ldr r3,.L77+80
 2357 014c 0293     	 str r3,[sp,#8]
 2358 014e CD20     	 movs r0,#205
 2359 0150 0F21     	 movs r1,#15
 2360 0152 5022     	 movs r2,#80
 2361 0154 1E23     	 movs r3,#30
 2362 0156 FFF7FEFF 	 bl EVE_cmd_button_burst
 729:../Libraries/FT800-FT813-5.x/tft.c **** 
 730:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 2363              	 .loc 1 730 0
 2364 015a 4FF04070 	 mov r0,#50331648
 2365 015e FFF7FEFF 	 bl EVE_cmd_dl_burst
 731:../Libraries/FT800-FT813-5.x/tft.c **** 
 732:../Libraries/FT800-FT813-5.x/tft.c **** 
 733:../Libraries/FT800-FT813-5.x/tft.c **** 
 734:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Debug Values
 735:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (EVE_DMA)
 736:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_number_burst(120, EVE_VSIZE - 65, 26, EVE_OPT_RIGHTX, cmd_fifo_size); /* number of bytes 
 737:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 738:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, display_list_size); /* number of bytes written 
 2366              	 .loc 1 738 0
 2367 0162 FB8E     	 ldrh r3,[r7,#54]
 2368 0164 0093     	 str r3,[sp]
 2369 0166 4FF4EB70 	 mov r0,#470
 2370 016a 0A21     	 movs r1,#10
 2371 016c 1A22     	 movs r2,#26
 2372 016e 4FF40063 	 mov r3,#2048
 2373 0172 FFF7FEFF 	 bl EVE_cmd_number_burst
 739:../Libraries/FT800-FT813-5.x/tft.c **** 
 740:../Libraries/FT800-FT813-5.x/tft.c **** 		// Write current sensor value with unit
 741:../Libraries/FT800-FT813-5.x/tft.c **** 		char buffer[32]; // buffer for double to string conversion
 742:../Libraries/FT800-FT813-5.x/tft.c **** 		sprintf(buffer, "%.2lf", (G_amp_max/G_y_max)*SBuffer[*SBuffer_curidx]); // double to string conve
 2374              	 .loc 1 742 0
 2375 0176 4E4B     	 ldr r3,.L77+84
 2376 0178 D3E90001 	 ldrd r0,[r3]
 2377 017c 4D4B     	 ldr r3,.L77+88
 2378 017e D3E90023 	 ldrd r2,[r3]
 2379 0182 FFF7FEFF 	 bl __aeabi_ddiv
 2380 0186 0246     	 mov r2,r0
 2381 0188 0B46     	 mov r3,r1
 2382 018a 1446     	 mov r4,r2
 2383 018c 1D46     	 mov r5,r3
 2384 018e 7B68     	 ldr r3,[r7,#4]
 2385 0190 1B88     	 ldrh r3,[r3]
 2386 0192 5B00     	 lsls r3,r3,#1
 2387 0194 FA68     	 ldr r2,[r7,#12]
 2388 0196 1344     	 add r3,r3,r2
 2389 0198 1B88     	 ldrh r3,[r3]
 2390 019a 1846     	 mov r0,r3
 2391 019c FFF7FEFF 	 bl __aeabi_i2d
 2392 01a0 0246     	 mov r2,r0
 2393 01a2 0B46     	 mov r3,r1
 2394 01a4 2046     	 mov r0,r4
 2395 01a6 2946     	 mov r1,r5
 2396 01a8 FFF7FEFF 	 bl __aeabi_dmul
 2397 01ac 0246     	 mov r2,r0
 2398 01ae 0B46     	 mov r3,r1
 2399 01b0 1446     	 mov r4,r2
 2400 01b2 1D46     	 mov r5,r3
 2401 01b4 07F11403 	 add r3,r7,#20
 2402 01b8 1846     	 mov r0,r3
 2403 01ba 3F49     	 ldr r1,.L77+92
 2404 01bc 2246     	 mov r2,r4
 2405 01be 2B46     	 mov r3,r5
 2406 01c0 FFF7FEFF 	 bl sprintf
 743:../Libraries/FT800-FT813-5.x/tft.c **** 		strcat(buffer, unit_Sensor);
 2407              	 .loc 1 743 0
 2408 01c4 07F11403 	 add r3,r7,#20
 2409 01c8 1846     	 mov r0,r3
 2410 01ca FFF7FEFF 	 bl strlen
 2411 01ce 0346     	 mov r3,r0
 2412 01d0 1A46     	 mov r2,r3
 2413 01d2 07F11403 	 add r3,r7,#20
 2414 01d6 1344     	 add r3,r3,r2
 2415 01d8 384A     	 ldr r2,.L77+96
 2416 01da 1188     	 ldrh r1,[r2]
 2417 01dc 9278     	 ldrb r2,[r2,#2]
 2418 01de 1980     	 strh r1,[r3]
 2419 01e0 9A70     	 strb r2,[r3,#2]
 744:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_text_burst(470, 25, 26, EVE_OPT_RIGHTX, buffer);
 2420              	 .loc 1 744 0
 2421 01e2 07F11403 	 add r3,r7,#20
 2422 01e6 0093     	 str r3,[sp]
 2423 01e8 4FF4EB70 	 mov r0,#470
 2424 01ec 1921     	 movs r1,#25
 2425 01ee 1A22     	 movs r2,#26
 2426 01f0 4FF40063 	 mov r3,#2048
 2427 01f4 FFF7FEFF 	 bl EVE_cmd_text_burst
 745:../Libraries/FT800-FT813-5.x/tft.c **** 
 746:../Libraries/FT800-FT813-5.x/tft.c **** 
 747:../Libraries/FT800-FT813-5.x/tft.c **** 
 748:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// GRAPH
 749:../Libraries/FT800-FT813-5.x/tft.c **** 		///// Print static part of the Graph ---> Moved to initStaticBackground()
 750:../Libraries/FT800-FT813-5.x/tft.c **** 		//TFT_GraphStatic(1, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, 
 751:../Libraries/FT800-FT813-5.x/tft.c **** 
 752:../Libraries/FT800-FT813-5.x/tft.c **** 		///// Print dynamic part of the Graph (data & marker)
 753:../Libraries/FT800-FT813-5.x/tft.c **** 		TFT_GraphData(G_x, G_y, G_width, G_height, G_PADDING, G_y_max, SBuffer, size, SBuffer_curidx, tog
 2428              	 .loc 1 753 0
 2429 01f8 314B     	 ldr r3,.L77+100
 2430 01fa B3F800E0 	 ldrh lr,[r3]
 2431 01fe 314B     	 ldr r3,.L77+104
 2432 0200 1E88     	 ldrh r6,[r3]
 2433 0202 314B     	 ldr r3,.L77+108
 2434 0204 1D88     	 ldrh r5,[r3]
 2435 0206 314B     	 ldr r3,.L77+112
 2436 0208 1C88     	 ldrh r4,[r3]
 2437 020a 2A4B     	 ldr r3,.L77+88
 2438 020c D3E90023 	 ldrd r2,[r3]
 2439 0210 2149     	 ldr r1,.L77+60
 2440 0212 0988     	 ldrh r1,[r1]
 2441 0214 C9B2     	 uxtb r1,r1
 2442 0216 0A20     	 movs r0,#10
 2443 0218 0090     	 str r0,[sp]
 2444 021a CDE90223 	 strd r2,[sp,#8]
 2445 021e FB68     	 ldr r3,[r7,#12]
 2446 0220 0493     	 str r3,[sp,#16]
 2447 0222 7B89     	 ldrh r3,[r7,#10]
 2448 0224 0593     	 str r3,[sp,#20]
 2449 0226 7B68     	 ldr r3,[r7,#4]
 2450 0228 0693     	 str r3,[sp,#24]
 2451 022a 0791     	 str r1,[sp,#28]
 2452 022c 43F69E73 	 movw r3,#16286
 2453 0230 0893     	 str r3,[sp,#32]
 2454 0232 4FF47F03 	 mov r3,#16711680
 2455 0236 0993     	 str r3,[sp,#36]
 2456 0238 7046     	 mov r0,lr
 2457 023a 3146     	 mov r1,r6
 2458 023c 2A46     	 mov r2,r5
 2459 023e 2346     	 mov r3,r4
 2460 0240 FFF7FEFF 	 bl TFT_GraphData
 754:../Libraries/FT800-FT813-5.x/tft.c **** 
 755:../Libraries/FT800-FT813-5.x/tft.c **** 
 756:../Libraries/FT800-FT813-5.x/tft.c **** 
 757:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Finish Display list and burst
 758:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 2461              	 .loc 1 758 0
 2462 0244 0020     	 movs r0,#0
 2463 0246 FFF7FEFF 	 bl EVE_cmd_dl_burst
 759:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 2464              	 .loc 1 759 0
 2465 024a 6FF0FE00 	 mvn r0,#254
 2466 024e FFF7FEFF 	 bl EVE_cmd_dl_burst
 760:../Libraries/FT800-FT813-5.x/tft.c **** 
 761:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 2467              	 .loc 1 761 0
 2468 0252 FFF7FEFF 	 bl EVE_end_cmd_burst
 2469              	.L69:
 2470              	.LBE13:
 762:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 763:../Libraries/FT800-FT813-5.x/tft.c **** }
 2471              	 .loc 1 763 0
 2472 0256 3C37     	 adds r7,r7,#60
 2473              	.LCFI28:
 2474              	 .cfi_def_cfa_offset 20
 2475 0258 BD46     	 mov sp,r7
 2476              	.LCFI29:
 2477              	 .cfi_def_cfa_register 13
 2478              	 
 2479 025a F0BD     	 pop {r4,r5,r6,r7,pc}
 2480              	.L78:
 2481              	 .align 2
 2482              	.L77:
 2483 025c 00000000 	 .word tft_active
 2484 0260 00213000 	 .word 3154176
 2485 0264 07000026 	 .word 637534215
 2486 0268 00000000 	 .word num_dl_static
 2487 026c 124B8C00 	 .word 9194258
 2488 0270 EEF8FF04 	 .word 83884270
 2489 0274 2BA9EA00 	 .word 15378731
 2490 0278 6696AD00 	 .word 11376230
 2491 027c 0D000003 	 .word 50331661
 2492 0280 00000000 	 .word InputType
 2493 0284 3C000000 	 .word .LC8
 2494 0288 44000000 	 .word .LC9
 2495 028c 48000000 	 .word .LC10
 2496 0290 4C000000 	 .word .LC11
 2497 0294 0C000003 	 .word 50331660
 2498 0298 00000000 	 .word toggle_state_graphmode
 2499 029c 54000000 	 .word .LC12
 2500 02a0 5C000000 	 .word .LC13
 2501 02a4 0A000003 	 .word 50331658
 2502 02a8 00000000 	 .word toggle_state_dimmer
 2503 02ac 64000000 	 .word .LC14
 2504 02b0 00000000 	 .word G_amp_max
 2505 02b4 00000000 	 .word G_y_max
 2506 02b8 6C000000 	 .word .LC15
 2507 02bc 74000000 	 .word .LC16
 2508 02c0 00000000 	 .word G_x
 2509 02c4 00000000 	 .word G_y
 2510 02c8 00000000 	 .word G_width
 2511 02cc 00000000 	 .word G_height
 2512              	 .cfi_endproc
 2513              	.LFE453:
 2515              	 .section .bss.toggle_lock.12321,"aw",%nobits
 2518              	toggle_lock.12321:
 2519 0000 00       	 .space 1
 2520              	 .text
 2521              	.Letext0:
 2522              	 .file 2 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2523              	 .file 3 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2524              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_gpio.h"
 2525              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_gpio.h"
 2526              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_usic.h"
 2527              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_spi.h"
 2528              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master.h"
 2529              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io.h"
 2530              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_vadc.h"
 2531              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 2532              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
 2533              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 2534              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 2535              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 2536              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/globals.h"
 2537              	 .file 17 "../Libraries/FT800-FT813-5.x/EVE_target.h"
 2538              	 .file 18 "../Libraries/FT800-FT813-5.x/tft_data.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tft.c
                            *COM*:00000004 _msCounter
                            *COM*:00000001 tft_tick
                            *COM*:00000004 MeasurementCounter
                            *COM*:00000002 InputBuffer1_idx
                            *COM*:00000001 InputType
                            *COM*:00000001 frameover
                            *COM*:00000001 ReadData
    {standard input}:31     .data.G_x:00000000 G_x
    {standard input}:28     .data.G_x:00000000 $d
    {standard input}:38     .data.G_y:00000000 G_y
    {standard input}:35     .data.G_y:00000000 $d
    {standard input}:45     .data.G_width:00000000 G_width
    {standard input}:42     .data.G_width:00000000 $d
    {standard input}:52     .data.G_height:00000000 G_height
    {standard input}:49     .data.G_height:00000000 $d
    {standard input}:59     .rodata.unit_Sensor:00000000 unit_Sensor
    {standard input}:56     .rodata.unit_Sensor:00000000 $d
    {standard input}:66     .data.G_amp_max:00000000 G_amp_max
    {standard input}:63     .data.G_amp_max:00000000 $d
    {standard input}:74     .data.G_t_max:00000000 G_t_max
    {standard input}:71     .data.G_t_max:00000000 $d
    {standard input}:82     .data.G_y_max:00000000 G_y_max
    {standard input}:79     .data.G_y_max:00000000 $d
    {standard input}:90     .data.G_h_grid_lines:00000000 G_h_grid_lines
    {standard input}:87     .data.G_h_grid_lines:00000000 $d
    {standard input}:98     .data.G_v_grid_lines:00000000 G_v_grid_lines
    {standard input}:95     .data.G_v_grid_lines:00000000 $d
                            *COM*:00000004 num_dl_static
    {standard input}:106    .bss.tft_active:00000000 tft_active
    {standard input}:107    .bss.tft_active:00000000 $d
    {standard input}:113    .bss.toggle_state_graphmode:00000000 toggle_state_graphmode
    {standard input}:110    .bss.toggle_state_graphmode:00000000 $d
    {standard input}:120    .bss.toggle_state_dimmer:00000000 toggle_state_dimmer
    {standard input}:117    .bss.toggle_state_dimmer:00000000 $d
    {standard input}:125    .rodata:00000000 $d
    {standard input}:153    .text.TFT_GraphStatic:00000000 $t
    {standard input}:158    .text.TFT_GraphStatic:00000000 TFT_GraphStatic
    {standard input}:460    .text.TFT_GraphStatic:000002a0 $d
    {standard input}:470    .text.TFT_GraphStatic:000002c0 $t
    {standard input}:959    .text.TFT_GraphStatic:0000073c $d
    {standard input}:964    .text.TFT_GraphStatic:00000744 $t
    {standard input}:1226   .text.TFT_GraphStatic:000009bc $d
    {standard input}:1232   .text.TFT_GraphData:00000000 $t
    {standard input}:1237   .text.TFT_GraphData:00000000 TFT_GraphData
    {standard input}:1515   .text.TFT_GraphData:0000020c $d
    {standard input}:1520   .text.touch_calibrate:00000000 $t
    {standard input}:1525   .text.touch_calibrate:00000000 touch_calibrate
    {standard input}:1568   .text.touch_calibrate:00000040 $d
    {standard input}:1580   .text.TFT_display_init_screen:00000000 $t
    {standard input}:1585   .text.TFT_display_init_screen:00000000 TFT_display_init_screen
    {standard input}:1652   .text.TFT_display_init_screen:00000070 $d
    {standard input}:1668   .text.initStaticGraphBackground:00000000 $t
    {standard input}:1673   .text.initStaticGraphBackground:00000000 initStaticGraphBackground
    {standard input}:1840   .text.initStaticGraphBackground:0000013c $d
    {standard input}:1866   .text.TFT_init:00000000 $t
    {standard input}:1871   .text.TFT_init:00000000 TFT_init
    {standard input}:1941   .text.TFT_init:0000006c $d
    {standard input}:1949   .text.TFT_touch:00000000 $t
    {standard input}:1954   .text.TFT_touch:00000000 TFT_touch
    {standard input}:1991   .text.TFT_touch:00000028 $d
    {standard input}:2005   .text.TFT_touch:00000060 $t
    {standard input}:2123   .text.TFT_touch:00000100 $d
    {standard input}:2518   .bss.toggle_lock.12321:00000000 toggle_lock.12321
    {standard input}:2161   .text.TFT_display:00000000 $t
    {standard input}:2166   .text.TFT_display:00000000 TFT_display
    {standard input}:2483   .text.TFT_display:0000025c $d
    {standard input}:2519   .bss.toggle_lock.12321:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_d2iz
__aeabi_dsub
__aeabi_dcmpeq
EVE_cmd_dl
EVE_cmd_dl_burst
EVE_cmd_text
EVE_cmd_text_burst
EVE_cmd_number
EVE_cmd_number_burst
floor
sprintf
ceil
EVE_memWrite32
EVE_cmd_inflate
EVE_start_cmd_burst
EVE_cmd_setbitmap_burst
EVE_end_cmd_burst
logo_init
EVE_cmd_bgcolor
EVE_busy
EVE_memRead16
EVE_cmd_memcpy
EVE_init
EVE_memWrite8
EVE_cmd_bgcolor_burst
EVE_memRead8
EVE_cmd_append_burst
EVE_cmd_gradcolor_burst
EVE_cmd_fgcolor_burst
EVE_cmd_button_burst
EVE_cmd_toggle_burst
strlen
