   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tft.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm _msCounter,4,4
  20              	 .comm tft_tick,1,1
  21              	 .comm MeasurementCounter,4,4
  22              	 .comm InputBuffer1_idx,2,2
  23              	 .comm InputType,1,1
  24              	 .comm frameover,1,1
  25              	 .comm ReadData,1,1
  26              	 .global G_x
  27              	 .section .data.G_x,"aw",%progbits
  28              	 .align 1
  31              	G_x:
  32 0000 0A00     	 .short 10
  33              	 .global G_y
  34              	 .section .data.G_y,"aw",%progbits
  35              	 .align 1
  38              	G_y:
  39 0000 5100     	 .short 81
  40              	 .global G_width
  41              	 .section .data.G_width,"aw",%progbits
  42              	 .align 1
  45              	G_width:
  46 0000 B801     	 .short 440
  47              	 .global G_height
  48              	 .section .data.G_height,"aw",%progbits
  49              	 .align 1
  52              	G_height:
  53 0000 A100     	 .short 161
  54              	 .global unit_Sensor
  55              	 .section .rodata.unit_Sensor,"a",%progbits
  56              	 .align 2
  59              	unit_Sensor:
  60 0000 205600   	 .ascii " V\000"
  61              	 .global G_amp_max
  62 0003 00       	 .section .data.G_amp_max,"aw",%progbits
  63              	 .align 3
  66              	G_amp_max:
  67 0000 00000000 	 .word 0
  68 0004 00002440 	 .word 1076101120
  69              	 .global G_t_max
  70              	 .section .data.G_t_max,"aw",%progbits
  71              	 .align 3
  74              	G_t_max:
  75 0000 9A999999 	 .word -1717986918
  76 0004 99990140 	 .word 1073846681
  77              	 .global G_y_max
  78              	 .section .data.G_y_max,"aw",%progbits
  79              	 .align 3
  82              	G_y_max:
  83 0000 00000000 	 .word 0
  84 0004 00FEAF40 	 .word 1085275648
  85              	 .global G_h_grid_lines
  86              	 .section .data.G_h_grid_lines,"aw",%progbits
  87              	 .align 3
  90              	G_h_grid_lines:
  91 0000 00000000 	 .word 0
  92 0004 00001040 	 .word 1074790400
  93              	 .global G_v_grid_lines
  94              	 .section .data.G_v_grid_lines,"aw",%progbits
  95              	 .align 3
  98              	G_v_grid_lines:
  99 0000 9A999999 	 .word -1717986918
 100 0004 99990140 	 .word 1073846681
 101              	 .comm num_dl_static,4,4
 102              	 .global tft_active
 103              	 .section .bss.tft_active,"aw",%nobits
 106              	tft_active:
 107 0000 00       	 .space 1
 108              	 .global TFT_cur_Menu
 109              	 .section .bss.TFT_cur_Menu,"aw",%nobits
 110              	 .align 2
 113              	TFT_cur_Menu:
 114 0000 00000000 	 .space 4
 115              	 .global TFT_display_cur_Menu__fptr_arr
 116              	 .section .data.TFT_display_cur_Menu__fptr_arr,"aw",%progbits
 117              	 .align 2
 120              	TFT_display_cur_Menu__fptr_arr:
 121 0000 00000000 	 .word TFT_display_menu0
 122 0004 00000000 	 .word TFT_display_menu1
 123              	 .global TFT_touch_cur_Menu__fptr_arr
 124              	 .section .data.TFT_touch_cur_Menu__fptr_arr,"aw",%progbits
 125              	 .align 2
 128              	TFT_touch_cur_Menu__fptr_arr:
 129 0000 00000000 	 .word TFT_touch_menu0
 130 0004 00000000 	 .word TFT_touch_menu1
 131              	 .global display_list_size
 132              	 .section .bss.display_list_size,"aw",%nobits
 133              	 .align 1
 136              	display_list_size:
 137 0000 0000     	 .space 2
 138              	 .global tracker
 139              	 .section .bss.tracker,"aw",%nobits
 140              	 .align 2
 143              	tracker:
 144 0000 00000000 	 .space 4
 145              	 .global TouchXY
 146              	 .section .bss.TouchXY,"aw",%nobits
 147              	 .align 2
 150              	TouchXY:
 151 0000 00000000 	 .space 4
 152              	 .global BGtouchInitial_X
 153              	 .section .data.BGtouchInitial_X,"aw",%progbits
 154              	 .align 1
 157              	BGtouchInitial_X:
 158 0000 0080     	 .short -32768
 159              	 .global BGtouchInitial_Y
 160              	 .section .data.BGtouchInitial_Y,"aw",%progbits
 161              	 .align 1
 164              	BGtouchInitial_Y:
 165 0000 0080     	 .short -32768
 166              	 .global toggle_lock
 167              	 .section .bss.toggle_lock,"aw",%nobits
 170              	toggle_lock:
 171 0000 00       	 .space 1
 172              	 .global toggle_state_graphmode
 173              	 .section .bss.toggle_state_graphmode,"aw",%nobits
 174              	 .align 1
 177              	toggle_state_graphmode:
 178 0000 0000     	 .space 2
 179              	 .global toggle_state_dimmer
 180              	 .section .bss.toggle_state_dimmer,"aw",%nobits
 181              	 .align 1
 184              	toggle_state_dimmer:
 185 0000 0000     	 .space 2
 186              	 .global __aeabi_ui2d
 187              	 .global __aeabi_ddiv
 188              	 .section .rodata
 189              	 .align 2
 190              	.LC3:
 191 0000 5600     	 .ascii "V\000"
 192 0002 0000     	 .align 2
 193              	.LC4:
 194 0004 7400     	 .ascii "t\000"
 195              	 .global __aeabi_i2d
 196              	 .global __aeabi_dmul
 197              	 .global __aeabi_d2uiz
 198              	 .global __aeabi_d2iz
 199              	 .global __aeabi_dsub
 200              	 .global __aeabi_dcmpeq
 201 0006 0000     	 .align 2
 202              	.LC5:
 203 0008 252E316C 	 .ascii "%.1lf\000"
 203      6600
 204 000e 0000     	 .align 2
 205              	.LC0:
 206 0010 00000000 	 .word EVE_cmd_dl
 207 0014 00000000 	 .word EVE_cmd_dl_burst
 208              	 .align 2
 209              	.LC1:
 210 0018 00000000 	 .word EVE_cmd_text
 211 001c 00000000 	 .word EVE_cmd_text_burst
 212              	 .align 2
 213              	.LC2:
 214 0020 00000000 	 .word EVE_cmd_number
 215 0024 00000000 	 .word EVE_cmd_number_burst
 216              	 .section .text.TFT_GraphStatic,"ax",%progbits
 217              	 .align 2
 218              	 .global TFT_GraphStatic
 219              	 .thumb
 220              	 .thumb_func
 222              	TFT_GraphStatic:
 223              	.LFB446:
 224              	 .file 1 "../Libraries/FT800-FT813-5.x/tft.c"
   1:../Libraries/FT800-FT813-5.x/tft.c **** /*
   2:../Libraries/FT800-FT813-5.x/tft.c **** @file    		tft.c
   3:../Libraries/FT800-FT813-5.x/tft.c **** @brief   		Implementation of display communication using the EVE Library. Meant to display a menu a
   4:../Libraries/FT800-FT813-5.x/tft.c **** @version 		2.0 (base lib version was 1.13)
   5:../Libraries/FT800-FT813-5.x/tft.c **** @date    		2020-09-05
   6:../Libraries/FT800-FT813-5.x/tft.c **** @initialauthor  Rudolph Riedel
   7:../Libraries/FT800-FT813-5.x/tft.c **** @author 		RS (Rene Santeler & Stefan Reinm√ºller) @ MCI 2020/21 (initially created by Rudolph Riede
   8:../Libraries/FT800-FT813-5.x/tft.c **** 
   9:../Libraries/FT800-FT813-5.x/tft.c **** @section History
  10:../Libraries/FT800-FT813-5.x/tft.c **** 2.0 (adapted from Rudolph Riedel base version 1.13 - below changes are from RS 2020/21)
  11:../Libraries/FT800-FT813-5.x/tft.c **** - Added color scheme, adaptable banner, dynamic graph implementation (TFT_GraphStatic & TFT_GraphDa
  12:../Libraries/FT800-FT813-5.x/tft.c **** - Adapted TFT_init to only do the most necessary thins for init (no static DL creation! you need to
  13:../Libraries/FT800-FT813-5.x/tft.c **** 
  14:../Libraries/FT800-FT813-5.x/tft.c **** // See https://brtchip.com/eve-toolchains/ for helpful Tools
  15:../Libraries/FT800-FT813-5.x/tft.c ****  */
  16:../Libraries/FT800-FT813-5.x/tft.c **** 
  17:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdint.h>
  18:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdio.h>
  19:../Libraries/FT800-FT813-5.x/tft.c **** #include <string.h>
  20:../Libraries/FT800-FT813-5.x/tft.c **** #include <math.h>
  21:../Libraries/FT800-FT813-5.x/tft.c **** #include <globals.h>
  22:../Libraries/FT800-FT813-5.x/tft.c **** #include "EVE.h"
  23:../Libraries/FT800-FT813-5.x/tft.c **** #include "tft_data.h"
  24:../Libraries/FT800-FT813-5.x/tft.c **** 
  25:../Libraries/FT800-FT813-5.x/tft.c **** 
  26:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Banner line strip edge positions (from left to right: Y1 is held horizontal till X1, in
  27:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y1 66
  28:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y2 50
  29:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X1 280
  30:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X2 320
  31:../Libraries/FT800-FT813-5.x/tft.c **** 
  32:../Libraries/FT800-FT813-5.x/tft.c **** 
  33:../Libraries/FT800-FT813-5.x/tft.c **** /////////// COLOR SCHEME
  34:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BGCOLOR       0x00F5F1EE // background
  35:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_TEXTCOLOR     0x00F3CD29 // main text
  36:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BANNERCOLOR   0x0064584B // banner
  37:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_DIVIDERCOLOR  0x00F3CD29 // divider
  38:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCOLOR  	   0x00EAA92B // button
  39:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCTSCOLOR   0x00AD9666 // button contrast
  40:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNTXTCOLOR   0x00FFF8EE // button text
  41:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNGRDCOLOR   0x008C4B12 // 3D gradient color
  42:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_AXISCOLOR    0x003B1E0B // graph axis
  43:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_GRIDCOLOR    0x00C5DAE2 // graph grid
  44:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA1COLOR   0x00003F9E // graph data 1
  45:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA2COLOR   0x0064584B // graph data 2 (alternative/additional color)
  46:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_POSMARKCOLOR 0x00ff0000 // graph position marker
  47:../Libraries/FT800-FT813-5.x/tft.c **** 
  48:../Libraries/FT800-FT813-5.x/tft.c **** /* simple pre-defined colors */
  49:../Libraries/FT800-FT813-5.x/tft.c **** #define RED		0xff0000UL
  50:../Libraries/FT800-FT813-5.x/tft.c **** #define ORANGE	0xffa500UL
  51:../Libraries/FT800-FT813-5.x/tft.c **** #define GREEN	0x00ff00UL
  52:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE	0x0000ffUL
  53:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE_1	0x5dade2L
  54:../Libraries/FT800-FT813-5.x/tft.c **** #define YELLOW	0xffff00UL
  55:../Libraries/FT800-FT813-5.x/tft.c **** #define PINK	0xff00ffUL
  56:../Libraries/FT800-FT813-5.x/tft.c **** #define PURPLE	0x800080UL
  57:../Libraries/FT800-FT813-5.x/tft.c **** #define WHITE	0xffffffUL
  58:../Libraries/FT800-FT813-5.x/tft.c **** #define BLACK	0x000000UL
  59:../Libraries/FT800-FT813-5.x/tft.c **** 
  60:../Libraries/FT800-FT813-5.x/tft.c **** 
  61:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions
  62:../Libraries/FT800-FT813-5.x/tft.c **** // Graph position and size. Here -> quick an dirty estimation where x, y, width and height must be 
  63:../Libraries/FT800-FT813-5.x/tft.c **** #define G_PADDING 10 									// Only needed because we want to calc how much width and height can 
  64:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_x        = 10;													 // 10 px from left to leave some room
  65:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_y      	= (LAYOUT_Y1 + 15);										 // end of banner plus 10 to leave some room  (for 
  66:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_width 	= (0 + EVE_HSIZE - 10 - (2*G_PADDING) - 10);			   // actual width of the data are
  67:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_height	= (0 + EVE_VSIZE - (LAYOUT_Y1 + 15) - (2*G_PADDING) - 10); // actual height of th
  68:../Libraries/FT800-FT813-5.x/tft.c **** // axes
  69:../Libraries/FT800-FT813-5.x/tft.c **** const char unit_Sensor[] = " V"; // unit string used at print of current sensor value
  70:../Libraries/FT800-FT813-5.x/tft.c **** double G_amp_max = 10.0; // volts - used at print of vertical grid value labels
  71:../Libraries/FT800-FT813-5.x/tft.c **** double G_t_max = 2.2;    // seconds - used at print of horizontal grid value labels
  72:../Libraries/FT800-FT813-5.x/tft.c **** // data properties
  73:../Libraries/FT800-FT813-5.x/tft.c **** double G_y_max = 4095.0; // maximum allowed amplitude y (here for 12bit sensor value)
  74:../Libraries/FT800-FT813-5.x/tft.c **** // grid
  75:../Libraries/FT800-FT813-5.x/tft.c **** double G_h_grid_lines = 4.0; // number of grey horizontal grid lines
  76:../Libraries/FT800-FT813-5.x/tft.c **** double G_v_grid_lines = 2.2; // number of grey vertical grid lines
  77:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions END
  78:../Libraries/FT800-FT813-5.x/tft.c **** 
  79:../Libraries/FT800-FT813-5.x/tft.c **** 
  80:../Libraries/FT800-FT813-5.x/tft.c **** // Memory-map definitions
  81:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_LOGO 0x00000000 // start-address of logo, needs about 20228 bytes of memory. Will be wr
  82:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_DL_STATIC (EVE_RAM_G_SIZE - 4096) // 0xff000 -> Start-address of the static part of the
  83:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t num_dl_static; // amount of bytes in the static part of our display-list
  84:../Libraries/FT800-FT813-5.x/tft.c **** 
  85:../Libraries/FT800-FT813-5.x/tft.c **** 
  86:../Libraries/FT800-FT813-5.x/tft.c **** /////////// General Variables
  87:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t tft_active = 0;  // Prevents TFT_display of doing anything if EVE_init isn't successful of 
  88:../Libraries/FT800-FT813-5.x/tft.c **** 
  89:../Libraries/FT800-FT813-5.x/tft.c **** // Current menu display function pointer - At the end of the TFT_display() the function referenced 
  90:../Libraries/FT800-FT813-5.x/tft.c **** int TFT_cur_Menu = 0;
  91:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu0(void);
  92:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu1(void);
  93:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_display_cur_Menu__fptr_arr[])(void) = {&TFT_display_menu0, &TFT_display_menu1};
  94:../Libraries/FT800-FT813-5.x/tft.c **** 
  95:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu0(uint8_t);
  96:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu1(uint8_t);
  97:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_touch_cur_Menu__fptr_arr[])(uint8_t) = {&TFT_touch_menu0, &TFT_touch_menu1};
  98:../Libraries/FT800-FT813-5.x/tft.c **** 
  99:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Debug
 100:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t display_list_size = 0; // Currently size of the display-list from register. Used by TFT_di
 101:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t tracker = 0; // Value of tracker register (1.byte=tag, 2.byte=value). Used by TFT_display(
 102:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t TouchXY = 0; // Currently touched X and Y coordinate from register (1.byte=X, 2.byte=Y). U
 103:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t BGtouchInitial_X = 32768;
 104:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t BGtouchInitial_Y = 32768;
 105:../Libraries/FT800-FT813-5.x/tft.c **** 
 106:../Libraries/FT800-FT813-5.x/tft.c **** 
 107:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Button states
 108:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t toggle_lock = 0; // "Debouncing of touches" -> If something is touched, this is set to prev
 109:../Libraries/FT800-FT813-5.x/tft.c **** 
 110:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_graphmode = 0;
 111:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_dimmer = 0;
 112:../Libraries/FT800-FT813-5.x/tft.c **** 
 113:../Libraries/FT800-FT813-5.x/tft.c **** 
 114:../Libraries/FT800-FT813-5.x/tft.c **** 
 115:../Libraries/FT800-FT813-5.x/tft.c **** 
 116:../Libraries/FT800-FT813-5.x/tft.c **** 
 117:../Libraries/FT800-FT813-5.x/tft.c **** 
 118:../Libraries/FT800-FT813-5.x/tft.c **** 
 119:../Libraries/FT800-FT813-5.x/tft.c **** 
 120:../Libraries/FT800-FT813-5.x/tft.c **** 
 121:../Libraries/FT800-FT813-5.x/tft.c **** 
 122:../Libraries/FT800-FT813-5.x/tft.c **** 
 123:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphStatic(uint8_t burst, uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16
 225              	 .loc 1 123 0
 226              	 .cfi_startproc
 227              	 
 228              	 
 229 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 230              	.LCFI0:
 231              	 .cfi_def_cfa_offset 20
 232              	 .cfi_offset 4,-20
 233              	 .cfi_offset 5,-16
 234              	 .cfi_offset 6,-12
 235              	 .cfi_offset 7,-8
 236              	 .cfi_offset 14,-4
 237 0002 A3B0     	 sub sp,sp,#140
 238              	.LCFI1:
 239              	 .cfi_def_cfa_offset 160
 240 0004 02AF     	 add r7,sp,#8
 241              	.LCFI2:
 242              	 .cfi_def_cfa 7,152
 243 0006 0446     	 mov r4,r0
 244 0008 0846     	 mov r0,r1
 245 000a 1146     	 mov r1,r2
 246 000c 1A46     	 mov r2,r3
 247 000e 2346     	 mov r3,r4
 248 0010 FB71     	 strb r3,[r7,#7]
 249 0012 0346     	 mov r3,r0
 250 0014 BB80     	 strh r3,[r7,#4]
 251 0016 0B46     	 mov r3,r1
 252 0018 7B80     	 strh r3,[r7,#2]
 253 001a 1346     	 mov r3,r2
 254 001c 3B80     	 strh r3,[r7]
 124:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the non-dynamic parts of an Graph to the TFT (axes & labels, grids and values, axis-arro
 125:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 126:../Libraries/FT800-FT813-5.x/tft.c **** 	///  burst	... determines if the normal or the burst version of the EVE Library is used to transmi
 127:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 128:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 129:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 130:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 131:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding ... clearance from the outer corners (x,y) to the axes
 132:../Libraries/FT800-FT813-5.x/tft.c **** 	///  amp_max ... maximum represented value of amplitude (e.g. 10 Volts), will be used at 100% hori
 133:../Libraries/FT800-FT813-5.x/tft.c **** 	///  t_max 	 ... maximum represented value of time (e.g. 2.2 Seconds), will be used at 100% horizo
 134:../Libraries/FT800-FT813-5.x/tft.c **** 	///  h_grid_lines ... number of horizontal grid lines
 135:../Libraries/FT800-FT813-5.x/tft.c **** 	///  v_grid_lines ... number of vertical grid lines
 136:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: The predefined GRAPH_AXISCOLOR and GRAPH_GRIDCOLOR are used directly!
 137:../Libraries/FT800-FT813-5.x/tft.c **** 
 138:../Libraries/FT800-FT813-5.x/tft.c **** 	// Define a array of function pointers for every used "EVE_cmd_dl..." function. First one is norma
 139:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_dl__fptr_arr[])(uint32_t) = {EVE_cmd_dl, EVE_cmd_dl_burst};
 255              	 .loc 1 139 0
 256 001e A04A     	 ldr r2,.L20
 257 0020 07F13803 	 add r3,r7,#56
 258 0024 92E80300 	 ldmia r2,{r0,r1}
 259 0028 83E80300 	 stmia r3,{r0,r1}
 140:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_text__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, const char*) = {EVE_cmd_text
 260              	 .loc 1 140 0
 261 002c 9D4A     	 ldr r2,.L20+4
 262 002e 07F13003 	 add r3,r7,#48
 263 0032 92E80300 	 ldmia r2,{r0,r1}
 264 0036 83E80300 	 stmia r3,{r0,r1}
 141:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_number__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, int32_t) = {EVE_cmd_number
 265              	 .loc 1 141 0
 266 003a 9B4A     	 ldr r2,.L20+8
 267 003c 07F12803 	 add r3,r7,#40
 268 0040 92E80300 	 ldmia r2,{r0,r1}
 269 0044 83E80300 	 stmia r3,{r0,r1}
 142:../Libraries/FT800-FT813-5.x/tft.c **** 
 143:../Libraries/FT800-FT813-5.x/tft.c **** 
 144:../Libraries/FT800-FT813-5.x/tft.c **** 	// Internal offsets and sizes
 145:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t arrow_offset = 5;   // Offset of the ARROW HEAD corners
 270              	 .loc 1 145 0
 271 0048 0523     	 movs r3,#5
 272 004a 87F86F30 	 strb r3,[r7,#111]
 146:../Libraries/FT800-FT813-5.x/tft.c **** 
 147:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t grid_linewidth = 9; // linewidth of the grid in 1/16 pixel (16=1px)
 273              	 .loc 1 147 0
 274 004e 0923     	 movs r3,#9
 275 0050 87F86E30 	 strb r3,[r7,#110]
 148:../Libraries/FT800-FT813-5.x/tft.c **** 
 149:../Libraries/FT800-FT813-5.x/tft.c **** 	#define axis_lbl_txt_size 26 	  // Font for axis labels
 150:../Libraries/FT800-FT813-5.x/tft.c **** 	#define grid_lbl_txt_size 20 	  // Font for grid labels
 151:../Libraries/FT800-FT813-5.x/tft.c **** 
 152:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_x = 6;  // Offset used to print the horizontal axis label at the right
 276              	 .loc 1 152 0
 277 0054 0623     	 movs r3,#6
 278 0056 87F86D30 	 strb r3,[r7,#109]
 153:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_y = 20; // Offset used to print the horizontal axis label at the right
 279              	 .loc 1 153 0
 280 005a 1423     	 movs r3,#20
 281 005c 87F86C30 	 strb r3,[r7,#108]
 154:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_x = 2;  // Offset used to print the vertical axis label at the right p
 282              	 .loc 1 154 0
 283 0060 0223     	 movs r3,#2
 284 0062 87F86B30 	 strb r3,[r7,#107]
 155:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_y = 22; // Offset used to print the vertical axis label at the right p
 285              	 .loc 1 155 0
 286 0066 1623     	 movs r3,#22
 287 0068 87F86A30 	 strb r3,[r7,#106]
 156:../Libraries/FT800-FT813-5.x/tft.c **** 
 157:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_x = 3;  // Offset used to print the horizontal grid labels (numbers)
 288              	 .loc 1 157 0
 289 006c 0323     	 movs r3,#3
 290 006e 87F86930 	 strb r3,[r7,#105]
 158:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_y = 10; // Offset used to print the horizontal grid labels (numbers)
 291              	 .loc 1 158 0
 292 0072 0A23     	 movs r3,#10
 293 0074 87F86830 	 strb r3,[r7,#104]
 159:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_x = 7;  // Offset used to print the vertical grid labels (numbers) a
 294              	 .loc 1 159 0
 295 0078 0723     	 movs r3,#7
 296 007a 87F86730 	 strb r3,[r7,#103]
 160:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_y = 0;  // Offset used to print the vertical grid labels (numbers) a
 297              	 .loc 1 160 0
 298 007e 0023     	 movs r3,#0
 299 0080 87F86630 	 strb r3,[r7,#102]
 161:../Libraries/FT800-FT813-5.x/tft.c **** 
 162:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Calculate pixels between lines and labels of the grid
 163:../Libraries/FT800-FT813-5.x/tft.c **** 	// Used by grid lines and labels (space between them)
 164:../Libraries/FT800-FT813-5.x/tft.c **** 	double widthPerSection = (double)(width)/v_grid_lines;
 300              	 .loc 1 164 0
 301 0084 3B88     	 ldrh r3,[r7]
 302 0086 1846     	 mov r0,r3
 303 0088 FFF7FEFF 	 bl __aeabi_ui2d
 304 008c 0246     	 mov r2,r0
 305 008e 0B46     	 mov r3,r1
 306 0090 1046     	 mov r0,r2
 307 0092 1946     	 mov r1,r3
 308 0094 D7E92E23 	 ldrd r2,[r7,#184]
 309 0098 FFF7FEFF 	 bl __aeabi_ddiv
 310 009c 0246     	 mov r2,r0
 311 009e 0B46     	 mov r3,r1
 312 00a0 C7E91623 	 strd r2,[r7,#88]
 165:../Libraries/FT800-FT813-5.x/tft.c **** 	double heightPerSection = (double)(height)/h_grid_lines;
 313              	 .loc 1 165 0
 314 00a4 B7F89830 	 ldrh r3,[r7,#152]
 315 00a8 1846     	 mov r0,r3
 316 00aa FFF7FEFF 	 bl __aeabi_ui2d
 317 00ae 0246     	 mov r2,r0
 318 00b0 0B46     	 mov r3,r1
 319 00b2 1046     	 mov r0,r2
 320 00b4 1946     	 mov r1,r3
 321 00b6 D7E92C23 	 ldrd r2,[r7,#176]
 322 00ba FFF7FEFF 	 bl __aeabi_ddiv
 323 00be 0246     	 mov r2,r0
 324 00c0 0B46     	 mov r3,r1
 325 00c2 C7E91423 	 strd r2,[r7,#80]
 166:../Libraries/FT800-FT813-5.x/tft.c **** 
 167:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Axes LABELS
 168:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 326              	 .loc 1 168 0
 327 00c6 FB79     	 ldrb r3,[r7,#7]
 328 00c8 9B00     	 lsls r3,r3,#2
 329 00ca 07F18002 	 add r2,r7,#128
 330 00ce 1344     	 add r3,r3,r2
 331 00d0 53F8483C 	 ldr r3,[r3,#-72]
 332 00d4 7548     	 ldr r0,.L20+12
 333 00d6 9847     	 blx r3
 169:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding         + h_ax_lbl_comp_x, y + padding          - h_a
 334              	 .loc 1 169 0
 335 00d8 FB79     	 ldrb r3,[r7,#7]
 336 00da 9B00     	 lsls r3,r3,#2
 337 00dc 07F18002 	 add r2,r7,#128
 338 00e0 1344     	 add r3,r3,r2
 339 00e2 53F8504C 	 ldr r4,[r3,#-80]
 340 00e6 BA88     	 ldrh r2,[r7,#4]
 341 00e8 B7F89C30 	 ldrh r3,[r7,#156]
 342 00ec 1344     	 add r3,r3,r2
 343 00ee 9AB2     	 uxth r2,r3
 344 00f0 97F86D30 	 ldrb r3,[r7,#109]
 345 00f4 9BB2     	 uxth r3,r3
 346 00f6 1344     	 add r3,r3,r2
 347 00f8 9BB2     	 uxth r3,r3
 348 00fa 99B2     	 uxth r1,r3
 349 00fc 7A88     	 ldrh r2,[r7,#2]
 350 00fe B7F89C30 	 ldrh r3,[r7,#156]
 351 0102 1344     	 add r3,r3,r2
 352 0104 9AB2     	 uxth r2,r3
 353 0106 97F86C30 	 ldrb r3,[r7,#108]
 354 010a 9BB2     	 uxth r3,r3
 355 010c D31A     	 subs r3,r2,r3
 356 010e 9BB2     	 uxth r3,r3
 357 0110 9BB2     	 uxth r3,r3
 358 0112 09B2     	 sxth r1,r1
 359 0114 1AB2     	 sxth r2,r3
 360 0116 664B     	 ldr r3,.L20+16
 361 0118 0093     	 str r3,[sp]
 362 011a 0846     	 mov r0,r1
 363 011c 1146     	 mov r1,r2
 364 011e 1A22     	 movs r2,#26
 365 0120 0023     	 movs r3,#0
 366 0122 A047     	 blx r4
 170:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding + width + v_ax_lbl_comp_x, y + padding + height - v_a
 367              	 .loc 1 170 0
 368 0124 FB79     	 ldrb r3,[r7,#7]
 369 0126 9B00     	 lsls r3,r3,#2
 370 0128 07F18002 	 add r2,r7,#128
 371 012c 1344     	 add r3,r3,r2
 372 012e 53F8504C 	 ldr r4,[r3,#-80]
 373 0132 BA88     	 ldrh r2,[r7,#4]
 374 0134 B7F89C30 	 ldrh r3,[r7,#156]
 375 0138 1344     	 add r3,r3,r2
 376 013a 9AB2     	 uxth r2,r3
 377 013c 3B88     	 ldrh r3,[r7]
 378 013e 1344     	 add r3,r3,r2
 379 0140 9AB2     	 uxth r2,r3
 380 0142 97F86B30 	 ldrb r3,[r7,#107]
 381 0146 9BB2     	 uxth r3,r3
 382 0148 1344     	 add r3,r3,r2
 383 014a 9BB2     	 uxth r3,r3
 384 014c 99B2     	 uxth r1,r3
 385 014e 7A88     	 ldrh r2,[r7,#2]
 386 0150 B7F89C30 	 ldrh r3,[r7,#156]
 387 0154 1344     	 add r3,r3,r2
 388 0156 9AB2     	 uxth r2,r3
 389 0158 B7F89830 	 ldrh r3,[r7,#152]
 390 015c 1344     	 add r3,r3,r2
 391 015e 9AB2     	 uxth r2,r3
 392 0160 97F86A30 	 ldrb r3,[r7,#106]
 393 0164 9BB2     	 uxth r3,r3
 394 0166 D31A     	 subs r3,r2,r3
 395 0168 9BB2     	 uxth r3,r3
 396 016a 9BB2     	 uxth r3,r3
 397 016c 09B2     	 sxth r1,r1
 398 016e 1AB2     	 sxth r2,r3
 399 0170 504B     	 ldr r3,.L20+20
 400 0172 0093     	 str r3,[sp]
 401 0174 0846     	 mov r0,r1
 402 0176 1146     	 mov r1,r2
 403 0178 1A22     	 movs r2,#26
 404 017a 0023     	 movs r3,#0
 405 017c A047     	 blx r4
 171:../Libraries/FT800-FT813-5.x/tft.c **** 
 172:../Libraries/FT800-FT813-5.x/tft.c **** 	/// AXES lines
 173:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 174:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINES);
 406              	 .loc 1 174 0
 407 017e FB79     	 ldrb r3,[r7,#7]
 408 0180 9B00     	 lsls r3,r3,#2
 409 0182 07F18002 	 add r2,r7,#128
 410 0186 1344     	 add r3,r3,r2
 411 0188 53F8483C 	 ldr r3,[r3,#-72]
 412 018c 4A48     	 ldr r0,.L20+24
 413 018e 9847     	 blx r3
 175:../Libraries/FT800-FT813-5.x/tft.c **** 	// left vertical line (Amplitude)
 176:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y));
 414              	 .loc 1 176 0
 415 0190 FB79     	 ldrb r3,[r7,#7]
 416 0192 9B00     	 lsls r3,r3,#2
 417 0194 07F18002 	 add r2,r7,#128
 418 0198 1344     	 add r3,r3,r2
 419 019a 53F8483C 	 ldr r3,[r3,#-72]
 420 019e B988     	 ldrh r1,[r7,#4]
 421 01a0 B7F89C20 	 ldrh r2,[r7,#156]
 422 01a4 0A44     	 add r2,r2,r1
 423 01a6 C2F30E02 	 ubfx r2,r2,#0,#15
 424 01aa D103     	 lsls r1,r2,#15
 425 01ac 7A88     	 ldrh r2,[r7,#2]
 426 01ae C2F30E02 	 ubfx r2,r2,#0,#15
 427 01b2 0A43     	 orrs r2,r2,r1
 428 01b4 42F08042 	 orr r2,r2,#1073741824
 429 01b8 1046     	 mov r0,r2
 430 01ba 9847     	 blx r3
 177:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y + padding + height + padding));
 431              	 .loc 1 177 0
 432 01bc FB79     	 ldrb r3,[r7,#7]
 433 01be 9B00     	 lsls r3,r3,#2
 434 01c0 07F18002 	 add r2,r7,#128
 435 01c4 1344     	 add r3,r3,r2
 436 01c6 53F8483C 	 ldr r3,[r3,#-72]
 437 01ca B988     	 ldrh r1,[r7,#4]
 438 01cc B7F89C20 	 ldrh r2,[r7,#156]
 439 01d0 0A44     	 add r2,r2,r1
 440 01d2 C2F30E02 	 ubfx r2,r2,#0,#15
 441 01d6 D103     	 lsls r1,r2,#15
 442 01d8 7888     	 ldrh r0,[r7,#2]
 443 01da B7F89C20 	 ldrh r2,[r7,#156]
 444 01de 1044     	 add r0,r0,r2
 445 01e0 B7F89820 	 ldrh r2,[r7,#152]
 446 01e4 1044     	 add r0,r0,r2
 447 01e6 B7F89C20 	 ldrh r2,[r7,#156]
 448 01ea 0244     	 add r2,r2,r0
 449 01ec C2F30E02 	 ubfx r2,r2,#0,#15
 450 01f0 0A43     	 orrs r2,r2,r1
 451 01f2 42F08042 	 orr r2,r2,#1073741824
 452 01f6 1046     	 mov r0,r2
 453 01f8 9847     	 blx r3
 178:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal line (Time)
 179:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x                            , y + padding + height ));
 454              	 .loc 1 179 0
 455 01fa FB79     	 ldrb r3,[r7,#7]
 456 01fc 9B00     	 lsls r3,r3,#2
 457 01fe 07F18002 	 add r2,r7,#128
 458 0202 1344     	 add r3,r3,r2
 459 0204 53F8483C 	 ldr r3,[r3,#-72]
 460 0208 BA88     	 ldrh r2,[r7,#4]
 461 020a C2F30E02 	 ubfx r2,r2,#0,#15
 462 020e D103     	 lsls r1,r2,#15
 463 0210 7888     	 ldrh r0,[r7,#2]
 464 0212 B7F89C20 	 ldrh r2,[r7,#156]
 465 0216 1044     	 add r0,r0,r2
 466 0218 B7F89820 	 ldrh r2,[r7,#152]
 467 021c 0244     	 add r2,r2,r0
 468 021e C2F30E02 	 ubfx r2,r2,#0,#15
 469 0222 0A43     	 orrs r2,r2,r1
 470 0224 42F08042 	 orr r2,r2,#1073741824
 471 0228 1046     	 mov r0,r2
 472 022a 9847     	 blx r3
 180:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding, y + padding + height ));
 473              	 .loc 1 180 0
 474 022c FB79     	 ldrb r3,[r7,#7]
 475 022e 9B00     	 lsls r3,r3,#2
 476 0230 07F18002 	 add r2,r7,#128
 477 0234 1344     	 add r3,r3,r2
 478 0236 53F8483C 	 ldr r3,[r3,#-72]
 479 023a B988     	 ldrh r1,[r7,#4]
 480 023c B7F89C20 	 ldrh r2,[r7,#156]
 481 0240 1144     	 add r1,r1,r2
 482 0242 3A88     	 ldrh r2,[r7]
 483 0244 1144     	 add r1,r1,r2
 484 0246 B7F89C20 	 ldrh r2,[r7,#156]
 485 024a 0A44     	 add r2,r2,r1
 486 024c C2F30E02 	 ubfx r2,r2,#0,#15
 487 0250 D103     	 lsls r1,r2,#15
 488 0252 7888     	 ldrh r0,[r7,#2]
 489 0254 B7F89C20 	 ldrh r2,[r7,#156]
 490 0258 1044     	 add r0,r0,r2
 491 025a B7F89820 	 ldrh r2,[r7,#152]
 492 025e 0244     	 add r2,r2,r0
 493 0260 C2F30E02 	 ubfx r2,r2,#0,#15
 494 0264 0A43     	 orrs r2,r2,r1
 495 0266 42F08042 	 orr r2,r2,#1073741824
 496 026a 1046     	 mov r0,r2
 497 026c 9847     	 blx r3
 181:../Libraries/FT800-FT813-5.x/tft.c **** 
 182:../Libraries/FT800-FT813-5.x/tft.c **** 	/// GRID lines
 183:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(LINE_WIDTH(grid_linewidth)); /* size is in 1/16 pixel */
 498              	 .loc 1 183 0
 499 026e FB79     	 ldrb r3,[r7,#7]
 500 0270 9B00     	 lsls r3,r3,#2
 501 0272 07F18002 	 add r2,r7,#128
 502 0276 1344     	 add r3,r3,r2
 503 0278 53F8483C 	 ldr r3,[r3,#-72]
 504 027c 97F86E20 	 ldrb r2,[r7,#110]
 505 0280 42F06062 	 orr r2,r2,#234881024
 506 0284 1046     	 mov r0,r2
 507 0286 9847     	 blx r3
 184:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_GRIDCOLOR);
 508              	 .loc 1 184 0
 509 0288 FB79     	 ldrb r3,[r7,#7]
 510 028a 9B00     	 lsls r3,r3,#2
 511 028c 07F18002 	 add r2,r7,#128
 512 0290 1344     	 add r3,r3,r2
 513 0292 53F8483C 	 ldr r3,[r3,#-72]
 514 0296 0948     	 ldr r0,.L20+28
 515 0298 9847     	 blx r3
 516              	.LBB2:
 185:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid
 186:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(v_grid_lines); i++){
 517              	 .loc 1 186 0
 518 029a 0123     	 movs r3,#1
 519 029c FB67     	 str r3,[r7,#124]
 520 029e 6FE0     	 b .L2
 521              	.L21:
 522              	 .align 2
 523              	.L20:
 524 02a0 10000000 	 .word .LC0
 525 02a4 18000000 	 .word .LC1
 526 02a8 20000000 	 .word .LC2
 527 02ac 0B1E3B04 	 .word 70983179
 528 02b0 00000000 	 .word .LC3
 529 02b4 04000000 	 .word .LC4
 530 02b8 0300001F 	 .word 520093699
 531 02bc E2DAC504 	 .word 80075490
 532              	.L3:
 187:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 188:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 533              	 .loc 1 188 0 discriminator 3
 534 02c0 FB79     	 ldrb r3,[r7,#7]
 535 02c2 9B00     	 lsls r3,r3,#2
 536 02c4 07F18002 	 add r2,r7,#128
 537 02c8 1344     	 add r3,r3,r2
 538 02ca 53F8484C 	 ldr r4,[r3,#-72]
 539 02ce BA88     	 ldrh r2,[r7,#4]
 540 02d0 B7F89C30 	 ldrh r3,[r7,#156]
 541 02d4 D518     	 adds r5,r2,r3
 542 02d6 F86F     	 ldr r0,[r7,#124]
 543 02d8 FFF7FEFF 	 bl __aeabi_i2d
 544 02dc 0246     	 mov r2,r0
 545 02de 0B46     	 mov r3,r1
 546 02e0 1046     	 mov r0,r2
 547 02e2 1946     	 mov r1,r3
 548 02e4 D7E91623 	 ldrd r2,[r7,#88]
 549 02e8 FFF7FEFF 	 bl __aeabi_dmul
 550 02ec 0246     	 mov r2,r0
 551 02ee 0B46     	 mov r3,r1
 552 02f0 1046     	 mov r0,r2
 553 02f2 1946     	 mov r1,r3
 554 02f4 FFF7FEFF 	 bl __aeabi_d2uiz
 555 02f8 0346     	 mov r3,r0
 556 02fa 9BB2     	 uxth r3,r3
 557 02fc 2B44     	 add r3,r3,r5
 558 02fe C3F30E03 	 ubfx r3,r3,#0,#15
 559 0302 DA03     	 lsls r2,r3,#15
 560 0304 7988     	 ldrh r1,[r7,#2]
 561 0306 B7F89C30 	 ldrh r3,[r7,#156]
 562 030a 0B44     	 add r3,r3,r1
 563 030c C3F30E03 	 ubfx r3,r3,#0,#15
 564 0310 1343     	 orrs r3,r3,r2
 565 0312 43F08043 	 orr r3,r3,#1073741824
 566 0316 1846     	 mov r0,r3
 567 0318 A047     	 blx r4
 189:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 568              	 .loc 1 189 0 discriminator 3
 569 031a FB79     	 ldrb r3,[r7,#7]
 570 031c 9B00     	 lsls r3,r3,#2
 571 031e 07F18002 	 add r2,r7,#128
 572 0322 1344     	 add r3,r3,r2
 573 0324 53F8484C 	 ldr r4,[r3,#-72]
 574 0328 BA88     	 ldrh r2,[r7,#4]
 575 032a B7F89C30 	 ldrh r3,[r7,#156]
 576 032e D518     	 adds r5,r2,r3
 577 0330 F86F     	 ldr r0,[r7,#124]
 578 0332 FFF7FEFF 	 bl __aeabi_i2d
 579 0336 0246     	 mov r2,r0
 580 0338 0B46     	 mov r3,r1
 581 033a 1046     	 mov r0,r2
 582 033c 1946     	 mov r1,r3
 583 033e D7E91623 	 ldrd r2,[r7,#88]
 584 0342 FFF7FEFF 	 bl __aeabi_dmul
 585 0346 0246     	 mov r2,r0
 586 0348 0B46     	 mov r3,r1
 587 034a 1046     	 mov r0,r2
 588 034c 1946     	 mov r1,r3
 589 034e FFF7FEFF 	 bl __aeabi_d2uiz
 590 0352 0346     	 mov r3,r0
 591 0354 9BB2     	 uxth r3,r3
 592 0356 2B44     	 add r3,r3,r5
 593 0358 C3F30E03 	 ubfx r3,r3,#0,#15
 594 035c DA03     	 lsls r2,r3,#15
 595 035e 7988     	 ldrh r1,[r7,#2]
 596 0360 B7F89C30 	 ldrh r3,[r7,#156]
 597 0364 1944     	 add r1,r1,r3
 598 0366 B7F89830 	 ldrh r3,[r7,#152]
 599 036a 0B44     	 add r3,r3,r1
 600 036c C3F30E03 	 ubfx r3,r3,#0,#15
 601 0370 1343     	 orrs r3,r3,r2
 602 0372 43F08043 	 orr r3,r3,#1073741824
 603 0376 1846     	 mov r0,r3
 604 0378 A047     	 blx r4
 186:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 605              	 .loc 1 186 0 discriminator 3
 606 037a FB6F     	 ldr r3,[r7,#124]
 607 037c 0133     	 adds r3,r3,#1
 608 037e FB67     	 str r3,[r7,#124]
 609              	.L2:
 186:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 610              	 .loc 1 186 0 is_stmt 0 discriminator 1
 611 0380 D7E92E01 	 ldrd r0,[r7,#184]
 612 0384 FFF7FEFF 	 bl floor
 613 0388 0246     	 mov r2,r0
 614 038a 0B46     	 mov r3,r1
 615 038c 1046     	 mov r0,r2
 616 038e 1946     	 mov r1,r3
 617 0390 FFF7FEFF 	 bl __aeabi_d2iz
 618 0394 0246     	 mov r2,r0
 619 0396 FB6F     	 ldr r3,[r7,#124]
 620 0398 9A42     	 cmp r2,r3
 621 039a 91DA     	 bge .L3
 622              	.LBE2:
 623              	.LBB3:
 190:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 191:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid
 192:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){
 624              	 .loc 1 192 0 is_stmt 1
 625 039c 0123     	 movs r3,#1
 626 039e BB67     	 str r3,[r7,#120]
 627 03a0 64E0     	 b .L4
 628              	.L5:
 193:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 194:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding        , y + padding + height - (uint16_t)(he
 629              	 .loc 1 194 0 discriminator 3
 630 03a2 FB79     	 ldrb r3,[r7,#7]
 631 03a4 9B00     	 lsls r3,r3,#2
 632 03a6 07F18002 	 add r2,r7,#128
 633 03aa 1344     	 add r3,r3,r2
 634 03ac 53F8484C 	 ldr r4,[r3,#-72]
 635 03b0 BA88     	 ldrh r2,[r7,#4]
 636 03b2 B7F89C30 	 ldrh r3,[r7,#156]
 637 03b6 1344     	 add r3,r3,r2
 638 03b8 C3F30E03 	 ubfx r3,r3,#0,#15
 639 03bc DD03     	 lsls r5,r3,#15
 640 03be 7A88     	 ldrh r2,[r7,#2]
 641 03c0 B7F89C30 	 ldrh r3,[r7,#156]
 642 03c4 1A44     	 add r2,r2,r3
 643 03c6 B7F89830 	 ldrh r3,[r7,#152]
 644 03ca D618     	 adds r6,r2,r3
 645 03cc B86F     	 ldr r0,[r7,#120]
 646 03ce FFF7FEFF 	 bl __aeabi_i2d
 647 03d2 0246     	 mov r2,r0
 648 03d4 0B46     	 mov r3,r1
 649 03d6 1046     	 mov r0,r2
 650 03d8 1946     	 mov r1,r3
 651 03da D7E91423 	 ldrd r2,[r7,#80]
 652 03de FFF7FEFF 	 bl __aeabi_dmul
 653 03e2 0246     	 mov r2,r0
 654 03e4 0B46     	 mov r3,r1
 655 03e6 1046     	 mov r0,r2
 656 03e8 1946     	 mov r1,r3
 657 03ea FFF7FEFF 	 bl __aeabi_d2uiz
 658 03ee 0346     	 mov r3,r0
 659 03f0 9BB2     	 uxth r3,r3
 660 03f2 F31A     	 subs r3,r6,r3
 661 03f4 C3F30E03 	 ubfx r3,r3,#0,#15
 662 03f8 2B43     	 orrs r3,r3,r5
 663 03fa 43F08043 	 orr r3,r3,#1073741824
 664 03fe 1846     	 mov r0,r3
 665 0400 A047     	 blx r4
 195:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width, y + padding + height - (uint16_t)(he
 666              	 .loc 1 195 0 discriminator 3
 667 0402 FB79     	 ldrb r3,[r7,#7]
 668 0404 9B00     	 lsls r3,r3,#2
 669 0406 07F18002 	 add r2,r7,#128
 670 040a 1344     	 add r3,r3,r2
 671 040c 53F8484C 	 ldr r4,[r3,#-72]
 672 0410 BA88     	 ldrh r2,[r7,#4]
 673 0412 B7F89C30 	 ldrh r3,[r7,#156]
 674 0416 1A44     	 add r2,r2,r3
 675 0418 3B88     	 ldrh r3,[r7]
 676 041a 1344     	 add r3,r3,r2
 677 041c C3F30E03 	 ubfx r3,r3,#0,#15
 678 0420 DD03     	 lsls r5,r3,#15
 679 0422 7A88     	 ldrh r2,[r7,#2]
 680 0424 B7F89C30 	 ldrh r3,[r7,#156]
 681 0428 1A44     	 add r2,r2,r3
 682 042a B7F89830 	 ldrh r3,[r7,#152]
 683 042e D618     	 adds r6,r2,r3
 684 0430 B86F     	 ldr r0,[r7,#120]
 685 0432 FFF7FEFF 	 bl __aeabi_i2d
 686 0436 0246     	 mov r2,r0
 687 0438 0B46     	 mov r3,r1
 688 043a 1046     	 mov r0,r2
 689 043c 1946     	 mov r1,r3
 690 043e D7E91423 	 ldrd r2,[r7,#80]
 691 0442 FFF7FEFF 	 bl __aeabi_dmul
 692 0446 0246     	 mov r2,r0
 693 0448 0B46     	 mov r3,r1
 694 044a 1046     	 mov r0,r2
 695 044c 1946     	 mov r1,r3
 696 044e FFF7FEFF 	 bl __aeabi_d2uiz
 697 0452 0346     	 mov r3,r0
 698 0454 9BB2     	 uxth r3,r3
 699 0456 F31A     	 subs r3,r6,r3
 700 0458 C3F30E03 	 ubfx r3,r3,#0,#15
 701 045c 2B43     	 orrs r3,r3,r5
 702 045e 43F08043 	 orr r3,r3,#1073741824
 703 0462 1846     	 mov r0,r3
 704 0464 A047     	 blx r4
 192:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 705              	 .loc 1 192 0 discriminator 3
 706 0466 BB6F     	 ldr r3,[r7,#120]
 707 0468 0133     	 adds r3,r3,#1
 708 046a BB67     	 str r3,[r7,#120]
 709              	.L4:
 192:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 710              	 .loc 1 192 0 is_stmt 0 discriminator 1
 711 046c D7E92C01 	 ldrd r0,[r7,#176]
 712 0470 FFF7FEFF 	 bl floor
 713 0474 0246     	 mov r2,r0
 714 0476 0B46     	 mov r3,r1
 715 0478 1046     	 mov r0,r2
 716 047a 1946     	 mov r1,r3
 717 047c FFF7FEFF 	 bl __aeabi_d2iz
 718 0480 0246     	 mov r2,r0
 719 0482 BB6F     	 ldr r3,[r7,#120]
 720 0484 9A42     	 cmp r2,r3
 721 0486 8CDA     	 bge .L5
 722              	.LBE3:
 196:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 197:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 723              	 .loc 1 197 0 is_stmt 1
 724 0488 FB79     	 ldrb r3,[r7,#7]
 725 048a 9B00     	 lsls r3,r3,#2
 726 048c 07F18002 	 add r2,r7,#128
 727 0490 1344     	 add r3,r3,r2
 728 0492 53F8483C 	 ldr r3,[r3,#-72]
 729 0496 4FF00450 	 mov r0,#553648128
 730 049a 9847     	 blx r3
 198:../Libraries/FT800-FT813-5.x/tft.c **** 
 199:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Grid VALUES
 200:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 731              	 .loc 1 200 0
 732 049c FB79     	 ldrb r3,[r7,#7]
 733 049e 9B00     	 lsls r3,r3,#2
 734 04a0 07F18002 	 add r2,r7,#128
 735 04a4 1344     	 add r3,r3,r2
 736 04a6 53F8483C 	 ldr r3,[r3,#-72]
 737 04aa A448     	 ldr r0,.L22
 738 04ac 9847     	 blx r3
 739              	.LBB4:
 201:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid (time)
 202:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)ceil(v_grid_lines); i++){ // "ceil" and "i-1" at val -> print also the 0 valu
 740              	 .loc 1 202 0
 741 04ae 0123     	 movs r3,#1
 742 04b0 7B67     	 str r3,[r7,#116]
 743 04b2 BEE0     	 b .L6
 744              	.L10:
 745              	.LBB5:
 203:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 204:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (t_max/v_grid_lines*(double)(i-1));
 746              	 .loc 1 204 0
 747 04b4 D7E92A01 	 ldrd r0,[r7,#168]
 748 04b8 D7E92E23 	 ldrd r2,[r7,#184]
 749 04bc FFF7FEFF 	 bl __aeabi_ddiv
 750 04c0 0246     	 mov r2,r0
 751 04c2 0B46     	 mov r3,r1
 752 04c4 1446     	 mov r4,r2
 753 04c6 1D46     	 mov r5,r3
 754 04c8 7B6F     	 ldr r3,[r7,#116]
 755 04ca 013B     	 subs r3,r3,#1
 756 04cc 1846     	 mov r0,r3
 757 04ce FFF7FEFF 	 bl __aeabi_i2d
 758 04d2 0246     	 mov r2,r0
 759 04d4 0B46     	 mov r3,r1
 760 04d6 2046     	 mov r0,r4
 761 04d8 2946     	 mov r1,r5
 762 04da FFF7FEFF 	 bl __aeabi_dmul
 763 04de 0246     	 mov r2,r0
 764 04e0 0B46     	 mov r3,r1
 765 04e2 C7E91223 	 strd r2,[r7,#72]
 205:../Libraries/FT800-FT813-5.x/tft.c **** 
 206:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 207:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 766              	 .loc 1 207 0
 767 04e6 D7E91201 	 ldrd r0,[r7,#72]
 768 04ea FFF7FEFF 	 bl __aeabi_d2uiz
 769 04ee 0346     	 mov r3,r0
 770 04f0 1846     	 mov r0,r3
 771 04f2 FFF7FEFF 	 bl __aeabi_ui2d
 772 04f6 0246     	 mov r2,r0
 773 04f8 0B46     	 mov r3,r1
 774 04fa D7E91201 	 ldrd r0,[r7,#72]
 775 04fe FFF7FEFF 	 bl __aeabi_dsub
 776 0502 0246     	 mov r2,r0
 777 0504 0B46     	 mov r3,r1
 778 0506 1046     	 mov r0,r2
 779 0508 1946     	 mov r1,r3
 780 050a 4FF00002 	 mov r2,#0
 781 050e 4FF00003 	 mov r3,#0
 782 0512 FFF7FEFF 	 bl __aeabi_dcmpeq
 783 0516 0346     	 mov r3,r0
 784 0518 002B     	 cmp r3,#0
 785 051a 41D0     	 beq .L18
 208:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_g
 786              	 .loc 1 208 0
 787 051c FB79     	 ldrb r3,[r7,#7]
 788 051e 9B00     	 lsls r3,r3,#2
 789 0520 07F18002 	 add r2,r7,#128
 790 0524 1344     	 add r3,r3,r2
 791 0526 53F8584C 	 ldr r4,[r3,#-88]
 792 052a BA88     	 ldrh r2,[r7,#4]
 793 052c B7F89C30 	 ldrh r3,[r7,#156]
 794 0530 1344     	 add r3,r3,r2
 795 0532 9DB2     	 uxth r5,r3
 796 0534 7B6F     	 ldr r3,[r7,#116]
 797 0536 013B     	 subs r3,r3,#1
 798 0538 1846     	 mov r0,r3
 799 053a FFF7FEFF 	 bl __aeabi_i2d
 800 053e 0246     	 mov r2,r0
 801 0540 0B46     	 mov r3,r1
 802 0542 1046     	 mov r0,r2
 803 0544 1946     	 mov r1,r3
 804 0546 D7E91623 	 ldrd r2,[r7,#88]
 805 054a FFF7FEFF 	 bl __aeabi_dmul
 806 054e 0246     	 mov r2,r0
 807 0550 0B46     	 mov r3,r1
 808 0552 1046     	 mov r0,r2
 809 0554 1946     	 mov r1,r3
 810 0556 FFF7FEFF 	 bl __aeabi_d2uiz
 811 055a 0346     	 mov r3,r0
 812 055c 9BB2     	 uxth r3,r3
 813 055e 2B44     	 add r3,r3,r5
 814 0560 9AB2     	 uxth r2,r3
 815 0562 97F86930 	 ldrb r3,[r7,#105]
 816 0566 9BB2     	 uxth r3,r3
 817 0568 1344     	 add r3,r3,r2
 818 056a 9BB2     	 uxth r3,r3
 819 056c 9EB2     	 uxth r6,r3
 820 056e 7A88     	 ldrh r2,[r7,#2]
 821 0570 B7F89830 	 ldrh r3,[r7,#152]
 822 0574 1344     	 add r3,r3,r2
 823 0576 9AB2     	 uxth r2,r3
 824 0578 97F86830 	 ldrb r3,[r7,#104]
 825 057c 9BB2     	 uxth r3,r3
 826 057e 1344     	 add r3,r3,r2
 827 0580 9BB2     	 uxth r3,r3
 828 0582 9DB2     	 uxth r5,r3
 829 0584 D7E91201 	 ldrd r0,[r7,#72]
 830 0588 FFF7FEFF 	 bl __aeabi_d2iz
 831 058c 0146     	 mov r1,r0
 832 058e 32B2     	 sxth r2,r6
 833 0590 2BB2     	 sxth r3,r5
 834 0592 0091     	 str r1,[sp]
 835 0594 1046     	 mov r0,r2
 836 0596 1946     	 mov r1,r3
 837 0598 1422     	 movs r2,#20
 838 059a 0023     	 movs r3,#0
 839 059c A047     	 blx r4
 840 059e 45E0     	 b .L9
 841              	.L18:
 842              	.LBB6:
 209:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 210:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 211:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 212:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 843              	 .loc 1 212 0
 844 05a0 07F10803 	 add r3,r7,#8
 845 05a4 1846     	 mov r0,r3
 846 05a6 6649     	 ldr r1,.L22+4
 847 05a8 D7E91223 	 ldrd r2,[r7,#72]
 848 05ac FFF7FEFF 	 bl sprintf
 213:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_gri
 849              	 .loc 1 213 0
 850 05b0 FB79     	 ldrb r3,[r7,#7]
 851 05b2 9B00     	 lsls r3,r3,#2
 852 05b4 07F18002 	 add r2,r7,#128
 853 05b8 1344     	 add r3,r3,r2
 854 05ba 53F8504C 	 ldr r4,[r3,#-80]
 855 05be BA88     	 ldrh r2,[r7,#4]
 856 05c0 B7F89C30 	 ldrh r3,[r7,#156]
 857 05c4 1344     	 add r3,r3,r2
 858 05c6 9DB2     	 uxth r5,r3
 859 05c8 7B6F     	 ldr r3,[r7,#116]
 860 05ca 013B     	 subs r3,r3,#1
 861 05cc 1846     	 mov r0,r3
 862 05ce FFF7FEFF 	 bl __aeabi_i2d
 863 05d2 0246     	 mov r2,r0
 864 05d4 0B46     	 mov r3,r1
 865 05d6 1046     	 mov r0,r2
 866 05d8 1946     	 mov r1,r3
 867 05da D7E91623 	 ldrd r2,[r7,#88]
 868 05de FFF7FEFF 	 bl __aeabi_dmul
 869 05e2 0246     	 mov r2,r0
 870 05e4 0B46     	 mov r3,r1
 871 05e6 1046     	 mov r0,r2
 872 05e8 1946     	 mov r1,r3
 873 05ea FFF7FEFF 	 bl __aeabi_d2uiz
 874 05ee 0346     	 mov r3,r0
 875 05f0 9BB2     	 uxth r3,r3
 876 05f2 2B44     	 add r3,r3,r5
 877 05f4 9AB2     	 uxth r2,r3
 878 05f6 97F86930 	 ldrb r3,[r7,#105]
 879 05fa 9BB2     	 uxth r3,r3
 880 05fc 1344     	 add r3,r3,r2
 881 05fe 9BB2     	 uxth r3,r3
 882 0600 99B2     	 uxth r1,r3
 883 0602 7A88     	 ldrh r2,[r7,#2]
 884 0604 B7F89830 	 ldrh r3,[r7,#152]
 885 0608 1344     	 add r3,r3,r2
 886 060a 9AB2     	 uxth r2,r3
 887 060c 97F86830 	 ldrb r3,[r7,#104]
 888 0610 9BB2     	 uxth r3,r3
 889 0612 1344     	 add r3,r3,r2
 890 0614 9BB2     	 uxth r3,r3
 891 0616 9BB2     	 uxth r3,r3
 892 0618 09B2     	 sxth r1,r1
 893 061a 1AB2     	 sxth r2,r3
 894 061c 07F10803 	 add r3,r7,#8
 895 0620 0093     	 str r3,[sp]
 896 0622 0846     	 mov r0,r1
 897 0624 1146     	 mov r1,r2
 898 0626 1422     	 movs r2,#20
 899 0628 0023     	 movs r3,#0
 900 062a A047     	 blx r4
 901              	.L9:
 902              	.LBE6:
 903              	.LBE5:
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 904              	 .loc 1 202 0 discriminator 2
 905 062c 7B6F     	 ldr r3,[r7,#116]
 906 062e 0133     	 adds r3,r3,#1
 907 0630 7B67     	 str r3,[r7,#116]
 908              	.L6:
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 909              	 .loc 1 202 0 is_stmt 0 discriminator 1
 910 0632 D7E92E01 	 ldrd r0,[r7,#184]
 911 0636 FFF7FEFF 	 bl ceil
 912 063a 0246     	 mov r2,r0
 913 063c 0B46     	 mov r3,r1
 914 063e 1046     	 mov r0,r2
 915 0640 1946     	 mov r1,r3
 916 0642 FFF7FEFF 	 bl __aeabi_d2iz
 917 0646 0246     	 mov r2,r0
 918 0648 7B6F     	 ldr r3,[r7,#116]
 919 064a 9A42     	 cmp r2,r3
 920 064c BFF632AF 	 bge .L10
 921              	.LBE4:
 922              	.LBB7:
 214:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 215:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 216:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid (amplitude)
 217:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 218:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){  // "floor" and "i" at val -> don't print the 0 va
 923              	 .loc 1 218 0 is_stmt 1
 924 0650 0123     	 movs r3,#1
 925 0652 3B67     	 str r3,[r7,#112]
 926 0654 BDE0     	 b .L11
 927              	.L15:
 928              	.LBB8:
 219:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 220:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (amp_max/h_grid_lines*(double)i);
 929              	 .loc 1 220 0
 930 0656 D7E92801 	 ldrd r0,[r7,#160]
 931 065a D7E92C23 	 ldrd r2,[r7,#176]
 932 065e FFF7FEFF 	 bl __aeabi_ddiv
 933 0662 0246     	 mov r2,r0
 934 0664 0B46     	 mov r3,r1
 935 0666 1446     	 mov r4,r2
 936 0668 1D46     	 mov r5,r3
 937 066a 386F     	 ldr r0,[r7,#112]
 938 066c FFF7FEFF 	 bl __aeabi_i2d
 939 0670 0246     	 mov r2,r0
 940 0672 0B46     	 mov r3,r1
 941 0674 2046     	 mov r0,r4
 942 0676 2946     	 mov r1,r5
 943 0678 FFF7FEFF 	 bl __aeabi_dmul
 944 067c 0246     	 mov r2,r0
 945 067e 0B46     	 mov r3,r1
 946 0680 C7E91023 	 strd r2,[r7,#64]
 221:../Libraries/FT800-FT813-5.x/tft.c **** 
 222:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 223:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 947              	 .loc 1 223 0
 948 0684 D7E91001 	 ldrd r0,[r7,#64]
 949 0688 FFF7FEFF 	 bl __aeabi_d2uiz
 950 068c 0346     	 mov r3,r0
 951 068e 1846     	 mov r0,r3
 952 0690 FFF7FEFF 	 bl __aeabi_ui2d
 953 0694 0246     	 mov r2,r0
 954 0696 0B46     	 mov r3,r1
 955 0698 D7E91001 	 ldrd r0,[r7,#64]
 956 069c FFF7FEFF 	 bl __aeabi_dsub
 957 06a0 0246     	 mov r2,r0
 958 06a2 0B46     	 mov r3,r1
 959 06a4 1046     	 mov r0,r2
 960 06a6 1946     	 mov r1,r3
 961 06a8 4FF00002 	 mov r2,#0
 962 06ac 4FF00003 	 mov r3,#0
 963 06b0 FFF7FEFF 	 bl __aeabi_dcmpeq
 964 06b4 0346     	 mov r3,r0
 965 06b6 002B     	 cmp r3,#0
 966 06b8 44D0     	 beq .L19
 224:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(heig
 967              	 .loc 1 224 0
 968 06ba FB79     	 ldrb r3,[r7,#7]
 969 06bc 9B00     	 lsls r3,r3,#2
 970 06be 07F18002 	 add r2,r7,#128
 971 06c2 1344     	 add r3,r3,r2
 972 06c4 53F8584C 	 ldr r4,[r3,#-88]
 973 06c8 97F86730 	 ldrb r3,[r7,#103]
 974 06cc 9BB2     	 uxth r3,r3
 975 06ce BA88     	 ldrh r2,[r7,#4]
 976 06d0 D31A     	 subs r3,r2,r3
 977 06d2 9BB2     	 uxth r3,r3
 978 06d4 9EB2     	 uxth r6,r3
 979 06d6 7A88     	 ldrh r2,[r7,#2]
 980 06d8 B7F89C30 	 ldrh r3,[r7,#156]
 981 06dc 1344     	 add r3,r3,r2
 982 06de 9AB2     	 uxth r2,r3
 983 06e0 B7F89830 	 ldrh r3,[r7,#152]
 984 06e4 1344     	 add r3,r3,r2
 985 06e6 9DB2     	 uxth r5,r3
 986 06e8 386F     	 ldr r0,[r7,#112]
 987 06ea FFF7FEFF 	 bl __aeabi_i2d
 988 06ee 0246     	 mov r2,r0
 989 06f0 0B46     	 mov r3,r1
 990 06f2 1046     	 mov r0,r2
 991 06f4 1946     	 mov r1,r3
 992 06f6 D7E91423 	 ldrd r2,[r7,#80]
 993 06fa FFF7FEFF 	 bl __aeabi_dmul
 994 06fe 0246     	 mov r2,r0
 995 0700 0B46     	 mov r3,r1
 996 0702 1046     	 mov r0,r2
 997 0704 1946     	 mov r1,r3
 998 0706 FFF7FEFF 	 bl __aeabi_d2uiz
 999 070a 0346     	 mov r3,r0
 1000 070c 9BB2     	 uxth r3,r3
 1001 070e EB1A     	 subs r3,r5,r3
 1002 0710 9AB2     	 uxth r2,r3
 1003 0712 97F86630 	 ldrb r3,[r7,#102]
 1004 0716 9BB2     	 uxth r3,r3
 1005 0718 1344     	 add r3,r3,r2
 1006 071a 9BB2     	 uxth r3,r3
 1007 071c 9DB2     	 uxth r5,r3
 1008 071e D7E91001 	 ldrd r0,[r7,#64]
 1009 0722 FFF7FEFF 	 bl __aeabi_d2iz
 1010 0726 0146     	 mov r1,r0
 1011 0728 32B2     	 sxth r2,r6
 1012 072a 2BB2     	 sxth r3,r5
 1013 072c 0091     	 str r1,[sp]
 1014 072e 1046     	 mov r0,r2
 1015 0730 1946     	 mov r1,r3
 1016 0732 1422     	 movs r2,#20
 1017 0734 0023     	 movs r3,#0
 1018 0736 A047     	 blx r4
 1019 0738 48E0     	 b .L14
 1020              	.L23:
 1021 073a 00BF     	 .align 2
 1022              	.L22:
 1023 073c 0B1E3B04 	 .word 70983179
 1024 0740 08000000 	 .word .LC5
 1025              	.L19:
 1026              	.LBB9:
 225:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 226:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 227:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 228:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 1027              	 .loc 1 228 0
 1028 0744 07F10803 	 add r3,r7,#8
 1029 0748 1846     	 mov r0,r3
 1030 074a 9C49     	 ldr r1,.L24
 1031 074c D7E91023 	 ldrd r2,[r7,#64]
 1032 0750 FFF7FEFF 	 bl sprintf
 229:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(height
 1033              	 .loc 1 229 0
 1034 0754 FB79     	 ldrb r3,[r7,#7]
 1035 0756 9B00     	 lsls r3,r3,#2
 1036 0758 07F18002 	 add r2,r7,#128
 1037 075c 1344     	 add r3,r3,r2
 1038 075e 53F8504C 	 ldr r4,[r3,#-80]
 1039 0762 97F86730 	 ldrb r3,[r7,#103]
 1040 0766 9BB2     	 uxth r3,r3
 1041 0768 BA88     	 ldrh r2,[r7,#4]
 1042 076a D31A     	 subs r3,r2,r3
 1043 076c 9BB2     	 uxth r3,r3
 1044 076e 9EB2     	 uxth r6,r3
 1045 0770 7A88     	 ldrh r2,[r7,#2]
 1046 0772 B7F89C30 	 ldrh r3,[r7,#156]
 1047 0776 1344     	 add r3,r3,r2
 1048 0778 9AB2     	 uxth r2,r3
 1049 077a B7F89830 	 ldrh r3,[r7,#152]
 1050 077e 1344     	 add r3,r3,r2
 1051 0780 9DB2     	 uxth r5,r3
 1052 0782 386F     	 ldr r0,[r7,#112]
 1053 0784 FFF7FEFF 	 bl __aeabi_i2d
 1054 0788 0246     	 mov r2,r0
 1055 078a 0B46     	 mov r3,r1
 1056 078c 1046     	 mov r0,r2
 1057 078e 1946     	 mov r1,r3
 1058 0790 D7E91423 	 ldrd r2,[r7,#80]
 1059 0794 FFF7FEFF 	 bl __aeabi_dmul
 1060 0798 0246     	 mov r2,r0
 1061 079a 0B46     	 mov r3,r1
 1062 079c 1046     	 mov r0,r2
 1063 079e 1946     	 mov r1,r3
 1064 07a0 FFF7FEFF 	 bl __aeabi_d2uiz
 1065 07a4 0346     	 mov r3,r0
 1066 07a6 9BB2     	 uxth r3,r3
 1067 07a8 EB1A     	 subs r3,r5,r3
 1068 07aa 9AB2     	 uxth r2,r3
 1069 07ac 97F86630 	 ldrb r3,[r7,#102]
 1070 07b0 9BB2     	 uxth r3,r3
 1071 07b2 1344     	 add r3,r3,r2
 1072 07b4 9BB2     	 uxth r3,r3
 1073 07b6 9BB2     	 uxth r3,r3
 1074 07b8 31B2     	 sxth r1,r6
 1075 07ba 1AB2     	 sxth r2,r3
 1076 07bc 07F10803 	 add r3,r7,#8
 1077 07c0 0093     	 str r3,[sp]
 1078 07c2 0846     	 mov r0,r1
 1079 07c4 1146     	 mov r1,r2
 1080 07c6 1422     	 movs r2,#20
 1081 07c8 0023     	 movs r3,#0
 1082 07ca A047     	 blx r4
 1083              	.L14:
 1084              	.LBE9:
 1085              	.LBE8:
 218:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1086              	 .loc 1 218 0 discriminator 2
 1087 07cc 3B6F     	 ldr r3,[r7,#112]
 1088 07ce 0133     	 adds r3,r3,#1
 1089 07d0 3B67     	 str r3,[r7,#112]
 1090              	.L11:
 218:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1091              	 .loc 1 218 0 is_stmt 0 discriminator 1
 1092 07d2 D7E92C01 	 ldrd r0,[r7,#176]
 1093 07d6 FFF7FEFF 	 bl floor
 1094 07da 0246     	 mov r2,r0
 1095 07dc 0B46     	 mov r3,r1
 1096 07de 1046     	 mov r0,r2
 1097 07e0 1946     	 mov r1,r3
 1098 07e2 FFF7FEFF 	 bl __aeabi_d2iz
 1099 07e6 0246     	 mov r2,r0
 1100 07e8 3B6F     	 ldr r3,[r7,#112]
 1101 07ea 9A42     	 cmp r2,r3
 1102 07ec BFF633AF 	 bge .L15
 1103              	.LBE7:
 230:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 231:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 232:../Libraries/FT800-FT813-5.x/tft.c **** 
 233:../Libraries/FT800-FT813-5.x/tft.c **** 	/// ARROWS on axes
 234:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 235:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom vertical arrow (Amplitude)
 236:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1104              	 .loc 1 236 0 is_stmt 1
 1105 07f0 FB79     	 ldrb r3,[r7,#7]
 1106 07f2 9B00     	 lsls r3,r3,#2
 1107 07f4 07F18002 	 add r2,r7,#128
 1108 07f8 1344     	 add r3,r3,r2
 1109 07fa 53F8483C 	 ldr r3,[r3,#-72]
 1110 07fe 7048     	 ldr r0,.L24+4
 1111 0800 9847     	 blx r3
 237:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + arrow_offset, y + arrow_offset ));
 1112              	 .loc 1 237 0
 1113 0802 FB79     	 ldrb r3,[r7,#7]
 1114 0804 9B00     	 lsls r3,r3,#2
 1115 0806 07F18002 	 add r2,r7,#128
 1116 080a 1344     	 add r3,r3,r2
 1117 080c 53F8483C 	 ldr r3,[r3,#-72]
 1118 0810 B988     	 ldrh r1,[r7,#4]
 1119 0812 B7F89C20 	 ldrh r2,[r7,#156]
 1120 0816 1144     	 add r1,r1,r2
 1121 0818 97F86F20 	 ldrb r2,[r7,#111]
 1122 081c 0A44     	 add r2,r2,r1
 1123 081e C2F30E02 	 ubfx r2,r2,#0,#15
 1124 0822 D103     	 lsls r1,r2,#15
 1125 0824 7888     	 ldrh r0,[r7,#2]
 1126 0826 97F86F20 	 ldrb r2,[r7,#111]
 1127 082a 0244     	 add r2,r2,r0
 1128 082c C2F30E02 	 ubfx r2,r2,#0,#15
 1129 0830 0A43     	 orrs r2,r2,r1
 1130 0832 42F08042 	 orr r2,r2,#1073741824
 1131 0836 1046     	 mov r0,r2
 1132 0838 9847     	 blx r3
 238:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding               , y                ));
 1133              	 .loc 1 238 0
 1134 083a FB79     	 ldrb r3,[r7,#7]
 1135 083c 9B00     	 lsls r3,r3,#2
 1136 083e 07F18002 	 add r2,r7,#128
 1137 0842 1344     	 add r3,r3,r2
 1138 0844 53F8483C 	 ldr r3,[r3,#-72]
 1139 0848 B988     	 ldrh r1,[r7,#4]
 1140 084a B7F89C20 	 ldrh r2,[r7,#156]
 1141 084e 0A44     	 add r2,r2,r1
 1142 0850 C2F30E02 	 ubfx r2,r2,#0,#15
 1143 0854 D103     	 lsls r1,r2,#15
 1144 0856 7A88     	 ldrh r2,[r7,#2]
 1145 0858 C2F30E02 	 ubfx r2,r2,#0,#15
 1146 085c 0A43     	 orrs r2,r2,r1
 1147 085e 42F08042 	 orr r2,r2,#1073741824
 1148 0862 1046     	 mov r0,r2
 1149 0864 9847     	 blx r3
 239:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding - arrow_offset, y + arrow_offset ));
 1150              	 .loc 1 239 0
 1151 0866 FB79     	 ldrb r3,[r7,#7]
 1152 0868 9B00     	 lsls r3,r3,#2
 1153 086a 07F18002 	 add r2,r7,#128
 1154 086e 1344     	 add r3,r3,r2
 1155 0870 53F8483C 	 ldr r3,[r3,#-72]
 1156 0874 B988     	 ldrh r1,[r7,#4]
 1157 0876 B7F89C20 	 ldrh r2,[r7,#156]
 1158 087a 1144     	 add r1,r1,r2
 1159 087c 97F86F20 	 ldrb r2,[r7,#111]
 1160 0880 8A1A     	 subs r2,r1,r2
 1161 0882 C2F30E02 	 ubfx r2,r2,#0,#15
 1162 0886 D103     	 lsls r1,r2,#15
 1163 0888 7888     	 ldrh r0,[r7,#2]
 1164 088a 97F86F20 	 ldrb r2,[r7,#111]
 1165 088e 0244     	 add r2,r2,r0
 1166 0890 C2F30E02 	 ubfx r2,r2,#0,#15
 1167 0894 0A43     	 orrs r2,r2,r1
 1168 0896 42F08042 	 orr r2,r2,#1073741824
 1169 089a 1046     	 mov r0,r2
 1170 089c 9847     	 blx r3
 240:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1171              	 .loc 1 240 0
 1172 089e FB79     	 ldrb r3,[r7,#7]
 1173 08a0 9B00     	 lsls r3,r3,#2
 1174 08a2 07F18002 	 add r2,r7,#128
 1175 08a6 1344     	 add r3,r3,r2
 1176 08a8 53F8483C 	 ldr r3,[r3,#-72]
 1177 08ac 4FF00450 	 mov r0,#553648128
 1178 08b0 9847     	 blx r3
 241:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal arrow (Time)
 242:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1179              	 .loc 1 242 0
 1180 08b2 FB79     	 ldrb r3,[r7,#7]
 1181 08b4 9B00     	 lsls r3,r3,#2
 1182 08b6 07F18002 	 add r2,r7,#128
 1183 08ba 1344     	 add r3,r3,r2
 1184 08bc 53F8483C 	 ldr r3,[r3,#-72]
 1185 08c0 3F48     	 ldr r0,.L24+4
 1186 08c2 9847     	 blx r3
 243:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1187              	 .loc 1 243 0
 1188 08c4 FB79     	 ldrb r3,[r7,#7]
 1189 08c6 9B00     	 lsls r3,r3,#2
 1190 08c8 07F18002 	 add r2,r7,#128
 1191 08cc 1344     	 add r3,r3,r2
 1192 08ce 53F8483C 	 ldr r3,[r3,#-72]
 1193 08d2 B988     	 ldrh r1,[r7,#4]
 1194 08d4 B7F89C20 	 ldrh r2,[r7,#156]
 1195 08d8 1144     	 add r1,r1,r2
 1196 08da 3A88     	 ldrh r2,[r7]
 1197 08dc 1144     	 add r1,r1,r2
 1198 08de B7F89C20 	 ldrh r2,[r7,#156]
 1199 08e2 1144     	 add r1,r1,r2
 1200 08e4 97F86F20 	 ldrb r2,[r7,#111]
 1201 08e8 8A1A     	 subs r2,r1,r2
 1202 08ea C2F30E02 	 ubfx r2,r2,#0,#15
 1203 08ee D103     	 lsls r1,r2,#15
 1204 08f0 7888     	 ldrh r0,[r7,#2]
 1205 08f2 B7F89C20 	 ldrh r2,[r7,#156]
 1206 08f6 1044     	 add r0,r0,r2
 1207 08f8 B7F89820 	 ldrh r2,[r7,#152]
 1208 08fc 1044     	 add r0,r0,r2
 1209 08fe 97F86F20 	 ldrb r2,[r7,#111]
 1210 0902 0244     	 add r2,r2,r0
 1211 0904 C2F30E02 	 ubfx r2,r2,#0,#15
 1212 0908 0A43     	 orrs r2,r2,r1
 1213 090a 42F08042 	 orr r2,r2,#1073741824
 1214 090e 1046     	 mov r0,r2
 1215 0910 9847     	 blx r3
 244:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding               , y + padding 
 1216              	 .loc 1 244 0
 1217 0912 FB79     	 ldrb r3,[r7,#7]
 1218 0914 9B00     	 lsls r3,r3,#2
 1219 0916 07F18002 	 add r2,r7,#128
 1220 091a 1344     	 add r3,r3,r2
 1221 091c 53F8483C 	 ldr r3,[r3,#-72]
 1222 0920 B988     	 ldrh r1,[r7,#4]
 1223 0922 B7F89C20 	 ldrh r2,[r7,#156]
 1224 0926 1144     	 add r1,r1,r2
 1225 0928 3A88     	 ldrh r2,[r7]
 1226 092a 1144     	 add r1,r1,r2
 1227 092c B7F89C20 	 ldrh r2,[r7,#156]
 1228 0930 0A44     	 add r2,r2,r1
 1229 0932 C2F30E02 	 ubfx r2,r2,#0,#15
 1230 0936 D103     	 lsls r1,r2,#15
 1231 0938 7888     	 ldrh r0,[r7,#2]
 1232 093a B7F89C20 	 ldrh r2,[r7,#156]
 1233 093e 1044     	 add r0,r0,r2
 1234 0940 B7F89820 	 ldrh r2,[r7,#152]
 1235 0944 0244     	 add r2,r2,r0
 1236 0946 C2F30E02 	 ubfx r2,r2,#0,#15
 1237 094a 0A43     	 orrs r2,r2,r1
 1238 094c 42F08042 	 orr r2,r2,#1073741824
 1239 0950 1046     	 mov r0,r2
 1240 0952 9847     	 blx r3
 245:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1241              	 .loc 1 245 0
 1242 0954 FB79     	 ldrb r3,[r7,#7]
 1243 0956 9B00     	 lsls r3,r3,#2
 1244 0958 07F18002 	 add r2,r7,#128
 1245 095c 1344     	 add r3,r3,r2
 1246 095e 53F8483C 	 ldr r3,[r3,#-72]
 1247 0962 B988     	 ldrh r1,[r7,#4]
 1248 0964 B7F89C20 	 ldrh r2,[r7,#156]
 1249 0968 1144     	 add r1,r1,r2
 1250 096a 3A88     	 ldrh r2,[r7]
 1251 096c 1144     	 add r1,r1,r2
 1252 096e B7F89C20 	 ldrh r2,[r7,#156]
 1253 0972 1144     	 add r1,r1,r2
 1254 0974 97F86F20 	 ldrb r2,[r7,#111]
 1255 0978 8A1A     	 subs r2,r1,r2
 1256 097a C2F30E02 	 ubfx r2,r2,#0,#15
 1257 097e D103     	 lsls r1,r2,#15
 1258 0980 7888     	 ldrh r0,[r7,#2]
 1259 0982 B7F89C20 	 ldrh r2,[r7,#156]
 1260 0986 1044     	 add r0,r0,r2
 1261 0988 B7F89820 	 ldrh r2,[r7,#152]
 1262 098c 1044     	 add r0,r0,r2
 1263 098e 97F86F20 	 ldrb r2,[r7,#111]
 1264 0992 821A     	 subs r2,r0,r2
 1265 0994 C2F30E02 	 ubfx r2,r2,#0,#15
 1266 0998 0A43     	 orrs r2,r2,r1
 1267 099a 42F08042 	 orr r2,r2,#1073741824
 1268 099e 1046     	 mov r0,r2
 1269 09a0 9847     	 blx r3
 246:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1270              	 .loc 1 246 0
 1271 09a2 FB79     	 ldrb r3,[r7,#7]
 1272 09a4 9B00     	 lsls r3,r3,#2
 1273 09a6 07F18002 	 add r2,r7,#128
 1274 09aa 1344     	 add r3,r3,r2
 1275 09ac 53F8483C 	 ldr r3,[r3,#-72]
 1276 09b0 4FF00450 	 mov r0,#553648128
 1277 09b4 9847     	 blx r3
 247:../Libraries/FT800-FT813-5.x/tft.c **** 
 248:../Libraries/FT800-FT813-5.x/tft.c **** }
 1278              	 .loc 1 248 0
 1279 09b6 8437     	 adds r7,r7,#132
 1280              	.LCFI3:
 1281              	 .cfi_def_cfa_offset 20
 1282 09b8 BD46     	 mov sp,r7
 1283              	.LCFI4:
 1284              	 .cfi_def_cfa_register 13
 1285              	 
 1286 09ba F0BD     	 pop {r4,r5,r6,r7,pc}
 1287              	.L25:
 1288              	 .align 2
 1289              	.L24:
 1290 09bc 08000000 	 .word .LC5
 1291 09c0 0400001F 	 .word 520093700
 1292              	 .cfi_endproc
 1293              	.LFE446:
 1295              	 .section .text.TFT_GraphData,"ax",%progbits
 1296              	 .align 2
 1297              	 .global TFT_GraphData
 1298              	 .thumb
 1299              	 .thumb_func
 1301              	TFT_GraphData:
 1302              	.LFB447:
 249:../Libraries/FT800-FT813-5.x/tft.c **** 
 250:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphData(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t padding, doubl
 1303              	 .loc 1 250 0
 1304              	 .cfi_startproc
 1305              	 
 1306              	 
 1307 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 1308              	.LCFI5:
 1309              	 .cfi_def_cfa_offset 24
 1310              	 .cfi_offset 4,-24
 1311              	 .cfi_offset 5,-20
 1312              	 .cfi_offset 7,-16
 1313              	 .cfi_offset 8,-12
 1314              	 .cfi_offset 9,-8
 1315              	 .cfi_offset 14,-4
 1316 0004 84B0     	 sub sp,sp,#16
 1317              	.LCFI6:
 1318              	 .cfi_def_cfa_offset 40
 1319 0006 00AF     	 add r7,sp,#0
 1320              	.LCFI7:
 1321              	 .cfi_def_cfa_register 7
 1322 0008 0446     	 mov r4,r0
 1323 000a 0846     	 mov r0,r1
 1324 000c 1146     	 mov r1,r2
 1325 000e 1A46     	 mov r2,r3
 1326 0010 2346     	 mov r3,r4
 1327 0012 FB80     	 strh r3,[r7,#6]
 1328 0014 0346     	 mov r3,r0
 1329 0016 BB80     	 strh r3,[r7,#4]
 1330 0018 0B46     	 mov r3,r1
 1331 001a 7B80     	 strh r3,[r7,#2]
 1332 001c 1346     	 mov r3,r2
 1333 001e 3B80     	 strh r3,[r7]
 251:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the dynamic parts of an Graph to the TFT (data and markers). Used at recurring display l
 252:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 253:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 254:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 255:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 256:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 257:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding	...	clearance from the outer corners (x,y) to the axes
 258:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y_max   ... maximum expected value of input (e.g. for 12bit ADC 4095), will represent 100%
 259:../Libraries/FT800-FT813-5.x/tft.c **** 	///  SBuffer[] 		...	Array of data values
 260:../Libraries/FT800-FT813-5.x/tft.c **** 	///  size	 		... size of array of data values
 261:../Libraries/FT800-FT813-5.x/tft.c **** 	///  *SBuffer_curidx ... current position (index of most recent value)
 262:../Libraries/FT800-FT813-5.x/tft.c **** 	///  graphmode 		... 0 = frame-mode, 1 = roll-mode
 263:../Libraries/FT800-FT813-5.x/tft.c **** 	///  datacolor 		... 24bit color (as 32 bit integer with leading 0's) used for the dataline
 264:../Libraries/FT800-FT813-5.x/tft.c **** 	///  markercolor		... 24bit color (as 32 bit integer with leading 0's) used for the current positi
 265:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: No predefined graph settings are used direct (#define ...)!
 266:../Libraries/FT800-FT813-5.x/tft.c **** 
 267:../Libraries/FT800-FT813-5.x/tft.c **** 
 268:../Libraries/FT800-FT813-5.x/tft.c **** 
 269:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display current DATA as line strip in frame or roll mode
 270:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | datacolor);
 1334              	 .loc 1 270 0
 1335 0020 BB6C     	 ldr r3,[r7,#72]
 1336 0022 43F08063 	 orr r3,r3,#67108864
 1337 0026 1846     	 mov r0,r3
 1338 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 271:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1339              	 .loc 1 271 0
 1340 002c 7748     	 ldr r0,.L35
 1341 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 272:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph frame-mode
 273:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1342              	 .loc 1 273 0
 1343 0032 97F84430 	 ldrb r3,[r7,#68]
 1344 0036 002B     	 cmp r3,#0
 1345 0038 46D1     	 bne .L27
 1346              	.LBB10:
 274:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print values in the order they are stored
 275:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int x_cur = 0; x_cur < size; ++x_cur) {
 1347              	 .loc 1 275 0
 1348 003a 0023     	 movs r3,#0
 1349 003c FB60     	 str r3,[r7,#12]
 1350 003e 3EE0     	 b .L28
 1351              	.L29:
 276:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1352              	 .loc 1 276 0 discriminator 3
 1353 0040 FA88     	 ldrh r2,[r7,#6]
 1354 0042 3B8D     	 ldrh r3,[r7,#40]
 1355 0044 1A44     	 add r2,r2,r3
 1356 0046 FB68     	 ldr r3,[r7,#12]
 1357 0048 1344     	 add r3,r3,r2
 1358 004a C3F30E03 	 ubfx r3,r3,#0,#15
 1359 004e DC03     	 lsls r4,r3,#15
 1360 0050 BA88     	 ldrh r2,[r7,#4]
 1361 0052 3B8D     	 ldrh r3,[r7,#40]
 1362 0054 1A44     	 add r2,r2,r3
 1363 0056 3B88     	 ldrh r3,[r7]
 1364 0058 D518     	 adds r5,r2,r3
 1365 005a FB68     	 ldr r3,[r7,#12]
 1366 005c 5B00     	 lsls r3,r3,#1
 1367 005e BA6B     	 ldr r2,[r7,#56]
 1368 0060 1344     	 add r3,r3,r2
 1369 0062 1B88     	 ldrh r3,[r3]
 1370 0064 1846     	 mov r0,r3
 1371 0066 FFF7FEFF 	 bl __aeabi_ui2d
 1372 006a 0246     	 mov r2,r0
 1373 006c 0B46     	 mov r3,r1
 1374 006e 1046     	 mov r0,r2
 1375 0070 1946     	 mov r1,r3
 1376 0072 D7E90C23 	 ldrd r2,[r7,#48]
 1377 0076 FFF7FEFF 	 bl __aeabi_ddiv
 1378 007a 0246     	 mov r2,r0
 1379 007c 0B46     	 mov r3,r1
 1380 007e 9046     	 mov r8,r2
 1381 0080 9946     	 mov r9,r3
 1382 0082 3B88     	 ldrh r3,[r7]
 1383 0084 1846     	 mov r0,r3
 1384 0086 FFF7FEFF 	 bl __aeabi_ui2d
 1385 008a 0246     	 mov r2,r0
 1386 008c 0B46     	 mov r3,r1
 1387 008e 4046     	 mov r0,r8
 1388 0090 4946     	 mov r1,r9
 1389 0092 FFF7FEFF 	 bl __aeabi_dmul
 1390 0096 0246     	 mov r2,r0
 1391 0098 0B46     	 mov r3,r1
 1392 009a 1046     	 mov r0,r2
 1393 009c 1946     	 mov r1,r3
 1394 009e FFF7FEFF 	 bl __aeabi_d2uiz
 1395 00a2 0346     	 mov r3,r0
 1396 00a4 9BB2     	 uxth r3,r3
 1397 00a6 EB1A     	 subs r3,r5,r3
 1398 00a8 C3F30E03 	 ubfx r3,r3,#0,#15
 1399 00ac 2343     	 orrs r3,r3,r4
 1400 00ae 43F08043 	 orr r3,r3,#1073741824
 1401 00b2 1846     	 mov r0,r3
 1402 00b4 FFF7FEFF 	 bl EVE_cmd_dl_burst
 275:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1403              	 .loc 1 275 0 discriminator 3
 1404 00b8 FB68     	 ldr r3,[r7,#12]
 1405 00ba 0133     	 adds r3,r3,#1
 1406 00bc FB60     	 str r3,[r7,#12]
 1407              	.L28:
 275:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1408              	 .loc 1 275 0 is_stmt 0 discriminator 1
 1409 00be BA8F     	 ldrh r2,[r7,#60]
 1410 00c0 FB68     	 ldr r3,[r7,#12]
 1411 00c2 9A42     	 cmp r2,r3
 1412 00c4 BCDC     	 bgt .L29
 1413              	.LBE10:
 1414 00c6 5BE0     	 b .L30
 1415              	.L27:
 1416              	.LBB11:
 277:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 278:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 279:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph roll-mode
 280:../Libraries/FT800-FT813-5.x/tft.c **** 	else {
 281:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print newest value always at the rightmost corner with all older values to the right
 282:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Display    x position at rightmost corner and decrement till 0 (last run will make it
 283:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Arrayindex i at current index and decrement every loop. If i goes below 0, reset to m
 284:../Libraries/FT800-FT813-5.x/tft.c **** 		//    value before current is hit.
 285:../Libraries/FT800-FT813-5.x/tft.c **** 
 286:../Libraries/FT800-FT813-5.x/tft.c **** 		int16_t i = *SBuffer_curidx;
 1417              	 .loc 1 286 0 is_stmt 1
 1418 00c8 3B6C     	 ldr r3,[r7,#64]
 1419 00ca 1B88     	 ldrh r3,[r3]
 1420 00cc 7B81     	 strh r3,[r7,#10]
 1421              	.LBB12:
 287:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int16_t x_cur = size-1; x_cur >= 0; x_cur--) {
 1422              	 .loc 1 287 0
 1423 00ce BB8F     	 ldrh r3,[r7,#60]
 1424 00d0 013B     	 subs r3,r3,#1
 1425 00d2 9BB2     	 uxth r3,r3
 1426 00d4 3B81     	 strh r3,[r7,#8]
 1427 00d6 4FE0     	 b .L31
 1428              	.L33:
 288:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 289:../Libraries/FT800-FT813-5.x/tft.c **** 			if(i < 0){i = size-1;}
 1429              	 .loc 1 289 0
 1430 00d8 B7F90A30 	 ldrsh r3,[r7,#10]
 1431 00dc 002B     	 cmp r3,#0
 1432 00de 03DA     	 bge .L32
 1433              	 .loc 1 289 0 is_stmt 0 discriminator 1
 1434 00e0 BB8F     	 ldrh r3,[r7,#60]
 1435 00e2 013B     	 subs r3,r3,#1
 1436 00e4 9BB2     	 uxth r3,r3
 1437 00e6 7B81     	 strh r3,[r7,#10]
 1438              	.L32:
 290:../Libraries/FT800-FT813-5.x/tft.c **** 
 291:../Libraries/FT800-FT813-5.x/tft.c **** 			// Send next point for EVE_LINE_STRIP at current x+padding and normalized buffer value
 292:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1439              	 .loc 1 292 0 is_stmt 1 discriminator 2
 1440 00e8 FA88     	 ldrh r2,[r7,#6]
 1441 00ea 3B8D     	 ldrh r3,[r7,#40]
 1442 00ec 1A44     	 add r2,r2,r3
 1443 00ee B7F90830 	 ldrsh r3,[r7,#8]
 1444 00f2 1344     	 add r3,r3,r2
 1445 00f4 C3F30E03 	 ubfx r3,r3,#0,#15
 1446 00f8 DC03     	 lsls r4,r3,#15
 1447 00fa BA88     	 ldrh r2,[r7,#4]
 1448 00fc 3B8D     	 ldrh r3,[r7,#40]
 1449 00fe 1A44     	 add r2,r2,r3
 1450 0100 3B88     	 ldrh r3,[r7]
 1451 0102 D518     	 adds r5,r2,r3
 1452 0104 B7F90A30 	 ldrsh r3,[r7,#10]
 1453 0108 5B00     	 lsls r3,r3,#1
 1454 010a BA6B     	 ldr r2,[r7,#56]
 1455 010c 1344     	 add r3,r3,r2
 1456 010e 1B88     	 ldrh r3,[r3]
 1457 0110 1846     	 mov r0,r3
 1458 0112 FFF7FEFF 	 bl __aeabi_ui2d
 1459 0116 0246     	 mov r2,r0
 1460 0118 0B46     	 mov r3,r1
 1461 011a 1046     	 mov r0,r2
 1462 011c 1946     	 mov r1,r3
 1463 011e D7E90C23 	 ldrd r2,[r7,#48]
 1464 0122 FFF7FEFF 	 bl __aeabi_ddiv
 1465 0126 0246     	 mov r2,r0
 1466 0128 0B46     	 mov r3,r1
 1467 012a 9046     	 mov r8,r2
 1468 012c 9946     	 mov r9,r3
 1469 012e 3B88     	 ldrh r3,[r7]
 1470 0130 1846     	 mov r0,r3
 1471 0132 FFF7FEFF 	 bl __aeabi_ui2d
 1472 0136 0246     	 mov r2,r0
 1473 0138 0B46     	 mov r3,r1
 1474 013a 4046     	 mov r0,r8
 1475 013c 4946     	 mov r1,r9
 1476 013e FFF7FEFF 	 bl __aeabi_dmul
 1477 0142 0246     	 mov r2,r0
 1478 0144 0B46     	 mov r3,r1
 1479 0146 1046     	 mov r0,r2
 1480 0148 1946     	 mov r1,r3
 1481 014a FFF7FEFF 	 bl __aeabi_d2uiz
 1482 014e 0346     	 mov r3,r0
 1483 0150 9BB2     	 uxth r3,r3
 1484 0152 EB1A     	 subs r3,r5,r3
 1485 0154 C3F30E03 	 ubfx r3,r3,#0,#15
 1486 0158 2343     	 orrs r3,r3,r4
 1487 015a 43F08043 	 orr r3,r3,#1073741824
 1488 015e 1846     	 mov r0,r3
 1489 0160 FFF7FEFF 	 bl EVE_cmd_dl_burst
 293:../Libraries/FT800-FT813-5.x/tft.c **** 
 294:../Libraries/FT800-FT813-5.x/tft.c **** 			// decrement index
 295:../Libraries/FT800-FT813-5.x/tft.c **** 			i--;
 1490              	 .loc 1 295 0 discriminator 2
 1491 0164 7B89     	 ldrh r3,[r7,#10]
 1492 0166 9BB2     	 uxth r3,r3
 1493 0168 013B     	 subs r3,r3,#1
 1494 016a 9BB2     	 uxth r3,r3
 1495 016c 7B81     	 strh r3,[r7,#10]
 287:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1496              	 .loc 1 287 0 discriminator 2
 1497 016e 3B89     	 ldrh r3,[r7,#8]
 1498 0170 9BB2     	 uxth r3,r3
 1499 0172 013B     	 subs r3,r3,#1
 1500 0174 9BB2     	 uxth r3,r3
 1501 0176 3B81     	 strh r3,[r7,#8]
 1502              	.L31:
 287:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1503              	 .loc 1 287 0 is_stmt 0 discriminator 1
 1504 0178 B7F90830 	 ldrsh r3,[r7,#8]
 1505 017c 002B     	 cmp r3,#0
 1506 017e ABDA     	 bge .L33
 1507              	.L30:
 1508              	.LBE12:
 1509              	.LBE11:
 296:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 297:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 298:../Libraries/FT800-FT813-5.x/tft.c **** 	// End EVE_LINE_STRIP and therefore DATA
 299:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_END);
 1510              	 .loc 1 299 0 is_stmt 1
 1511 0180 4FF00450 	 mov r0,#553648128
 1512 0184 FFF7FEFF 	 bl EVE_cmd_dl_burst
 300:../Libraries/FT800-FT813-5.x/tft.c **** 
 301:../Libraries/FT800-FT813-5.x/tft.c **** 
 302:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw current POSITION MARKER in frame mode
 303:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1513              	 .loc 1 303 0
 1514 0188 97F84430 	 ldrb r3,[r7,#68]
 1515 018c 002B     	 cmp r3,#0
 1516 018e 38D1     	 bne .L26
 304:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_COLOR_RGB | markercolor);
 1517              	 .loc 1 304 0
 1518 0190 FB6C     	 ldr r3,[r7,#76]
 1519 0192 43F08063 	 orr r3,r3,#67108864
 1520 0196 1846     	 mov r0,r3
 1521 0198 FFF7FEFF 	 bl EVE_cmd_dl_burst
 305:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1522              	 .loc 1 305 0
 1523 019c 1B48     	 ldr r0,.L35
 1524 019e FFF7FEFF 	 bl EVE_cmd_dl_burst
 306:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding - 5 ));
 1525              	 .loc 1 306 0
 1526 01a2 FA88     	 ldrh r2,[r7,#6]
 1527 01a4 3B8D     	 ldrh r3,[r7,#40]
 1528 01a6 1344     	 add r3,r3,r2
 1529 01a8 3A6C     	 ldr r2,[r7,#64]
 1530 01aa 1288     	 ldrh r2,[r2]
 1531 01ac 1344     	 add r3,r3,r2
 1532 01ae C3F30E03 	 ubfx r3,r3,#0,#15
 1533 01b2 DA03     	 lsls r2,r3,#15
 1534 01b4 B988     	 ldrh r1,[r7,#4]
 1535 01b6 3B8D     	 ldrh r3,[r7,#40]
 1536 01b8 0B44     	 add r3,r3,r1
 1537 01ba 053B     	 subs r3,r3,#5
 1538 01bc C3F30E03 	 ubfx r3,r3,#0,#15
 1539 01c0 1343     	 orrs r3,r3,r2
 1540 01c2 43F08043 	 orr r3,r3,#1073741824
 1541 01c6 1846     	 mov r0,r3
 1542 01c8 FFF7FEFF 	 bl EVE_cmd_dl_burst
 307:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding + height + 5 ));
 1543              	 .loc 1 307 0
 1544 01cc FA88     	 ldrh r2,[r7,#6]
 1545 01ce 3B8D     	 ldrh r3,[r7,#40]
 1546 01d0 1344     	 add r3,r3,r2
 1547 01d2 3A6C     	 ldr r2,[r7,#64]
 1548 01d4 1288     	 ldrh r2,[r2]
 1549 01d6 1344     	 add r3,r3,r2
 1550 01d8 C3F30E03 	 ubfx r3,r3,#0,#15
 1551 01dc DA03     	 lsls r2,r3,#15
 1552 01de B988     	 ldrh r1,[r7,#4]
 1553 01e0 3B8D     	 ldrh r3,[r7,#40]
 1554 01e2 1944     	 add r1,r1,r3
 1555 01e4 3B88     	 ldrh r3,[r7]
 1556 01e6 0B44     	 add r3,r3,r1
 1557 01e8 0533     	 adds r3,r3,#5
 1558 01ea C3F30E03 	 ubfx r3,r3,#0,#15
 1559 01ee 1343     	 orrs r3,r3,r2
 1560 01f0 43F08043 	 orr r3,r3,#1073741824
 1561 01f4 1846     	 mov r0,r3
 1562 01f6 FFF7FEFF 	 bl EVE_cmd_dl_burst
 308:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1563              	 .loc 1 308 0
 1564 01fa 4FF00450 	 mov r0,#553648128
 1565 01fe FFF7FEFF 	 bl EVE_cmd_dl_burst
 1566              	.L26:
 309:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 310:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH END
 311:../Libraries/FT800-FT813-5.x/tft.c **** 
 312:../Libraries/FT800-FT813-5.x/tft.c **** }
 1567              	 .loc 1 312 0
 1568 0202 1037     	 adds r7,r7,#16
 1569              	.LCFI8:
 1570              	 .cfi_def_cfa_offset 24
 1571 0204 BD46     	 mov sp,r7
 1572              	.LCFI9:
 1573              	 .cfi_def_cfa_register 13
 1574              	 
 1575 0206 BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 1576              	.L36:
 1577 020a 00BF     	 .align 2
 1578              	.L35:
 1579 020c 0400001F 	 .word 520093700
 1580              	 .cfi_endproc
 1581              	.LFE447:
 1583              	 .section .text.touch_calibrate,"ax",%progbits
 1584              	 .align 2
 1585              	 .global touch_calibrate
 1586              	 .thumb
 1587              	 .thumb_func
 1589              	touch_calibrate:
 1590              	.LFB448:
 313:../Libraries/FT800-FT813-5.x/tft.c **** 
 314:../Libraries/FT800-FT813-5.x/tft.c **** 
 315:../Libraries/FT800-FT813-5.x/tft.c **** void touch_calibrate(void) {
 1591              	 .loc 1 315 0
 1592              	 .cfi_startproc
 1593              	 
 1594              	 
 1595 0000 80B5     	 push {r7,lr}
 1596              	.LCFI10:
 1597              	 .cfi_def_cfa_offset 8
 1598              	 .cfi_offset 7,-8
 1599              	 .cfi_offset 14,-4
 1600 0002 00AF     	 add r7,sp,#0
 1601              	.LCFI11:
 1602              	 .cfi_def_cfa_register 7
 316:../Libraries/FT800-FT813-5.x/tft.c **** // Sends pre-recorded touch calibration values, depending on the display the code is compiled for. 
 317:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_RiTFT43)
 318:../Libraries/FT800-FT813-5.x/tft.c **** 	// Original library values
 319:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000062cd);
 320:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xfffffe45);
 321:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff45e0a);
 322:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000001a3);
 323:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b33);
 324:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFbb870);
 325:../Libraries/FT800-FT813-5.x/tft.c **** 
 326:../Libraries/FT800-FT813-5.x/tft.c **** 	// Actual values (measured with routine down below) by Rene S. at 20.12.2020 on Display SM-RVT43UL
 327:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000061c4);
 1603              	 .loc 1 327 0
 1604 0004 0E48     	 ldr r0,.L38
 1605 0006 46F2C411 	 movw r1,#25028
 1606 000a FFF7FEFF 	 bl EVE_memWrite32
 328:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000025d);
 1607              	 .loc 1 328 0
 1608 000e 0D48     	 ldr r0,.L38+4
 1609 0010 40F25D21 	 movw r1,#605
 1610 0014 FFF7FEFF 	 bl EVE_memWrite32
 329:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff14ab1);
 1611              	 .loc 1 329 0
 1612 0018 0B48     	 ldr r0,.L38+8
 1613 001a 0C49     	 ldr r1,.L38+12
 1614 001c FFF7FEFF 	 bl EVE_memWrite32
 330:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xffffff91);
 1615              	 .loc 1 330 0
 1616 0020 0B48     	 ldr r0,.L38+16
 1617 0022 6FF06E01 	 mvn r1,#110
 1618 0026 FFF7FEFF 	 bl EVE_memWrite32
 331:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b6b);
 1619              	 .loc 1 331 0
 1620 002a 0A48     	 ldr r0,.L38+20
 1621 002c 45F66B31 	 movw r1,#23403
 1622 0030 FFF7FEFF 	 bl EVE_memWrite32
 332:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFac7ab);
 1623              	 .loc 1 332 0
 1624 0034 0848     	 ldr r0,.L38+24
 1625 0036 0949     	 ldr r1,.L38+28
 1626 0038 FFF7FEFF 	 bl EVE_memWrite32
 333:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 334:../Libraries/FT800-FT813-5.x/tft.c **** 
 335:../Libraries/FT800-FT813-5.x/tft.c **** // All targets other than EVE_RiTFT43 where deleted -> see original lib 4
 336:../Libraries/FT800-FT813-5.x/tft.c **** 
 337:../Libraries/FT800-FT813-5.x/tft.c **** /* activate this if you are using a module for the first time or if you need to re-calibrate it */
 338:../Libraries/FT800-FT813-5.x/tft.c **** /* write down the numbers on the screen and either place them in one of the pre-defined blocks abov
 339:../Libraries/FT800-FT813-5.x/tft.c **** #if 0
 340:../Libraries/FT800-FT813-5.x/tft.c **** 	/* calibrate touch and displays values to screen */
 341:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 342:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 343:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 344:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text((EVE_HSIZE/2), 50, 26, EVE_OPT_CENTER, "Please tap on the dot.");
 345:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_calibrate();
 346:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);
 347:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP);
 348:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 349:../Libraries/FT800-FT813-5.x/tft.c **** 
 350:../Libraries/FT800-FT813-5.x/tft.c **** 	uint32_t touch_a, touch_b, touch_c, touch_d, touch_e, touch_f;
 351:../Libraries/FT800-FT813-5.x/tft.c **** 
 352:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_a = EVE_memRead32(REG_TOUCH_TRANSFORM_A);
 353:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_b = EVE_memRead32(REG_TOUCH_TRANSFORM_B);
 354:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_c = EVE_memRead32(REG_TOUCH_TRANSFORM_C);
 355:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_d = EVE_memRead32(REG_TOUCH_TRANSFORM_D);
 356:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_e = EVE_memRead32(REG_TOUCH_TRANSFORM_E);
 357:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_f = EVE_memRead32(REG_TOUCH_TRANSFORM_F);
 358:../Libraries/FT800-FT813-5.x/tft.c **** 
 359:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 360:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 361:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 362:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0));
 363:../Libraries/FT800-FT813-5.x/tft.c **** 
 364:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 15, 26, 0, "TOUCH_TRANSFORM_A:");
 365:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 30, 26, 0, "TOUCH_TRANSFORM_B:");
 366:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 45, 26, 0, "TOUCH_TRANSFORM_C:");
 367:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 60, 26, 0, "TOUCH_TRANSFORM_D:");
 368:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 75, 26, 0, "TOUCH_TRANSFORM_E:");
 369:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 90, 26, 0, "TOUCH_TRANSFORM_F:");
 370:../Libraries/FT800-FT813-5.x/tft.c **** 
 371:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_setbase(16L);
 372:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 15, 26, EVE_OPT_RIGHTX|8, touch_a);
 373:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 30, 26, EVE_OPT_RIGHTX|8, touch_b);
 374:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 45, 26, EVE_OPT_RIGHTX|8, touch_c);
 375:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 60, 26, EVE_OPT_RIGHTX|8, touch_d);
 376:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 75, 26, EVE_OPT_RIGHTX|8, touch_e);
 377:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 90, 26, EVE_OPT_RIGHTX|8, touch_f);
 378:../Libraries/FT800-FT813-5.x/tft.c **** 
 379:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);	/* instruct the graphics processor to show the list */
 380:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP); /* make this list active */
 381:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 382:../Libraries/FT800-FT813-5.x/tft.c **** 
 383:../Libraries/FT800-FT813-5.x/tft.c **** 	while(1);
 384:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 385:../Libraries/FT800-FT813-5.x/tft.c **** }
 1627              	 .loc 1 385 0
 1628 003c 80BD     	 pop {r7,pc}
 1629              	.L39:
 1630 003e 00BF     	 .align 2
 1631              	.L38:
 1632 0040 50213000 	 .word 3154256
 1633 0044 54213000 	 .word 3154260
 1634 0048 58213000 	 .word 3154264
 1635 004c B14AF1FF 	 .word -963919
 1636 0050 5C213000 	 .word 3154268
 1637 0054 60213000 	 .word 3154272
 1638 0058 64213000 	 .word 3154276
 1639 005c ABC7FAFF 	 .word -342101
 1640              	 .cfi_endproc
 1641              	.LFE448:
 1643              	 .section .text.TFT_display_init_screen,"ax",%progbits
 1644              	 .align 2
 1645              	 .global TFT_display_init_screen
 1646              	 .thumb
 1647              	 .thumb_func
 1649              	TFT_display_init_screen:
 1650              	.LFB449:
 386:../Libraries/FT800-FT813-5.x/tft.c **** 
 387:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_init_screen(void)
 388:../Libraries/FT800-FT813-5.x/tft.c **** {
 1651              	 .loc 1 388 0
 1652              	 .cfi_startproc
 1653              	 
 1654              	 
 1655 0000 80B5     	 push {r7,lr}
 1656              	.LCFI12:
 1657              	 .cfi_def_cfa_offset 8
 1658              	 .cfi_offset 7,-8
 1659              	 .cfi_offset 14,-4
 1660 0002 00AF     	 add r7,sp,#0
 1661              	.LCFI13:
 1662              	 .cfi_def_cfa_register 7
 389:../Libraries/FT800-FT813-5.x/tft.c **** 
 390:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 1663              	 .loc 1 390 0
 1664 0004 1A4B     	 ldr r3,.L42
 1665 0006 1B78     	 ldrb r3,[r3]
 1666 0008 002B     	 cmp r3,#0
 1667 000a 30D0     	 beq .L40
 391:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 392:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_inflate(MEM_LOGO, logo_init, sizeof(logo_init)); /* load logo into gfx-memory and de-comp
 1668              	 .loc 1 392 0
 1669 000c 0020     	 movs r0,#0
 1670 000e 1949     	 ldr r1,.L42+4
 1671 0010 44F60472 	 movw r2,#20228
 1672 0014 FFF7FEFF 	 bl EVE_cmd_inflate
 393:../Libraries/FT800-FT813-5.x/tft.c **** 
 394:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1673              	 .loc 1 394 0
 1674 0018 FFF7FEFF 	 bl EVE_start_cmd_burst
 395:../Libraries/FT800-FT813-5.x/tft.c **** 
 396:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1675              	 .loc 1 396 0
 1676 001c 6FF0FF00 	 mvn r0,#255
 1677 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 397:../Libraries/FT800-FT813-5.x/tft.c **** 		//EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16
 398:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1678              	 .loc 1 398 0
 1679 0024 6FF07D40 	 mvn r0,#-50331648
 1680 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 399:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1681              	 .loc 1 399 0
 1682 002c 1248     	 ldr r0,.L42+8
 1683 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 400:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 1684              	 .loc 1 400 0
 1685 0032 4FF04070 	 mov r0,#50331648
 1686 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 401:../Libraries/FT800-FT813-5.x/tft.c **** 
 402:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_setbitmap_burst(MEM_LOGO, EVE_ARGB1555, 308, 250);
 1687              	 .loc 1 402 0
 1688 003a 0020     	 movs r0,#0
 1689 003c 0021     	 movs r1,#0
 1690 003e 4FF49A72 	 mov r2,#308
 1691 0042 FA23     	 movs r3,#250
 1692 0044 FFF7FEFF 	 bl EVE_cmd_setbitmap_burst
 403:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_BITMAPS);
 1693              	 .loc 1 403 0
 1694 0048 0C48     	 ldr r0,.L42+12
 1695 004a FFF7FEFF 	 bl EVE_cmd_dl_burst
 404:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(86*16, 11*16));  //105*16
 1696              	 .loc 1 404 0
 1697 004e 0C48     	 ldr r0,.L42+16
 1698 0050 FFF7FEFF 	 bl EVE_cmd_dl_burst
 405:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1699              	 .loc 1 405 0
 1700 0054 4FF00450 	 mov r0,#553648128
 1701 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 406:../Libraries/FT800-FT813-5.x/tft.c **** 
 407:../Libraries/FT800-FT813-5.x/tft.c **** 
 408:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1702              	 .loc 1 408 0
 1703 005c 0020     	 movs r0,#0
 1704 005e FFF7FEFF 	 bl EVE_cmd_dl_burst
 409:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1705              	 .loc 1 409 0
 1706 0062 6FF0FE00 	 mvn r0,#254
 1707 0066 FFF7FEFF 	 bl EVE_cmd_dl_burst
 410:../Libraries/FT800-FT813-5.x/tft.c **** 
 411:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1708              	 .loc 1 411 0
 1709 006a FFF7FEFF 	 bl EVE_end_cmd_burst
 1710              	.L40:
 412:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 413:../Libraries/FT800-FT813-5.x/tft.c **** }
 1711              	 .loc 1 413 0
 1712 006e 80BD     	 pop {r7,pc}
 1713              	.L43:
 1714              	 .align 2
 1715              	.L42:
 1716 0070 00000000 	 .word tft_active
 1717 0074 00000000 	 .word logo_init
 1718 0078 07000026 	 .word 637534215
 1719 007c 0100001F 	 .word 520093697
 1720 0080 B000B042 	 .word 1118830768
 1721              	 .cfi_endproc
 1722              	.LFE449:
 1724              	 .section .rodata
 1725              	 .align 2
 1726              	.LC6:
 1727 0028 444C2D73 	 .ascii "DL-size:\000"
 1727      697A653A 
 1727      00
 1728 0031 000000   	 .align 2
 1729              	.LC7:
 1730 0034 53656E73 	 .ascii "Sensor:\000"
 1730      6F723A00 
 1731              	 .section .text.initStaticGraphBackground,"ax",%progbits
 1732              	 .align 2
 1733              	 .global initStaticGraphBackground
 1734              	 .thumb
 1735              	 .thumb_func
 1737              	initStaticGraphBackground:
 1738              	.LFB450:
 414:../Libraries/FT800-FT813-5.x/tft.c **** 
 415:../Libraries/FT800-FT813-5.x/tft.c **** void initStaticGraphBackground(void)
 416:../Libraries/FT800-FT813-5.x/tft.c **** {
 1739              	 .loc 1 416 0
 1740              	 .cfi_startproc
 1741              	 
 1742              	 
 1743 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 1744              	.LCFI14:
 1745              	 .cfi_def_cfa_offset 32
 1746              	 .cfi_offset 4,-32
 1747              	 .cfi_offset 5,-28
 1748              	 .cfi_offset 6,-24
 1749              	 .cfi_offset 7,-20
 1750              	 .cfi_offset 8,-16
 1751              	 .cfi_offset 9,-12
 1752              	 .cfi_offset 10,-8
 1753              	 .cfi_offset 14,-4
 1754 0004 8AB0     	 sub sp,sp,#40
 1755              	.LCFI15:
 1756              	 .cfi_def_cfa_offset 72
 1757 0006 0AAF     	 add r7,sp,#40
 1758              	.LCFI16:
 1759              	 .cfi_def_cfa 7,32
 417:../Libraries/FT800-FT813-5.x/tft.c **** 	// Static portion of display-handling, meant to be called once at startup. Created by Rudolph Ried
 418:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART); // Start a new display list (resets REG_CMD_DL to 0)
 1760              	 .loc 1 418 0
 1761 0008 6FF0FF00 	 mvn r0,#255
 1762 000c FFF7FEFF 	 bl EVE_cmd_dl
 419:../Libraries/FT800-FT813-5.x/tft.c **** 
 420:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Main settings
 421:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature*/
 1763              	 .loc 1 421 0
 1764 0010 5948     	 ldr r0,.L47
 1765 0012 FFF7FEFF 	 bl EVE_cmd_dl
 422:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor(MAIN_BGCOLOR); /* light grey */
 1766              	 .loc 1 422 0
 1767 0016 5948     	 ldr r0,.L47+4
 1768 0018 FFF7FEFF 	 bl EVE_cmd_bgcolor
 423:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 pixel de
 1769              	 .loc 1 423 0
 1770 001c 4FF01C50 	 mov r0,#654311424
 1771 0020 FFF7FEFF 	 bl EVE_cmd_dl
 424:../Libraries/FT800-FT813-5.x/tft.c **** 	// Main Rectangle
 425:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BGCOLOR);
 1772              	 .loc 1 425 0
 1773 0024 5648     	 ldr r0,.L47+8
 1774 0026 FFF7FEFF 	 bl EVE_cmd_dl
 426:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_RECTS);
 1775              	 .loc 1 426 0
 1776 002a 5648     	 ldr r0,.L47+12
 1777 002c FFF7FEFF 	 bl EVE_cmd_dl
 427:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, 0));
 1778              	 .loc 1 427 0
 1779 0030 4FF08040 	 mov r0,#1073741824
 1780 0034 FFF7FEFF 	 bl EVE_cmd_dl
 428:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, EVE_VSIZE));
 1781              	 .loc 1 428 0
 1782 0038 5348     	 ldr r0,.L47+16
 1783 003a FFF7FEFF 	 bl EVE_cmd_dl
 429:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1784              	 .loc 1 429 0
 1785 003e 4FF00450 	 mov r0,#553648128
 1786 0042 FFF7FEFF 	 bl EVE_cmd_dl
 430:../Libraries/FT800-FT813-5.x/tft.c **** 
 431:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw Banner and divider line on top
 432:../Libraries/FT800-FT813-5.x/tft.c **** 	// Banner
 433:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 1787              	 .loc 1 433 0
 1788 0046 5148     	 ldr r0,.L47+20
 1789 0048 FFF7FEFF 	 bl EVE_cmd_dl
 434:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 1790              	 .loc 1 434 0
 1791 004c 5048     	 ldr r0,.L47+24
 1792 004e FFF7FEFF 	 bl EVE_cmd_dl
 435:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 1793              	 .loc 1 435 0
 1794 0052 5048     	 ldr r0,.L47+28
 1795 0054 FFF7FEFF 	 bl EVE_cmd_dl
 436:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 1796              	 .loc 1 436 0
 1797 0058 4F48     	 ldr r0,.L47+32
 1798 005a FFF7FEFF 	 bl EVE_cmd_dl
 437:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 1799              	 .loc 1 437 0
 1800 005e 4F48     	 ldr r0,.L47+36
 1801 0060 FFF7FEFF 	 bl EVE_cmd_dl
 438:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 1802              	 .loc 1 438 0
 1803 0064 4E48     	 ldr r0,.L47+40
 1804 0066 FFF7FEFF 	 bl EVE_cmd_dl
 439:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 1805              	 .loc 1 439 0
 1806 006a 4E48     	 ldr r0,.L47+44
 1807 006c FFF7FEFF 	 bl EVE_cmd_dl
 440:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1808              	 .loc 1 440 0
 1809 0070 4FF00450 	 mov r0,#553648128
 1810 0074 FFF7FEFF 	 bl EVE_cmd_dl
 441:../Libraries/FT800-FT813-5.x/tft.c **** 	// Divider
 442:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 1811              	 .loc 1 442 0
 1812 0078 4B48     	 ldr r0,.L47+48
 1813 007a FFF7FEFF 	 bl EVE_cmd_dl
 443:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 1814              	 .loc 1 443 0
 1815 007e 4B48     	 ldr r0,.L47+52
 1816 0080 FFF7FEFF 	 bl EVE_cmd_dl
 444:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 1817              	 .loc 1 444 0
 1818 0084 4448     	 ldr r0,.L47+32
 1819 0086 FFF7FEFF 	 bl EVE_cmd_dl
 445:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 1820              	 .loc 1 445 0
 1821 008a 4448     	 ldr r0,.L47+36
 1822 008c FFF7FEFF 	 bl EVE_cmd_dl
 446:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 1823              	 .loc 1 446 0
 1824 0090 4348     	 ldr r0,.L47+40
 1825 0092 FFF7FEFF 	 bl EVE_cmd_dl
 447:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 1826              	 .loc 1 447 0
 1827 0096 4348     	 ldr r0,.L47+44
 1828 0098 FFF7FEFF 	 bl EVE_cmd_dl
 448:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1829              	 .loc 1 448 0
 1830 009c 4FF00450 	 mov r0,#553648128
 1831 00a0 FFF7FEFF 	 bl EVE_cmd_dl
 449:../Libraries/FT800-FT813-5.x/tft.c **** 
 450:../Libraries/FT800-FT813-5.x/tft.c **** 	// Add the static text
 451:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 1832              	 .loc 1 451 0
 1833 00a4 4FF04070 	 mov r0,#50331648
 1834 00a8 FFF7FEFF 	 bl EVE_cmd_dl
 452:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 1835              	 .loc 1 452 0
 1836 00ac 3E48     	 ldr r0,.L47+48
 1837 00ae FFF7FEFF 	 bl EVE_cmd_dl
 453:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 454:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_text(10, EVE_VSIZE - 65, 26, 0, "Bytes: ");
 455:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 456:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 10, 26, 0, "DL-size:");
 1838              	 .loc 1 456 0
 1839 00b2 3F4B     	 ldr r3,.L47+56
 1840 00b4 0093     	 str r3,[sp]
 1841 00b6 4FF4B470 	 mov r0,#360
 1842 00ba 0A21     	 movs r1,#10
 1843 00bc 1A22     	 movs r2,#26
 1844 00be 0023     	 movs r3,#0
 1845 00c0 FFF7FEFF 	 bl EVE_cmd_text
 457:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 25, 26, 0, "Sensor:");
 1846              	 .loc 1 457 0
 1847 00c4 3B4B     	 ldr r3,.L47+60
 1848 00c6 0093     	 str r3,[sp]
 1849 00c8 4FF4B470 	 mov r0,#360
 1850 00cc 1921     	 movs r1,#25
 1851 00ce 1A22     	 movs r2,#26
 1852 00d0 0023     	 movs r3,#0
 1853 00d2 FFF7FEFF 	 bl EVE_cmd_text
 458:../Libraries/FT800-FT813-5.x/tft.c **** 
 459:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the static part of the Graph to the display list
 460:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphStatic(0, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, G_v
 1854              	 .loc 1 460 0
 1855 00d6 384B     	 ldr r3,.L47+64
 1856 00d8 B3F800A0 	 ldrh r10,[r3]
 1857 00dc 374B     	 ldr r3,.L47+68
 1858 00de B3F800C0 	 ldrh ip,[r3]
 1859 00e2 374B     	 ldr r3,.L47+72
 1860 00e4 B3F800E0 	 ldrh lr,[r3]
 1861 00e8 364B     	 ldr r3,.L47+76
 1862 00ea 1E88     	 ldrh r6,[r3]
 1863 00ec 364B     	 ldr r3,.L47+80
 1864 00ee D3E90089 	 ldrd r8,[r3]
 1865 00f2 364B     	 ldr r3,.L47+84
 1866 00f4 D3E90045 	 ldrd r4,[r3]
 1867 00f8 354B     	 ldr r3,.L47+88
 1868 00fa D3E90001 	 ldrd r0,[r3]
 1869 00fe 354B     	 ldr r3,.L47+92
 1870 0100 D3E90023 	 ldrd r2,[r3]
 1871 0104 0096     	 str r6,[sp]
 1872 0106 0A26     	 movs r6,#10
 1873 0108 0196     	 str r6,[sp,#4]
 1874 010a CDE90289 	 strd r8,[sp,#8]
 1875 010e CDE90445 	 strd r4,[sp,#16]
 1876 0112 CDE90601 	 strd r0,[sp,#24]
 1877 0116 CDE90823 	 strd r2,[sp,#32]
 1878 011a 0020     	 movs r0,#0
 1879 011c 5146     	 mov r1,r10
 1880 011e 6246     	 mov r2,ip
 1881 0120 7346     	 mov r3,lr
 1882 0122 FFF7FEFF 	 bl TFT_GraphStatic
 461:../Libraries/FT800-FT813-5.x/tft.c **** 
 462:../Libraries/FT800-FT813-5.x/tft.c **** 	// Wait for Display to be finished
 463:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1883              	 .loc 1 463 0
 1884 0126 00BF     	 nop
 1885              	.L45:
 1886              	 .loc 1 463 0 is_stmt 0 discriminator 1
 1887 0128 FFF7FEFF 	 bl EVE_busy
 1888 012c 0346     	 mov r3,r0
 1889 012e 002B     	 cmp r3,#0
 1890 0130 FAD1     	 bne .L45
 464:../Libraries/FT800-FT813-5.x/tft.c **** 
 465:../Libraries/FT800-FT813-5.x/tft.c **** 	// Get size of the current display list
 466:../Libraries/FT800-FT813-5.x/tft.c **** 	num_dl_static = EVE_memRead16(REG_CMD_DL); // REG_CMD_DL = Command display list offset
 1891              	 .loc 1 466 0 is_stmt 1
 1892 0132 2948     	 ldr r0,.L47+96
 1893 0134 FFF7FEFF 	 bl EVE_memRead16
 1894 0138 0346     	 mov r3,r0
 1895 013a 1A46     	 mov r2,r3
 1896 013c 274B     	 ldr r3,.L47+100
 1897 013e 1A60     	 str r2,[r3]
 467:../Libraries/FT800-FT813-5.x/tft.c **** 
 468:../Libraries/FT800-FT813-5.x/tft.c **** 	// Copy "num_dl_static" bytes from pointer "EVE_RAM_DL" to pointer "MEM_DL_STATIC"
 469:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_memcpy(MEM_DL_STATIC, EVE_RAM_DL, num_dl_static);
 1898              	 .loc 1 469 0
 1899 0140 264B     	 ldr r3,.L47+100
 1900 0142 1B68     	 ldr r3,[r3]
 1901 0144 4FF47F20 	 mov r0,#1044480
 1902 0148 4FF44011 	 mov r1,#3145728
 1903 014c 1A46     	 mov r2,r3
 1904 014e FFF7FEFF 	 bl EVE_cmd_memcpy
 470:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1905              	 .loc 1 470 0
 1906 0152 00BF     	 nop
 1907              	.L46:
 1908              	 .loc 1 470 0 is_stmt 0 discriminator 1
 1909 0154 FFF7FEFF 	 bl EVE_busy
 1910 0158 0346     	 mov r3,r0
 1911 015a 002B     	 cmp r3,#0
 1912 015c FAD1     	 bne .L46
 471:../Libraries/FT800-FT813-5.x/tft.c **** 
 472:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_track(0, 0, EVE_HSIZE, EVE_VSIZE, 1);
 1913              	 .loc 1 472 0 is_stmt 1
 1914 015e 0123     	 movs r3,#1
 1915 0160 0093     	 str r3,[sp]
 1916 0162 0020     	 movs r0,#0
 1917 0164 0021     	 movs r1,#0
 1918 0166 4FF4F072 	 mov r2,#480
 1919 016a 4FF48873 	 mov r3,#272
 1920 016e FFF7FEFF 	 bl EVE_cmd_track
 473:../Libraries/FT800-FT813-5.x/tft.c **** }
 1921              	 .loc 1 473 0
 1922 0172 BD46     	 mov sp,r7
 1923              	.LCFI17:
 1924              	 .cfi_def_cfa_register 13
 1925              	 
 1926 0174 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 1927              	.L48:
 1928              	 .align 2
 1929              	.L47:
 1930 0178 01000003 	 .word 50331649
 1931 017c EEF1F500 	 .word 16118254
 1932 0180 EEF1F504 	 .word 83227118
 1933 0184 0900001F 	 .word 520093705
 1934 0188 1001F040 	 .word 1089470736
 1935 018c 1000000E 	 .word 234881040
 1936 0190 4B586404 	 .word 73685067
 1937 0194 0700001F 	 .word 520093703
 1938 0198 42000040 	 .word 1073741890
 1939 019c 42008C40 	 .word 1082916930
 1940 01a0 3200A040 	 .word 1084227634
 1941 01a4 3200F040 	 .word 1089470514
 1942 01a8 29CDF304 	 .word 83086633
 1943 01ac 0400001F 	 .word 520093700
 1944 01b0 28000000 	 .word .LC6
 1945 01b4 34000000 	 .word .LC7
 1946 01b8 00000000 	 .word G_x
 1947 01bc 00000000 	 .word G_y
 1948 01c0 00000000 	 .word G_width
 1949 01c4 00000000 	 .word G_height
 1950 01c8 00000000 	 .word G_amp_max
 1951 01cc 00000000 	 .word G_t_max
 1952 01d0 00000000 	 .word G_h_grid_lines
 1953 01d4 00000000 	 .word G_v_grid_lines
 1954 01d8 00213000 	 .word 3154176
 1955 01dc 00000000 	 .word num_dl_static
 1956              	 .cfi_endproc
 1957              	.LFE450:
 1959              	 .section .text.TFT_init,"ax",%progbits
 1960              	 .align 2
 1961              	 .global TFT_init
 1962              	 .thumb
 1963              	 .thumb_func
 1965              	TFT_init:
 1966              	.LFB451:
 474:../Libraries/FT800-FT813-5.x/tft.c **** 
 475:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t TFT_init(void)
 476:../Libraries/FT800-FT813-5.x/tft.c **** {
 1967              	 .loc 1 476 0
 1968              	 .cfi_startproc
 1969              	 
 1970              	 
 1971 0000 80B5     	 push {r7,lr}
 1972              	.LCFI18:
 1973              	 .cfi_def_cfa_offset 8
 1974              	 .cfi_offset 7,-8
 1975              	 .cfi_offset 14,-4
 1976 0002 00AF     	 add r7,sp,#0
 1977              	.LCFI19:
 1978              	 .cfi_def_cfa_register 7
 477:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Initializes EVE (or checks if its already initialized). Only at first sucessful EVE_init() the
 478:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_init() != 0)
 1979              	 .loc 1 478 0
 1980 0004 FFF7FEFF 	 bl EVE_init
 1981 0008 0346     	 mov r3,r0
 1982 000a 002B     	 cmp r3,#0
 1983 000c 2BD0     	 beq .L50
 479:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 480:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (DEBUG_ENABLE)
 481:../Libraries/FT800-FT813-5.x/tft.c **** 			printf("TFT_init - EVE_init was ok, starting to init TFT!\n");
 482:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 483:../Libraries/FT800-FT813-5.x/tft.c **** 		// Mark Display as active (TFT_display only does anythin after his)
 484:../Libraries/FT800-FT813-5.x/tft.c **** 		tft_active = 1;
 1984              	 .loc 1 484 0
 1985 000e 174B     	 ldr r3,.L52
 1986 0010 0122     	 movs r2,#1
 1987 0012 1A70     	 strb r2,[r3]
 485:../Libraries/FT800-FT813-5.x/tft.c **** 
 486:../Libraries/FT800-FT813-5.x/tft.c **** 		// Initial Backlight strength
 487:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_memWrite8(REG_PWM_DUTY, 0x30);	/* setup backlight, range is from 0 = off to 0x80 = max */
 1988              	 .loc 1 487 0
 1989 0014 1648     	 ldr r0,.L52+4
 1990 0016 3021     	 movs r1,#48
 1991 0018 FFF7FEFF 	 bl EVE_memWrite8
 488:../Libraries/FT800-FT813-5.x/tft.c **** 
 489:../Libraries/FT800-FT813-5.x/tft.c **** 		// Write prerecorded touchscreen calibration back to display
 490:../Libraries/FT800-FT813-5.x/tft.c **** 		touch_calibrate();
 1992              	 .loc 1 490 0
 1993 001c FFF7FEFF 	 bl touch_calibrate
 491:../Libraries/FT800-FT813-5.x/tft.c **** 
 492:../Libraries/FT800-FT813-5.x/tft.c **** 		// Clear screen, set precision for VERTEX2F to 1 pixel and show DL for the first time
 493:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1994              	 .loc 1 493 0
 1995 0020 FFF7FEFF 	 bl EVE_start_cmd_burst
 494:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1996              	 .loc 1 494 0
 1997 0024 6FF0FF00 	 mvn r0,#255
 1998 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 495:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0)); /* do not use the following objects for touch-detection */
 1999              	 .loc 1 495 0
 2000 002c 4FF04070 	 mov r0,#50331648
 2001 0030 FFF7FEFF 	 bl EVE_cmd_dl_burst
 496:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_bgcolor_burst(MAIN_BGCOLOR);
 2002              	 .loc 1 496 0
 2003 0034 0F48     	 ldr r0,.L52+8
 2004 0036 FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 497:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 p
 2005              	 .loc 1 497 0
 2006 003a 4FF01C50 	 mov r0,#654311424
 2007 003e FFF7FEFF 	 bl EVE_cmd_dl_burst
 498:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 2008              	 .loc 1 498 0
 2009 0042 6FF07D40 	 mvn r0,#-50331648
 2010 0046 FFF7FEFF 	 bl EVE_cmd_dl_burst
 499:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 2011              	 .loc 1 499 0
 2012 004a 0B48     	 ldr r0,.L52+12
 2013 004c FFF7FEFF 	 bl EVE_cmd_dl_burst
 500:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 2014              	 .loc 1 500 0
 2015 0050 0020     	 movs r0,#0
 2016 0052 FFF7FEFF 	 bl EVE_cmd_dl_burst
 501:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 2017              	 .loc 1 501 0
 2018 0056 6FF0FE00 	 mvn r0,#254
 2019 005a FFF7FEFF 	 bl EVE_cmd_dl_burst
 502:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 2020              	 .loc 1 502 0
 2021 005e FFF7FEFF 	 bl EVE_end_cmd_burst
 503:../Libraries/FT800-FT813-5.x/tft.c **** 		return 1;
 2022              	 .loc 1 503 0
 2023 0062 0123     	 movs r3,#1
 2024 0064 00E0     	 b .L51
 2025              	.L50:
 504:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 505:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 506:../Libraries/FT800-FT813-5.x/tft.c **** 		return 0;
 2026              	 .loc 1 506 0
 2027 0066 0023     	 movs r3,#0
 2028              	.L51:
 507:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 508:../Libraries/FT800-FT813-5.x/tft.c **** }
 2029              	 .loc 1 508 0
 2030 0068 1846     	 mov r0,r3
 2031 006a 80BD     	 pop {r7,pc}
 2032              	.L53:
 2033              	 .align 2
 2034              	.L52:
 2035 006c 00000000 	 .word tft_active
 2036 0070 D4203000 	 .word 3154132
 2037 0074 EEF1F500 	 .word 16118254
 2038 0078 07000026 	 .word 637534215
 2039              	 .cfi_endproc
 2040              	.LFE451:
 2042              	 .section .text.TFT_touch,"ax",%progbits
 2043              	 .align 2
 2044              	 .global TFT_touch
 2045              	 .thumb
 2046              	 .thumb_func
 2048              	TFT_touch:
 2049              	.LFB452:
 509:../Libraries/FT800-FT813-5.x/tft.c **** 
 510:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch(void)
 511:../Libraries/FT800-FT813-5.x/tft.c **** {
 2050              	 .loc 1 511 0
 2051              	 .cfi_startproc
 2052              	 
 2053              	 
 2054 0000 80B5     	 push {r7,lr}
 2055              	.LCFI20:
 2056              	 .cfi_def_cfa_offset 8
 2057              	 .cfi_offset 7,-8
 2058              	 .cfi_offset 14,-4
 2059 0002 84B0     	 sub sp,sp,#16
 2060              	.LCFI21:
 2061              	 .cfi_def_cfa_offset 24
 2062 0004 00AF     	 add r7,sp,#0
 2063              	.LCFI22:
 2064              	 .cfi_def_cfa_register 7
 512:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Check for touch events and setup vars for TFT_display() (Buttons). Created by Rudolph Riedel, 
 513:../Libraries/FT800-FT813-5.x/tft.c **** 	// Init vars
 514:../Libraries/FT800-FT813-5.x/tft.c **** 	uint8_t tag; // temporary store of received touched tag
 515:../Libraries/FT800-FT813-5.x/tft.c **** 	
 516:../Libraries/FT800-FT813-5.x/tft.c **** 	// If Display is still busy, skip this evaluation to prevent hanging, glitches and flickers
 517:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_busy()) { return; } /* is EVE still processing the last display list? */
 2065              	 .loc 1 517 0
 2066 0006 FFF7FEFF 	 bl EVE_busy
 2067 000a 0346     	 mov r3,r0
 2068 000c 002B     	 cmp r3,#0
 2069 000e 00D0     	 beq .L55
 2070 0010 6EE0     	 b .L54
 2071              	.L55:
 518:../Libraries/FT800-FT813-5.x/tft.c **** 
 519:../Libraries/FT800-FT813-5.x/tft.c **** 	// Read the value for the first touch point
 520:../Libraries/FT800-FT813-5.x/tft.c **** 	tag = EVE_memRead8(REG_TOUCH_TAG);
 2072              	 .loc 1 520 0
 2073 0012 3948     	 ldr r0,.L65
 2074 0014 FFF7FEFF 	 bl EVE_memRead8
 2075 0018 0346     	 mov r3,r0
 2076 001a FB73     	 strb r3,[r7,#15]
 521:../Libraries/FT800-FT813-5.x/tft.c **** 
 522:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 523:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 2077              	 .loc 1 523 0
 2078 001c FB7B     	 ldrb r3,[r7,#15]
 2079 001e 002B     	 cmp r3,#0
 2080 0020 02D0     	 beq .L58
 2081 0022 012B     	 cmp r3,#1
 2082 0024 0CD0     	 beq .L59
 2083 0026 5BE0     	 b .L64
 2084              	.L58:
 2085              	.LBB13:
 524:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 525:../Libraries/FT800-FT813-5.x/tft.c **** 		// nothing touched - reset states and locks
 526:../Libraries/FT800-FT813-5.x/tft.c **** 		case 0:
 527:../Libraries/FT800-FT813-5.x/tft.c **** 			toggle_lock = 0;
 2086              	 .loc 1 527 0
 2087 0028 344B     	 ldr r3,.L65+4
 2088 002a 0022     	 movs r2,#0
 2089 002c 1A70     	 strb r2,[r3]
 528:../Libraries/FT800-FT813-5.x/tft.c **** 			BGtouchInitial_X = 32768;
 2090              	 .loc 1 528 0
 2091 002e 344B     	 ldr r3,.L65+8
 2092 0030 4FF40042 	 mov r2,#32768
 2093 0034 1A80     	 strh r2,[r3]
 529:../Libraries/FT800-FT813-5.x/tft.c **** 			BGtouchInitial_Y = 32768;
 2094              	 .loc 1 529 0
 2095 0036 334B     	 ldr r3,.L65+12
 2096 0038 4FF40042 	 mov r2,#32768
 2097 003c 1A80     	 strh r2,[r3]
 530:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2098              	 .loc 1 530 0
 2099 003e 57E0     	 b .L54
 2100              	.L59:
 531:../Libraries/FT800-FT813-5.x/tft.c **** 		case 1:
 532:../Libraries/FT800-FT813-5.x/tft.c **** 			TouchXY = EVE_memRead32(REG_TOUCH_SCREEN_XY);
 2101              	 .loc 1 532 0
 2102 0040 3148     	 ldr r0,.L65+16
 2103 0042 FFF7FEFF 	 bl EVE_memRead32
 2104 0046 0246     	 mov r2,r0
 2105 0048 304B     	 ldr r3,.L65+20
 2106 004a 1A60     	 str r2,[r3]
 533:../Libraries/FT800-FT813-5.x/tft.c **** 			uint16_t X = TouchXY;
 2107              	 .loc 1 533 0
 2108 004c 2F4B     	 ldr r3,.L65+20
 2109 004e 1B68     	 ldr r3,[r3]
 2110 0050 BB81     	 strh r3,[r7,#12]
 534:../Libraries/FT800-FT813-5.x/tft.c **** 			uint16_t Y = TouchXY >> 16;
 2111              	 .loc 1 534 0
 2112 0052 2E4B     	 ldr r3,.L65+20
 2113 0054 1B68     	 ldr r3,[r3]
 2114 0056 1B0C     	 lsrs r3,r3,#16
 2115 0058 7B81     	 strh r3,[r7,#10]
 535:../Libraries/FT800-FT813-5.x/tft.c **** 
 536:../Libraries/FT800-FT813-5.x/tft.c **** 			// Detect initial touch on BG - save coordinates to determine where the user swipes
 537:../Libraries/FT800-FT813-5.x/tft.c **** 			if(BGtouchInitial_X == 32768 && BGtouchInitial_Y == 32768){
 2116              	 .loc 1 537 0
 2117 005a 294B     	 ldr r3,.L65+8
 2118 005c 1B88     	 ldrh r3,[r3]
 2119 005e B3F5004F 	 cmp r3,#32768
 2120 0062 0BD1     	 bne .L60
 2121              	 .loc 1 537 0 is_stmt 0 discriminator 1
 2122 0064 274B     	 ldr r3,.L65+12
 2123 0066 1B88     	 ldrh r3,[r3]
 2124 0068 B3F5004F 	 cmp r3,#32768
 2125 006c 06D1     	 bne .L60
 538:../Libraries/FT800-FT813-5.x/tft.c **** 				BGtouchInitial_X = X;
 2126              	 .loc 1 538 0 is_stmt 1
 2127 006e 244A     	 ldr r2,.L65+8
 2128 0070 BB89     	 ldrh r3,[r7,#12]
 2129 0072 1380     	 strh r3,[r2]
 539:../Libraries/FT800-FT813-5.x/tft.c **** 				BGtouchInitial_Y = Y;
 2130              	 .loc 1 539 0
 2131 0074 234A     	 ldr r2,.L65+12
 2132 0076 7B89     	 ldrh r3,[r7,#10]
 2133 0078 1380     	 strh r3,[r2]
 2134 007a 30E0     	 b .L61
 2135              	.L60:
 540:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 541:../Libraries/FT800-FT813-5.x/tft.c **** 			else if(BGtouchInitial_X < 32768 && BGtouchInitial_Y < 32768){
 2136              	 .loc 1 541 0
 2137 007c 204B     	 ldr r3,.L65+8
 2138 007e 1B88     	 ldrh r3,[r3]
 2139 0080 9BB2     	 uxth r3,r3
 2140 0082 1BB2     	 sxth r3,r3
 2141 0084 002B     	 cmp r3,#0
 2142 0086 2ADB     	 blt .L61
 2143              	 .loc 1 541 0 is_stmt 0 discriminator 1
 2144 0088 1E4B     	 ldr r3,.L65+12
 2145 008a 1B88     	 ldrh r3,[r3]
 2146 008c 9BB2     	 uxth r3,r3
 2147 008e 1BB2     	 sxth r3,r3
 2148 0090 002B     	 cmp r3,#0
 2149 0092 24DB     	 blt .L61
 2150              	.LBB14:
 542:../Libraries/FT800-FT813-5.x/tft.c **** 				int16_t swipe_X = BGtouchInitial_X - X;
 2151              	 .loc 1 542 0 is_stmt 1
 2152 0094 1A4B     	 ldr r3,.L65+8
 2153 0096 1A88     	 ldrh r2,[r3]
 2154 0098 BB89     	 ldrh r3,[r7,#12]
 2155 009a D31A     	 subs r3,r2,r3
 2156 009c 9BB2     	 uxth r3,r3
 2157 009e 3B81     	 strh r3,[r7,#8]
 543:../Libraries/FT800-FT813-5.x/tft.c **** 				int16_t swipe_Y = BGtouchInitial_Y - Y;
 2158              	 .loc 1 543 0
 2159 00a0 184B     	 ldr r3,.L65+12
 2160 00a2 1A88     	 ldrh r2,[r3]
 2161 00a4 7B89     	 ldrh r3,[r7,#10]
 2162 00a6 D31A     	 subs r3,r2,r3
 2163 00a8 9BB2     	 uxth r3,r3
 2164 00aa FB80     	 strh r3,[r7,#6]
 2165              	.LBB15:
 544:../Libraries/FT800-FT813-5.x/tft.c **** 
 545:../Libraries/FT800-FT813-5.x/tft.c **** 				if(abs(swipe_X) > abs(swipe_Y)){
 2166              	 .loc 1 545 0
 2167 00ac B7F90830 	 ldrsh r3,[r7,#8]
 2168 00b0 83EAE372 	 eor r2,r3,r3,asr#31
 2169 00b4 A2EBE372 	 sub r2,r2,r3,asr#31
 2170 00b8 B7F90630 	 ldrsh r3,[r7,#6]
 2171 00bc 002B     	 cmp r3,#0
 2172 00be B8BF     	 it lt
 2173 00c0 5B42     	 rsblt r3,r3,#0
 2174 00c2 9A42     	 cmp r2,r3
 2175 00c4 0BDD     	 ble .L61
 546:../Libraries/FT800-FT813-5.x/tft.c **** 					if(swipe_X > 100){
 2176              	 .loc 1 546 0
 2177 00c6 B7F90830 	 ldrsh r3,[r7,#8]
 2178 00ca 642B     	 cmp r3,#100
 2179 00cc 03DD     	 ble .L62
 547:../Libraries/FT800-FT813-5.x/tft.c **** 						// swipe to left
 548:../Libraries/FT800-FT813-5.x/tft.c **** 						TFT_cur_Menu = 1; //dummy
 2180              	 .loc 1 548 0
 2181 00ce 104B     	 ldr r3,.L65+24
 2182 00d0 0122     	 movs r2,#1
 2183 00d2 1A60     	 str r2,[r3]
 2184 00d4 03E0     	 b .L61
 2185              	.L62:
 549:../Libraries/FT800-FT813-5.x/tft.c **** 					}
 550:../Libraries/FT800-FT813-5.x/tft.c **** 					else{
 551:../Libraries/FT800-FT813-5.x/tft.c **** 						// swipe to right
 552:../Libraries/FT800-FT813-5.x/tft.c **** 						TFT_cur_Menu = 0; //dummy
 2186              	 .loc 1 552 0
 2187 00d6 0E4B     	 ldr r3,.L65+24
 2188 00d8 0022     	 movs r2,#0
 2189 00da 1A60     	 str r2,[r3]
 2190              	.LBE15:
 2191              	.LBE14:
 553:../Libraries/FT800-FT813-5.x/tft.c **** 					}
 554:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 555:../Libraries/FT800-FT813-5.x/tft.c **** 				else{
 556:../Libraries/FT800-FT813-5.x/tft.c **** 					if(swipe_Y > 100){
 557:../Libraries/FT800-FT813-5.x/tft.c **** 						// swipe down
 558:../Libraries/FT800-FT813-5.x/tft.c **** 					}
 559:../Libraries/FT800-FT813-5.x/tft.c **** 					else{
 560:../Libraries/FT800-FT813-5.x/tft.c **** 						// swipe up
 561:../Libraries/FT800-FT813-5.x/tft.c **** 					}
 562:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 563:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 564:../Libraries/FT800-FT813-5.x/tft.c **** 
 565:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2192              	 .loc 1 565 0
 2193 00dc 08E0     	 b .L54
 2194              	.L61:
 2195              	 .loc 1 565 0 is_stmt 0 discriminator 1
 2196 00de 07E0     	 b .L54
 2197              	.L64:
 566:../Libraries/FT800-FT813-5.x/tft.c **** 		default:
 567:../Libraries/FT800-FT813-5.x/tft.c **** 			// Execute current menu specific code
 568:../Libraries/FT800-FT813-5.x/tft.c **** 			(*TFT_touch_cur_Menu__fptr_arr[TFT_cur_Menu])(tag);
 2198              	 .loc 1 568 0 is_stmt 1
 2199 00e0 0B4B     	 ldr r3,.L65+24
 2200 00e2 1B68     	 ldr r3,[r3]
 2201 00e4 0B4A     	 ldr r2,.L65+28
 2202 00e6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2203 00ea FA7B     	 ldrb r2,[r7,#15]
 2204 00ec 1046     	 mov r0,r2
 2205 00ee 9847     	 blx r3
 2206              	.L54:
 2207              	.LBE13:
 569:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 570:../Libraries/FT800-FT813-5.x/tft.c **** }
 2208              	 .loc 1 570 0
 2209 00f0 1037     	 adds r7,r7,#16
 2210              	.LCFI23:
 2211              	 .cfi_def_cfa_offset 8
 2212 00f2 BD46     	 mov sp,r7
 2213              	.LCFI24:
 2214              	 .cfi_def_cfa_register 13
 2215              	 
 2216 00f4 80BD     	 pop {r7,pc}
 2217              	.L66:
 2218 00f6 00BF     	 .align 2
 2219              	.L65:
 2220 00f8 2C213000 	 .word 3154220
 2221 00fc 00000000 	 .word toggle_lock
 2222 0100 00000000 	 .word BGtouchInitial_X
 2223 0104 00000000 	 .word BGtouchInitial_Y
 2224 0108 24213000 	 .word 3154212
 2225 010c 00000000 	 .word TouchXY
 2226 0110 00000000 	 .word TFT_cur_Menu
 2227 0114 00000000 	 .word TFT_touch_cur_Menu__fptr_arr
 2228              	 .cfi_endproc
 2229              	.LFE452:
 2231              	 .section .text.TFT_display,"ax",%progbits
 2232              	 .align 2
 2233              	 .global TFT_display
 2234              	 .thumb
 2235              	 .thumb_func
 2237              	TFT_display:
 2238              	.LFB453:
 571:../Libraries/FT800-FT813-5.x/tft.c **** 
 572:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display(void)
 573:../Libraries/FT800-FT813-5.x/tft.c **** {
 2239              	 .loc 1 573 0
 2240              	 .cfi_startproc
 2241              	 
 2242              	 
 2243 0000 80B5     	 push {r7,lr}
 2244              	.LCFI25:
 2245              	 .cfi_def_cfa_offset 8
 2246              	 .cfi_offset 7,-8
 2247              	 .cfi_offset 14,-4
 2248 0002 00AF     	 add r7,sp,#0
 2249              	.LCFI26:
 2250              	 .cfi_def_cfa_register 7
 574:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Dynamic portion of display-handling, meant to be called every 20ms or more. Created by Rudolph
 575:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 576:../Libraries/FT800-FT813-5.x/tft.c **** 	/// The inputs are used to draw the Graph data. Note that also some predefined graph settings are 
 577:../Libraries/FT800-FT813-5.x/tft.c **** 
 578:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 2251              	 .loc 1 578 0
 2252 0004 1C4B     	 ldr r3,.L69
 2253 0006 1B78     	 ldrb r3,[r3]
 2254 0008 002B     	 cmp r3,#0
 2255 000a 33D0     	 beq .L67
 579:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 580:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (EVE_DMA)
 581:../Libraries/FT800-FT813-5.x/tft.c **** 			uint16_t cmd_fifo_size;
 582:../Libraries/FT800-FT813-5.x/tft.c **** 			cmd_fifo_size = EVE_dma_buffer_index*4; /* without DMA there is no way to tell how many bytes ar
 583:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 584:../Libraries/FT800-FT813-5.x/tft.c **** 
 585:../Libraries/FT800-FT813-5.x/tft.c **** 		//EVE_cmd_track(0, 0, EVE_VSIZE, EVE_HSIZE, 1);
 586:../Libraries/FT800-FT813-5.x/tft.c **** 
 587:../Libraries/FT800-FT813-5.x/tft.c **** 
 588:../Libraries/FT800-FT813-5.x/tft.c **** 		// Get size of last display list to be printed on screen (section "Debug Values")
 589:../Libraries/FT800-FT813-5.x/tft.c **** 		display_list_size = EVE_memRead16(REG_CMD_DL);
 2256              	 .loc 1 589 0
 2257 000c 1B48     	 ldr r0,.L69+4
 2258 000e FFF7FEFF 	 bl EVE_memRead16
 2259 0012 0346     	 mov r3,r0
 2260 0014 1A46     	 mov r2,r3
 2261 0016 1A4B     	 ldr r3,.L69+8
 2262 0018 1A80     	 strh r2,[r3]
 590:../Libraries/FT800-FT813-5.x/tft.c **** 		tracker = EVE_memRead32(REG_TRACKER);
 2263              	 .loc 1 590 0
 2264 001a 1A48     	 ldr r0,.L69+12
 2265 001c FFF7FEFF 	 bl EVE_memRead32
 2266 0020 0246     	 mov r2,r0
 2267 0022 194B     	 ldr r3,.L69+16
 2268 0024 1A60     	 str r2,[r3]
 591:../Libraries/FT800-FT813-5.x/tft.c **** 
 592:../Libraries/FT800-FT813-5.x/tft.c **** 
 593:../Libraries/FT800-FT813-5.x/tft.c **** 		// Start Burst (start writing to the cmd-fifo as one stream of bytes, only sending the address on
 594:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst();
 2269              	 .loc 1 594 0
 2270 0026 FFF7FEFF 	 bl EVE_start_cmd_burst
 595:../Libraries/FT800-FT813-5.x/tft.c **** 
 596:../Libraries/FT800-FT813-5.x/tft.c **** 
 597:../Libraries/FT800-FT813-5.x/tft.c **** 
 598:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Start the actual display list
 599:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART);
 2271              	 .loc 1 599 0
 2272 002a 6FF0FF00 	 mvn r0,#255
 2273 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 600:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 2274              	 .loc 1 600 0
 2275 0032 6FF07D40 	 mvn r0,#-50331648
 2276 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 601:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 2277              	 .loc 1 601 0
 2278 003a 1448     	 ldr r0,.L69+20
 2279 003c FFF7FEFF 	 bl EVE_cmd_dl_burst
 602:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 2280              	 .loc 1 602 0
 2281 0040 4FF04070 	 mov r0,#50331648
 2282 0044 FFF7FEFF 	 bl EVE_cmd_dl_burst
 603:../Libraries/FT800-FT813-5.x/tft.c **** 
 604:../Libraries/FT800-FT813-5.x/tft.c **** 		// Insert static part of display-list from copy in gfx-mem
 605:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_append_burst(MEM_DL_STATIC, num_dl_static);
 2283              	 .loc 1 605 0
 2284 0048 114B     	 ldr r3,.L69+24
 2285 004a 1B68     	 ldr r3,[r3]
 2286 004c 4FF47F20 	 mov r0,#1044480
 2287 0050 1946     	 mov r1,r3
 2288 0052 FFF7FEFF 	 bl EVE_cmd_append_burst
 606:../Libraries/FT800-FT813-5.x/tft.c **** 
 607:../Libraries/FT800-FT813-5.x/tft.c **** 
 608:../Libraries/FT800-FT813-5.x/tft.c **** 		// Execute current menu specific code
 609:../Libraries/FT800-FT813-5.x/tft.c **** 		(*TFT_display_cur_Menu__fptr_arr[TFT_cur_Menu])();
 2289              	 .loc 1 609 0
 2290 0056 0F4B     	 ldr r3,.L69+28
 2291 0058 1B68     	 ldr r3,[r3]
 2292 005a 0F4A     	 ldr r2,.L69+32
 2293 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2294 0060 9847     	 blx r3
 610:../Libraries/FT800-FT813-5.x/tft.c **** 
 611:../Libraries/FT800-FT813-5.x/tft.c **** 
 612:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Finish Display list and burst
 613:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 2295              	 .loc 1 613 0
 2296 0062 0020     	 movs r0,#0
 2297 0064 FFF7FEFF 	 bl EVE_cmd_dl_burst
 614:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 2298              	 .loc 1 614 0
 2299 0068 6FF0FE00 	 mvn r0,#254
 2300 006c FFF7FEFF 	 bl EVE_cmd_dl_burst
 615:../Libraries/FT800-FT813-5.x/tft.c **** 
 616:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 2301              	 .loc 1 616 0
 2302 0070 FFF7FEFF 	 bl EVE_end_cmd_burst
 2303              	.L67:
 617:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 618:../Libraries/FT800-FT813-5.x/tft.c **** }
 2304              	 .loc 1 618 0
 2305 0074 80BD     	 pop {r7,pc}
 2306              	.L70:
 2307 0076 00BF     	 .align 2
 2308              	.L69:
 2309 0078 00000000 	 .word tft_active
 2310 007c 00213000 	 .word 3154176
 2311 0080 00000000 	 .word display_list_size
 2312 0084 00903000 	 .word 3182592
 2313 0088 00000000 	 .word tracker
 2314 008c 07000026 	 .word 637534215
 2315 0090 00000000 	 .word num_dl_static
 2316 0094 00000000 	 .word TFT_cur_Menu
 2317 0098 00000000 	 .word TFT_display_cur_Menu__fptr_arr
 2318              	 .cfi_endproc
 2319              	.LFE453:
 2321              	 .section .rodata
 2322              	 .align 2
 2323              	.LC8:
 2324 003c 53656E73 	 .ascii "Sensor\000"
 2324      6F7200
 2325 0043 00       	 .align 2
 2326              	.LC9:
 2327 0044 496D7000 	 .ascii "Imp\000"
 2328              	 .align 2
 2329              	.LC10:
 2330 0048 53617700 	 .ascii "Saw\000"
 2331              	 .align 2
 2332              	.LC11:
 2333 004c 53696E65 	 .ascii "Sine\000"
 2333      00
 2334 0051 000000   	 .align 2
 2335              	.LC12:
 2336 0054 526F6C6C 	 .ascii "Roll\000"
 2336      00
 2337 0059 000000   	 .align 2
 2338              	.LC13:
 2339 005c 4672616D 	 .ascii "Frame\000"
 2339      6500
 2340 0062 0000     	 .align 2
 2341              	.LC14:
 2342 0064 44696D6D 	 .ascii "Dimmer\000"
 2342      657200
 2343 006b 00       	 .align 2
 2344              	.LC15:
 2345 006c 252E326C 	 .ascii "%.2lf\000"
 2345      6600
 2346 0072 0000     	 .align 2
 2347              	.LC16:
 2348 0074 205600   	 .ascii " V\000"
 2349              	 .section .text.TFT_display_menu0,"ax",%progbits
 2350              	 .align 2
 2351              	 .global TFT_display_menu0
 2352              	 .thumb
 2353              	 .thumb_func
 2355              	TFT_display_menu0:
 2356              	.LFB454:
 619:../Libraries/FT800-FT813-5.x/tft.c **** 
 620:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu0(void)
 621:../Libraries/FT800-FT813-5.x/tft.c **** {
 2357              	 .loc 1 621 0
 2358              	 .cfi_startproc
 2359              	 
 2360              	 
 2361 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2362              	.LCFI27:
 2363              	 .cfi_def_cfa_offset 20
 2364              	 .cfi_offset 4,-20
 2365              	 .cfi_offset 5,-16
 2366              	 .cfi_offset 6,-12
 2367              	 .cfi_offset 7,-8
 2368              	 .cfi_offset 14,-4
 2369 0002 93B0     	 sub sp,sp,#76
 2370              	.LCFI28:
 2371              	 .cfi_def_cfa_offset 96
 2372 0004 0AAF     	 add r7,sp,#40
 2373              	.LCFI29:
 2374              	 .cfi_def_cfa 7,56
 622:../Libraries/FT800-FT813-5.x/tft.c **** 	/// The inputs are used to draw the Graph data. Note that also some predefined graph settings are 
 623:../Libraries/FT800-FT813-5.x/tft.c **** 
 624:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Display BUTTONS and Toggles
 625:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 2375              	 .loc 1 625 0
 2376 0006 7C48     	 ldr r0,.L78
 2377 0008 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 626:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 2378              	 .loc 1 626 0
 2379 000c 7B48     	 ldr r0,.L78+4
 2380 000e FFF7FEFF 	 bl EVE_cmd_dl_burst
 627:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 2381              	 .loc 1 627 0
 2382 0012 7B48     	 ldr r0,.L78+8
 2383 0014 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 628:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 2384              	 .loc 1 628 0
 2385 0018 7A48     	 ldr r0,.L78+12
 2386 001a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 629:../Libraries/FT800-FT813-5.x/tft.c **** 
 630:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(13)); /* assign tag-value '13' to the button that follows */
 2387              	 .loc 1 630 0
 2388 001e 7A48     	 ldr r0,.L78+16
 2389 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 631:../Libraries/FT800-FT813-5.x/tft.c **** 	if(InputType == 0){ 		EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sensor");	}
 2390              	 .loc 1 631 0
 2391 0024 794B     	 ldr r3,.L78+20
 2392 0026 1B78     	 ldrb r3,[r3]
 2393 0028 DBB2     	 uxtb r3,r3
 2394 002a 002B     	 cmp r3,#0
 2395 002c 0CD1     	 bne .L72
 2396              	 .loc 1 631 0 is_stmt 0 discriminator 1
 2397 002e 1B23     	 movs r3,#27
 2398 0030 0093     	 str r3,[sp]
 2399 0032 0023     	 movs r3,#0
 2400 0034 0193     	 str r3,[sp,#4]
 2401 0036 764B     	 ldr r3,.L78+24
 2402 0038 0293     	 str r3,[sp,#8]
 2403 003a 1420     	 movs r0,#20
 2404 003c 0F21     	 movs r1,#15
 2405 003e 5022     	 movs r2,#80
 2406 0040 1E23     	 movs r3,#30
 2407 0042 FFF7FEFF 	 bl EVE_cmd_button_burst
 2408 0046 2FE0     	 b .L73
 2409              	.L72:
 632:../Libraries/FT800-FT813-5.x/tft.c **** 	else if(InputType == 1){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Imp");	}
 2410              	 .loc 1 632 0 is_stmt 1
 2411 0048 704B     	 ldr r3,.L78+20
 2412 004a 1B78     	 ldrb r3,[r3]
 2413 004c DBB2     	 uxtb r3,r3
 2414 004e 012B     	 cmp r3,#1
 2415 0050 0CD1     	 bne .L74
 2416              	 .loc 1 632 0 is_stmt 0 discriminator 1
 2417 0052 1B23     	 movs r3,#27
 2418 0054 0093     	 str r3,[sp]
 2419 0056 0023     	 movs r3,#0
 2420 0058 0193     	 str r3,[sp,#4]
 2421 005a 6E4B     	 ldr r3,.L78+28
 2422 005c 0293     	 str r3,[sp,#8]
 2423 005e 1420     	 movs r0,#20
 2424 0060 0F21     	 movs r1,#15
 2425 0062 5022     	 movs r2,#80
 2426 0064 1E23     	 movs r3,#30
 2427 0066 FFF7FEFF 	 bl EVE_cmd_button_burst
 2428 006a 1DE0     	 b .L73
 2429              	.L74:
 633:../Libraries/FT800-FT813-5.x/tft.c **** 	else if(InputType == 2){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Saw");	}
 2430              	 .loc 1 633 0 is_stmt 1
 2431 006c 674B     	 ldr r3,.L78+20
 2432 006e 1B78     	 ldrb r3,[r3]
 2433 0070 DBB2     	 uxtb r3,r3
 2434 0072 022B     	 cmp r3,#2
 2435 0074 0CD1     	 bne .L75
 2436              	 .loc 1 633 0 is_stmt 0 discriminator 1
 2437 0076 1B23     	 movs r3,#27
 2438 0078 0093     	 str r3,[sp]
 2439 007a 0023     	 movs r3,#0
 2440 007c 0193     	 str r3,[sp,#4]
 2441 007e 664B     	 ldr r3,.L78+32
 2442 0080 0293     	 str r3,[sp,#8]
 2443 0082 1420     	 movs r0,#20
 2444 0084 0F21     	 movs r1,#15
 2445 0086 5022     	 movs r2,#80
 2446 0088 1E23     	 movs r3,#30
 2447 008a FFF7FEFF 	 bl EVE_cmd_button_burst
 2448 008e 0BE0     	 b .L73
 2449              	.L75:
 634:../Libraries/FT800-FT813-5.x/tft.c **** 	else{						EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sine");	}
 2450              	 .loc 1 634 0 is_stmt 1
 2451 0090 1B23     	 movs r3,#27
 2452 0092 0093     	 str r3,[sp]
 2453 0094 0023     	 movs r3,#0
 2454 0096 0193     	 str r3,[sp,#4]
 2455 0098 604B     	 ldr r3,.L78+36
 2456 009a 0293     	 str r3,[sp,#8]
 2457 009c 1420     	 movs r0,#20
 2458 009e 0F21     	 movs r1,#15
 2459 00a0 5022     	 movs r2,#80
 2460 00a2 1E23     	 movs r3,#30
 2461 00a4 FFF7FEFF 	 bl EVE_cmd_button_burst
 2462              	.L73:
 635:../Libraries/FT800-FT813-5.x/tft.c **** 
 636:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 2463              	 .loc 1 636 0
 2464 00a8 5D48     	 ldr r0,.L78+40
 2465 00aa FFF7FEFF 	 bl EVE_cmd_dl_burst
 637:../Libraries/FT800-FT813-5.x/tft.c **** 	if(toggle_state_graphmode){
 2466              	 .loc 1 637 0
 2467 00ae 5D4B     	 ldr r3,.L78+44
 2468 00b0 1B88     	 ldrh r3,[r3]
 2469 00b2 002B     	 cmp r3,#0
 2470 00b4 0DD0     	 beq .L76
 638:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "Roll");
 2471              	 .loc 1 638 0
 2472 00b6 0023     	 movs r3,#0
 2473 00b8 0093     	 str r3,[sp]
 2474 00ba 4FF6FF73 	 movw r3,#65535
 2475 00be 0193     	 str r3,[sp,#4]
 2476 00c0 594B     	 ldr r3,.L78+48
 2477 00c2 0293     	 str r3,[sp,#8]
 2478 00c4 7820     	 movs r0,#120
 2479 00c6 1821     	 movs r1,#24
 2480 00c8 3E22     	 movs r2,#62
 2481 00ca 1B23     	 movs r3,#27
 2482 00cc FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2483 00d0 0BE0     	 b .L77
 2484              	.L76:
 639:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 640:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 641:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "Frame");
 2485              	 .loc 1 641 0
 2486 00d2 0023     	 movs r3,#0
 2487 00d4 0093     	 str r3,[sp]
 2488 00d6 0023     	 movs r3,#0
 2489 00d8 0193     	 str r3,[sp,#4]
 2490 00da 544B     	 ldr r3,.L78+52
 2491 00dc 0293     	 str r3,[sp,#8]
 2492 00de 7820     	 movs r0,#120
 2493 00e0 1821     	 movs r1,#24
 2494 00e2 3E22     	 movs r2,#62
 2495 00e4 1B23     	 movs r3,#27
 2496 00e6 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2497              	.L77:
 642:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 643:../Libraries/FT800-FT813-5.x/tft.c **** 
 644:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(10)); /* assign tag-value '10' to the button that follows */
 2498              	 .loc 1 644 0
 2499 00ea 5148     	 ldr r0,.L78+56
 2500 00ec FFF7FEFF 	 bl EVE_cmd_dl_burst
 645:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_button_burst(205,15,80,30, 27, toggle_state_dimmer,"Dimmer");
 2501              	 .loc 1 645 0
 2502 00f0 504B     	 ldr r3,.L78+60
 2503 00f2 1B88     	 ldrh r3,[r3]
 2504 00f4 1B22     	 movs r2,#27
 2505 00f6 0092     	 str r2,[sp]
 2506 00f8 0193     	 str r3,[sp,#4]
 2507 00fa 4F4B     	 ldr r3,.L78+64
 2508 00fc 0293     	 str r3,[sp,#8]
 2509 00fe CD20     	 movs r0,#205
 2510 0100 0F21     	 movs r1,#15
 2511 0102 5022     	 movs r2,#80
 2512 0104 1E23     	 movs r3,#30
 2513 0106 FFF7FEFF 	 bl EVE_cmd_button_burst
 646:../Libraries/FT800-FT813-5.x/tft.c **** 
 647:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 2514              	 .loc 1 647 0
 2515 010a 4FF04070 	 mov r0,#50331648
 2516 010e FFF7FEFF 	 bl EVE_cmd_dl_burst
 648:../Libraries/FT800-FT813-5.x/tft.c **** 
 649:../Libraries/FT800-FT813-5.x/tft.c **** 
 650:../Libraries/FT800-FT813-5.x/tft.c **** 
 651:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Debug Values
 652:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 653:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(120, EVE_VSIZE - 65, 26, EVE_OPT_RIGHTX, cmd_fifo_size); /* number of bytes w
 654:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 655:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, display_list_size); /* number of bytes written t
 2517              	 .loc 1 655 0
 2518 0112 4A4B     	 ldr r3,.L78+68
 2519 0114 1B88     	 ldrh r3,[r3]
 2520 0116 0093     	 str r3,[sp]
 2521 0118 4FF4EB70 	 mov r0,#470
 2522 011c 0A21     	 movs r1,#10
 2523 011e 1A22     	 movs r2,#26
 2524 0120 4FF40063 	 mov r3,#2048
 2525 0124 FFF7FEFF 	 bl EVE_cmd_number_burst
 656:../Libraries/FT800-FT813-5.x/tft.c **** 
 657:../Libraries/FT800-FT813-5.x/tft.c **** 	// Write current sensor value with unit
 658:../Libraries/FT800-FT813-5.x/tft.c **** 	char buffer[32]; // buffer for double to string conversion
 659:../Libraries/FT800-FT813-5.x/tft.c **** 	sprintf(buffer, "%.2lf", (G_amp_max/G_y_max)*InputBuffer1[InputBuffer1_idx]); // double to string 
 2526              	 .loc 1 659 0
 2527 0128 454B     	 ldr r3,.L78+72
 2528 012a D3E90001 	 ldrd r0,[r3]
 2529 012e 454B     	 ldr r3,.L78+76
 2530 0130 D3E90023 	 ldrd r2,[r3]
 2531 0134 FFF7FEFF 	 bl __aeabi_ddiv
 2532 0138 0246     	 mov r2,r0
 2533 013a 0B46     	 mov r3,r1
 2534 013c 1446     	 mov r4,r2
 2535 013e 1D46     	 mov r5,r3
 2536 0140 414B     	 ldr r3,.L78+80
 2537 0142 1B88     	 ldrh r3,[r3]
 2538 0144 1A46     	 mov r2,r3
 2539 0146 414B     	 ldr r3,.L78+84
 2540 0148 33F81230 	 ldrh r3,[r3,r2,lsl#1]
 2541 014c 1846     	 mov r0,r3
 2542 014e FFF7FEFF 	 bl __aeabi_i2d
 2543 0152 0246     	 mov r2,r0
 2544 0154 0B46     	 mov r3,r1
 2545 0156 2046     	 mov r0,r4
 2546 0158 2946     	 mov r1,r5
 2547 015a FFF7FEFF 	 bl __aeabi_dmul
 2548 015e 0246     	 mov r2,r0
 2549 0160 0B46     	 mov r3,r1
 2550 0162 1446     	 mov r4,r2
 2551 0164 1D46     	 mov r5,r3
 2552 0166 3B46     	 mov r3,r7
 2553 0168 1846     	 mov r0,r3
 2554 016a 3949     	 ldr r1,.L78+88
 2555 016c 2246     	 mov r2,r4
 2556 016e 2B46     	 mov r3,r5
 2557 0170 FFF7FEFF 	 bl sprintf
 660:../Libraries/FT800-FT813-5.x/tft.c **** 	strcat(buffer, unit_Sensor);
 2558              	 .loc 1 660 0
 2559 0174 3B46     	 mov r3,r7
 2560 0176 1846     	 mov r0,r3
 2561 0178 FFF7FEFF 	 bl strlen
 2562 017c 0346     	 mov r3,r0
 2563 017e 1A46     	 mov r2,r3
 2564 0180 3B46     	 mov r3,r7
 2565 0182 1344     	 add r3,r3,r2
 2566 0184 334A     	 ldr r2,.L78+92
 2567 0186 1188     	 ldrh r1,[r2]
 2568 0188 9278     	 ldrb r2,[r2,#2]
 2569 018a 1980     	 strh r1,[r3]
 2570 018c 9A70     	 strb r2,[r3,#2]
 661:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text_burst(470, 25, 26, EVE_OPT_RIGHTX, buffer);
 2571              	 .loc 1 661 0
 2572 018e 3B46     	 mov r3,r7
 2573 0190 0093     	 str r3,[sp]
 2574 0192 4FF4EB70 	 mov r0,#470
 2575 0196 1921     	 movs r1,#25
 2576 0198 1A22     	 movs r2,#26
 2577 019a 4FF40063 	 mov r3,#2048
 2578 019e FFF7FEFF 	 bl EVE_cmd_text_burst
 662:../Libraries/FT800-FT813-5.x/tft.c **** 
 663:../Libraries/FT800-FT813-5.x/tft.c **** 
 664:../Libraries/FT800-FT813-5.x/tft.c **** 
 665:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH
 666:../Libraries/FT800-FT813-5.x/tft.c **** 	///// Print dynamic part of the Graph (data & marker)
 667:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphData(G_x, G_y, G_width, G_height, G_PADDING, G_y_max, &InputBuffer1[0], INPUTBUFFER1_SIZE
 2579              	 .loc 1 667 0
 2580 01a2 2D4B     	 ldr r3,.L78+96
 2581 01a4 B3F800E0 	 ldrh lr,[r3]
 2582 01a8 2C4B     	 ldr r3,.L78+100
 2583 01aa 1E88     	 ldrh r6,[r3]
 2584 01ac 2C4B     	 ldr r3,.L78+104
 2585 01ae 1D88     	 ldrh r5,[r3]
 2586 01b0 2C4B     	 ldr r3,.L78+108
 2587 01b2 1C88     	 ldrh r4,[r3]
 2588 01b4 234B     	 ldr r3,.L78+76
 2589 01b6 D3E90023 	 ldrd r2,[r3]
 2590 01ba 1A49     	 ldr r1,.L78+44
 2591 01bc 0988     	 ldrh r1,[r1]
 2592 01be C9B2     	 uxtb r1,r1
 2593 01c0 0A20     	 movs r0,#10
 2594 01c2 0090     	 str r0,[sp]
 2595 01c4 CDE90223 	 strd r2,[sp,#8]
 2596 01c8 204B     	 ldr r3,.L78+84
 2597 01ca 0493     	 str r3,[sp,#16]
 2598 01cc 4FF4DC73 	 mov r3,#440
 2599 01d0 0593     	 str r3,[sp,#20]
 2600 01d2 1D4B     	 ldr r3,.L78+80
 2601 01d4 0693     	 str r3,[sp,#24]
 2602 01d6 0791     	 str r1,[sp,#28]
 2603 01d8 43F69E73 	 movw r3,#16286
 2604 01dc 0893     	 str r3,[sp,#32]
 2605 01de 4FF47F03 	 mov r3,#16711680
 2606 01e2 0993     	 str r3,[sp,#36]
 2607 01e4 7046     	 mov r0,lr
 2608 01e6 3146     	 mov r1,r6
 2609 01e8 2A46     	 mov r2,r5
 2610 01ea 2346     	 mov r3,r4
 2611 01ec FFF7FEFF 	 bl TFT_GraphData
 668:../Libraries/FT800-FT813-5.x/tft.c **** 
 669:../Libraries/FT800-FT813-5.x/tft.c **** }
 2612              	 .loc 1 669 0
 2613 01f0 2437     	 adds r7,r7,#36
 2614              	.LCFI30:
 2615              	 .cfi_def_cfa_offset 20
 2616 01f2 BD46     	 mov sp,r7
 2617              	.LCFI31:
 2618              	 .cfi_def_cfa_register 13
 2619              	 
 2620 01f4 F0BD     	 pop {r4,r5,r6,r7,pc}
 2621              	.L79:
 2622 01f6 00BF     	 .align 2
 2623              	.L78:
 2624 01f8 124B8C00 	 .word 9194258
 2625 01fc EEF8FF04 	 .word 83884270
 2626 0200 2BA9EA00 	 .word 15378731
 2627 0204 6696AD00 	 .word 11376230
 2628 0208 0D000003 	 .word 50331661
 2629 020c 00000000 	 .word InputType
 2630 0210 3C000000 	 .word .LC8
 2631 0214 44000000 	 .word .LC9
 2632 0218 48000000 	 .word .LC10
 2633 021c 4C000000 	 .word .LC11
 2634 0220 0C000003 	 .word 50331660
 2635 0224 00000000 	 .word toggle_state_graphmode
 2636 0228 54000000 	 .word .LC12
 2637 022c 5C000000 	 .word .LC13
 2638 0230 0A000003 	 .word 50331658
 2639 0234 00000000 	 .word toggle_state_dimmer
 2640 0238 64000000 	 .word .LC14
 2641 023c 00000000 	 .word display_list_size
 2642 0240 00000000 	 .word G_amp_max
 2643 0244 00000000 	 .word G_y_max
 2644 0248 00000000 	 .word InputBuffer1_idx
 2645 024c 00000000 	 .word InputBuffer1
 2646 0250 6C000000 	 .word .LC15
 2647 0254 74000000 	 .word .LC16
 2648 0258 00000000 	 .word G_x
 2649 025c 00000000 	 .word G_y
 2650 0260 00000000 	 .word G_width
 2651 0264 00000000 	 .word G_height
 2652              	 .cfi_endproc
 2653              	.LFE454:
 2655              	 .section .rodata
 2656 0077 00       	 .align 2
 2657              	.LC17:
 2658 0078 6C6900   	 .ascii "li\000"
 2659 007b 00       	 .align 2
 2660              	.LC18:
 2661 007c 726500   	 .ascii "re\000"
 2662 007f 00       	 .section .text.TFT_display_menu1,"ax",%progbits
 2663              	 .align 2
 2664              	 .global TFT_display_menu1
 2665              	 .thumb
 2666              	 .thumb_func
 2668              	TFT_display_menu1:
 2669              	.LFB455:
 670:../Libraries/FT800-FT813-5.x/tft.c **** 
 671:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu1(void)
 672:../Libraries/FT800-FT813-5.x/tft.c **** {
 2670              	 .loc 1 672 0
 2671              	 .cfi_startproc
 2672              	 
 2673              	 
 2674 0000 80B5     	 push {r7,lr}
 2675              	.LCFI32:
 2676              	 .cfi_def_cfa_offset 8
 2677              	 .cfi_offset 7,-8
 2678              	 .cfi_offset 14,-4
 2679 0002 86B0     	 sub sp,sp,#24
 2680              	.LCFI33:
 2681              	 .cfi_def_cfa_offset 32
 2682 0004 04AF     	 add r7,sp,#16
 2683              	.LCFI34:
 2684              	 .cfi_def_cfa 7,16
 673:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Test menu
 674:../Libraries/FT800-FT813-5.x/tft.c **** 
 675:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Display BUTTONS and Toggles
 676:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 2685              	 .loc 1 676 0
 2686 0006 4C48     	 ldr r0,.L86
 2687 0008 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 677:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 2688              	 .loc 1 677 0
 2689 000c 4B48     	 ldr r0,.L86+4
 2690 000e FFF7FEFF 	 bl EVE_cmd_dl_burst
 678:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 2691              	 .loc 1 678 0
 2692 0012 4B48     	 ldr r0,.L86+8
 2693 0014 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 679:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 2694              	 .loc 1 679 0
 2695 0018 4A48     	 ldr r0,.L86+12
 2696 001a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 680:../Libraries/FT800-FT813-5.x/tft.c **** 
 681:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 2697              	 .loc 1 681 0
 2698 001e 4A48     	 ldr r0,.L86+16
 2699 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 682:../Libraries/FT800-FT813-5.x/tft.c **** 	if(toggle_state_graphmode){
 2700              	 .loc 1 682 0
 2701 0024 494B     	 ldr r3,.L86+20
 2702 0026 1B88     	 ldrh r3,[r3]
 2703 0028 002B     	 cmp r3,#0
 2704 002a 0DD0     	 beq .L81
 683:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "li");
 2705              	 .loc 1 683 0
 2706 002c 0023     	 movs r3,#0
 2707 002e 0093     	 str r3,[sp]
 2708 0030 4FF6FF73 	 movw r3,#65535
 2709 0034 0193     	 str r3,[sp,#4]
 2710 0036 464B     	 ldr r3,.L86+24
 2711 0038 0293     	 str r3,[sp,#8]
 2712 003a 7820     	 movs r0,#120
 2713 003c 1821     	 movs r1,#24
 2714 003e 3E22     	 movs r2,#62
 2715 0040 1B23     	 movs r3,#27
 2716 0042 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2717 0046 0BE0     	 b .L82
 2718              	.L81:
 684:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 685:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 686:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "re");
 2719              	 .loc 1 686 0
 2720 0048 0023     	 movs r3,#0
 2721 004a 0093     	 str r3,[sp]
 2722 004c 0023     	 movs r3,#0
 2723 004e 0193     	 str r3,[sp,#4]
 2724 0050 404B     	 ldr r3,.L86+28
 2725 0052 0293     	 str r3,[sp,#8]
 2726 0054 7820     	 movs r0,#120
 2727 0056 1821     	 movs r1,#24
 2728 0058 3E22     	 movs r2,#62
 2729 005a 1B23     	 movs r3,#27
 2730 005c FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2731              	.L82:
 687:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 688:../Libraries/FT800-FT813-5.x/tft.c **** 
 689:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(2));
 2732              	 .loc 1 689 0
 2733 0060 3D48     	 ldr r0,.L86+32
 2734 0062 FFF7FEFF 	 bl EVE_cmd_dl_burst
 690:../Libraries/FT800-FT813-5.x/tft.c **** 
 691:../Libraries/FT800-FT813-5.x/tft.c **** 	int val = tracker >> 16;
 2735              	 .loc 1 691 0
 2736 0066 3D4B     	 ldr r3,.L86+36
 2737 0068 1B68     	 ldr r3,[r3]
 2738 006a 1B0C     	 lsrs r3,r3,#16
 2739 006c 7B60     	 str r3,[r7,#4]
 692:../Libraries/FT800-FT813-5.x/tft.c **** 	if ((tracker & 0xff) == 2){
 2740              	 .loc 1 692 0
 2741 006e 3B4B     	 ldr r3,.L86+36
 2742 0070 1B68     	 ldr r3,[r3]
 2743 0072 DBB2     	 uxtb r3,r3
 2744 0074 022B     	 cmp r3,#2
 2745 0076 0DD1     	 bne .L83
 693:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_slider_burst(20, 100, 100, 20, 0, val, 65535);
 2746              	 .loc 1 693 0
 2747 0078 7B68     	 ldr r3,[r7,#4]
 2748 007a 9BB2     	 uxth r3,r3
 2749 007c 0022     	 movs r2,#0
 2750 007e 0092     	 str r2,[sp]
 2751 0080 0193     	 str r3,[sp,#4]
 2752 0082 4FF6FF73 	 movw r3,#65535
 2753 0086 0293     	 str r3,[sp,#8]
 2754 0088 1420     	 movs r0,#20
 2755 008a 6421     	 movs r1,#100
 2756 008c 6422     	 movs r2,#100
 2757 008e 1423     	 movs r3,#20
 2758 0090 FFF7FEFF 	 bl EVE_cmd_slider_burst
 2759              	.L83:
 694:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 695:../Libraries/FT800-FT813-5.x/tft.c **** 	if ((tracker & 0xff) == 1){
 2760              	 .loc 1 695 0
 2761 0094 314B     	 ldr r3,.L86+36
 2762 0096 1B68     	 ldr r3,[r3]
 2763 0098 DBB2     	 uxtb r3,r3
 2764 009a 012B     	 cmp r3,#1
 2765 009c 0ED1     	 bne .L84
 696:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_slider_burst(20, 100, 100, 20, 0, val, 65535);
 2766              	 .loc 1 696 0
 2767 009e 7B68     	 ldr r3,[r7,#4]
 2768 00a0 9BB2     	 uxth r3,r3
 2769 00a2 0022     	 movs r2,#0
 2770 00a4 0092     	 str r2,[sp]
 2771 00a6 0193     	 str r3,[sp,#4]
 2772 00a8 4FF6FF73 	 movw r3,#65535
 2773 00ac 0293     	 str r3,[sp,#8]
 2774 00ae 1420     	 movs r0,#20
 2775 00b0 6421     	 movs r1,#100
 2776 00b2 6422     	 movs r2,#100
 2777 00b4 1423     	 movs r3,#20
 2778 00b6 FFF7FEFF 	 bl EVE_cmd_slider_burst
 2779 00ba 0DE0     	 b .L85
 2780              	.L84:
 697:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 698:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 699:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_slider_burst(20, 100, 100, 20, 0, val, 65535);
 2781              	 .loc 1 699 0
 2782 00bc 7B68     	 ldr r3,[r7,#4]
 2783 00be 9BB2     	 uxth r3,r3
 2784 00c0 0022     	 movs r2,#0
 2785 00c2 0092     	 str r2,[sp]
 2786 00c4 0193     	 str r3,[sp,#4]
 2787 00c6 4FF6FF73 	 movw r3,#65535
 2788 00ca 0293     	 str r3,[sp,#8]
 2789 00cc 1420     	 movs r0,#20
 2790 00ce 6421     	 movs r1,#100
 2791 00d0 6422     	 movs r2,#100
 2792 00d2 1423     	 movs r3,#20
 2793 00d4 FFF7FEFF 	 bl EVE_cmd_slider_burst
 2794              	.L85:
 700:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 701:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 2795              	 .loc 1 701 0
 2796 00d8 4FF04070 	 mov r0,#50331648
 2797 00dc FFF7FEFF 	 bl EVE_cmd_dl_burst
 702:../Libraries/FT800-FT813-5.x/tft.c **** 
 703:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, val); /* number of bytes written to the display-
 2798              	 .loc 1 703 0
 2799 00e0 7B68     	 ldr r3,[r7,#4]
 2800 00e2 0093     	 str r3,[sp]
 2801 00e4 4FF4EB70 	 mov r0,#470
 2802 00e8 0A21     	 movs r1,#10
 2803 00ea 1A22     	 movs r2,#26
 2804 00ec 4FF40063 	 mov r3,#2048
 2805 00f0 FFF7FEFF 	 bl EVE_cmd_number_burst
 704:../Libraries/FT800-FT813-5.x/tft.c **** 
 705:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_TEXTCOLOR);
 2806              	 .loc 1 705 0
 2807 00f4 1A48     	 ldr r0,.L86+40
 2808 00f6 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 706:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t X = TouchXY;
 2809              	 .loc 1 706 0
 2810 00fa 1A4B     	 ldr r3,.L86+44
 2811 00fc 1B68     	 ldr r3,[r3]
 2812 00fe 7B80     	 strh r3,[r7,#2]
 707:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t Y = TouchXY >> 16;
 2813              	 .loc 1 707 0
 2814 0100 184B     	 ldr r3,.L86+44
 2815 0102 1B68     	 ldr r3,[r3]
 2816 0104 1B0C     	 lsrs r3,r3,#16
 2817 0106 3B80     	 strh r3,[r7]
 708:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, EVE_VSIZE-50, 26, EVE_OPT_RIGHTX, X);
 2818              	 .loc 1 708 0
 2819 0108 7B88     	 ldrh r3,[r7,#2]
 2820 010a 0093     	 str r3,[sp]
 2821 010c 4FF4EB70 	 mov r0,#470
 2822 0110 DE21     	 movs r1,#222
 2823 0112 1A22     	 movs r2,#26
 2824 0114 4FF40063 	 mov r3,#2048
 2825 0118 FFF7FEFF 	 bl EVE_cmd_number_burst
 709:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, EVE_VSIZE-25, 26, EVE_OPT_RIGHTX, Y);
 2826              	 .loc 1 709 0
 2827 011c 3B88     	 ldrh r3,[r7]
 2828 011e 0093     	 str r3,[sp]
 2829 0120 4FF4EB70 	 mov r0,#470
 2830 0124 F721     	 movs r1,#247
 2831 0126 1A22     	 movs r2,#26
 2832 0128 4FF40063 	 mov r3,#2048
 2833 012c FFF7FEFF 	 bl EVE_cmd_number_burst
 710:../Libraries/FT800-FT813-5.x/tft.c **** 
 711:../Libraries/FT800-FT813-5.x/tft.c **** }
 2834              	 .loc 1 711 0
 2835 0130 0837     	 adds r7,r7,#8
 2836              	.LCFI35:
 2837              	 .cfi_def_cfa_offset 8
 2838 0132 BD46     	 mov sp,r7
 2839              	.LCFI36:
 2840              	 .cfi_def_cfa_register 13
 2841              	 
 2842 0134 80BD     	 pop {r7,pc}
 2843              	.L87:
 2844 0136 00BF     	 .align 2
 2845              	.L86:
 2846 0138 124B8C00 	 .word 9194258
 2847 013c EEF8FF04 	 .word 83884270
 2848 0140 2BA9EA00 	 .word 15378731
 2849 0144 6696AD00 	 .word 11376230
 2850 0148 0C000003 	 .word 50331660
 2851 014c 00000000 	 .word toggle_state_graphmode
 2852 0150 78000000 	 .word .LC17
 2853 0154 7C000000 	 .word .LC18
 2854 0158 02000003 	 .word 50331650
 2855 015c 00000000 	 .word tracker
 2856 0160 29CDF300 	 .word 15977769
 2857 0164 00000000 	 .word TouchXY
 2858              	 .cfi_endproc
 2859              	.LFE455:
 2861              	 .section .text.TFT_touch_menu0,"ax",%progbits
 2862              	 .align 2
 2863              	 .global TFT_touch_menu0
 2864              	 .thumb
 2865              	 .thumb_func
 2867              	TFT_touch_menu0:
 2868              	.LFB456:
 712:../Libraries/FT800-FT813-5.x/tft.c **** 
 713:../Libraries/FT800-FT813-5.x/tft.c **** 
 714:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu0(uint8_t tag){
 2869              	 .loc 1 714 0
 2870              	 .cfi_startproc
 2871              	 
 2872              	 
 2873 0000 80B5     	 push {r7,lr}
 2874              	.LCFI37:
 2875              	 .cfi_def_cfa_offset 8
 2876              	 .cfi_offset 7,-8
 2877              	 .cfi_offset 14,-4
 2878 0002 82B0     	 sub sp,sp,#8
 2879              	.LCFI38:
 2880              	 .cfi_def_cfa_offset 16
 2881 0004 00AF     	 add r7,sp,#0
 2882              	.LCFI39:
 2883              	 .cfi_def_cfa_register 7
 2884 0006 0346     	 mov r3,r0
 2885 0008 FB71     	 strb r3,[r7,#7]
 715:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 716:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 2886              	 .loc 1 716 0
 2887 000a FB79     	 ldrb r3,[r7,#7]
 2888 000c 0C2B     	 cmp r3,#12
 2889 000e 20D0     	 beq .L90
 2890 0010 0D2B     	 cmp r3,#13
 2891 0012 32D0     	 beq .L91
 2892 0014 0A2B     	 cmp r3,#10
 2893 0016 4AD1     	 bne .L88
 717:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 718:../Libraries/FT800-FT813-5.x/tft.c **** 		// dimmer button on top as on/off radio-switch
 719:../Libraries/FT800-FT813-5.x/tft.c **** 		case 10:
 720:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2894              	 .loc 1 720 0
 2895 0018 264B     	 ldr r3,.L99
 2896 001a 1B78     	 ldrb r3,[r3]
 2897 001c 002B     	 cmp r3,#0
 2898 001e 17D1     	 bne .L93
 721:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Button Dimmer touched\n");
 722:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2899              	 .loc 1 722 0
 2900 0020 244B     	 ldr r3,.L99
 2901 0022 2A22     	 movs r2,#42
 2902 0024 1A70     	 strb r2,[r3]
 723:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_dimmer == 0){
 2903              	 .loc 1 723 0
 2904 0026 244B     	 ldr r3,.L99+4
 2905 0028 1B88     	 ldrh r3,[r3]
 2906 002a 002B     	 cmp r3,#0
 2907 002c 08D1     	 bne .L94
 724:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = EVE_OPT_FLAT;
 2908              	 .loc 1 724 0
 2909 002e 224B     	 ldr r3,.L99+4
 2910 0030 4FF48072 	 mov r2,#256
 2911 0034 1A80     	 strh r2,[r3]
 725:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x01);	/* setup backlight, range is from 0 = off to 0x80 = max */
 2912              	 .loc 1 725 0
 2913 0036 2148     	 ldr r0,.L99+8
 2914 0038 0121     	 movs r1,#1
 2915 003a FFF7FEFF 	 bl EVE_memWrite8
 2916 003e 07E0     	 b .L93
 2917              	.L94:
 726:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 727:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 728:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = 0;
 2918              	 .loc 1 728 0
 2919 0040 1D4B     	 ldr r3,.L99+4
 2920 0042 0022     	 movs r2,#0
 2921 0044 1A80     	 strh r2,[r3]
 729:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x80);	/* setup backlight, range is from 0 = off to 0x80 = max */
 2922              	 .loc 1 729 0
 2923 0046 1D48     	 ldr r0,.L99+8
 2924 0048 8021     	 movs r1,#128
 2925 004a FFF7FEFF 	 bl EVE_memWrite8
 730:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 731:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 732:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2926              	 .loc 1 732 0
 2927 004e 2EE0     	 b .L88
 2928              	.L93:
 2929 0050 2DE0     	 b .L88
 2930              	.L90:
 733:../Libraries/FT800-FT813-5.x/tft.c **** 		// roll/frame mode toggle on top
 734:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 735:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2931              	 .loc 1 735 0
 2932 0052 184B     	 ldr r3,.L99
 2933 0054 1B78     	 ldrb r3,[r3]
 2934 0056 002B     	 cmp r3,#0
 2935 0058 0ED1     	 bne .L95
 736:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle Roll touched\n");
 737:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2936              	 .loc 1 737 0
 2937 005a 164B     	 ldr r3,.L99
 2938 005c 2A22     	 movs r2,#42
 2939 005e 1A70     	 strb r2,[r3]
 738:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 2940              	 .loc 1 738 0
 2941 0060 174B     	 ldr r3,.L99+12
 2942 0062 1B88     	 ldrh r3,[r3]
 2943 0064 002B     	 cmp r3,#0
 2944 0066 03D1     	 bne .L96
 739:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 2945              	 .loc 1 739 0
 2946 0068 154B     	 ldr r3,.L99+12
 2947 006a 0122     	 movs r2,#1
 2948 006c 1A80     	 strh r2,[r3]
 2949 006e 03E0     	 b .L95
 2950              	.L96:
 740:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 741:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 742:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 2951              	 .loc 1 742 0
 2952 0070 134B     	 ldr r3,.L99+12
 2953 0072 0022     	 movs r2,#0
 2954 0074 1A80     	 strh r2,[r3]
 743:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 744:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 745:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2955              	 .loc 1 745 0
 2956 0076 1AE0     	 b .L88
 2957              	.L95:
 2958 0078 19E0     	 b .L88
 2959              	.L91:
 746:../Libraries/FT800-FT813-5.x/tft.c **** 		// signal switcher button
 747:../Libraries/FT800-FT813-5.x/tft.c **** 		case 13:
 748:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2960              	 .loc 1 748 0
 2961 007a 0E4B     	 ldr r3,.L99
 2962 007c 1B78     	 ldrb r3,[r3]
 2963 007e 002B     	 cmp r3,#0
 2964 0080 14D1     	 bne .L97
 749:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Switch Signal\n");
 750:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2965              	 .loc 1 750 0
 2966 0082 0C4B     	 ldr r3,.L99
 2967 0084 2A22     	 movs r2,#42
 2968 0086 1A70     	 strb r2,[r3]
 751:../Libraries/FT800-FT813-5.x/tft.c **** 				InputType++;
 2969              	 .loc 1 751 0
 2970 0088 0E4B     	 ldr r3,.L99+16
 2971 008a 1B78     	 ldrb r3,[r3]
 2972 008c DBB2     	 uxtb r3,r3
 2973 008e 0133     	 adds r3,r3,#1
 2974 0090 DAB2     	 uxtb r2,r3
 2975 0092 0C4B     	 ldr r3,.L99+16
 2976 0094 1A70     	 strb r2,[r3]
 752:../Libraries/FT800-FT813-5.x/tft.c **** 				if(InputType > 3){ InputType = 0; }
 2977              	 .loc 1 752 0
 2978 0096 0B4B     	 ldr r3,.L99+16
 2979 0098 1B78     	 ldrb r3,[r3]
 2980 009a DBB2     	 uxtb r3,r3
 2981 009c 032B     	 cmp r3,#3
 2982 009e 02D9     	 bls .L98
 2983              	 .loc 1 752 0 is_stmt 0 discriminator 1
 2984 00a0 084B     	 ldr r3,.L99+16
 2985 00a2 0022     	 movs r2,#0
 2986 00a4 1A70     	 strb r2,[r3]
 2987              	.L98:
 753:../Libraries/FT800-FT813-5.x/tft.c **** 				TFT_cur_Menu = 1;
 2988              	 .loc 1 753 0 is_stmt 1
 2989 00a6 084B     	 ldr r3,.L99+20
 2990 00a8 0122     	 movs r2,#1
 2991 00aa 1A60     	 str r2,[r3]
 2992              	.L97:
 754:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 755:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2993              	 .loc 1 755 0
 2994 00ac 00BF     	 nop
 2995              	.L88:
 756:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 757:../Libraries/FT800-FT813-5.x/tft.c **** }
 2996              	 .loc 1 757 0
 2997 00ae 0837     	 adds r7,r7,#8
 2998              	.LCFI40:
 2999              	 .cfi_def_cfa_offset 8
 3000 00b0 BD46     	 mov sp,r7
 3001              	.LCFI41:
 3002              	 .cfi_def_cfa_register 13
 3003              	 
 3004 00b2 80BD     	 pop {r7,pc}
 3005              	.L100:
 3006              	 .align 2
 3007              	.L99:
 3008 00b4 00000000 	 .word toggle_lock
 3009 00b8 00000000 	 .word toggle_state_dimmer
 3010 00bc D4203000 	 .word 3154132
 3011 00c0 00000000 	 .word toggle_state_graphmode
 3012 00c4 00000000 	 .word InputType
 3013 00c8 00000000 	 .word TFT_cur_Menu
 3014              	 .cfi_endproc
 3015              	.LFE456:
 3017              	 .section .text.TFT_touch_menu1,"ax",%progbits
 3018              	 .align 2
 3019              	 .global TFT_touch_menu1
 3020              	 .thumb
 3021              	 .thumb_func
 3023              	TFT_touch_menu1:
 3024              	.LFB457:
 758:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu1(uint8_t tag){
 3025              	 .loc 1 758 0
 3026              	 .cfi_startproc
 3027              	 
 3028              	 
 3029              	 
 3030 0000 80B4     	 push {r7}
 3031              	.LCFI42:
 3032              	 .cfi_def_cfa_offset 4
 3033              	 .cfi_offset 7,-4
 3034 0002 83B0     	 sub sp,sp,#12
 3035              	.LCFI43:
 3036              	 .cfi_def_cfa_offset 16
 3037 0004 00AF     	 add r7,sp,#0
 3038              	.LCFI44:
 3039              	 .cfi_def_cfa_register 7
 3040 0006 0346     	 mov r3,r0
 3041 0008 FB71     	 strb r3,[r7,#7]
 759:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 760:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 3042              	 .loc 1 760 0
 3043 000a FB79     	 ldrb r3,[r7,#7]
 3044 000c 002B     	 cmp r3,#0
 3045 000e 02D0     	 beq .L103
 3046 0010 0C2B     	 cmp r3,#12
 3047 0012 04D0     	 beq .L104
 3048 0014 16E0     	 b .L101
 3049              	.L103:
 761:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 762:../Libraries/FT800-FT813-5.x/tft.c **** 		// nothing touched - reset states and locks
 763:../Libraries/FT800-FT813-5.x/tft.c **** 		case 0:
 764:../Libraries/FT800-FT813-5.x/tft.c **** 			toggle_lock = 0;
 3050              	 .loc 1 764 0
 3051 0016 0E4B     	 ldr r3,.L107
 3052 0018 0022     	 movs r2,#0
 3053 001a 1A70     	 strb r2,[r3]
 765:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3054              	 .loc 1 765 0
 3055 001c 12E0     	 b .L101
 3056              	.L104:
 766:../Libraries/FT800-FT813-5.x/tft.c **** 		// li/re mode toggle on top
 767:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 768:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3057              	 .loc 1 768 0
 3058 001e 0C4B     	 ldr r3,.L107
 3059 0020 1B78     	 ldrb r3,[r3]
 3060 0022 002B     	 cmp r3,#0
 3061 0024 0DD1     	 bne .L105
 769:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle li/re touched\n");
 770:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3062              	 .loc 1 770 0
 3063 0026 0A4B     	 ldr r3,.L107
 3064 0028 2A22     	 movs r2,#42
 3065 002a 1A70     	 strb r2,[r3]
 771:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 3066              	 .loc 1 771 0
 3067 002c 094B     	 ldr r3,.L107+4
 3068 002e 1B88     	 ldrh r3,[r3]
 3069 0030 002B     	 cmp r3,#0
 3070 0032 03D1     	 bne .L106
 772:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 3071              	 .loc 1 772 0
 3072 0034 074B     	 ldr r3,.L107+4
 3073 0036 0122     	 movs r2,#1
 3074 0038 1A80     	 strh r2,[r3]
 3075 003a 02E0     	 b .L105
 3076              	.L106:
 773:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 774:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 775:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 3077              	 .loc 1 775 0
 3078 003c 054B     	 ldr r3,.L107+4
 3079 003e 0022     	 movs r2,#0
 3080 0040 1A80     	 strh r2,[r3]
 3081              	.L105:
 776:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 777:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 778:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3082              	 .loc 1 778 0
 3083 0042 00BF     	 nop
 3084              	.L101:
 779:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 780:../Libraries/FT800-FT813-5.x/tft.c **** 
 781:../Libraries/FT800-FT813-5.x/tft.c **** }
 3085              	 .loc 1 781 0
 3086 0044 0C37     	 adds r7,r7,#12
 3087              	.LCFI45:
 3088              	 .cfi_def_cfa_offset 4
 3089 0046 BD46     	 mov sp,r7
 3090              	.LCFI46:
 3091              	 .cfi_def_cfa_register 13
 3092              	 
 3093 0048 5DF8047B 	 ldr r7,[sp],#4
 3094              	.LCFI47:
 3095              	 .cfi_restore 7
 3096              	 .cfi_def_cfa_offset 0
 3097 004c 7047     	 bx lr
 3098              	.L108:
 3099 004e 00BF     	 .align 2
 3100              	.L107:
 3101 0050 00000000 	 .word toggle_lock
 3102 0054 00000000 	 .word toggle_state_graphmode
 3103              	 .cfi_endproc
 3104              	.LFE457:
 3106              	 .text
 3107              	.Letext0:
 3108              	 .file 2 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3109              	 .file 3 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3110              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_gpio.h"
 3111              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_gpio.h"
 3112              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_usic.h"
 3113              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_spi.h"
 3114              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master.h"
 3115              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io.h"
 3116              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_vadc.h"
 3117              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 3118              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
 3119              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 3120              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 3121              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 3122              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/globals.h"
 3123              	 .file 17 "../Libraries/FT800-FT813-5.x/EVE_target.h"
 3124              	 .file 18 "../Libraries/FT800-FT813-5.x/tft_data.h"
 3125              	 .file 19 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 tft.c
                            *COM*:00000004 _msCounter
                            *COM*:00000001 tft_tick
                            *COM*:00000004 MeasurementCounter
                            *COM*:00000002 InputBuffer1_idx
                            *COM*:00000001 InputType
                            *COM*:00000001 frameover
                            *COM*:00000001 ReadData
    {standard input}:31     .data.G_x:00000000 G_x
    {standard input}:28     .data.G_x:00000000 $d
    {standard input}:38     .data.G_y:00000000 G_y
    {standard input}:35     .data.G_y:00000000 $d
    {standard input}:45     .data.G_width:00000000 G_width
    {standard input}:42     .data.G_width:00000000 $d
    {standard input}:52     .data.G_height:00000000 G_height
    {standard input}:49     .data.G_height:00000000 $d
    {standard input}:59     .rodata.unit_Sensor:00000000 unit_Sensor
    {standard input}:56     .rodata.unit_Sensor:00000000 $d
    {standard input}:66     .data.G_amp_max:00000000 G_amp_max
    {standard input}:63     .data.G_amp_max:00000000 $d
    {standard input}:74     .data.G_t_max:00000000 G_t_max
    {standard input}:71     .data.G_t_max:00000000 $d
    {standard input}:82     .data.G_y_max:00000000 G_y_max
    {standard input}:79     .data.G_y_max:00000000 $d
    {standard input}:90     .data.G_h_grid_lines:00000000 G_h_grid_lines
    {standard input}:87     .data.G_h_grid_lines:00000000 $d
    {standard input}:98     .data.G_v_grid_lines:00000000 G_v_grid_lines
    {standard input}:95     .data.G_v_grid_lines:00000000 $d
                            *COM*:00000004 num_dl_static
    {standard input}:106    .bss.tft_active:00000000 tft_active
    {standard input}:107    .bss.tft_active:00000000 $d
    {standard input}:113    .bss.TFT_cur_Menu:00000000 TFT_cur_Menu
    {standard input}:110    .bss.TFT_cur_Menu:00000000 $d
    {standard input}:120    .data.TFT_display_cur_Menu__fptr_arr:00000000 TFT_display_cur_Menu__fptr_arr
    {standard input}:117    .data.TFT_display_cur_Menu__fptr_arr:00000000 $d
    {standard input}:2355   .text.TFT_display_menu0:00000000 TFT_display_menu0
    {standard input}:2668   .text.TFT_display_menu1:00000000 TFT_display_menu1
    {standard input}:128    .data.TFT_touch_cur_Menu__fptr_arr:00000000 TFT_touch_cur_Menu__fptr_arr
    {standard input}:125    .data.TFT_touch_cur_Menu__fptr_arr:00000000 $d
    {standard input}:2867   .text.TFT_touch_menu0:00000000 TFT_touch_menu0
    {standard input}:3023   .text.TFT_touch_menu1:00000000 TFT_touch_menu1
    {standard input}:136    .bss.display_list_size:00000000 display_list_size
    {standard input}:133    .bss.display_list_size:00000000 $d
    {standard input}:143    .bss.tracker:00000000 tracker
    {standard input}:140    .bss.tracker:00000000 $d
    {standard input}:150    .bss.TouchXY:00000000 TouchXY
    {standard input}:147    .bss.TouchXY:00000000 $d
    {standard input}:157    .data.BGtouchInitial_X:00000000 BGtouchInitial_X
    {standard input}:154    .data.BGtouchInitial_X:00000000 $d
    {standard input}:164    .data.BGtouchInitial_Y:00000000 BGtouchInitial_Y
    {standard input}:161    .data.BGtouchInitial_Y:00000000 $d
    {standard input}:170    .bss.toggle_lock:00000000 toggle_lock
    {standard input}:171    .bss.toggle_lock:00000000 $d
    {standard input}:177    .bss.toggle_state_graphmode:00000000 toggle_state_graphmode
    {standard input}:174    .bss.toggle_state_graphmode:00000000 $d
    {standard input}:184    .bss.toggle_state_dimmer:00000000 toggle_state_dimmer
    {standard input}:181    .bss.toggle_state_dimmer:00000000 $d
    {standard input}:189    .rodata:00000000 $d
    {standard input}:217    .text.TFT_GraphStatic:00000000 $t
    {standard input}:222    .text.TFT_GraphStatic:00000000 TFT_GraphStatic
    {standard input}:524    .text.TFT_GraphStatic:000002a0 $d
    {standard input}:534    .text.TFT_GraphStatic:000002c0 $t
    {standard input}:1023   .text.TFT_GraphStatic:0000073c $d
    {standard input}:1028   .text.TFT_GraphStatic:00000744 $t
    {standard input}:1290   .text.TFT_GraphStatic:000009bc $d
    {standard input}:1296   .text.TFT_GraphData:00000000 $t
    {standard input}:1301   .text.TFT_GraphData:00000000 TFT_GraphData
    {standard input}:1579   .text.TFT_GraphData:0000020c $d
    {standard input}:1584   .text.touch_calibrate:00000000 $t
    {standard input}:1589   .text.touch_calibrate:00000000 touch_calibrate
    {standard input}:1632   .text.touch_calibrate:00000040 $d
    {standard input}:1644   .text.TFT_display_init_screen:00000000 $t
    {standard input}:1649   .text.TFT_display_init_screen:00000000 TFT_display_init_screen
    {standard input}:1716   .text.TFT_display_init_screen:00000070 $d
    {standard input}:1732   .text.initStaticGraphBackground:00000000 $t
    {standard input}:1737   .text.initStaticGraphBackground:00000000 initStaticGraphBackground
    {standard input}:1930   .text.initStaticGraphBackground:00000178 $d
    {standard input}:1960   .text.TFT_init:00000000 $t
    {standard input}:1965   .text.TFT_init:00000000 TFT_init
    {standard input}:2035   .text.TFT_init:0000006c $d
    {standard input}:2043   .text.TFT_touch:00000000 $t
    {standard input}:2048   .text.TFT_touch:00000000 TFT_touch
    {standard input}:2220   .text.TFT_touch:000000f8 $d
    {standard input}:2232   .text.TFT_display:00000000 $t
    {standard input}:2237   .text.TFT_display:00000000 TFT_display
    {standard input}:2309   .text.TFT_display:00000078 $d
    {standard input}:2350   .text.TFT_display_menu0:00000000 $t
    {standard input}:2624   .text.TFT_display_menu0:000001f8 $d
    {standard input}:2663   .text.TFT_display_menu1:00000000 $t
    {standard input}:2846   .text.TFT_display_menu1:00000138 $d
    {standard input}:2862   .text.TFT_touch_menu0:00000000 $t
    {standard input}:3008   .text.TFT_touch_menu0:000000b4 $d
    {standard input}:3018   .text.TFT_touch_menu1:00000000 $t
    {standard input}:3101   .text.TFT_touch_menu1:00000050 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_d2iz
__aeabi_dsub
__aeabi_dcmpeq
EVE_cmd_dl
EVE_cmd_dl_burst
EVE_cmd_text
EVE_cmd_text_burst
EVE_cmd_number
EVE_cmd_number_burst
floor
sprintf
ceil
EVE_memWrite32
EVE_cmd_inflate
EVE_start_cmd_burst
EVE_cmd_setbitmap_burst
EVE_end_cmd_burst
logo_init
EVE_cmd_bgcolor
EVE_busy
EVE_memRead16
EVE_cmd_memcpy
EVE_cmd_track
EVE_init
EVE_memWrite8
EVE_cmd_bgcolor_burst
EVE_memRead8
EVE_memRead32
EVE_cmd_append_burst
EVE_cmd_gradcolor_burst
EVE_cmd_fgcolor_burst
EVE_cmd_button_burst
EVE_cmd_toggle_burst
strlen
InputBuffer1
EVE_cmd_slider_burst
