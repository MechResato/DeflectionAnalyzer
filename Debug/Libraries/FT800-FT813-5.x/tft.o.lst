   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tft.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm _msCounter,4,4
  20              	 .comm tft_tick,1,1
  21              	 .comm MeasurementCounter,4,4
  22              	 .comm InputBuffer1_idx,2,2
  23              	 .comm InputType,1,1
  24              	 .comm frameover,1,1
  25              	 .comm ReadData,1,1
  26              	 .global G_x
  27              	 .section .data.G_x,"aw",%progbits
  28              	 .align 1
  31              	G_x:
  32 0000 0A00     	 .short 10
  33              	 .global G_y
  34              	 .section .data.G_y,"aw",%progbits
  35              	 .align 1
  38              	G_y:
  39 0000 5100     	 .short 81
  40              	 .global G_width
  41              	 .section .data.G_width,"aw",%progbits
  42              	 .align 1
  45              	G_width:
  46 0000 B801     	 .short 440
  47              	 .global G_height
  48              	 .section .data.G_height,"aw",%progbits
  49              	 .align 1
  52              	G_height:
  53 0000 A100     	 .short 161
  54              	 .global unit_Sensor
  55              	 .section .rodata.unit_Sensor,"a",%progbits
  56              	 .align 2
  59              	unit_Sensor:
  60 0000 205600   	 .ascii " V\000"
  61              	 .global G_amp_max
  62 0003 00       	 .section .data.G_amp_max,"aw",%progbits
  63              	 .align 3
  66              	G_amp_max:
  67 0000 00000000 	 .word 0
  68 0004 00002440 	 .word 1076101120
  69              	 .global G_t_max
  70              	 .section .data.G_t_max,"aw",%progbits
  71              	 .align 3
  74              	G_t_max:
  75 0000 9A999999 	 .word -1717986918
  76 0004 99990140 	 .word 1073846681
  77              	 .global G_y_max
  78              	 .section .data.G_y_max,"aw",%progbits
  79              	 .align 3
  82              	G_y_max:
  83 0000 00000000 	 .word 0
  84 0004 00FEAF40 	 .word 1085275648
  85              	 .global G_h_grid_lines
  86              	 .section .data.G_h_grid_lines,"aw",%progbits
  87              	 .align 3
  90              	G_h_grid_lines:
  91 0000 00000000 	 .word 0
  92 0004 00001040 	 .word 1074790400
  93              	 .global G_v_grid_lines
  94              	 .section .data.G_v_grid_lines,"aw",%progbits
  95              	 .align 3
  98              	G_v_grid_lines:
  99 0000 9A999999 	 .word -1717986918
 100 0004 99990140 	 .word 1073846681
 101              	 .comm num_dl_static,4,4
 102              	 .global tft_active
 103              	 .section .bss.tft_active,"aw",%nobits
 106              	tft_active:
 107 0000 00       	 .space 1
 108              	 .global TFT_cur_Menu
 109              	 .section .bss.TFT_cur_Menu,"aw",%nobits
 112              	TFT_cur_Menu:
 113 0000 00       	 .space 1
 114              	 .global TFT_last_Menu
 115              	 .section .data.TFT_last_Menu,"aw",%progbits
 118              	TFT_last_Menu:
 119 0000 FF       	 .byte -1
 120              	 .global TFT_display_cur_Menu__fptr_arr
 121              	 .section .data.TFT_display_cur_Menu__fptr_arr,"aw",%progbits
 122              	 .align 2
 125              	TFT_display_cur_Menu__fptr_arr:
 126 0000 00000000 	 .word TFT_display_menu0
 127 0004 00000000 	 .word TFT_display_menu1
 128              	 .global TFT_touch_cur_Menu__fptr_arr
 129              	 .section .data.TFT_touch_cur_Menu__fptr_arr,"aw",%progbits
 130              	 .align 2
 133              	TFT_touch_cur_Menu__fptr_arr:
 134 0000 00000000 	 .word TFT_touch_menu0
 135 0004 00000000 	 .word TFT_touch_menu1
 136              	 .global TFT_display_static_cur_Menu__fptr_arr
 137              	 .section .data.TFT_display_static_cur_Menu__fptr_arr,"aw",%progbits
 138              	 .align 2
 141              	TFT_display_static_cur_Menu__fptr_arr:
 142 0000 00000000 	 .word TFT_display_static_menu0
 143 0004 00000000 	 .word TFT_display_static_menu1
 144              	 .global display_list_size
 145              	 .section .bss.display_list_size,"aw",%nobits
 146              	 .align 1
 149              	display_list_size:
 150 0000 0000     	 .space 2
 151              	 .global tracker
 152              	 .section .bss.tracker,"aw",%nobits
 153              	 .align 2
 156              	tracker:
 157 0000 00000000 	 .space 4
 158              	 .global swipeDetect
 159              	 .section .bss.swipeDetect,"aw",%nobits
 162              	swipeDetect:
 163 0000 00       	 .space 1
 164              	 .global swipeInProgress
 165              	 .section .bss.swipeInProgress,"aw",%nobits
 168              	swipeInProgress:
 169 0000 00       	 .space 1
 170              	 .global swipeEvokedBy
 171              	 .section .bss.swipeEvokedBy,"aw",%nobits
 174              	swipeEvokedBy:
 175 0000 00       	 .space 1
 176              	 .global swipeInitialTouch_X
 177              	 .section .data.swipeInitialTouch_X,"aw",%progbits
 178              	 .align 2
 181              	swipeInitialTouch_X:
 182 0000 00800000 	 .word 32768
 183              	 .global swipeInitialTouch_Y
 184              	 .section .data.swipeInitialTouch_Y,"aw",%progbits
 185              	 .align 2
 188              	swipeInitialTouch_Y:
 189 0000 00800000 	 .word 32768
 190              	 .global swipeDistance_X
 191              	 .section .bss.swipeDistance_X,"aw",%nobits
 192              	 .align 2
 195              	swipeDistance_X:
 196 0000 00000000 	 .space 4
 197              	 .global swipeDistance_Y
 198              	 .section .bss.swipeDistance_Y,"aw",%nobits
 199              	 .align 2
 202              	swipeDistance_Y:
 203 0000 00000000 	 .space 4
 204              	 .global swipeEndOfTouch_Debounce
 205              	 .section .bss.swipeEndOfTouch_Debounce,"aw",%nobits
 208              	swipeEndOfTouch_Debounce:
 209 0000 00       	 .space 1
 210              	 .global toggle_lock
 211              	 .section .bss.toggle_lock,"aw",%nobits
 214              	toggle_lock:
 215 0000 00       	 .space 1
 216              	 .global toggle_state_graphmode
 217              	 .section .bss.toggle_state_graphmode,"aw",%nobits
 218              	 .align 1
 221              	toggle_state_graphmode:
 222 0000 0000     	 .space 2
 223              	 .global toggle_state_dimmer
 224              	 .section .bss.toggle_state_dimmer,"aw",%nobits
 225              	 .align 1
 228              	toggle_state_dimmer:
 229 0000 0000     	 .space 2
 230              	 .global __aeabi_ui2d
 231              	 .global __aeabi_ddiv
 232              	 .section .rodata
 233              	 .align 2
 234              	.LC3:
 235 0000 5600     	 .ascii "V\000"
 236 0002 0000     	 .align 2
 237              	.LC4:
 238 0004 7400     	 .ascii "t\000"
 239              	 .global __aeabi_i2d
 240              	 .global __aeabi_dmul
 241              	 .global __aeabi_d2uiz
 242              	 .global __aeabi_d2iz
 243              	 .global __aeabi_dsub
 244              	 .global __aeabi_dcmpeq
 245 0006 0000     	 .align 2
 246              	.LC5:
 247 0008 252E316C 	 .ascii "%.1lf\000"
 247      6600
 248 000e 0000     	 .align 2
 249              	.LC0:
 250 0010 00000000 	 .word EVE_cmd_dl
 251 0014 00000000 	 .word EVE_cmd_dl_burst
 252              	 .align 2
 253              	.LC1:
 254 0018 00000000 	 .word EVE_cmd_text
 255 001c 00000000 	 .word EVE_cmd_text_burst
 256              	 .align 2
 257              	.LC2:
 258 0020 00000000 	 .word EVE_cmd_number
 259 0024 00000000 	 .word EVE_cmd_number_burst
 260              	 .section .text.TFT_GraphStatic,"ax",%progbits
 261              	 .align 2
 262              	 .global TFT_GraphStatic
 263              	 .thumb
 264              	 .thumb_func
 266              	TFT_GraphStatic:
 267              	.LFB446:
 268              	 .file 1 "../Libraries/FT800-FT813-5.x/tft.c"
   1:../Libraries/FT800-FT813-5.x/tft.c **** /*
   2:../Libraries/FT800-FT813-5.x/tft.c **** @file    		tft.c
   3:../Libraries/FT800-FT813-5.x/tft.c **** @brief   		Implementation of display communication using the EVE Library. Meant to display a menu a
   4:../Libraries/FT800-FT813-5.x/tft.c **** @version 		2.0 (base lib version was 1.13)
   5:../Libraries/FT800-FT813-5.x/tft.c **** @date    		2020-09-05
   6:../Libraries/FT800-FT813-5.x/tft.c **** @initialauthor  Rudolph Riedel
   7:../Libraries/FT800-FT813-5.x/tft.c **** @author 		RS (Rene Santeler & Stefan Reinm√ºller) @ MCI 2020/21 (initially created by Rudolph Riede
   8:../Libraries/FT800-FT813-5.x/tft.c **** 
   9:../Libraries/FT800-FT813-5.x/tft.c **** @section History
  10:../Libraries/FT800-FT813-5.x/tft.c **** 2.0 (adapted from Rudolph Riedel base version 1.13 - below changes are from RS 2020/21)
  11:../Libraries/FT800-FT813-5.x/tft.c **** - Added color scheme, adaptable banner, dynamic graph implementation (TFT_GraphStatic & TFT_GraphDa
  12:../Libraries/FT800-FT813-5.x/tft.c **** - Adapted TFT_init to only do the most necessary thins for init (no static DL creation! you need to
  13:../Libraries/FT800-FT813-5.x/tft.c **** 
  14:../Libraries/FT800-FT813-5.x/tft.c **** // See https://brtchip.com/eve-toolchains/ for helpful Tools
  15:../Libraries/FT800-FT813-5.x/tft.c ****  */
  16:../Libraries/FT800-FT813-5.x/tft.c **** 
  17:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdint.h>
  18:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdio.h>
  19:../Libraries/FT800-FT813-5.x/tft.c **** #include <string.h>
  20:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdlib.h>
  21:../Libraries/FT800-FT813-5.x/tft.c **** #include <math.h>
  22:../Libraries/FT800-FT813-5.x/tft.c **** #include <globals.h>
  23:../Libraries/FT800-FT813-5.x/tft.c **** #include "EVE.h"
  24:../Libraries/FT800-FT813-5.x/tft.c **** #include "tft_data.h"
  25:../Libraries/FT800-FT813-5.x/tft.c **** 
  26:../Libraries/FT800-FT813-5.x/tft.c **** 
  27:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Banner line strip edge positions (from left to right: Y1 is held horizontal till X1, in
  28:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y1 66
  29:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y2 50
  30:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X1 280
  31:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X2 320
  32:../Libraries/FT800-FT813-5.x/tft.c **** 
  33:../Libraries/FT800-FT813-5.x/tft.c **** 
  34:../Libraries/FT800-FT813-5.x/tft.c **** /////////// COLOR SCHEME
  35:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BGCOLOR       0x00F5F1EE // background
  36:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_TEXTCOLOR     0x00F3CD29 // main text
  37:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BANNERCOLOR   0x0064584B // banner
  38:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_DIVIDERCOLOR  0x00F3CD29 // divider
  39:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCOLOR  	   0x00EAA92B // button
  40:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCTSCOLOR   0x00AD9666 // button contrast
  41:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNTXTCOLOR   0x00FFF8EE // button text
  42:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNGRDCOLOR   0x008C4B12 // 3D gradient color
  43:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_AXISCOLOR    0x003B1E0B // graph axis
  44:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_GRIDCOLOR    0x00C5DAE2 // graph grid
  45:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA1COLOR   0x00003F9E // graph data 1
  46:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA2COLOR   0x0064584B // graph data 2 (alternative/additional color)
  47:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_POSMARKCOLOR 0x00ff0000 // graph position marker
  48:../Libraries/FT800-FT813-5.x/tft.c **** 
  49:../Libraries/FT800-FT813-5.x/tft.c **** /* simple pre-defined colors */
  50:../Libraries/FT800-FT813-5.x/tft.c **** #define RED		0xff0000UL
  51:../Libraries/FT800-FT813-5.x/tft.c **** #define ORANGE	0xffa500UL
  52:../Libraries/FT800-FT813-5.x/tft.c **** #define GREEN	0x00ff00UL
  53:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE	0x0000ffUL
  54:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE_1	0x5dade2L
  55:../Libraries/FT800-FT813-5.x/tft.c **** #define YELLOW	0xffff00UL
  56:../Libraries/FT800-FT813-5.x/tft.c **** #define PINK	0xff00ffUL
  57:../Libraries/FT800-FT813-5.x/tft.c **** #define PURPLE	0x800080UL
  58:../Libraries/FT800-FT813-5.x/tft.c **** #define WHITE	0xffffffUL
  59:../Libraries/FT800-FT813-5.x/tft.c **** #define BLACK	0x000000UL
  60:../Libraries/FT800-FT813-5.x/tft.c **** 
  61:../Libraries/FT800-FT813-5.x/tft.c **** 
  62:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions
  63:../Libraries/FT800-FT813-5.x/tft.c **** // Graph position and size. Here -> quick an dirty estimation where x, y, width and height must be 
  64:../Libraries/FT800-FT813-5.x/tft.c **** #define G_PADDING 10 									// Only needed because we want to calc how much width and height can 
  65:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_x        = 10;													 // 10 px from left to leave some room
  66:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_y      	= (LAYOUT_Y1 + 15);										 // end of banner plus 10 to leave some room  (for 
  67:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_width 	= (0 + EVE_HSIZE - 10 - (2*G_PADDING) - 10);			   // actual width of the data are
  68:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_height	= (0 + EVE_VSIZE - (LAYOUT_Y1 + 15) - (2*G_PADDING) - 10); // actual height of th
  69:../Libraries/FT800-FT813-5.x/tft.c **** // axes
  70:../Libraries/FT800-FT813-5.x/tft.c **** const char unit_Sensor[] = " V"; // unit string used at print of current sensor value
  71:../Libraries/FT800-FT813-5.x/tft.c **** double G_amp_max = 10.0; // volts - used at print of vertical grid value labels
  72:../Libraries/FT800-FT813-5.x/tft.c **** double G_t_max = 2.2;    // seconds - used at print of horizontal grid value labels
  73:../Libraries/FT800-FT813-5.x/tft.c **** // data properties
  74:../Libraries/FT800-FT813-5.x/tft.c **** double G_y_max = 4095.0; // maximum allowed amplitude y (here for 12bit sensor value)
  75:../Libraries/FT800-FT813-5.x/tft.c **** // grid
  76:../Libraries/FT800-FT813-5.x/tft.c **** double G_h_grid_lines = 4.0; // number of grey horizontal grid lines
  77:../Libraries/FT800-FT813-5.x/tft.c **** double G_v_grid_lines = 2.2; // number of grey vertical grid lines
  78:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions END
  79:../Libraries/FT800-FT813-5.x/tft.c **** 
  80:../Libraries/FT800-FT813-5.x/tft.c **** 
  81:../Libraries/FT800-FT813-5.x/tft.c **** // Memory-map definitions
  82:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_LOGO 0x00000000 // start-address of logo, needs about 20228 bytes of memory. Will be wr
  83:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_DL_STATIC (EVE_RAM_G_SIZE - 4096) // 0xff000 -> Start-address of the static part of the
  84:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t num_dl_static; // amount of bytes in the static part of our display-list
  85:../Libraries/FT800-FT813-5.x/tft.c **** 
  86:../Libraries/FT800-FT813-5.x/tft.c **** 
  87:../Libraries/FT800-FT813-5.x/tft.c **** /////////// General Variables
  88:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t tft_active = 0;  // Prevents TFT_display of doing anything if EVE_init isn't successful of 
  89:../Libraries/FT800-FT813-5.x/tft.c **** 
  90:../Libraries/FT800-FT813-5.x/tft.c **** // Current menu display function pointer - At the end of the TFT_display() the function referenced 
  91:../Libraries/FT800-FT813-5.x/tft.c **** int8_t TFT_cur_Menu = 0; // Used as index of currently used menu (TFT_display,TFT_touch)
  92:../Libraries/FT800-FT813-5.x/tft.c **** int8_t TFT_last_Menu = -1; // Used as index of last used menu (TFT_display_static). If this differs
  93:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu0(void);
  94:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu1(void);
  95:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_display_cur_Menu__fptr_arr[])(void) = {&TFT_display_menu0, &TFT_display_menu1};
  96:../Libraries/FT800-FT813-5.x/tft.c **** 
  97:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu0(uint8_t, uint8_t, uint8_t*, int32_t*, int32_t*);
  98:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu1(uint8_t, uint8_t, uint8_t*, int32_t*, int32_t*);
  99:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_touch_cur_Menu__fptr_arr[])(uint8_t tag, uint8_t swipeInProgress, uint8_t *swipeEvokedBy
 100:../Libraries/FT800-FT813-5.x/tft.c **** 
 101:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu0(void);
 102:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu1(void);
 103:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_display_static_cur_Menu__fptr_arr[])(void) = {&TFT_display_static_menu0, &TFT_display_st
 104:../Libraries/FT800-FT813-5.x/tft.c **** 
 105:../Libraries/FT800-FT813-5.x/tft.c **** #define TFT_MENU_SIZE (sizeof(TFT_display_cur_Menu__fptr_arr) / sizeof(*(TFT_display_cur_Menu__fptr
 106:../Libraries/FT800-FT813-5.x/tft.c **** 
 107:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Debug
 108:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t display_list_size = 0; // Currently size of the display-list from register. Used by TFT_di
 109:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t tracker = 0; // Value of tracker register (1.byte=tag, 2.byte=value). Used by TFT_display(
 110:../Libraries/FT800-FT813-5.x/tft.c **** 
 111:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Swipe feature (TFT_touch)
 112:../Libraries/FT800-FT813-5.x/tft.c **** enum SwipeDetection{None, Up, Down, Left, Right};
 113:../Libraries/FT800-FT813-5.x/tft.c **** enum SwipeDetection swipeDetect = None;
 114:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t swipeInProgress = 0;
 115:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t swipeEvokedBy = 0; 			  // The tag that initiated the swipe (needed to run an action based 
 116:../Libraries/FT800-FT813-5.x/tft.c **** int32_t swipeInitialTouch_X = 32768; // X position of the initial touch of an swipe
 117:../Libraries/FT800-FT813-5.x/tft.c **** int32_t swipeInitialTouch_Y = 32768;
 118:../Libraries/FT800-FT813-5.x/tft.c **** int32_t swipeDistance_X = 0;		  // Distance (in px) between the initial touch and the current posit
 119:../Libraries/FT800-FT813-5.x/tft.c **** int32_t swipeDistance_Y = 0;
 120:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t swipeEndOfTouch_Debounce = 0; // Counts the number of successive cycles without an touch (t
 121:../Libraries/FT800-FT813-5.x/tft.c **** 
 122:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Button states
 123:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t toggle_lock = 0; // "Debouncing of touches" -> If something is touched, this is set to prev
 124:../Libraries/FT800-FT813-5.x/tft.c **** 
 125:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_graphmode = 0;
 126:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_dimmer = 0;
 127:../Libraries/FT800-FT813-5.x/tft.c **** 
 128:../Libraries/FT800-FT813-5.x/tft.c **** 
 129:../Libraries/FT800-FT813-5.x/tft.c **** 
 130:../Libraries/FT800-FT813-5.x/tft.c **** 
 131:../Libraries/FT800-FT813-5.x/tft.c **** 
 132:../Libraries/FT800-FT813-5.x/tft.c **** 
 133:../Libraries/FT800-FT813-5.x/tft.c **** 
 134:../Libraries/FT800-FT813-5.x/tft.c **** 
 135:../Libraries/FT800-FT813-5.x/tft.c **** 
 136:../Libraries/FT800-FT813-5.x/tft.c **** 
 137:../Libraries/FT800-FT813-5.x/tft.c **** 
 138:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphStatic(uint8_t burst, uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16
 269              	 .loc 1 138 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 273 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 274              	.LCFI0:
 275              	 .cfi_def_cfa_offset 20
 276              	 .cfi_offset 4,-20
 277              	 .cfi_offset 5,-16
 278              	 .cfi_offset 6,-12
 279              	 .cfi_offset 7,-8
 280              	 .cfi_offset 14,-4
 281 0002 A3B0     	 sub sp,sp,#140
 282              	.LCFI1:
 283              	 .cfi_def_cfa_offset 160
 284 0004 02AF     	 add r7,sp,#8
 285              	.LCFI2:
 286              	 .cfi_def_cfa 7,152
 287 0006 0446     	 mov r4,r0
 288 0008 0846     	 mov r0,r1
 289 000a 1146     	 mov r1,r2
 290 000c 1A46     	 mov r2,r3
 291 000e 2346     	 mov r3,r4
 292 0010 FB71     	 strb r3,[r7,#7]
 293 0012 0346     	 mov r3,r0
 294 0014 BB80     	 strh r3,[r7,#4]
 295 0016 0B46     	 mov r3,r1
 296 0018 7B80     	 strh r3,[r7,#2]
 297 001a 1346     	 mov r3,r2
 298 001c 3B80     	 strh r3,[r7]
 139:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the non-dynamic parts of an Graph to the TFT (axes & labels, grids and values, axis-arro
 140:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 141:../Libraries/FT800-FT813-5.x/tft.c **** 	///  burst	... determines if the normal or the burst version of the EVE Library is used to transmi
 142:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 143:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 144:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 145:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 146:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding ... clearance from the outer corners (x,y) to the axes
 147:../Libraries/FT800-FT813-5.x/tft.c **** 	///  amp_max ... maximum represented value of amplitude (e.g. 10 Volts), will be used at 100% hori
 148:../Libraries/FT800-FT813-5.x/tft.c **** 	///  t_max 	 ... maximum represented value of time (e.g. 2.2 Seconds), will be used at 100% horizo
 149:../Libraries/FT800-FT813-5.x/tft.c **** 	///  h_grid_lines ... number of horizontal grid lines
 150:../Libraries/FT800-FT813-5.x/tft.c **** 	///  v_grid_lines ... number of vertical grid lines
 151:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: The predefined GRAPH_AXISCOLOR and GRAPH_GRIDCOLOR are used directly!
 152:../Libraries/FT800-FT813-5.x/tft.c **** 
 153:../Libraries/FT800-FT813-5.x/tft.c **** 	// Define a array of function pointers for every used "EVE_cmd_dl..." function. First one is norma
 154:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_dl__fptr_arr[])(uint32_t) = {EVE_cmd_dl, EVE_cmd_dl_burst};
 299              	 .loc 1 154 0
 300 001e A04A     	 ldr r2,.L20
 301 0020 07F13803 	 add r3,r7,#56
 302 0024 92E80300 	 ldmia r2,{r0,r1}
 303 0028 83E80300 	 stmia r3,{r0,r1}
 155:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_text__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, const char*) = {EVE_cmd_text
 304              	 .loc 1 155 0
 305 002c 9D4A     	 ldr r2,.L20+4
 306 002e 07F13003 	 add r3,r7,#48
 307 0032 92E80300 	 ldmia r2,{r0,r1}
 308 0036 83E80300 	 stmia r3,{r0,r1}
 156:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_number__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, int32_t) = {EVE_cmd_number
 309              	 .loc 1 156 0
 310 003a 9B4A     	 ldr r2,.L20+8
 311 003c 07F12803 	 add r3,r7,#40
 312 0040 92E80300 	 ldmia r2,{r0,r1}
 313 0044 83E80300 	 stmia r3,{r0,r1}
 157:../Libraries/FT800-FT813-5.x/tft.c **** 
 158:../Libraries/FT800-FT813-5.x/tft.c **** 
 159:../Libraries/FT800-FT813-5.x/tft.c **** 	// Internal offsets and sizes
 160:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t arrow_offset = 5;   // Offset of the ARROW HEAD corners
 314              	 .loc 1 160 0
 315 0048 0523     	 movs r3,#5
 316 004a 87F86F30 	 strb r3,[r7,#111]
 161:../Libraries/FT800-FT813-5.x/tft.c **** 
 162:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t grid_linewidth = 9; // linewidth of the grid in 1/16 pixel (16=1px)
 317              	 .loc 1 162 0
 318 004e 0923     	 movs r3,#9
 319 0050 87F86E30 	 strb r3,[r7,#110]
 163:../Libraries/FT800-FT813-5.x/tft.c **** 
 164:../Libraries/FT800-FT813-5.x/tft.c **** 	#define axis_lbl_txt_size 26 	  // Font for axis labels
 165:../Libraries/FT800-FT813-5.x/tft.c **** 	#define grid_lbl_txt_size 20 	  // Font for grid labels
 166:../Libraries/FT800-FT813-5.x/tft.c **** 
 167:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_x = 6;  // Offset used to print the horizontal axis label at the right
 320              	 .loc 1 167 0
 321 0054 0623     	 movs r3,#6
 322 0056 87F86D30 	 strb r3,[r7,#109]
 168:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_y = 20; // Offset used to print the horizontal axis label at the right
 323              	 .loc 1 168 0
 324 005a 1423     	 movs r3,#20
 325 005c 87F86C30 	 strb r3,[r7,#108]
 169:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_x = 2;  // Offset used to print the vertical axis label at the right p
 326              	 .loc 1 169 0
 327 0060 0223     	 movs r3,#2
 328 0062 87F86B30 	 strb r3,[r7,#107]
 170:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_y = 22; // Offset used to print the vertical axis label at the right p
 329              	 .loc 1 170 0
 330 0066 1623     	 movs r3,#22
 331 0068 87F86A30 	 strb r3,[r7,#106]
 171:../Libraries/FT800-FT813-5.x/tft.c **** 
 172:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_x = 3;  // Offset used to print the horizontal grid labels (numbers)
 332              	 .loc 1 172 0
 333 006c 0323     	 movs r3,#3
 334 006e 87F86930 	 strb r3,[r7,#105]
 173:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_y = 10; // Offset used to print the horizontal grid labels (numbers)
 335              	 .loc 1 173 0
 336 0072 0A23     	 movs r3,#10
 337 0074 87F86830 	 strb r3,[r7,#104]
 174:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_x = 7;  // Offset used to print the vertical grid labels (numbers) a
 338              	 .loc 1 174 0
 339 0078 0723     	 movs r3,#7
 340 007a 87F86730 	 strb r3,[r7,#103]
 175:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_y = 0;  // Offset used to print the vertical grid labels (numbers) a
 341              	 .loc 1 175 0
 342 007e 0023     	 movs r3,#0
 343 0080 87F86630 	 strb r3,[r7,#102]
 176:../Libraries/FT800-FT813-5.x/tft.c **** 
 177:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Calculate pixels between lines and labels of the grid
 178:../Libraries/FT800-FT813-5.x/tft.c **** 	// Used by grid lines and labels (space between them)
 179:../Libraries/FT800-FT813-5.x/tft.c **** 	double widthPerSection = (double)(width)/v_grid_lines;
 344              	 .loc 1 179 0
 345 0084 3B88     	 ldrh r3,[r7]
 346 0086 1846     	 mov r0,r3
 347 0088 FFF7FEFF 	 bl __aeabi_ui2d
 348 008c 0246     	 mov r2,r0
 349 008e 0B46     	 mov r3,r1
 350 0090 1046     	 mov r0,r2
 351 0092 1946     	 mov r1,r3
 352 0094 D7E92E23 	 ldrd r2,[r7,#184]
 353 0098 FFF7FEFF 	 bl __aeabi_ddiv
 354 009c 0246     	 mov r2,r0
 355 009e 0B46     	 mov r3,r1
 356 00a0 C7E91623 	 strd r2,[r7,#88]
 180:../Libraries/FT800-FT813-5.x/tft.c **** 	double heightPerSection = (double)(height)/h_grid_lines;
 357              	 .loc 1 180 0
 358 00a4 B7F89830 	 ldrh r3,[r7,#152]
 359 00a8 1846     	 mov r0,r3
 360 00aa FFF7FEFF 	 bl __aeabi_ui2d
 361 00ae 0246     	 mov r2,r0
 362 00b0 0B46     	 mov r3,r1
 363 00b2 1046     	 mov r0,r2
 364 00b4 1946     	 mov r1,r3
 365 00b6 D7E92C23 	 ldrd r2,[r7,#176]
 366 00ba FFF7FEFF 	 bl __aeabi_ddiv
 367 00be 0246     	 mov r2,r0
 368 00c0 0B46     	 mov r3,r1
 369 00c2 C7E91423 	 strd r2,[r7,#80]
 181:../Libraries/FT800-FT813-5.x/tft.c **** 
 182:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Axes LABELS
 183:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 370              	 .loc 1 183 0
 371 00c6 FB79     	 ldrb r3,[r7,#7]
 372 00c8 9B00     	 lsls r3,r3,#2
 373 00ca 07F18002 	 add r2,r7,#128
 374 00ce 1344     	 add r3,r3,r2
 375 00d0 53F8483C 	 ldr r3,[r3,#-72]
 376 00d4 7548     	 ldr r0,.L20+12
 377 00d6 9847     	 blx r3
 184:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding         + h_ax_lbl_comp_x, y + padding          - h_a
 378              	 .loc 1 184 0
 379 00d8 FB79     	 ldrb r3,[r7,#7]
 380 00da 9B00     	 lsls r3,r3,#2
 381 00dc 07F18002 	 add r2,r7,#128
 382 00e0 1344     	 add r3,r3,r2
 383 00e2 53F8504C 	 ldr r4,[r3,#-80]
 384 00e6 BA88     	 ldrh r2,[r7,#4]
 385 00e8 B7F89C30 	 ldrh r3,[r7,#156]
 386 00ec 1344     	 add r3,r3,r2
 387 00ee 9AB2     	 uxth r2,r3
 388 00f0 97F86D30 	 ldrb r3,[r7,#109]
 389 00f4 9BB2     	 uxth r3,r3
 390 00f6 1344     	 add r3,r3,r2
 391 00f8 9BB2     	 uxth r3,r3
 392 00fa 99B2     	 uxth r1,r3
 393 00fc 7A88     	 ldrh r2,[r7,#2]
 394 00fe B7F89C30 	 ldrh r3,[r7,#156]
 395 0102 1344     	 add r3,r3,r2
 396 0104 9AB2     	 uxth r2,r3
 397 0106 97F86C30 	 ldrb r3,[r7,#108]
 398 010a 9BB2     	 uxth r3,r3
 399 010c D31A     	 subs r3,r2,r3
 400 010e 9BB2     	 uxth r3,r3
 401 0110 9BB2     	 uxth r3,r3
 402 0112 09B2     	 sxth r1,r1
 403 0114 1AB2     	 sxth r2,r3
 404 0116 664B     	 ldr r3,.L20+16
 405 0118 0093     	 str r3,[sp]
 406 011a 0846     	 mov r0,r1
 407 011c 1146     	 mov r1,r2
 408 011e 1A22     	 movs r2,#26
 409 0120 0023     	 movs r3,#0
 410 0122 A047     	 blx r4
 185:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding + width + v_ax_lbl_comp_x, y + padding + height - v_a
 411              	 .loc 1 185 0
 412 0124 FB79     	 ldrb r3,[r7,#7]
 413 0126 9B00     	 lsls r3,r3,#2
 414 0128 07F18002 	 add r2,r7,#128
 415 012c 1344     	 add r3,r3,r2
 416 012e 53F8504C 	 ldr r4,[r3,#-80]
 417 0132 BA88     	 ldrh r2,[r7,#4]
 418 0134 B7F89C30 	 ldrh r3,[r7,#156]
 419 0138 1344     	 add r3,r3,r2
 420 013a 9AB2     	 uxth r2,r3
 421 013c 3B88     	 ldrh r3,[r7]
 422 013e 1344     	 add r3,r3,r2
 423 0140 9AB2     	 uxth r2,r3
 424 0142 97F86B30 	 ldrb r3,[r7,#107]
 425 0146 9BB2     	 uxth r3,r3
 426 0148 1344     	 add r3,r3,r2
 427 014a 9BB2     	 uxth r3,r3
 428 014c 99B2     	 uxth r1,r3
 429 014e 7A88     	 ldrh r2,[r7,#2]
 430 0150 B7F89C30 	 ldrh r3,[r7,#156]
 431 0154 1344     	 add r3,r3,r2
 432 0156 9AB2     	 uxth r2,r3
 433 0158 B7F89830 	 ldrh r3,[r7,#152]
 434 015c 1344     	 add r3,r3,r2
 435 015e 9AB2     	 uxth r2,r3
 436 0160 97F86A30 	 ldrb r3,[r7,#106]
 437 0164 9BB2     	 uxth r3,r3
 438 0166 D31A     	 subs r3,r2,r3
 439 0168 9BB2     	 uxth r3,r3
 440 016a 9BB2     	 uxth r3,r3
 441 016c 09B2     	 sxth r1,r1
 442 016e 1AB2     	 sxth r2,r3
 443 0170 504B     	 ldr r3,.L20+20
 444 0172 0093     	 str r3,[sp]
 445 0174 0846     	 mov r0,r1
 446 0176 1146     	 mov r1,r2
 447 0178 1A22     	 movs r2,#26
 448 017a 0023     	 movs r3,#0
 449 017c A047     	 blx r4
 186:../Libraries/FT800-FT813-5.x/tft.c **** 
 187:../Libraries/FT800-FT813-5.x/tft.c **** 	/// AXES lines
 188:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 189:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINES);
 450              	 .loc 1 189 0
 451 017e FB79     	 ldrb r3,[r7,#7]
 452 0180 9B00     	 lsls r3,r3,#2
 453 0182 07F18002 	 add r2,r7,#128
 454 0186 1344     	 add r3,r3,r2
 455 0188 53F8483C 	 ldr r3,[r3,#-72]
 456 018c 4A48     	 ldr r0,.L20+24
 457 018e 9847     	 blx r3
 190:../Libraries/FT800-FT813-5.x/tft.c **** 	// left vertical line (Amplitude)
 191:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y));
 458              	 .loc 1 191 0
 459 0190 FB79     	 ldrb r3,[r7,#7]
 460 0192 9B00     	 lsls r3,r3,#2
 461 0194 07F18002 	 add r2,r7,#128
 462 0198 1344     	 add r3,r3,r2
 463 019a 53F8483C 	 ldr r3,[r3,#-72]
 464 019e B988     	 ldrh r1,[r7,#4]
 465 01a0 B7F89C20 	 ldrh r2,[r7,#156]
 466 01a4 0A44     	 add r2,r2,r1
 467 01a6 C2F30E02 	 ubfx r2,r2,#0,#15
 468 01aa D103     	 lsls r1,r2,#15
 469 01ac 7A88     	 ldrh r2,[r7,#2]
 470 01ae C2F30E02 	 ubfx r2,r2,#0,#15
 471 01b2 0A43     	 orrs r2,r2,r1
 472 01b4 42F08042 	 orr r2,r2,#1073741824
 473 01b8 1046     	 mov r0,r2
 474 01ba 9847     	 blx r3
 192:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y + padding + height + padding));
 475              	 .loc 1 192 0
 476 01bc FB79     	 ldrb r3,[r7,#7]
 477 01be 9B00     	 lsls r3,r3,#2
 478 01c0 07F18002 	 add r2,r7,#128
 479 01c4 1344     	 add r3,r3,r2
 480 01c6 53F8483C 	 ldr r3,[r3,#-72]
 481 01ca B988     	 ldrh r1,[r7,#4]
 482 01cc B7F89C20 	 ldrh r2,[r7,#156]
 483 01d0 0A44     	 add r2,r2,r1
 484 01d2 C2F30E02 	 ubfx r2,r2,#0,#15
 485 01d6 D103     	 lsls r1,r2,#15
 486 01d8 7888     	 ldrh r0,[r7,#2]
 487 01da B7F89C20 	 ldrh r2,[r7,#156]
 488 01de 1044     	 add r0,r0,r2
 489 01e0 B7F89820 	 ldrh r2,[r7,#152]
 490 01e4 1044     	 add r0,r0,r2
 491 01e6 B7F89C20 	 ldrh r2,[r7,#156]
 492 01ea 0244     	 add r2,r2,r0
 493 01ec C2F30E02 	 ubfx r2,r2,#0,#15
 494 01f0 0A43     	 orrs r2,r2,r1
 495 01f2 42F08042 	 orr r2,r2,#1073741824
 496 01f6 1046     	 mov r0,r2
 497 01f8 9847     	 blx r3
 193:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal line (Time)
 194:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x                            , y + padding + height ));
 498              	 .loc 1 194 0
 499 01fa FB79     	 ldrb r3,[r7,#7]
 500 01fc 9B00     	 lsls r3,r3,#2
 501 01fe 07F18002 	 add r2,r7,#128
 502 0202 1344     	 add r3,r3,r2
 503 0204 53F8483C 	 ldr r3,[r3,#-72]
 504 0208 BA88     	 ldrh r2,[r7,#4]
 505 020a C2F30E02 	 ubfx r2,r2,#0,#15
 506 020e D103     	 lsls r1,r2,#15
 507 0210 7888     	 ldrh r0,[r7,#2]
 508 0212 B7F89C20 	 ldrh r2,[r7,#156]
 509 0216 1044     	 add r0,r0,r2
 510 0218 B7F89820 	 ldrh r2,[r7,#152]
 511 021c 0244     	 add r2,r2,r0
 512 021e C2F30E02 	 ubfx r2,r2,#0,#15
 513 0222 0A43     	 orrs r2,r2,r1
 514 0224 42F08042 	 orr r2,r2,#1073741824
 515 0228 1046     	 mov r0,r2
 516 022a 9847     	 blx r3
 195:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding, y + padding + height ));
 517              	 .loc 1 195 0
 518 022c FB79     	 ldrb r3,[r7,#7]
 519 022e 9B00     	 lsls r3,r3,#2
 520 0230 07F18002 	 add r2,r7,#128
 521 0234 1344     	 add r3,r3,r2
 522 0236 53F8483C 	 ldr r3,[r3,#-72]
 523 023a B988     	 ldrh r1,[r7,#4]
 524 023c B7F89C20 	 ldrh r2,[r7,#156]
 525 0240 1144     	 add r1,r1,r2
 526 0242 3A88     	 ldrh r2,[r7]
 527 0244 1144     	 add r1,r1,r2
 528 0246 B7F89C20 	 ldrh r2,[r7,#156]
 529 024a 0A44     	 add r2,r2,r1
 530 024c C2F30E02 	 ubfx r2,r2,#0,#15
 531 0250 D103     	 lsls r1,r2,#15
 532 0252 7888     	 ldrh r0,[r7,#2]
 533 0254 B7F89C20 	 ldrh r2,[r7,#156]
 534 0258 1044     	 add r0,r0,r2
 535 025a B7F89820 	 ldrh r2,[r7,#152]
 536 025e 0244     	 add r2,r2,r0
 537 0260 C2F30E02 	 ubfx r2,r2,#0,#15
 538 0264 0A43     	 orrs r2,r2,r1
 539 0266 42F08042 	 orr r2,r2,#1073741824
 540 026a 1046     	 mov r0,r2
 541 026c 9847     	 blx r3
 196:../Libraries/FT800-FT813-5.x/tft.c **** 
 197:../Libraries/FT800-FT813-5.x/tft.c **** 	/// GRID lines
 198:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(LINE_WIDTH(grid_linewidth)); /* size is in 1/16 pixel */
 542              	 .loc 1 198 0
 543 026e FB79     	 ldrb r3,[r7,#7]
 544 0270 9B00     	 lsls r3,r3,#2
 545 0272 07F18002 	 add r2,r7,#128
 546 0276 1344     	 add r3,r3,r2
 547 0278 53F8483C 	 ldr r3,[r3,#-72]
 548 027c 97F86E20 	 ldrb r2,[r7,#110]
 549 0280 42F06062 	 orr r2,r2,#234881024
 550 0284 1046     	 mov r0,r2
 551 0286 9847     	 blx r3
 199:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_GRIDCOLOR);
 552              	 .loc 1 199 0
 553 0288 FB79     	 ldrb r3,[r7,#7]
 554 028a 9B00     	 lsls r3,r3,#2
 555 028c 07F18002 	 add r2,r7,#128
 556 0290 1344     	 add r3,r3,r2
 557 0292 53F8483C 	 ldr r3,[r3,#-72]
 558 0296 0948     	 ldr r0,.L20+28
 559 0298 9847     	 blx r3
 560              	.LBB2:
 200:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid
 201:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(v_grid_lines); i++){
 561              	 .loc 1 201 0
 562 029a 0123     	 movs r3,#1
 563 029c FB67     	 str r3,[r7,#124]
 564 029e 6FE0     	 b .L2
 565              	.L21:
 566              	 .align 2
 567              	.L20:
 568 02a0 10000000 	 .word .LC0
 569 02a4 18000000 	 .word .LC1
 570 02a8 20000000 	 .word .LC2
 571 02ac 0B1E3B04 	 .word 70983179
 572 02b0 00000000 	 .word .LC3
 573 02b4 04000000 	 .word .LC4
 574 02b8 0300001F 	 .word 520093699
 575 02bc E2DAC504 	 .word 80075490
 576              	.L3:
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 203:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 577              	 .loc 1 203 0 discriminator 3
 578 02c0 FB79     	 ldrb r3,[r7,#7]
 579 02c2 9B00     	 lsls r3,r3,#2
 580 02c4 07F18002 	 add r2,r7,#128
 581 02c8 1344     	 add r3,r3,r2
 582 02ca 53F8484C 	 ldr r4,[r3,#-72]
 583 02ce BA88     	 ldrh r2,[r7,#4]
 584 02d0 B7F89C30 	 ldrh r3,[r7,#156]
 585 02d4 D518     	 adds r5,r2,r3
 586 02d6 F86F     	 ldr r0,[r7,#124]
 587 02d8 FFF7FEFF 	 bl __aeabi_i2d
 588 02dc 0246     	 mov r2,r0
 589 02de 0B46     	 mov r3,r1
 590 02e0 1046     	 mov r0,r2
 591 02e2 1946     	 mov r1,r3
 592 02e4 D7E91623 	 ldrd r2,[r7,#88]
 593 02e8 FFF7FEFF 	 bl __aeabi_dmul
 594 02ec 0246     	 mov r2,r0
 595 02ee 0B46     	 mov r3,r1
 596 02f0 1046     	 mov r0,r2
 597 02f2 1946     	 mov r1,r3
 598 02f4 FFF7FEFF 	 bl __aeabi_d2uiz
 599 02f8 0346     	 mov r3,r0
 600 02fa 9BB2     	 uxth r3,r3
 601 02fc 2B44     	 add r3,r3,r5
 602 02fe C3F30E03 	 ubfx r3,r3,#0,#15
 603 0302 DA03     	 lsls r2,r3,#15
 604 0304 7988     	 ldrh r1,[r7,#2]
 605 0306 B7F89C30 	 ldrh r3,[r7,#156]
 606 030a 0B44     	 add r3,r3,r1
 607 030c C3F30E03 	 ubfx r3,r3,#0,#15
 608 0310 1343     	 orrs r3,r3,r2
 609 0312 43F08043 	 orr r3,r3,#1073741824
 610 0316 1846     	 mov r0,r3
 611 0318 A047     	 blx r4
 204:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 612              	 .loc 1 204 0 discriminator 3
 613 031a FB79     	 ldrb r3,[r7,#7]
 614 031c 9B00     	 lsls r3,r3,#2
 615 031e 07F18002 	 add r2,r7,#128
 616 0322 1344     	 add r3,r3,r2
 617 0324 53F8484C 	 ldr r4,[r3,#-72]
 618 0328 BA88     	 ldrh r2,[r7,#4]
 619 032a B7F89C30 	 ldrh r3,[r7,#156]
 620 032e D518     	 adds r5,r2,r3
 621 0330 F86F     	 ldr r0,[r7,#124]
 622 0332 FFF7FEFF 	 bl __aeabi_i2d
 623 0336 0246     	 mov r2,r0
 624 0338 0B46     	 mov r3,r1
 625 033a 1046     	 mov r0,r2
 626 033c 1946     	 mov r1,r3
 627 033e D7E91623 	 ldrd r2,[r7,#88]
 628 0342 FFF7FEFF 	 bl __aeabi_dmul
 629 0346 0246     	 mov r2,r0
 630 0348 0B46     	 mov r3,r1
 631 034a 1046     	 mov r0,r2
 632 034c 1946     	 mov r1,r3
 633 034e FFF7FEFF 	 bl __aeabi_d2uiz
 634 0352 0346     	 mov r3,r0
 635 0354 9BB2     	 uxth r3,r3
 636 0356 2B44     	 add r3,r3,r5
 637 0358 C3F30E03 	 ubfx r3,r3,#0,#15
 638 035c DA03     	 lsls r2,r3,#15
 639 035e 7988     	 ldrh r1,[r7,#2]
 640 0360 B7F89C30 	 ldrh r3,[r7,#156]
 641 0364 1944     	 add r1,r1,r3
 642 0366 B7F89830 	 ldrh r3,[r7,#152]
 643 036a 0B44     	 add r3,r3,r1
 644 036c C3F30E03 	 ubfx r3,r3,#0,#15
 645 0370 1343     	 orrs r3,r3,r2
 646 0372 43F08043 	 orr r3,r3,#1073741824
 647 0376 1846     	 mov r0,r3
 648 0378 A047     	 blx r4
 201:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 649              	 .loc 1 201 0 discriminator 3
 650 037a FB6F     	 ldr r3,[r7,#124]
 651 037c 0133     	 adds r3,r3,#1
 652 037e FB67     	 str r3,[r7,#124]
 653              	.L2:
 201:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 654              	 .loc 1 201 0 is_stmt 0 discriminator 1
 655 0380 D7E92E01 	 ldrd r0,[r7,#184]
 656 0384 FFF7FEFF 	 bl floor
 657 0388 0246     	 mov r2,r0
 658 038a 0B46     	 mov r3,r1
 659 038c 1046     	 mov r0,r2
 660 038e 1946     	 mov r1,r3
 661 0390 FFF7FEFF 	 bl __aeabi_d2iz
 662 0394 0246     	 mov r2,r0
 663 0396 FB6F     	 ldr r3,[r7,#124]
 664 0398 9A42     	 cmp r2,r3
 665 039a 91DA     	 bge .L3
 666              	.LBE2:
 667              	.LBB3:
 205:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 206:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid
 207:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){
 668              	 .loc 1 207 0 is_stmt 1
 669 039c 0123     	 movs r3,#1
 670 039e BB67     	 str r3,[r7,#120]
 671 03a0 64E0     	 b .L4
 672              	.L5:
 208:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 209:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding        , y + padding + height - (uint16_t)(he
 673              	 .loc 1 209 0 discriminator 3
 674 03a2 FB79     	 ldrb r3,[r7,#7]
 675 03a4 9B00     	 lsls r3,r3,#2
 676 03a6 07F18002 	 add r2,r7,#128
 677 03aa 1344     	 add r3,r3,r2
 678 03ac 53F8484C 	 ldr r4,[r3,#-72]
 679 03b0 BA88     	 ldrh r2,[r7,#4]
 680 03b2 B7F89C30 	 ldrh r3,[r7,#156]
 681 03b6 1344     	 add r3,r3,r2
 682 03b8 C3F30E03 	 ubfx r3,r3,#0,#15
 683 03bc DD03     	 lsls r5,r3,#15
 684 03be 7A88     	 ldrh r2,[r7,#2]
 685 03c0 B7F89C30 	 ldrh r3,[r7,#156]
 686 03c4 1A44     	 add r2,r2,r3
 687 03c6 B7F89830 	 ldrh r3,[r7,#152]
 688 03ca D618     	 adds r6,r2,r3
 689 03cc B86F     	 ldr r0,[r7,#120]
 690 03ce FFF7FEFF 	 bl __aeabi_i2d
 691 03d2 0246     	 mov r2,r0
 692 03d4 0B46     	 mov r3,r1
 693 03d6 1046     	 mov r0,r2
 694 03d8 1946     	 mov r1,r3
 695 03da D7E91423 	 ldrd r2,[r7,#80]
 696 03de FFF7FEFF 	 bl __aeabi_dmul
 697 03e2 0246     	 mov r2,r0
 698 03e4 0B46     	 mov r3,r1
 699 03e6 1046     	 mov r0,r2
 700 03e8 1946     	 mov r1,r3
 701 03ea FFF7FEFF 	 bl __aeabi_d2uiz
 702 03ee 0346     	 mov r3,r0
 703 03f0 9BB2     	 uxth r3,r3
 704 03f2 F31A     	 subs r3,r6,r3
 705 03f4 C3F30E03 	 ubfx r3,r3,#0,#15
 706 03f8 2B43     	 orrs r3,r3,r5
 707 03fa 43F08043 	 orr r3,r3,#1073741824
 708 03fe 1846     	 mov r0,r3
 709 0400 A047     	 blx r4
 210:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width, y + padding + height - (uint16_t)(he
 710              	 .loc 1 210 0 discriminator 3
 711 0402 FB79     	 ldrb r3,[r7,#7]
 712 0404 9B00     	 lsls r3,r3,#2
 713 0406 07F18002 	 add r2,r7,#128
 714 040a 1344     	 add r3,r3,r2
 715 040c 53F8484C 	 ldr r4,[r3,#-72]
 716 0410 BA88     	 ldrh r2,[r7,#4]
 717 0412 B7F89C30 	 ldrh r3,[r7,#156]
 718 0416 1A44     	 add r2,r2,r3
 719 0418 3B88     	 ldrh r3,[r7]
 720 041a 1344     	 add r3,r3,r2
 721 041c C3F30E03 	 ubfx r3,r3,#0,#15
 722 0420 DD03     	 lsls r5,r3,#15
 723 0422 7A88     	 ldrh r2,[r7,#2]
 724 0424 B7F89C30 	 ldrh r3,[r7,#156]
 725 0428 1A44     	 add r2,r2,r3
 726 042a B7F89830 	 ldrh r3,[r7,#152]
 727 042e D618     	 adds r6,r2,r3
 728 0430 B86F     	 ldr r0,[r7,#120]
 729 0432 FFF7FEFF 	 bl __aeabi_i2d
 730 0436 0246     	 mov r2,r0
 731 0438 0B46     	 mov r3,r1
 732 043a 1046     	 mov r0,r2
 733 043c 1946     	 mov r1,r3
 734 043e D7E91423 	 ldrd r2,[r7,#80]
 735 0442 FFF7FEFF 	 bl __aeabi_dmul
 736 0446 0246     	 mov r2,r0
 737 0448 0B46     	 mov r3,r1
 738 044a 1046     	 mov r0,r2
 739 044c 1946     	 mov r1,r3
 740 044e FFF7FEFF 	 bl __aeabi_d2uiz
 741 0452 0346     	 mov r3,r0
 742 0454 9BB2     	 uxth r3,r3
 743 0456 F31A     	 subs r3,r6,r3
 744 0458 C3F30E03 	 ubfx r3,r3,#0,#15
 745 045c 2B43     	 orrs r3,r3,r5
 746 045e 43F08043 	 orr r3,r3,#1073741824
 747 0462 1846     	 mov r0,r3
 748 0464 A047     	 blx r4
 207:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 749              	 .loc 1 207 0 discriminator 3
 750 0466 BB6F     	 ldr r3,[r7,#120]
 751 0468 0133     	 adds r3,r3,#1
 752 046a BB67     	 str r3,[r7,#120]
 753              	.L4:
 207:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 754              	 .loc 1 207 0 is_stmt 0 discriminator 1
 755 046c D7E92C01 	 ldrd r0,[r7,#176]
 756 0470 FFF7FEFF 	 bl floor
 757 0474 0246     	 mov r2,r0
 758 0476 0B46     	 mov r3,r1
 759 0478 1046     	 mov r0,r2
 760 047a 1946     	 mov r1,r3
 761 047c FFF7FEFF 	 bl __aeabi_d2iz
 762 0480 0246     	 mov r2,r0
 763 0482 BB6F     	 ldr r3,[r7,#120]
 764 0484 9A42     	 cmp r2,r3
 765 0486 8CDA     	 bge .L5
 766              	.LBE3:
 211:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 212:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 767              	 .loc 1 212 0 is_stmt 1
 768 0488 FB79     	 ldrb r3,[r7,#7]
 769 048a 9B00     	 lsls r3,r3,#2
 770 048c 07F18002 	 add r2,r7,#128
 771 0490 1344     	 add r3,r3,r2
 772 0492 53F8483C 	 ldr r3,[r3,#-72]
 773 0496 4FF00450 	 mov r0,#553648128
 774 049a 9847     	 blx r3
 213:../Libraries/FT800-FT813-5.x/tft.c **** 
 214:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Grid VALUES
 215:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 775              	 .loc 1 215 0
 776 049c FB79     	 ldrb r3,[r7,#7]
 777 049e 9B00     	 lsls r3,r3,#2
 778 04a0 07F18002 	 add r2,r7,#128
 779 04a4 1344     	 add r3,r3,r2
 780 04a6 53F8483C 	 ldr r3,[r3,#-72]
 781 04aa A448     	 ldr r0,.L22
 782 04ac 9847     	 blx r3
 783              	.LBB4:
 216:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid (time)
 217:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)ceil(v_grid_lines); i++){ // "ceil" and "i-1" at val -> print also the 0 valu
 784              	 .loc 1 217 0
 785 04ae 0123     	 movs r3,#1
 786 04b0 7B67     	 str r3,[r7,#116]
 787 04b2 BEE0     	 b .L6
 788              	.L10:
 789              	.LBB5:
 218:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 219:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (t_max/v_grid_lines*(double)(i-1));
 790              	 .loc 1 219 0
 791 04b4 D7E92A01 	 ldrd r0,[r7,#168]
 792 04b8 D7E92E23 	 ldrd r2,[r7,#184]
 793 04bc FFF7FEFF 	 bl __aeabi_ddiv
 794 04c0 0246     	 mov r2,r0
 795 04c2 0B46     	 mov r3,r1
 796 04c4 1446     	 mov r4,r2
 797 04c6 1D46     	 mov r5,r3
 798 04c8 7B6F     	 ldr r3,[r7,#116]
 799 04ca 013B     	 subs r3,r3,#1
 800 04cc 1846     	 mov r0,r3
 801 04ce FFF7FEFF 	 bl __aeabi_i2d
 802 04d2 0246     	 mov r2,r0
 803 04d4 0B46     	 mov r3,r1
 804 04d6 2046     	 mov r0,r4
 805 04d8 2946     	 mov r1,r5
 806 04da FFF7FEFF 	 bl __aeabi_dmul
 807 04de 0246     	 mov r2,r0
 808 04e0 0B46     	 mov r3,r1
 809 04e2 C7E91223 	 strd r2,[r7,#72]
 220:../Libraries/FT800-FT813-5.x/tft.c **** 
 221:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 222:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 810              	 .loc 1 222 0
 811 04e6 D7E91201 	 ldrd r0,[r7,#72]
 812 04ea FFF7FEFF 	 bl __aeabi_d2uiz
 813 04ee 0346     	 mov r3,r0
 814 04f0 1846     	 mov r0,r3
 815 04f2 FFF7FEFF 	 bl __aeabi_ui2d
 816 04f6 0246     	 mov r2,r0
 817 04f8 0B46     	 mov r3,r1
 818 04fa D7E91201 	 ldrd r0,[r7,#72]
 819 04fe FFF7FEFF 	 bl __aeabi_dsub
 820 0502 0246     	 mov r2,r0
 821 0504 0B46     	 mov r3,r1
 822 0506 1046     	 mov r0,r2
 823 0508 1946     	 mov r1,r3
 824 050a 4FF00002 	 mov r2,#0
 825 050e 4FF00003 	 mov r3,#0
 826 0512 FFF7FEFF 	 bl __aeabi_dcmpeq
 827 0516 0346     	 mov r3,r0
 828 0518 002B     	 cmp r3,#0
 829 051a 41D0     	 beq .L18
 223:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_g
 830              	 .loc 1 223 0
 831 051c FB79     	 ldrb r3,[r7,#7]
 832 051e 9B00     	 lsls r3,r3,#2
 833 0520 07F18002 	 add r2,r7,#128
 834 0524 1344     	 add r3,r3,r2
 835 0526 53F8584C 	 ldr r4,[r3,#-88]
 836 052a BA88     	 ldrh r2,[r7,#4]
 837 052c B7F89C30 	 ldrh r3,[r7,#156]
 838 0530 1344     	 add r3,r3,r2
 839 0532 9DB2     	 uxth r5,r3
 840 0534 7B6F     	 ldr r3,[r7,#116]
 841 0536 013B     	 subs r3,r3,#1
 842 0538 1846     	 mov r0,r3
 843 053a FFF7FEFF 	 bl __aeabi_i2d
 844 053e 0246     	 mov r2,r0
 845 0540 0B46     	 mov r3,r1
 846 0542 1046     	 mov r0,r2
 847 0544 1946     	 mov r1,r3
 848 0546 D7E91623 	 ldrd r2,[r7,#88]
 849 054a FFF7FEFF 	 bl __aeabi_dmul
 850 054e 0246     	 mov r2,r0
 851 0550 0B46     	 mov r3,r1
 852 0552 1046     	 mov r0,r2
 853 0554 1946     	 mov r1,r3
 854 0556 FFF7FEFF 	 bl __aeabi_d2uiz
 855 055a 0346     	 mov r3,r0
 856 055c 9BB2     	 uxth r3,r3
 857 055e 2B44     	 add r3,r3,r5
 858 0560 9AB2     	 uxth r2,r3
 859 0562 97F86930 	 ldrb r3,[r7,#105]
 860 0566 9BB2     	 uxth r3,r3
 861 0568 1344     	 add r3,r3,r2
 862 056a 9BB2     	 uxth r3,r3
 863 056c 9EB2     	 uxth r6,r3
 864 056e 7A88     	 ldrh r2,[r7,#2]
 865 0570 B7F89830 	 ldrh r3,[r7,#152]
 866 0574 1344     	 add r3,r3,r2
 867 0576 9AB2     	 uxth r2,r3
 868 0578 97F86830 	 ldrb r3,[r7,#104]
 869 057c 9BB2     	 uxth r3,r3
 870 057e 1344     	 add r3,r3,r2
 871 0580 9BB2     	 uxth r3,r3
 872 0582 9DB2     	 uxth r5,r3
 873 0584 D7E91201 	 ldrd r0,[r7,#72]
 874 0588 FFF7FEFF 	 bl __aeabi_d2iz
 875 058c 0146     	 mov r1,r0
 876 058e 32B2     	 sxth r2,r6
 877 0590 2BB2     	 sxth r3,r5
 878 0592 0091     	 str r1,[sp]
 879 0594 1046     	 mov r0,r2
 880 0596 1946     	 mov r1,r3
 881 0598 1422     	 movs r2,#20
 882 059a 0023     	 movs r3,#0
 883 059c A047     	 blx r4
 884 059e 45E0     	 b .L9
 885              	.L18:
 886              	.LBB6:
 224:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 225:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 226:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 227:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 887              	 .loc 1 227 0
 888 05a0 07F10803 	 add r3,r7,#8
 889 05a4 1846     	 mov r0,r3
 890 05a6 6649     	 ldr r1,.L22+4
 891 05a8 D7E91223 	 ldrd r2,[r7,#72]
 892 05ac FFF7FEFF 	 bl sprintf
 228:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_gri
 893              	 .loc 1 228 0
 894 05b0 FB79     	 ldrb r3,[r7,#7]
 895 05b2 9B00     	 lsls r3,r3,#2
 896 05b4 07F18002 	 add r2,r7,#128
 897 05b8 1344     	 add r3,r3,r2
 898 05ba 53F8504C 	 ldr r4,[r3,#-80]
 899 05be BA88     	 ldrh r2,[r7,#4]
 900 05c0 B7F89C30 	 ldrh r3,[r7,#156]
 901 05c4 1344     	 add r3,r3,r2
 902 05c6 9DB2     	 uxth r5,r3
 903 05c8 7B6F     	 ldr r3,[r7,#116]
 904 05ca 013B     	 subs r3,r3,#1
 905 05cc 1846     	 mov r0,r3
 906 05ce FFF7FEFF 	 bl __aeabi_i2d
 907 05d2 0246     	 mov r2,r0
 908 05d4 0B46     	 mov r3,r1
 909 05d6 1046     	 mov r0,r2
 910 05d8 1946     	 mov r1,r3
 911 05da D7E91623 	 ldrd r2,[r7,#88]
 912 05de FFF7FEFF 	 bl __aeabi_dmul
 913 05e2 0246     	 mov r2,r0
 914 05e4 0B46     	 mov r3,r1
 915 05e6 1046     	 mov r0,r2
 916 05e8 1946     	 mov r1,r3
 917 05ea FFF7FEFF 	 bl __aeabi_d2uiz
 918 05ee 0346     	 mov r3,r0
 919 05f0 9BB2     	 uxth r3,r3
 920 05f2 2B44     	 add r3,r3,r5
 921 05f4 9AB2     	 uxth r2,r3
 922 05f6 97F86930 	 ldrb r3,[r7,#105]
 923 05fa 9BB2     	 uxth r3,r3
 924 05fc 1344     	 add r3,r3,r2
 925 05fe 9BB2     	 uxth r3,r3
 926 0600 99B2     	 uxth r1,r3
 927 0602 7A88     	 ldrh r2,[r7,#2]
 928 0604 B7F89830 	 ldrh r3,[r7,#152]
 929 0608 1344     	 add r3,r3,r2
 930 060a 9AB2     	 uxth r2,r3
 931 060c 97F86830 	 ldrb r3,[r7,#104]
 932 0610 9BB2     	 uxth r3,r3
 933 0612 1344     	 add r3,r3,r2
 934 0614 9BB2     	 uxth r3,r3
 935 0616 9BB2     	 uxth r3,r3
 936 0618 09B2     	 sxth r1,r1
 937 061a 1AB2     	 sxth r2,r3
 938 061c 07F10803 	 add r3,r7,#8
 939 0620 0093     	 str r3,[sp]
 940 0622 0846     	 mov r0,r1
 941 0624 1146     	 mov r1,r2
 942 0626 1422     	 movs r2,#20
 943 0628 0023     	 movs r3,#0
 944 062a A047     	 blx r4
 945              	.L9:
 946              	.LBE6:
 947              	.LBE5:
 217:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 948              	 .loc 1 217 0 discriminator 2
 949 062c 7B6F     	 ldr r3,[r7,#116]
 950 062e 0133     	 adds r3,r3,#1
 951 0630 7B67     	 str r3,[r7,#116]
 952              	.L6:
 217:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 953              	 .loc 1 217 0 is_stmt 0 discriminator 1
 954 0632 D7E92E01 	 ldrd r0,[r7,#184]
 955 0636 FFF7FEFF 	 bl ceil
 956 063a 0246     	 mov r2,r0
 957 063c 0B46     	 mov r3,r1
 958 063e 1046     	 mov r0,r2
 959 0640 1946     	 mov r1,r3
 960 0642 FFF7FEFF 	 bl __aeabi_d2iz
 961 0646 0246     	 mov r2,r0
 962 0648 7B6F     	 ldr r3,[r7,#116]
 963 064a 9A42     	 cmp r2,r3
 964 064c BFF632AF 	 bge .L10
 965              	.LBE4:
 966              	.LBB7:
 229:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 230:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 231:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid (amplitude)
 232:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 233:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){  // "floor" and "i" at val -> don't print the 0 va
 967              	 .loc 1 233 0 is_stmt 1
 968 0650 0123     	 movs r3,#1
 969 0652 3B67     	 str r3,[r7,#112]
 970 0654 BDE0     	 b .L11
 971              	.L15:
 972              	.LBB8:
 234:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 235:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (amp_max/h_grid_lines*(double)i);
 973              	 .loc 1 235 0
 974 0656 D7E92801 	 ldrd r0,[r7,#160]
 975 065a D7E92C23 	 ldrd r2,[r7,#176]
 976 065e FFF7FEFF 	 bl __aeabi_ddiv
 977 0662 0246     	 mov r2,r0
 978 0664 0B46     	 mov r3,r1
 979 0666 1446     	 mov r4,r2
 980 0668 1D46     	 mov r5,r3
 981 066a 386F     	 ldr r0,[r7,#112]
 982 066c FFF7FEFF 	 bl __aeabi_i2d
 983 0670 0246     	 mov r2,r0
 984 0672 0B46     	 mov r3,r1
 985 0674 2046     	 mov r0,r4
 986 0676 2946     	 mov r1,r5
 987 0678 FFF7FEFF 	 bl __aeabi_dmul
 988 067c 0246     	 mov r2,r0
 989 067e 0B46     	 mov r3,r1
 990 0680 C7E91023 	 strd r2,[r7,#64]
 236:../Libraries/FT800-FT813-5.x/tft.c **** 
 237:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 238:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 991              	 .loc 1 238 0
 992 0684 D7E91001 	 ldrd r0,[r7,#64]
 993 0688 FFF7FEFF 	 bl __aeabi_d2uiz
 994 068c 0346     	 mov r3,r0
 995 068e 1846     	 mov r0,r3
 996 0690 FFF7FEFF 	 bl __aeabi_ui2d
 997 0694 0246     	 mov r2,r0
 998 0696 0B46     	 mov r3,r1
 999 0698 D7E91001 	 ldrd r0,[r7,#64]
 1000 069c FFF7FEFF 	 bl __aeabi_dsub
 1001 06a0 0246     	 mov r2,r0
 1002 06a2 0B46     	 mov r3,r1
 1003 06a4 1046     	 mov r0,r2
 1004 06a6 1946     	 mov r1,r3
 1005 06a8 4FF00002 	 mov r2,#0
 1006 06ac 4FF00003 	 mov r3,#0
 1007 06b0 FFF7FEFF 	 bl __aeabi_dcmpeq
 1008 06b4 0346     	 mov r3,r0
 1009 06b6 002B     	 cmp r3,#0
 1010 06b8 44D0     	 beq .L19
 239:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(heig
 1011              	 .loc 1 239 0
 1012 06ba FB79     	 ldrb r3,[r7,#7]
 1013 06bc 9B00     	 lsls r3,r3,#2
 1014 06be 07F18002 	 add r2,r7,#128
 1015 06c2 1344     	 add r3,r3,r2
 1016 06c4 53F8584C 	 ldr r4,[r3,#-88]
 1017 06c8 97F86730 	 ldrb r3,[r7,#103]
 1018 06cc 9BB2     	 uxth r3,r3
 1019 06ce BA88     	 ldrh r2,[r7,#4]
 1020 06d0 D31A     	 subs r3,r2,r3
 1021 06d2 9BB2     	 uxth r3,r3
 1022 06d4 9EB2     	 uxth r6,r3
 1023 06d6 7A88     	 ldrh r2,[r7,#2]
 1024 06d8 B7F89C30 	 ldrh r3,[r7,#156]
 1025 06dc 1344     	 add r3,r3,r2
 1026 06de 9AB2     	 uxth r2,r3
 1027 06e0 B7F89830 	 ldrh r3,[r7,#152]
 1028 06e4 1344     	 add r3,r3,r2
 1029 06e6 9DB2     	 uxth r5,r3
 1030 06e8 386F     	 ldr r0,[r7,#112]
 1031 06ea FFF7FEFF 	 bl __aeabi_i2d
 1032 06ee 0246     	 mov r2,r0
 1033 06f0 0B46     	 mov r3,r1
 1034 06f2 1046     	 mov r0,r2
 1035 06f4 1946     	 mov r1,r3
 1036 06f6 D7E91423 	 ldrd r2,[r7,#80]
 1037 06fa FFF7FEFF 	 bl __aeabi_dmul
 1038 06fe 0246     	 mov r2,r0
 1039 0700 0B46     	 mov r3,r1
 1040 0702 1046     	 mov r0,r2
 1041 0704 1946     	 mov r1,r3
 1042 0706 FFF7FEFF 	 bl __aeabi_d2uiz
 1043 070a 0346     	 mov r3,r0
 1044 070c 9BB2     	 uxth r3,r3
 1045 070e EB1A     	 subs r3,r5,r3
 1046 0710 9AB2     	 uxth r2,r3
 1047 0712 97F86630 	 ldrb r3,[r7,#102]
 1048 0716 9BB2     	 uxth r3,r3
 1049 0718 1344     	 add r3,r3,r2
 1050 071a 9BB2     	 uxth r3,r3
 1051 071c 9DB2     	 uxth r5,r3
 1052 071e D7E91001 	 ldrd r0,[r7,#64]
 1053 0722 FFF7FEFF 	 bl __aeabi_d2iz
 1054 0726 0146     	 mov r1,r0
 1055 0728 32B2     	 sxth r2,r6
 1056 072a 2BB2     	 sxth r3,r5
 1057 072c 0091     	 str r1,[sp]
 1058 072e 1046     	 mov r0,r2
 1059 0730 1946     	 mov r1,r3
 1060 0732 1422     	 movs r2,#20
 1061 0734 0023     	 movs r3,#0
 1062 0736 A047     	 blx r4
 1063 0738 48E0     	 b .L14
 1064              	.L23:
 1065 073a 00BF     	 .align 2
 1066              	.L22:
 1067 073c 0B1E3B04 	 .word 70983179
 1068 0740 08000000 	 .word .LC5
 1069              	.L19:
 1070              	.LBB9:
 240:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 241:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 242:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 243:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 1071              	 .loc 1 243 0
 1072 0744 07F10803 	 add r3,r7,#8
 1073 0748 1846     	 mov r0,r3
 1074 074a 9C49     	 ldr r1,.L24
 1075 074c D7E91023 	 ldrd r2,[r7,#64]
 1076 0750 FFF7FEFF 	 bl sprintf
 244:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(height
 1077              	 .loc 1 244 0
 1078 0754 FB79     	 ldrb r3,[r7,#7]
 1079 0756 9B00     	 lsls r3,r3,#2
 1080 0758 07F18002 	 add r2,r7,#128
 1081 075c 1344     	 add r3,r3,r2
 1082 075e 53F8504C 	 ldr r4,[r3,#-80]
 1083 0762 97F86730 	 ldrb r3,[r7,#103]
 1084 0766 9BB2     	 uxth r3,r3
 1085 0768 BA88     	 ldrh r2,[r7,#4]
 1086 076a D31A     	 subs r3,r2,r3
 1087 076c 9BB2     	 uxth r3,r3
 1088 076e 9EB2     	 uxth r6,r3
 1089 0770 7A88     	 ldrh r2,[r7,#2]
 1090 0772 B7F89C30 	 ldrh r3,[r7,#156]
 1091 0776 1344     	 add r3,r3,r2
 1092 0778 9AB2     	 uxth r2,r3
 1093 077a B7F89830 	 ldrh r3,[r7,#152]
 1094 077e 1344     	 add r3,r3,r2
 1095 0780 9DB2     	 uxth r5,r3
 1096 0782 386F     	 ldr r0,[r7,#112]
 1097 0784 FFF7FEFF 	 bl __aeabi_i2d
 1098 0788 0246     	 mov r2,r0
 1099 078a 0B46     	 mov r3,r1
 1100 078c 1046     	 mov r0,r2
 1101 078e 1946     	 mov r1,r3
 1102 0790 D7E91423 	 ldrd r2,[r7,#80]
 1103 0794 FFF7FEFF 	 bl __aeabi_dmul
 1104 0798 0246     	 mov r2,r0
 1105 079a 0B46     	 mov r3,r1
 1106 079c 1046     	 mov r0,r2
 1107 079e 1946     	 mov r1,r3
 1108 07a0 FFF7FEFF 	 bl __aeabi_d2uiz
 1109 07a4 0346     	 mov r3,r0
 1110 07a6 9BB2     	 uxth r3,r3
 1111 07a8 EB1A     	 subs r3,r5,r3
 1112 07aa 9AB2     	 uxth r2,r3
 1113 07ac 97F86630 	 ldrb r3,[r7,#102]
 1114 07b0 9BB2     	 uxth r3,r3
 1115 07b2 1344     	 add r3,r3,r2
 1116 07b4 9BB2     	 uxth r3,r3
 1117 07b6 9BB2     	 uxth r3,r3
 1118 07b8 31B2     	 sxth r1,r6
 1119 07ba 1AB2     	 sxth r2,r3
 1120 07bc 07F10803 	 add r3,r7,#8
 1121 07c0 0093     	 str r3,[sp]
 1122 07c2 0846     	 mov r0,r1
 1123 07c4 1146     	 mov r1,r2
 1124 07c6 1422     	 movs r2,#20
 1125 07c8 0023     	 movs r3,#0
 1126 07ca A047     	 blx r4
 1127              	.L14:
 1128              	.LBE9:
 1129              	.LBE8:
 233:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1130              	 .loc 1 233 0 discriminator 2
 1131 07cc 3B6F     	 ldr r3,[r7,#112]
 1132 07ce 0133     	 adds r3,r3,#1
 1133 07d0 3B67     	 str r3,[r7,#112]
 1134              	.L11:
 233:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1135              	 .loc 1 233 0 is_stmt 0 discriminator 1
 1136 07d2 D7E92C01 	 ldrd r0,[r7,#176]
 1137 07d6 FFF7FEFF 	 bl floor
 1138 07da 0246     	 mov r2,r0
 1139 07dc 0B46     	 mov r3,r1
 1140 07de 1046     	 mov r0,r2
 1141 07e0 1946     	 mov r1,r3
 1142 07e2 FFF7FEFF 	 bl __aeabi_d2iz
 1143 07e6 0246     	 mov r2,r0
 1144 07e8 3B6F     	 ldr r3,[r7,#112]
 1145 07ea 9A42     	 cmp r2,r3
 1146 07ec BFF633AF 	 bge .L15
 1147              	.LBE7:
 245:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 246:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 247:../Libraries/FT800-FT813-5.x/tft.c **** 
 248:../Libraries/FT800-FT813-5.x/tft.c **** 	/// ARROWS on axes
 249:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 250:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom vertical arrow (Amplitude)
 251:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1148              	 .loc 1 251 0 is_stmt 1
 1149 07f0 FB79     	 ldrb r3,[r7,#7]
 1150 07f2 9B00     	 lsls r3,r3,#2
 1151 07f4 07F18002 	 add r2,r7,#128
 1152 07f8 1344     	 add r3,r3,r2
 1153 07fa 53F8483C 	 ldr r3,[r3,#-72]
 1154 07fe 7048     	 ldr r0,.L24+4
 1155 0800 9847     	 blx r3
 252:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + arrow_offset, y + arrow_offset ));
 1156              	 .loc 1 252 0
 1157 0802 FB79     	 ldrb r3,[r7,#7]
 1158 0804 9B00     	 lsls r3,r3,#2
 1159 0806 07F18002 	 add r2,r7,#128
 1160 080a 1344     	 add r3,r3,r2
 1161 080c 53F8483C 	 ldr r3,[r3,#-72]
 1162 0810 B988     	 ldrh r1,[r7,#4]
 1163 0812 B7F89C20 	 ldrh r2,[r7,#156]
 1164 0816 1144     	 add r1,r1,r2
 1165 0818 97F86F20 	 ldrb r2,[r7,#111]
 1166 081c 0A44     	 add r2,r2,r1
 1167 081e C2F30E02 	 ubfx r2,r2,#0,#15
 1168 0822 D103     	 lsls r1,r2,#15
 1169 0824 7888     	 ldrh r0,[r7,#2]
 1170 0826 97F86F20 	 ldrb r2,[r7,#111]
 1171 082a 0244     	 add r2,r2,r0
 1172 082c C2F30E02 	 ubfx r2,r2,#0,#15
 1173 0830 0A43     	 orrs r2,r2,r1
 1174 0832 42F08042 	 orr r2,r2,#1073741824
 1175 0836 1046     	 mov r0,r2
 1176 0838 9847     	 blx r3
 253:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding               , y                ));
 1177              	 .loc 1 253 0
 1178 083a FB79     	 ldrb r3,[r7,#7]
 1179 083c 9B00     	 lsls r3,r3,#2
 1180 083e 07F18002 	 add r2,r7,#128
 1181 0842 1344     	 add r3,r3,r2
 1182 0844 53F8483C 	 ldr r3,[r3,#-72]
 1183 0848 B988     	 ldrh r1,[r7,#4]
 1184 084a B7F89C20 	 ldrh r2,[r7,#156]
 1185 084e 0A44     	 add r2,r2,r1
 1186 0850 C2F30E02 	 ubfx r2,r2,#0,#15
 1187 0854 D103     	 lsls r1,r2,#15
 1188 0856 7A88     	 ldrh r2,[r7,#2]
 1189 0858 C2F30E02 	 ubfx r2,r2,#0,#15
 1190 085c 0A43     	 orrs r2,r2,r1
 1191 085e 42F08042 	 orr r2,r2,#1073741824
 1192 0862 1046     	 mov r0,r2
 1193 0864 9847     	 blx r3
 254:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding - arrow_offset, y + arrow_offset ));
 1194              	 .loc 1 254 0
 1195 0866 FB79     	 ldrb r3,[r7,#7]
 1196 0868 9B00     	 lsls r3,r3,#2
 1197 086a 07F18002 	 add r2,r7,#128
 1198 086e 1344     	 add r3,r3,r2
 1199 0870 53F8483C 	 ldr r3,[r3,#-72]
 1200 0874 B988     	 ldrh r1,[r7,#4]
 1201 0876 B7F89C20 	 ldrh r2,[r7,#156]
 1202 087a 1144     	 add r1,r1,r2
 1203 087c 97F86F20 	 ldrb r2,[r7,#111]
 1204 0880 8A1A     	 subs r2,r1,r2
 1205 0882 C2F30E02 	 ubfx r2,r2,#0,#15
 1206 0886 D103     	 lsls r1,r2,#15
 1207 0888 7888     	 ldrh r0,[r7,#2]
 1208 088a 97F86F20 	 ldrb r2,[r7,#111]
 1209 088e 0244     	 add r2,r2,r0
 1210 0890 C2F30E02 	 ubfx r2,r2,#0,#15
 1211 0894 0A43     	 orrs r2,r2,r1
 1212 0896 42F08042 	 orr r2,r2,#1073741824
 1213 089a 1046     	 mov r0,r2
 1214 089c 9847     	 blx r3
 255:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1215              	 .loc 1 255 0
 1216 089e FB79     	 ldrb r3,[r7,#7]
 1217 08a0 9B00     	 lsls r3,r3,#2
 1218 08a2 07F18002 	 add r2,r7,#128
 1219 08a6 1344     	 add r3,r3,r2
 1220 08a8 53F8483C 	 ldr r3,[r3,#-72]
 1221 08ac 4FF00450 	 mov r0,#553648128
 1222 08b0 9847     	 blx r3
 256:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal arrow (Time)
 257:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1223              	 .loc 1 257 0
 1224 08b2 FB79     	 ldrb r3,[r7,#7]
 1225 08b4 9B00     	 lsls r3,r3,#2
 1226 08b6 07F18002 	 add r2,r7,#128
 1227 08ba 1344     	 add r3,r3,r2
 1228 08bc 53F8483C 	 ldr r3,[r3,#-72]
 1229 08c0 3F48     	 ldr r0,.L24+4
 1230 08c2 9847     	 blx r3
 258:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1231              	 .loc 1 258 0
 1232 08c4 FB79     	 ldrb r3,[r7,#7]
 1233 08c6 9B00     	 lsls r3,r3,#2
 1234 08c8 07F18002 	 add r2,r7,#128
 1235 08cc 1344     	 add r3,r3,r2
 1236 08ce 53F8483C 	 ldr r3,[r3,#-72]
 1237 08d2 B988     	 ldrh r1,[r7,#4]
 1238 08d4 B7F89C20 	 ldrh r2,[r7,#156]
 1239 08d8 1144     	 add r1,r1,r2
 1240 08da 3A88     	 ldrh r2,[r7]
 1241 08dc 1144     	 add r1,r1,r2
 1242 08de B7F89C20 	 ldrh r2,[r7,#156]
 1243 08e2 1144     	 add r1,r1,r2
 1244 08e4 97F86F20 	 ldrb r2,[r7,#111]
 1245 08e8 8A1A     	 subs r2,r1,r2
 1246 08ea C2F30E02 	 ubfx r2,r2,#0,#15
 1247 08ee D103     	 lsls r1,r2,#15
 1248 08f0 7888     	 ldrh r0,[r7,#2]
 1249 08f2 B7F89C20 	 ldrh r2,[r7,#156]
 1250 08f6 1044     	 add r0,r0,r2
 1251 08f8 B7F89820 	 ldrh r2,[r7,#152]
 1252 08fc 1044     	 add r0,r0,r2
 1253 08fe 97F86F20 	 ldrb r2,[r7,#111]
 1254 0902 0244     	 add r2,r2,r0
 1255 0904 C2F30E02 	 ubfx r2,r2,#0,#15
 1256 0908 0A43     	 orrs r2,r2,r1
 1257 090a 42F08042 	 orr r2,r2,#1073741824
 1258 090e 1046     	 mov r0,r2
 1259 0910 9847     	 blx r3
 259:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding               , y + padding 
 1260              	 .loc 1 259 0
 1261 0912 FB79     	 ldrb r3,[r7,#7]
 1262 0914 9B00     	 lsls r3,r3,#2
 1263 0916 07F18002 	 add r2,r7,#128
 1264 091a 1344     	 add r3,r3,r2
 1265 091c 53F8483C 	 ldr r3,[r3,#-72]
 1266 0920 B988     	 ldrh r1,[r7,#4]
 1267 0922 B7F89C20 	 ldrh r2,[r7,#156]
 1268 0926 1144     	 add r1,r1,r2
 1269 0928 3A88     	 ldrh r2,[r7]
 1270 092a 1144     	 add r1,r1,r2
 1271 092c B7F89C20 	 ldrh r2,[r7,#156]
 1272 0930 0A44     	 add r2,r2,r1
 1273 0932 C2F30E02 	 ubfx r2,r2,#0,#15
 1274 0936 D103     	 lsls r1,r2,#15
 1275 0938 7888     	 ldrh r0,[r7,#2]
 1276 093a B7F89C20 	 ldrh r2,[r7,#156]
 1277 093e 1044     	 add r0,r0,r2
 1278 0940 B7F89820 	 ldrh r2,[r7,#152]
 1279 0944 0244     	 add r2,r2,r0
 1280 0946 C2F30E02 	 ubfx r2,r2,#0,#15
 1281 094a 0A43     	 orrs r2,r2,r1
 1282 094c 42F08042 	 orr r2,r2,#1073741824
 1283 0950 1046     	 mov r0,r2
 1284 0952 9847     	 blx r3
 260:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1285              	 .loc 1 260 0
 1286 0954 FB79     	 ldrb r3,[r7,#7]
 1287 0956 9B00     	 lsls r3,r3,#2
 1288 0958 07F18002 	 add r2,r7,#128
 1289 095c 1344     	 add r3,r3,r2
 1290 095e 53F8483C 	 ldr r3,[r3,#-72]
 1291 0962 B988     	 ldrh r1,[r7,#4]
 1292 0964 B7F89C20 	 ldrh r2,[r7,#156]
 1293 0968 1144     	 add r1,r1,r2
 1294 096a 3A88     	 ldrh r2,[r7]
 1295 096c 1144     	 add r1,r1,r2
 1296 096e B7F89C20 	 ldrh r2,[r7,#156]
 1297 0972 1144     	 add r1,r1,r2
 1298 0974 97F86F20 	 ldrb r2,[r7,#111]
 1299 0978 8A1A     	 subs r2,r1,r2
 1300 097a C2F30E02 	 ubfx r2,r2,#0,#15
 1301 097e D103     	 lsls r1,r2,#15
 1302 0980 7888     	 ldrh r0,[r7,#2]
 1303 0982 B7F89C20 	 ldrh r2,[r7,#156]
 1304 0986 1044     	 add r0,r0,r2
 1305 0988 B7F89820 	 ldrh r2,[r7,#152]
 1306 098c 1044     	 add r0,r0,r2
 1307 098e 97F86F20 	 ldrb r2,[r7,#111]
 1308 0992 821A     	 subs r2,r0,r2
 1309 0994 C2F30E02 	 ubfx r2,r2,#0,#15
 1310 0998 0A43     	 orrs r2,r2,r1
 1311 099a 42F08042 	 orr r2,r2,#1073741824
 1312 099e 1046     	 mov r0,r2
 1313 09a0 9847     	 blx r3
 261:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1314              	 .loc 1 261 0
 1315 09a2 FB79     	 ldrb r3,[r7,#7]
 1316 09a4 9B00     	 lsls r3,r3,#2
 1317 09a6 07F18002 	 add r2,r7,#128
 1318 09aa 1344     	 add r3,r3,r2
 1319 09ac 53F8483C 	 ldr r3,[r3,#-72]
 1320 09b0 4FF00450 	 mov r0,#553648128
 1321 09b4 9847     	 blx r3
 262:../Libraries/FT800-FT813-5.x/tft.c **** 
 263:../Libraries/FT800-FT813-5.x/tft.c **** }
 1322              	 .loc 1 263 0
 1323 09b6 8437     	 adds r7,r7,#132
 1324              	.LCFI3:
 1325              	 .cfi_def_cfa_offset 20
 1326 09b8 BD46     	 mov sp,r7
 1327              	.LCFI4:
 1328              	 .cfi_def_cfa_register 13
 1329              	 
 1330 09ba F0BD     	 pop {r4,r5,r6,r7,pc}
 1331              	.L25:
 1332              	 .align 2
 1333              	.L24:
 1334 09bc 08000000 	 .word .LC5
 1335 09c0 0400001F 	 .word 520093700
 1336              	 .cfi_endproc
 1337              	.LFE446:
 1339              	 .section .text.TFT_GraphData,"ax",%progbits
 1340              	 .align 2
 1341              	 .global TFT_GraphData
 1342              	 .thumb
 1343              	 .thumb_func
 1345              	TFT_GraphData:
 1346              	.LFB447:
 264:../Libraries/FT800-FT813-5.x/tft.c **** 
 265:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphData(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t padding, doubl
 1347              	 .loc 1 265 0
 1348              	 .cfi_startproc
 1349              	 
 1350              	 
 1351 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 1352              	.LCFI5:
 1353              	 .cfi_def_cfa_offset 24
 1354              	 .cfi_offset 4,-24
 1355              	 .cfi_offset 5,-20
 1356              	 .cfi_offset 7,-16
 1357              	 .cfi_offset 8,-12
 1358              	 .cfi_offset 9,-8
 1359              	 .cfi_offset 14,-4
 1360 0004 84B0     	 sub sp,sp,#16
 1361              	.LCFI6:
 1362              	 .cfi_def_cfa_offset 40
 1363 0006 00AF     	 add r7,sp,#0
 1364              	.LCFI7:
 1365              	 .cfi_def_cfa_register 7
 1366 0008 0446     	 mov r4,r0
 1367 000a 0846     	 mov r0,r1
 1368 000c 1146     	 mov r1,r2
 1369 000e 1A46     	 mov r2,r3
 1370 0010 2346     	 mov r3,r4
 1371 0012 FB80     	 strh r3,[r7,#6]
 1372 0014 0346     	 mov r3,r0
 1373 0016 BB80     	 strh r3,[r7,#4]
 1374 0018 0B46     	 mov r3,r1
 1375 001a 7B80     	 strh r3,[r7,#2]
 1376 001c 1346     	 mov r3,r2
 1377 001e 3B80     	 strh r3,[r7]
 266:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the dynamic parts of an Graph to the TFT (data and markers). Used at recurring display l
 267:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 268:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 269:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 270:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 271:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 272:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding	...	clearance from the outer corners (x,y) to the axes
 273:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y_max   ... maximum expected value of input (e.g. for 12bit ADC 4095), will represent 100%
 274:../Libraries/FT800-FT813-5.x/tft.c **** 	///  SBuffer[] 		...	Array of data values
 275:../Libraries/FT800-FT813-5.x/tft.c **** 	///  size	 		... size of array of data values
 276:../Libraries/FT800-FT813-5.x/tft.c **** 	///  *SBuffer_curidx ... current position (index of most recent value)
 277:../Libraries/FT800-FT813-5.x/tft.c **** 	///  graphmode 		... 0 = frame-mode, 1 = roll-mode
 278:../Libraries/FT800-FT813-5.x/tft.c **** 	///  datacolor 		... 24bit color (as 32 bit integer with leading 0's) used for the dataline
 279:../Libraries/FT800-FT813-5.x/tft.c **** 	///  markercolor		... 24bit color (as 32 bit integer with leading 0's) used for the current positi
 280:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: No predefined graph settings are used direct (#define ...)!
 281:../Libraries/FT800-FT813-5.x/tft.c **** 
 282:../Libraries/FT800-FT813-5.x/tft.c **** 
 283:../Libraries/FT800-FT813-5.x/tft.c **** 
 284:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display current DATA as line strip in frame or roll mode
 285:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | datacolor);
 1378              	 .loc 1 285 0
 1379 0020 BB6C     	 ldr r3,[r7,#72]
 1380 0022 43F08063 	 orr r3,r3,#67108864
 1381 0026 1846     	 mov r0,r3
 1382 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 286:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1383              	 .loc 1 286 0
 1384 002c 7748     	 ldr r0,.L35
 1385 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 287:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph frame-mode
 288:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1386              	 .loc 1 288 0
 1387 0032 97F84430 	 ldrb r3,[r7,#68]
 1388 0036 002B     	 cmp r3,#0
 1389 0038 46D1     	 bne .L27
 1390              	.LBB10:
 289:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print values in the order they are stored
 290:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int x_cur = 0; x_cur < size; ++x_cur) {
 1391              	 .loc 1 290 0
 1392 003a 0023     	 movs r3,#0
 1393 003c FB60     	 str r3,[r7,#12]
 1394 003e 3EE0     	 b .L28
 1395              	.L29:
 291:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1396              	 .loc 1 291 0 discriminator 3
 1397 0040 FA88     	 ldrh r2,[r7,#6]
 1398 0042 3B8D     	 ldrh r3,[r7,#40]
 1399 0044 1A44     	 add r2,r2,r3
 1400 0046 FB68     	 ldr r3,[r7,#12]
 1401 0048 1344     	 add r3,r3,r2
 1402 004a C3F30E03 	 ubfx r3,r3,#0,#15
 1403 004e DC03     	 lsls r4,r3,#15
 1404 0050 BA88     	 ldrh r2,[r7,#4]
 1405 0052 3B8D     	 ldrh r3,[r7,#40]
 1406 0054 1A44     	 add r2,r2,r3
 1407 0056 3B88     	 ldrh r3,[r7]
 1408 0058 D518     	 adds r5,r2,r3
 1409 005a FB68     	 ldr r3,[r7,#12]
 1410 005c 5B00     	 lsls r3,r3,#1
 1411 005e BA6B     	 ldr r2,[r7,#56]
 1412 0060 1344     	 add r3,r3,r2
 1413 0062 1B88     	 ldrh r3,[r3]
 1414 0064 1846     	 mov r0,r3
 1415 0066 FFF7FEFF 	 bl __aeabi_ui2d
 1416 006a 0246     	 mov r2,r0
 1417 006c 0B46     	 mov r3,r1
 1418 006e 1046     	 mov r0,r2
 1419 0070 1946     	 mov r1,r3
 1420 0072 D7E90C23 	 ldrd r2,[r7,#48]
 1421 0076 FFF7FEFF 	 bl __aeabi_ddiv
 1422 007a 0246     	 mov r2,r0
 1423 007c 0B46     	 mov r3,r1
 1424 007e 9046     	 mov r8,r2
 1425 0080 9946     	 mov r9,r3
 1426 0082 3B88     	 ldrh r3,[r7]
 1427 0084 1846     	 mov r0,r3
 1428 0086 FFF7FEFF 	 bl __aeabi_ui2d
 1429 008a 0246     	 mov r2,r0
 1430 008c 0B46     	 mov r3,r1
 1431 008e 4046     	 mov r0,r8
 1432 0090 4946     	 mov r1,r9
 1433 0092 FFF7FEFF 	 bl __aeabi_dmul
 1434 0096 0246     	 mov r2,r0
 1435 0098 0B46     	 mov r3,r1
 1436 009a 1046     	 mov r0,r2
 1437 009c 1946     	 mov r1,r3
 1438 009e FFF7FEFF 	 bl __aeabi_d2uiz
 1439 00a2 0346     	 mov r3,r0
 1440 00a4 9BB2     	 uxth r3,r3
 1441 00a6 EB1A     	 subs r3,r5,r3
 1442 00a8 C3F30E03 	 ubfx r3,r3,#0,#15
 1443 00ac 2343     	 orrs r3,r3,r4
 1444 00ae 43F08043 	 orr r3,r3,#1073741824
 1445 00b2 1846     	 mov r0,r3
 1446 00b4 FFF7FEFF 	 bl EVE_cmd_dl_burst
 290:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1447              	 .loc 1 290 0 discriminator 3
 1448 00b8 FB68     	 ldr r3,[r7,#12]
 1449 00ba 0133     	 adds r3,r3,#1
 1450 00bc FB60     	 str r3,[r7,#12]
 1451              	.L28:
 290:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1452              	 .loc 1 290 0 is_stmt 0 discriminator 1
 1453 00be BA8F     	 ldrh r2,[r7,#60]
 1454 00c0 FB68     	 ldr r3,[r7,#12]
 1455 00c2 9A42     	 cmp r2,r3
 1456 00c4 BCDC     	 bgt .L29
 1457              	.LBE10:
 1458 00c6 5BE0     	 b .L30
 1459              	.L27:
 1460              	.LBB11:
 292:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 293:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 294:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph roll-mode
 295:../Libraries/FT800-FT813-5.x/tft.c **** 	else {
 296:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print newest value always at the rightmost corner with all older values to the right
 297:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Display    x position at rightmost corner and decrement till 0 (last run will make it
 298:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Arrayindex i at current index and decrement every loop. If i goes below 0, reset to m
 299:../Libraries/FT800-FT813-5.x/tft.c **** 		//    value before current is hit.
 300:../Libraries/FT800-FT813-5.x/tft.c **** 
 301:../Libraries/FT800-FT813-5.x/tft.c **** 		int16_t i = *SBuffer_curidx;
 1461              	 .loc 1 301 0 is_stmt 1
 1462 00c8 3B6C     	 ldr r3,[r7,#64]
 1463 00ca 1B88     	 ldrh r3,[r3]
 1464 00cc 7B81     	 strh r3,[r7,#10]
 1465              	.LBB12:
 302:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int16_t x_cur = size-1; x_cur >= 0; x_cur--) {
 1466              	 .loc 1 302 0
 1467 00ce BB8F     	 ldrh r3,[r7,#60]
 1468 00d0 013B     	 subs r3,r3,#1
 1469 00d2 9BB2     	 uxth r3,r3
 1470 00d4 3B81     	 strh r3,[r7,#8]
 1471 00d6 4FE0     	 b .L31
 1472              	.L33:
 303:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 304:../Libraries/FT800-FT813-5.x/tft.c **** 			if(i < 0){i = size-1;}
 1473              	 .loc 1 304 0
 1474 00d8 B7F90A30 	 ldrsh r3,[r7,#10]
 1475 00dc 002B     	 cmp r3,#0
 1476 00de 03DA     	 bge .L32
 1477              	 .loc 1 304 0 is_stmt 0 discriminator 1
 1478 00e0 BB8F     	 ldrh r3,[r7,#60]
 1479 00e2 013B     	 subs r3,r3,#1
 1480 00e4 9BB2     	 uxth r3,r3
 1481 00e6 7B81     	 strh r3,[r7,#10]
 1482              	.L32:
 305:../Libraries/FT800-FT813-5.x/tft.c **** 
 306:../Libraries/FT800-FT813-5.x/tft.c **** 			// Send next point for EVE_LINE_STRIP at current x+padding and normalized buffer value
 307:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1483              	 .loc 1 307 0 is_stmt 1 discriminator 2
 1484 00e8 FA88     	 ldrh r2,[r7,#6]
 1485 00ea 3B8D     	 ldrh r3,[r7,#40]
 1486 00ec 1A44     	 add r2,r2,r3
 1487 00ee B7F90830 	 ldrsh r3,[r7,#8]
 1488 00f2 1344     	 add r3,r3,r2
 1489 00f4 C3F30E03 	 ubfx r3,r3,#0,#15
 1490 00f8 DC03     	 lsls r4,r3,#15
 1491 00fa BA88     	 ldrh r2,[r7,#4]
 1492 00fc 3B8D     	 ldrh r3,[r7,#40]
 1493 00fe 1A44     	 add r2,r2,r3
 1494 0100 3B88     	 ldrh r3,[r7]
 1495 0102 D518     	 adds r5,r2,r3
 1496 0104 B7F90A30 	 ldrsh r3,[r7,#10]
 1497 0108 5B00     	 lsls r3,r3,#1
 1498 010a BA6B     	 ldr r2,[r7,#56]
 1499 010c 1344     	 add r3,r3,r2
 1500 010e 1B88     	 ldrh r3,[r3]
 1501 0110 1846     	 mov r0,r3
 1502 0112 FFF7FEFF 	 bl __aeabi_ui2d
 1503 0116 0246     	 mov r2,r0
 1504 0118 0B46     	 mov r3,r1
 1505 011a 1046     	 mov r0,r2
 1506 011c 1946     	 mov r1,r3
 1507 011e D7E90C23 	 ldrd r2,[r7,#48]
 1508 0122 FFF7FEFF 	 bl __aeabi_ddiv
 1509 0126 0246     	 mov r2,r0
 1510 0128 0B46     	 mov r3,r1
 1511 012a 9046     	 mov r8,r2
 1512 012c 9946     	 mov r9,r3
 1513 012e 3B88     	 ldrh r3,[r7]
 1514 0130 1846     	 mov r0,r3
 1515 0132 FFF7FEFF 	 bl __aeabi_ui2d
 1516 0136 0246     	 mov r2,r0
 1517 0138 0B46     	 mov r3,r1
 1518 013a 4046     	 mov r0,r8
 1519 013c 4946     	 mov r1,r9
 1520 013e FFF7FEFF 	 bl __aeabi_dmul
 1521 0142 0246     	 mov r2,r0
 1522 0144 0B46     	 mov r3,r1
 1523 0146 1046     	 mov r0,r2
 1524 0148 1946     	 mov r1,r3
 1525 014a FFF7FEFF 	 bl __aeabi_d2uiz
 1526 014e 0346     	 mov r3,r0
 1527 0150 9BB2     	 uxth r3,r3
 1528 0152 EB1A     	 subs r3,r5,r3
 1529 0154 C3F30E03 	 ubfx r3,r3,#0,#15
 1530 0158 2343     	 orrs r3,r3,r4
 1531 015a 43F08043 	 orr r3,r3,#1073741824
 1532 015e 1846     	 mov r0,r3
 1533 0160 FFF7FEFF 	 bl EVE_cmd_dl_burst
 308:../Libraries/FT800-FT813-5.x/tft.c **** 
 309:../Libraries/FT800-FT813-5.x/tft.c **** 			// decrement index
 310:../Libraries/FT800-FT813-5.x/tft.c **** 			i--;
 1534              	 .loc 1 310 0 discriminator 2
 1535 0164 7B89     	 ldrh r3,[r7,#10]
 1536 0166 9BB2     	 uxth r3,r3
 1537 0168 013B     	 subs r3,r3,#1
 1538 016a 9BB2     	 uxth r3,r3
 1539 016c 7B81     	 strh r3,[r7,#10]
 302:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1540              	 .loc 1 302 0 discriminator 2
 1541 016e 3B89     	 ldrh r3,[r7,#8]
 1542 0170 9BB2     	 uxth r3,r3
 1543 0172 013B     	 subs r3,r3,#1
 1544 0174 9BB2     	 uxth r3,r3
 1545 0176 3B81     	 strh r3,[r7,#8]
 1546              	.L31:
 302:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1547              	 .loc 1 302 0 is_stmt 0 discriminator 1
 1548 0178 B7F90830 	 ldrsh r3,[r7,#8]
 1549 017c 002B     	 cmp r3,#0
 1550 017e ABDA     	 bge .L33
 1551              	.L30:
 1552              	.LBE12:
 1553              	.LBE11:
 311:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 312:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 313:../Libraries/FT800-FT813-5.x/tft.c **** 	// End EVE_LINE_STRIP and therefore DATA
 314:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_END);
 1554              	 .loc 1 314 0 is_stmt 1
 1555 0180 4FF00450 	 mov r0,#553648128
 1556 0184 FFF7FEFF 	 bl EVE_cmd_dl_burst
 315:../Libraries/FT800-FT813-5.x/tft.c **** 
 316:../Libraries/FT800-FT813-5.x/tft.c **** 
 317:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw current POSITION MARKER in frame mode
 318:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1557              	 .loc 1 318 0
 1558 0188 97F84430 	 ldrb r3,[r7,#68]
 1559 018c 002B     	 cmp r3,#0
 1560 018e 38D1     	 bne .L26
 319:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_COLOR_RGB | markercolor);
 1561              	 .loc 1 319 0
 1562 0190 FB6C     	 ldr r3,[r7,#76]
 1563 0192 43F08063 	 orr r3,r3,#67108864
 1564 0196 1846     	 mov r0,r3
 1565 0198 FFF7FEFF 	 bl EVE_cmd_dl_burst
 320:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1566              	 .loc 1 320 0
 1567 019c 1B48     	 ldr r0,.L35
 1568 019e FFF7FEFF 	 bl EVE_cmd_dl_burst
 321:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding - 5 ));
 1569              	 .loc 1 321 0
 1570 01a2 FA88     	 ldrh r2,[r7,#6]
 1571 01a4 3B8D     	 ldrh r3,[r7,#40]
 1572 01a6 1344     	 add r3,r3,r2
 1573 01a8 3A6C     	 ldr r2,[r7,#64]
 1574 01aa 1288     	 ldrh r2,[r2]
 1575 01ac 1344     	 add r3,r3,r2
 1576 01ae C3F30E03 	 ubfx r3,r3,#0,#15
 1577 01b2 DA03     	 lsls r2,r3,#15
 1578 01b4 B988     	 ldrh r1,[r7,#4]
 1579 01b6 3B8D     	 ldrh r3,[r7,#40]
 1580 01b8 0B44     	 add r3,r3,r1
 1581 01ba 053B     	 subs r3,r3,#5
 1582 01bc C3F30E03 	 ubfx r3,r3,#0,#15
 1583 01c0 1343     	 orrs r3,r3,r2
 1584 01c2 43F08043 	 orr r3,r3,#1073741824
 1585 01c6 1846     	 mov r0,r3
 1586 01c8 FFF7FEFF 	 bl EVE_cmd_dl_burst
 322:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding + height + 5 ));
 1587              	 .loc 1 322 0
 1588 01cc FA88     	 ldrh r2,[r7,#6]
 1589 01ce 3B8D     	 ldrh r3,[r7,#40]
 1590 01d0 1344     	 add r3,r3,r2
 1591 01d2 3A6C     	 ldr r2,[r7,#64]
 1592 01d4 1288     	 ldrh r2,[r2]
 1593 01d6 1344     	 add r3,r3,r2
 1594 01d8 C3F30E03 	 ubfx r3,r3,#0,#15
 1595 01dc DA03     	 lsls r2,r3,#15
 1596 01de B988     	 ldrh r1,[r7,#4]
 1597 01e0 3B8D     	 ldrh r3,[r7,#40]
 1598 01e2 1944     	 add r1,r1,r3
 1599 01e4 3B88     	 ldrh r3,[r7]
 1600 01e6 0B44     	 add r3,r3,r1
 1601 01e8 0533     	 adds r3,r3,#5
 1602 01ea C3F30E03 	 ubfx r3,r3,#0,#15
 1603 01ee 1343     	 orrs r3,r3,r2
 1604 01f0 43F08043 	 orr r3,r3,#1073741824
 1605 01f4 1846     	 mov r0,r3
 1606 01f6 FFF7FEFF 	 bl EVE_cmd_dl_burst
 323:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1607              	 .loc 1 323 0
 1608 01fa 4FF00450 	 mov r0,#553648128
 1609 01fe FFF7FEFF 	 bl EVE_cmd_dl_burst
 1610              	.L26:
 324:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 325:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH END
 326:../Libraries/FT800-FT813-5.x/tft.c **** 
 327:../Libraries/FT800-FT813-5.x/tft.c **** }
 1611              	 .loc 1 327 0
 1612 0202 1037     	 adds r7,r7,#16
 1613              	.LCFI8:
 1614              	 .cfi_def_cfa_offset 24
 1615 0204 BD46     	 mov sp,r7
 1616              	.LCFI9:
 1617              	 .cfi_def_cfa_register 13
 1618              	 
 1619 0206 BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 1620              	.L36:
 1621 020a 00BF     	 .align 2
 1622              	.L35:
 1623 020c 0400001F 	 .word 520093700
 1624              	 .cfi_endproc
 1625              	.LFE447:
 1627              	 .section .text.touch_calibrate,"ax",%progbits
 1628              	 .align 2
 1629              	 .global touch_calibrate
 1630              	 .thumb
 1631              	 .thumb_func
 1633              	touch_calibrate:
 1634              	.LFB448:
 328:../Libraries/FT800-FT813-5.x/tft.c **** 
 329:../Libraries/FT800-FT813-5.x/tft.c **** 
 330:../Libraries/FT800-FT813-5.x/tft.c **** void touch_calibrate(void) {
 1635              	 .loc 1 330 0
 1636              	 .cfi_startproc
 1637              	 
 1638              	 
 1639 0000 80B5     	 push {r7,lr}
 1640              	.LCFI10:
 1641              	 .cfi_def_cfa_offset 8
 1642              	 .cfi_offset 7,-8
 1643              	 .cfi_offset 14,-4
 1644 0002 00AF     	 add r7,sp,#0
 1645              	.LCFI11:
 1646              	 .cfi_def_cfa_register 7
 331:../Libraries/FT800-FT813-5.x/tft.c **** // Sends pre-recorded touch calibration values, depending on the display the code is compiled for. 
 332:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_RiTFT43)
 333:../Libraries/FT800-FT813-5.x/tft.c **** 	// Original library values
 334:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000062cd);
 335:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xfffffe45);
 336:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff45e0a);
 337:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000001a3);
 338:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b33);
 339:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFbb870);
 340:../Libraries/FT800-FT813-5.x/tft.c **** 
 341:../Libraries/FT800-FT813-5.x/tft.c **** 	// Actual values (measured with routine down below) by Rene S. at 20.12.2020 on Display SM-RVT43UL
 342:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000061c4);
 1647              	 .loc 1 342 0
 1648 0004 0E48     	 ldr r0,.L38
 1649 0006 46F2C411 	 movw r1,#25028
 1650 000a FFF7FEFF 	 bl EVE_memWrite32
 343:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000025d);
 1651              	 .loc 1 343 0
 1652 000e 0D48     	 ldr r0,.L38+4
 1653 0010 40F25D21 	 movw r1,#605
 1654 0014 FFF7FEFF 	 bl EVE_memWrite32
 344:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff14ab1);
 1655              	 .loc 1 344 0
 1656 0018 0B48     	 ldr r0,.L38+8
 1657 001a 0C49     	 ldr r1,.L38+12
 1658 001c FFF7FEFF 	 bl EVE_memWrite32
 345:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xffffff91);
 1659              	 .loc 1 345 0
 1660 0020 0B48     	 ldr r0,.L38+16
 1661 0022 6FF06E01 	 mvn r1,#110
 1662 0026 FFF7FEFF 	 bl EVE_memWrite32
 346:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b6b);
 1663              	 .loc 1 346 0
 1664 002a 0A48     	 ldr r0,.L38+20
 1665 002c 45F66B31 	 movw r1,#23403
 1666 0030 FFF7FEFF 	 bl EVE_memWrite32
 347:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFac7ab);
 1667              	 .loc 1 347 0
 1668 0034 0848     	 ldr r0,.L38+24
 1669 0036 0949     	 ldr r1,.L38+28
 1670 0038 FFF7FEFF 	 bl EVE_memWrite32
 348:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 349:../Libraries/FT800-FT813-5.x/tft.c **** 
 350:../Libraries/FT800-FT813-5.x/tft.c **** // All targets other than EVE_RiTFT43 where deleted -> see original lib 4
 351:../Libraries/FT800-FT813-5.x/tft.c **** 
 352:../Libraries/FT800-FT813-5.x/tft.c **** /* activate this if you are using a module for the first time or if you need to re-calibrate it */
 353:../Libraries/FT800-FT813-5.x/tft.c **** /* write down the numbers on the screen and either place them in one of the pre-defined blocks abov
 354:../Libraries/FT800-FT813-5.x/tft.c **** #if 0
 355:../Libraries/FT800-FT813-5.x/tft.c **** 	/* calibrate touch and displays values to screen */
 356:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 357:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 358:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 359:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text((EVE_HSIZE/2), 50, 26, EVE_OPT_CENTER, "Please tap on the dot.");
 360:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_calibrate();
 361:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);
 362:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP);
 363:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 364:../Libraries/FT800-FT813-5.x/tft.c **** 
 365:../Libraries/FT800-FT813-5.x/tft.c **** 	uint32_t touch_a, touch_b, touch_c, touch_d, touch_e, touch_f;
 366:../Libraries/FT800-FT813-5.x/tft.c **** 
 367:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_a = EVE_memRead32(REG_TOUCH_TRANSFORM_A);
 368:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_b = EVE_memRead32(REG_TOUCH_TRANSFORM_B);
 369:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_c = EVE_memRead32(REG_TOUCH_TRANSFORM_C);
 370:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_d = EVE_memRead32(REG_TOUCH_TRANSFORM_D);
 371:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_e = EVE_memRead32(REG_TOUCH_TRANSFORM_E);
 372:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_f = EVE_memRead32(REG_TOUCH_TRANSFORM_F);
 373:../Libraries/FT800-FT813-5.x/tft.c **** 
 374:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 375:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 376:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 377:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0));
 378:../Libraries/FT800-FT813-5.x/tft.c **** 
 379:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 15, 26, 0, "TOUCH_TRANSFORM_A:");
 380:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 30, 26, 0, "TOUCH_TRANSFORM_B:");
 381:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 45, 26, 0, "TOUCH_TRANSFORM_C:");
 382:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 60, 26, 0, "TOUCH_TRANSFORM_D:");
 383:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 75, 26, 0, "TOUCH_TRANSFORM_E:");
 384:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 90, 26, 0, "TOUCH_TRANSFORM_F:");
 385:../Libraries/FT800-FT813-5.x/tft.c **** 
 386:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_setbase(16L);
 387:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 15, 26, EVE_OPT_RIGHTX|8, touch_a);
 388:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 30, 26, EVE_OPT_RIGHTX|8, touch_b);
 389:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 45, 26, EVE_OPT_RIGHTX|8, touch_c);
 390:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 60, 26, EVE_OPT_RIGHTX|8, touch_d);
 391:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 75, 26, EVE_OPT_RIGHTX|8, touch_e);
 392:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 90, 26, EVE_OPT_RIGHTX|8, touch_f);
 393:../Libraries/FT800-FT813-5.x/tft.c **** 
 394:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);	/* instruct the graphics processor to show the list */
 395:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP); /* make this list active */
 396:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 397:../Libraries/FT800-FT813-5.x/tft.c **** 
 398:../Libraries/FT800-FT813-5.x/tft.c **** 	while(1);
 399:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 400:../Libraries/FT800-FT813-5.x/tft.c **** }
 1671              	 .loc 1 400 0
 1672 003c 80BD     	 pop {r7,pc}
 1673              	.L39:
 1674 003e 00BF     	 .align 2
 1675              	.L38:
 1676 0040 50213000 	 .word 3154256
 1677 0044 54213000 	 .word 3154260
 1678 0048 58213000 	 .word 3154264
 1679 004c B14AF1FF 	 .word -963919
 1680 0050 5C213000 	 .word 3154268
 1681 0054 60213000 	 .word 3154272
 1682 0058 64213000 	 .word 3154276
 1683 005c ABC7FAFF 	 .word -342101
 1684              	 .cfi_endproc
 1685              	.LFE448:
 1687              	 .section .rodata
 1688              	 .align 2
 1689              	.LC6:
 1690 0028 5446545F 	 .ascii "TFT_init - EVE_init was ok, starting to init TFT!\000"
 1690      696E6974 
 1690      202D2045 
 1690      56455F69 
 1690      6E697420 
 1691              	 .section .text.TFT_init,"ax",%progbits
 1692              	 .align 2
 1693              	 .global TFT_init
 1694              	 .thumb
 1695              	 .thumb_func
 1697              	TFT_init:
 1698              	.LFB449:
 401:../Libraries/FT800-FT813-5.x/tft.c **** 
 402:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t TFT_init(void)
 403:../Libraries/FT800-FT813-5.x/tft.c **** {
 1699              	 .loc 1 403 0
 1700              	 .cfi_startproc
 1701              	 
 1702              	 
 1703 0000 80B5     	 push {r7,lr}
 1704              	.LCFI12:
 1705              	 .cfi_def_cfa_offset 8
 1706              	 .cfi_offset 7,-8
 1707              	 .cfi_offset 14,-4
 1708 0002 00AF     	 add r7,sp,#0
 1709              	.LCFI13:
 1710              	 .cfi_def_cfa_register 7
 404:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Initializes EVE (or checks if its already initialized). Only at first sucessful EVE_init() the
 405:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_init() != 0)
 1711              	 .loc 1 405 0
 1712 0004 FFF7FEFF 	 bl EVE_init
 1713 0008 0346     	 mov r3,r0
 1714 000a 002B     	 cmp r3,#0
 1715 000c 2ED0     	 beq .L41
 406:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 407:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (DEBUG_ENABLE)
 408:../Libraries/FT800-FT813-5.x/tft.c **** 			printf("TFT_init - EVE_init was ok, starting to init TFT!\n");
 1716              	 .loc 1 408 0
 1717 000e 1948     	 ldr r0,.L43
 1718 0010 FFF7FEFF 	 bl puts
 409:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 410:../Libraries/FT800-FT813-5.x/tft.c **** 		// Mark Display as active (TFT_display only does anythin after his)
 411:../Libraries/FT800-FT813-5.x/tft.c **** 		tft_active = 1;
 1719              	 .loc 1 411 0
 1720 0014 184B     	 ldr r3,.L43+4
 1721 0016 0122     	 movs r2,#1
 1722 0018 1A70     	 strb r2,[r3]
 412:../Libraries/FT800-FT813-5.x/tft.c **** 
 413:../Libraries/FT800-FT813-5.x/tft.c **** 		// Initial Backlight strength
 414:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_memWrite8(REG_PWM_DUTY, 0x30);	/* setup backlight, range is from 0 = off to 0x80 = max */
 1723              	 .loc 1 414 0
 1724 001a 1848     	 ldr r0,.L43+8
 1725 001c 3021     	 movs r1,#48
 1726 001e FFF7FEFF 	 bl EVE_memWrite8
 415:../Libraries/FT800-FT813-5.x/tft.c **** 
 416:../Libraries/FT800-FT813-5.x/tft.c **** 		// Write prerecorded touchscreen calibration back to display
 417:../Libraries/FT800-FT813-5.x/tft.c **** 		touch_calibrate();
 1727              	 .loc 1 417 0
 1728 0022 FFF7FEFF 	 bl touch_calibrate
 418:../Libraries/FT800-FT813-5.x/tft.c **** 
 419:../Libraries/FT800-FT813-5.x/tft.c **** 		// Clear screen, set precision for VERTEX2F to 1 pixel and show DL for the first time
 420:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1729              	 .loc 1 420 0
 1730 0026 FFF7FEFF 	 bl EVE_start_cmd_burst
 421:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1731              	 .loc 1 421 0
 1732 002a 6FF0FF00 	 mvn r0,#255
 1733 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 422:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0)); /* do not use the following objects for touch-detection */
 1734              	 .loc 1 422 0
 1735 0032 4FF04070 	 mov r0,#50331648
 1736 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 423:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_bgcolor_burst(MAIN_BGCOLOR);
 1737              	 .loc 1 423 0
 1738 003a 1148     	 ldr r0,.L43+12
 1739 003c FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 424:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 p
 1740              	 .loc 1 424 0
 1741 0040 4FF01C50 	 mov r0,#654311424
 1742 0044 FFF7FEFF 	 bl EVE_cmd_dl_burst
 425:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1743              	 .loc 1 425 0
 1744 0048 6FF07D40 	 mvn r0,#-50331648
 1745 004c FFF7FEFF 	 bl EVE_cmd_dl_burst
 426:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1746              	 .loc 1 426 0
 1747 0050 0C48     	 ldr r0,.L43+16
 1748 0052 FFF7FEFF 	 bl EVE_cmd_dl_burst
 427:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1749              	 .loc 1 427 0
 1750 0056 0020     	 movs r0,#0
 1751 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 428:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1752              	 .loc 1 428 0
 1753 005c 6FF0FE00 	 mvn r0,#254
 1754 0060 FFF7FEFF 	 bl EVE_cmd_dl_burst
 429:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1755              	 .loc 1 429 0
 1756 0064 FFF7FEFF 	 bl EVE_end_cmd_burst
 430:../Libraries/FT800-FT813-5.x/tft.c **** 		return 1;
 1757              	 .loc 1 430 0
 1758 0068 0123     	 movs r3,#1
 1759 006a 00E0     	 b .L42
 1760              	.L41:
 431:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 432:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 433:../Libraries/FT800-FT813-5.x/tft.c **** 		return 0;
 1761              	 .loc 1 433 0
 1762 006c 0023     	 movs r3,#0
 1763              	.L42:
 434:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 435:../Libraries/FT800-FT813-5.x/tft.c **** }
 1764              	 .loc 1 435 0
 1765 006e 1846     	 mov r0,r3
 1766 0070 80BD     	 pop {r7,pc}
 1767              	.L44:
 1768 0072 00BF     	 .align 2
 1769              	.L43:
 1770 0074 28000000 	 .word .LC6
 1771 0078 00000000 	 .word tft_active
 1772 007c D4203000 	 .word 3154132
 1773 0080 EEF1F500 	 .word 16118254
 1774 0084 07000026 	 .word 637534215
 1775              	 .cfi_endproc
 1776              	.LFE449:
 1778              	 .section .text.TFT_display_init_screen,"ax",%progbits
 1779              	 .align 2
 1780              	 .global TFT_display_init_screen
 1781              	 .thumb
 1782              	 .thumb_func
 1784              	TFT_display_init_screen:
 1785              	.LFB450:
 436:../Libraries/FT800-FT813-5.x/tft.c **** 
 437:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_init_screen(void)
 438:../Libraries/FT800-FT813-5.x/tft.c **** {
 1786              	 .loc 1 438 0
 1787              	 .cfi_startproc
 1788              	 
 1789              	 
 1790 0000 80B5     	 push {r7,lr}
 1791              	.LCFI14:
 1792              	 .cfi_def_cfa_offset 8
 1793              	 .cfi_offset 7,-8
 1794              	 .cfi_offset 14,-4
 1795 0002 00AF     	 add r7,sp,#0
 1796              	.LCFI15:
 1797              	 .cfi_def_cfa_register 7
 439:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display logo over full screen
 440:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 1798              	 .loc 1 440 0
 1799 0004 1A4B     	 ldr r3,.L47
 1800 0006 1B78     	 ldrb r3,[r3]
 1801 0008 002B     	 cmp r3,#0
 1802 000a 30D0     	 beq .L45
 441:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 442:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_inflate(MEM_LOGO, logo_init, sizeof(logo_init)); /* load logo into gfx-memory and de-comp
 1803              	 .loc 1 442 0
 1804 000c 0020     	 movs r0,#0
 1805 000e 1949     	 ldr r1,.L47+4
 1806 0010 44F60472 	 movw r2,#20228
 1807 0014 FFF7FEFF 	 bl EVE_cmd_inflate
 443:../Libraries/FT800-FT813-5.x/tft.c **** 
 444:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1808              	 .loc 1 444 0
 1809 0018 FFF7FEFF 	 bl EVE_start_cmd_burst
 445:../Libraries/FT800-FT813-5.x/tft.c **** 
 446:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1810              	 .loc 1 446 0
 1811 001c 6FF0FF00 	 mvn r0,#255
 1812 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 447:../Libraries/FT800-FT813-5.x/tft.c **** 		//EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16
 448:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1813              	 .loc 1 448 0
 1814 0024 6FF07D40 	 mvn r0,#-50331648
 1815 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 449:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1816              	 .loc 1 449 0
 1817 002c 1248     	 ldr r0,.L47+8
 1818 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 450:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 1819              	 .loc 1 450 0
 1820 0032 4FF04070 	 mov r0,#50331648
 1821 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 451:../Libraries/FT800-FT813-5.x/tft.c **** 
 452:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_setbitmap_burst(MEM_LOGO, EVE_ARGB1555, 308, 250);
 1822              	 .loc 1 452 0
 1823 003a 0020     	 movs r0,#0
 1824 003c 0021     	 movs r1,#0
 1825 003e 4FF49A72 	 mov r2,#308
 1826 0042 FA23     	 movs r3,#250
 1827 0044 FFF7FEFF 	 bl EVE_cmd_setbitmap_burst
 453:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_BITMAPS);
 1828              	 .loc 1 453 0
 1829 0048 0C48     	 ldr r0,.L47+12
 1830 004a FFF7FEFF 	 bl EVE_cmd_dl_burst
 454:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(86*16, 11*16));  //105*16
 1831              	 .loc 1 454 0
 1832 004e 0C48     	 ldr r0,.L47+16
 1833 0050 FFF7FEFF 	 bl EVE_cmd_dl_burst
 455:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1834              	 .loc 1 455 0
 1835 0054 4FF00450 	 mov r0,#553648128
 1836 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 456:../Libraries/FT800-FT813-5.x/tft.c **** 
 457:../Libraries/FT800-FT813-5.x/tft.c **** 
 458:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1837              	 .loc 1 458 0
 1838 005c 0020     	 movs r0,#0
 1839 005e FFF7FEFF 	 bl EVE_cmd_dl_burst
 459:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1840              	 .loc 1 459 0
 1841 0062 6FF0FE00 	 mvn r0,#254
 1842 0066 FFF7FEFF 	 bl EVE_cmd_dl_burst
 460:../Libraries/FT800-FT813-5.x/tft.c **** 
 461:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1843              	 .loc 1 461 0
 1844 006a FFF7FEFF 	 bl EVE_end_cmd_burst
 1845              	.L45:
 462:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 463:../Libraries/FT800-FT813-5.x/tft.c **** }
 1846              	 .loc 1 463 0
 1847 006e 80BD     	 pop {r7,pc}
 1848              	.L48:
 1849              	 .align 2
 1850              	.L47:
 1851 0070 00000000 	 .word tft_active
 1852 0074 00000000 	 .word logo_init
 1853 0078 07000026 	 .word 637534215
 1854 007c 0100001F 	 .word 520093697
 1855 0080 B000B042 	 .word 1118830768
 1856              	 .cfi_endproc
 1857              	.LFE450:
 1859              	 .section .text.TFT_display_static,"ax",%progbits
 1860              	 .align 2
 1861              	 .global TFT_display_static
 1862              	 .thumb
 1863              	 .thumb_func
 1865              	TFT_display_static:
 1866              	.LFB451:
 464:../Libraries/FT800-FT813-5.x/tft.c **** 
 465:../Libraries/FT800-FT813-5.x/tft.c **** 
 466:../Libraries/FT800-FT813-5.x/tft.c **** 
 467:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static(void)
 468:../Libraries/FT800-FT813-5.x/tft.c **** {
 1867              	 .loc 1 468 0
 1868              	 .cfi_startproc
 1869              	 
 1870              	 
 1871 0000 80B5     	 push {r7,lr}
 1872              	.LCFI16:
 1873              	 .cfi_def_cfa_offset 8
 1874              	 .cfi_offset 7,-8
 1875              	 .cfi_offset 14,-4
 1876 0002 00AF     	 add r7,sp,#0
 1877              	.LCFI17:
 1878              	 .cfi_def_cfa_register 7
 469:../Libraries/FT800-FT813-5.x/tft.c **** 	// Static portion of display-handling, meant to be called once at startup. Created by Rudolph Ried
 470:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART); // Start a new display list (resets REG_CMD_DL to 0)
 1879              	 .loc 1 470 0
 1880 0004 6FF0FF00 	 mvn r0,#255
 1881 0008 FFF7FEFF 	 bl EVE_cmd_dl
 471:../Libraries/FT800-FT813-5.x/tft.c **** 
 472:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Main settings
 473:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature*/
 1882              	 .loc 1 473 0
 1883 000c 2148     	 ldr r0,.L52
 1884 000e FFF7FEFF 	 bl EVE_cmd_dl
 474:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor(MAIN_BGCOLOR); /* light grey */
 1885              	 .loc 1 474 0
 1886 0012 2148     	 ldr r0,.L52+4
 1887 0014 FFF7FEFF 	 bl EVE_cmd_bgcolor
 475:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 pixel de
 1888              	 .loc 1 475 0
 1889 0018 4FF01C50 	 mov r0,#654311424
 1890 001c FFF7FEFF 	 bl EVE_cmd_dl
 476:../Libraries/FT800-FT813-5.x/tft.c **** 	// Main Rectangle
 477:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BGCOLOR);
 1891              	 .loc 1 477 0
 1892 0020 1E48     	 ldr r0,.L52+8
 1893 0022 FFF7FEFF 	 bl EVE_cmd_dl
 478:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_RECTS);
 1894              	 .loc 1 478 0
 1895 0026 1E48     	 ldr r0,.L52+12
 1896 0028 FFF7FEFF 	 bl EVE_cmd_dl
 479:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, 0));
 1897              	 .loc 1 479 0
 1898 002c 4FF08040 	 mov r0,#1073741824
 1899 0030 FFF7FEFF 	 bl EVE_cmd_dl
 480:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, EVE_VSIZE));
 1900              	 .loc 1 480 0
 1901 0034 1B48     	 ldr r0,.L52+16
 1902 0036 FFF7FEFF 	 bl EVE_cmd_dl
 481:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1903              	 .loc 1 481 0
 1904 003a 4FF00450 	 mov r0,#553648128
 1905 003e FFF7FEFF 	 bl EVE_cmd_dl
 482:../Libraries/FT800-FT813-5.x/tft.c **** 
 483:../Libraries/FT800-FT813-5.x/tft.c **** 
 484:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Execute current menu specific code
 485:../Libraries/FT800-FT813-5.x/tft.c **** 	(*TFT_display_static_cur_Menu__fptr_arr[TFT_cur_Menu])();
 1906              	 .loc 1 485 0
 1907 0042 194B     	 ldr r3,.L52+20
 1908 0044 1B78     	 ldrb r3,[r3]
 1909 0046 5BB2     	 sxtb r3,r3
 1910 0048 184A     	 ldr r2,.L52+24
 1911 004a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1912 004e 9847     	 blx r3
 486:../Libraries/FT800-FT813-5.x/tft.c **** 
 487:../Libraries/FT800-FT813-5.x/tft.c **** 
 488:../Libraries/FT800-FT813-5.x/tft.c **** 
 489:../Libraries/FT800-FT813-5.x/tft.c **** 	// Wait for Display to be finished
 490:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1913              	 .loc 1 490 0
 1914 0050 00BF     	 nop
 1915              	.L50:
 1916              	 .loc 1 490 0 is_stmt 0 discriminator 1
 1917 0052 FFF7FEFF 	 bl EVE_busy
 1918 0056 0346     	 mov r3,r0
 1919 0058 002B     	 cmp r3,#0
 1920 005a FAD1     	 bne .L50
 491:../Libraries/FT800-FT813-5.x/tft.c **** 
 492:../Libraries/FT800-FT813-5.x/tft.c **** 	// Get size of the current display list
 493:../Libraries/FT800-FT813-5.x/tft.c **** 	num_dl_static = EVE_memRead16(REG_CMD_DL); // REG_CMD_DL = Command display list offset
 1921              	 .loc 1 493 0 is_stmt 1
 1922 005c 1448     	 ldr r0,.L52+28
 1923 005e FFF7FEFF 	 bl EVE_memRead16
 1924 0062 0346     	 mov r3,r0
 1925 0064 1A46     	 mov r2,r3
 1926 0066 134B     	 ldr r3,.L52+32
 1927 0068 1A60     	 str r2,[r3]
 494:../Libraries/FT800-FT813-5.x/tft.c **** 
 495:../Libraries/FT800-FT813-5.x/tft.c **** 	// Copy "num_dl_static" bytes from pointer "EVE_RAM_DL" to pointer "MEM_DL_STATIC"
 496:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_memcpy(MEM_DL_STATIC, EVE_RAM_DL, num_dl_static);
 1928              	 .loc 1 496 0
 1929 006a 124B     	 ldr r3,.L52+32
 1930 006c 1B68     	 ldr r3,[r3]
 1931 006e 4FF47F20 	 mov r0,#1044480
 1932 0072 4FF44011 	 mov r1,#3145728
 1933 0076 1A46     	 mov r2,r3
 1934 0078 FFF7FEFF 	 bl EVE_cmd_memcpy
 497:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1935              	 .loc 1 497 0
 1936 007c 00BF     	 nop
 1937              	.L51:
 1938              	 .loc 1 497 0 is_stmt 0 discriminator 1
 1939 007e FFF7FEFF 	 bl EVE_busy
 1940 0082 0346     	 mov r3,r0
 1941 0084 002B     	 cmp r3,#0
 1942 0086 FAD1     	 bne .L51
 498:../Libraries/FT800-FT813-5.x/tft.c **** 
 499:../Libraries/FT800-FT813-5.x/tft.c **** 	// The menu is now established and can be set as last known menu
 500:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_last_Menu = TFT_cur_Menu;
 1943              	 .loc 1 500 0 is_stmt 1
 1944 0088 074B     	 ldr r3,.L52+20
 1945 008a 1A78     	 ldrb r2,[r3]
 1946 008c 0A4B     	 ldr r3,.L52+36
 1947 008e 1A70     	 strb r2,[r3]
 501:../Libraries/FT800-FT813-5.x/tft.c **** }
 1948              	 .loc 1 501 0
 1949 0090 80BD     	 pop {r7,pc}
 1950              	.L53:
 1951 0092 00BF     	 .align 2
 1952              	.L52:
 1953 0094 01000003 	 .word 50331649
 1954 0098 EEF1F500 	 .word 16118254
 1955 009c EEF1F504 	 .word 83227118
 1956 00a0 0900001F 	 .word 520093705
 1957 00a4 1001F040 	 .word 1089470736
 1958 00a8 00000000 	 .word TFT_cur_Menu
 1959 00ac 00000000 	 .word TFT_display_static_cur_Menu__fptr_arr
 1960 00b0 00213000 	 .word 3154176
 1961 00b4 00000000 	 .word num_dl_static
 1962 00b8 00000000 	 .word TFT_last_Menu
 1963              	 .cfi_endproc
 1964              	.LFE451:
 1966              	 .section .text.TFT_touch,"ax",%progbits
 1967              	 .align 2
 1968              	 .global TFT_touch
 1969              	 .thumb
 1970              	 .thumb_func
 1972              	TFT_touch:
 1973              	.LFB452:
 502:../Libraries/FT800-FT813-5.x/tft.c **** 
 503:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch(void)
 504:../Libraries/FT800-FT813-5.x/tft.c **** {
 1974              	 .loc 1 504 0
 1975              	 .cfi_startproc
 1976              	 
 1977              	 
 1978 0000 90B5     	 push {r4,r7,lr}
 1979              	.LCFI18:
 1980              	 .cfi_def_cfa_offset 12
 1981              	 .cfi_offset 4,-12
 1982              	 .cfi_offset 7,-8
 1983              	 .cfi_offset 14,-4
 1984 0002 87B0     	 sub sp,sp,#28
 1985              	.LCFI19:
 1986              	 .cfi_def_cfa_offset 40
 1987 0004 02AF     	 add r7,sp,#8
 1988              	.LCFI20:
 1989              	 .cfi_def_cfa 7,32
 505:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Check for touch events and setup vars for TFT_display() (Buttons). Created by Rudolph Riedel, 
 506:../Libraries/FT800-FT813-5.x/tft.c **** 	// Init vars
 507:../Libraries/FT800-FT813-5.x/tft.c **** 	uint8_t tag; // temporary store of received touched tag
 508:../Libraries/FT800-FT813-5.x/tft.c **** 	
 509:../Libraries/FT800-FT813-5.x/tft.c **** 	// If Display is still busy, skip this evaluation to prevent hanging, glitches and flickers
 510:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_busy()) { return; } /* is EVE still processing the last display list? */
 1990              	 .loc 1 510 0
 1991 0006 FFF7FEFF 	 bl EVE_busy
 1992 000a 0346     	 mov r3,r0
 1993 000c 002B     	 cmp r3,#0
 1994 000e 00D0     	 beq .L55
 1995 0010 D9E0     	 b .L54
 1996              	.L55:
 511:../Libraries/FT800-FT813-5.x/tft.c **** 
 512:../Libraries/FT800-FT813-5.x/tft.c **** 	// Read the value for the first touch point
 513:../Libraries/FT800-FT813-5.x/tft.c **** 	tag = EVE_memRead8(REG_TOUCH_TAG);
 1997              	 .loc 1 513 0
 1998 0012 6E48     	 ldr r0,.L73
 1999 0014 FFF7FEFF 	 bl EVE_memRead8
 2000 0018 0346     	 mov r3,r0
 2001 001a FB73     	 strb r3,[r7,#15]
 514:../Libraries/FT800-FT813-5.x/tft.c **** 	// Read currently touched position in pixels
 515:../Libraries/FT800-FT813-5.x/tft.c **** 	uint32_t TouchXY = EVE_memRead32(REG_TOUCH_SCREEN_XY); // Currently touched X and Y coordinate fro
 2002              	 .loc 1 515 0
 2003 001c 6C48     	 ldr r0,.L73+4
 2004 001e FFF7FEFF 	 bl EVE_memRead32
 2005 0022 B860     	 str r0,[r7,#8]
 516:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t Y = TouchXY;
 2006              	 .loc 1 516 0
 2007 0024 BB68     	 ldr r3,[r7,#8]
 2008 0026 FB80     	 strh r3,[r7,#6]
 517:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t X = TouchXY >> 16;
 2009              	 .loc 1 517 0
 2010 0028 BB68     	 ldr r3,[r7,#8]
 2011 002a 1B0C     	 lsrs r3,r3,#16
 2012 002c BB80     	 strh r3,[r7,#4]
 518:../Libraries/FT800-FT813-5.x/tft.c **** 
 519:../Libraries/FT800-FT813-5.x/tft.c **** 	/// If a swipe is in progress save start coordinates (once at start), calculate swipe distance and
 520:../Libraries/FT800-FT813-5.x/tft.c **** 	/// A swipe gets started by a touch tag action (switch statement below) and lasts till no touch wa
 521:../Libraries/FT800-FT813-5.x/tft.c **** 	/// At an end-of-touch the evoking tag is run one again so it can execute final actions.
 522:../Libraries/FT800-FT813-5.x/tft.c **** 	if(swipeInProgress){
 2013              	 .loc 1 522 0
 2014 002e 694B     	 ldr r3,.L73+8
 2015 0030 1B78     	 ldrb r3,[r3]
 2016 0032 002B     	 cmp r3,#0
 2017 0034 41D0     	 beq .L57
 523:../Libraries/FT800-FT813-5.x/tft.c **** 		// If the initial touched position is not set, remember it (used to determine how far the user sw
 524:../Libraries/FT800-FT813-5.x/tft.c **** 		if(swipeInitialTouch_X == 32768 && swipeInitialTouch_Y == 32768){
 2018              	 .loc 1 524 0
 2019 0036 684B     	 ldr r3,.L73+12
 2020 0038 1B68     	 ldr r3,[r3]
 2021 003a B3F5004F 	 cmp r3,#32768
 2022 003e 0AD1     	 bne .L58
 2023              	 .loc 1 524 0 is_stmt 0 discriminator 1
 2024 0040 664B     	 ldr r3,.L73+16
 2025 0042 1B68     	 ldr r3,[r3]
 2026 0044 B3F5004F 	 cmp r3,#32768
 2027 0048 05D1     	 bne .L58
 525:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeInitialTouch_X = X;
 2028              	 .loc 1 525 0 is_stmt 1
 2029 004a BB88     	 ldrh r3,[r7,#4]
 2030 004c 624A     	 ldr r2,.L73+12
 2031 004e 1360     	 str r3,[r2]
 526:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeInitialTouch_Y = Y;
 2032              	 .loc 1 526 0
 2033 0050 FB88     	 ldrh r3,[r7,#6]
 2034 0052 624A     	 ldr r2,.L73+16
 2035 0054 1360     	 str r3,[r2]
 2036              	.L58:
 527:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 528:../Libraries/FT800-FT813-5.x/tft.c **** 
 529:../Libraries/FT800-FT813-5.x/tft.c **** 		// Update the currently swiped distance and its direction if the background is still touched (tag
 530:../Libraries/FT800-FT813-5.x/tft.c **** 		// Note a positive effect: If the tag somehow changes or the position get invalid (happens at cor
 531:../Libraries/FT800-FT813-5.x/tft.c **** 		if(X < 32768 && Y < 32768){
 2037              	 .loc 1 531 0
 2038 0056 BB88     	 ldrh r3,[r7,#4]
 2039 0058 1BB2     	 sxth r3,r3
 2040 005a 002B     	 cmp r3,#0
 2041 005c 0FDB     	 blt .L59
 2042              	 .loc 1 531 0 is_stmt 0 discriminator 1
 2043 005e FB88     	 ldrh r3,[r7,#6]
 2044 0060 1BB2     	 sxth r3,r3
 2045 0062 002B     	 cmp r3,#0
 2046 0064 0BDB     	 blt .L59
 532:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeDistance_X = swipeInitialTouch_X - X;
 2047              	 .loc 1 532 0 is_stmt 1
 2048 0066 5C4B     	 ldr r3,.L73+12
 2049 0068 1A68     	 ldr r2,[r3]
 2050 006a BB88     	 ldrh r3,[r7,#4]
 2051 006c D31A     	 subs r3,r2,r3
 2052 006e 5C4A     	 ldr r2,.L73+20
 2053 0070 1360     	 str r3,[r2]
 533:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeDistance_Y = swipeInitialTouch_Y - Y;
 2054              	 .loc 1 533 0
 2055 0072 5A4B     	 ldr r3,.L73+16
 2056 0074 1A68     	 ldr r2,[r3]
 2057 0076 FB88     	 ldrh r3,[r7,#6]
 2058 0078 D31A     	 subs r3,r2,r3
 2059 007a 5A4A     	 ldr r2,.L73+24
 2060 007c 1360     	 str r3,[r2]
 2061              	.L59:
 534:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 535:../Libraries/FT800-FT813-5.x/tft.c **** 
 536:../Libraries/FT800-FT813-5.x/tft.c **** 		// Increase end-of-touch debounce timer
 537:../Libraries/FT800-FT813-5.x/tft.c **** 		if(tag == 0) swipeEndOfTouch_Debounce++;
 2062              	 .loc 1 537 0
 2063 007e FB7B     	 ldrb r3,[r7,#15]
 2064 0080 002B     	 cmp r3,#0
 2065 0082 05D1     	 bne .L60
 2066              	 .loc 1 537 0 is_stmt 0 discriminator 1
 2067 0084 584B     	 ldr r3,.L73+28
 2068 0086 1B78     	 ldrb r3,[r3]
 2069 0088 0133     	 adds r3,r3,#1
 2070 008a DAB2     	 uxtb r2,r3
 2071 008c 564B     	 ldr r3,.L73+28
 2072 008e 1A70     	 strb r2,[r3]
 2073              	.L60:
 538:../Libraries/FT800-FT813-5.x/tft.c **** 
 539:../Libraries/FT800-FT813-5.x/tft.c **** 		// Detect end-of-touch (Swipe ends if there was no touch detected for 5 cycles)
 540:../Libraries/FT800-FT813-5.x/tft.c **** 		if(swipeEndOfTouch_Debounce >= 5){
 2074              	 .loc 1 540 0 is_stmt 1
 2075 0090 554B     	 ldr r3,.L73+28
 2076 0092 1B78     	 ldrb r3,[r3]
 2077 0094 042B     	 cmp r3,#4
 2078 0096 10D9     	 bls .L57
 541:../Libraries/FT800-FT813-5.x/tft.c **** 			// Execute the tag action that invoked the swipe process one last time
 542:../Libraries/FT800-FT813-5.x/tft.c **** 			tag = swipeEvokedBy;
 2079              	 .loc 1 542 0
 2080 0098 544B     	 ldr r3,.L73+32
 2081 009a 1B78     	 ldrb r3,[r3]
 2082 009c FB73     	 strb r3,[r7,#15]
 543:../Libraries/FT800-FT813-5.x/tft.c **** 
 544:../Libraries/FT800-FT813-5.x/tft.c **** 			// Reset swipe feature variables
 545:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeInProgress = 0;
 2083              	 .loc 1 545 0
 2084 009e 4D4B     	 ldr r3,.L73+8
 2085 00a0 0022     	 movs r2,#0
 2086 00a2 1A70     	 strb r2,[r3]
 546:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeEndOfTouch_Debounce = 0;
 2087              	 .loc 1 546 0
 2088 00a4 504B     	 ldr r3,.L73+28
 2089 00a6 0022     	 movs r2,#0
 2090 00a8 1A70     	 strb r2,[r3]
 547:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeInitialTouch_X = 32768;
 2091              	 .loc 1 547 0
 2092 00aa 4B4B     	 ldr r3,.L73+12
 2093 00ac 4FF40042 	 mov r2,#32768
 2094 00b0 1A60     	 str r2,[r3]
 548:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeInitialTouch_Y = 32768;
 2095              	 .loc 1 548 0
 2096 00b2 4A4B     	 ldr r3,.L73+16
 2097 00b4 4FF40042 	 mov r2,#32768
 2098 00b8 1A60     	 str r2,[r3]
 2099              	.L57:
 549:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 550:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 551:../Libraries/FT800-FT813-5.x/tft.c **** 
 552:../Libraries/FT800-FT813-5.x/tft.c **** 
 553:../Libraries/FT800-FT813-5.x/tft.c **** 	// Execute action based on touched tag
 554:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 2100              	 .loc 1 554 0
 2101 00ba FB7B     	 ldrb r3,[r7,#15]
 2102 00bc 002B     	 cmp r3,#0
 2103 00be 02D0     	 beq .L62
 2104 00c0 012B     	 cmp r3,#1
 2105 00c2 04D0     	 beq .L63
 2106 00c4 6EE0     	 b .L72
 2107              	.L62:
 555:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 556:../Libraries/FT800-FT813-5.x/tft.c **** 		// nothing touched - reset states and locks
 557:../Libraries/FT800-FT813-5.x/tft.c **** 		case 0:
 558:../Libraries/FT800-FT813-5.x/tft.c **** 			toggle_lock = 0;
 2108              	 .loc 1 558 0
 2109 00c6 4A4B     	 ldr r3,.L73+36
 2110 00c8 0022     	 movs r2,#0
 2111 00ca 1A70     	 strb r2,[r3]
 559:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2112              	 .loc 1 559 0
 2113 00cc 7BE0     	 b .L54
 2114              	.L63:
 560:../Libraries/FT800-FT813-5.x/tft.c **** 		// Background elements are touched - detect swipes to left/right for menu changes
 561:../Libraries/FT800-FT813-5.x/tft.c **** 		case 1:
 562:../Libraries/FT800-FT813-5.x/tft.c **** 			// Init a new swipe - if it isn't already running (and no end-of-touch of a previous swipe is de
 563:../Libraries/FT800-FT813-5.x/tft.c **** 			if(swipeInProgress == 0 && swipeEvokedBy == 0){
 2115              	 .loc 1 563 0
 2116 00ce 414B     	 ldr r3,.L73+8
 2117 00d0 1B78     	 ldrb r3,[r3]
 2118 00d2 002B     	 cmp r3,#0
 2119 00d4 0AD1     	 bne .L64
 2120              	 .loc 1 563 0 is_stmt 0 discriminator 1
 2121 00d6 454B     	 ldr r3,.L73+32
 2122 00d8 1B78     	 ldrb r3,[r3]
 2123 00da 002B     	 cmp r3,#0
 2124 00dc 06D1     	 bne .L64
 564:../Libraries/FT800-FT813-5.x/tft.c **** 				// Initial touch on background was detected - init swipe and mark me as elicitor
 565:../Libraries/FT800-FT813-5.x/tft.c **** 				swipeInProgress = 1;
 2125              	 .loc 1 565 0 is_stmt 1
 2126 00de 3D4B     	 ldr r3,.L73+8
 2127 00e0 0122     	 movs r2,#1
 2128 00e2 1A70     	 strb r2,[r3]
 566:../Libraries/FT800-FT813-5.x/tft.c **** 				swipeEvokedBy = 1;
 2129              	 .loc 1 566 0
 2130 00e4 414B     	 ldr r3,.L73+32
 2131 00e6 0122     	 movs r2,#1
 2132 00e8 1A70     	 strb r2,[r3]
 2133 00ea 5AE0     	 b .L65
 2134              	.L64:
 567:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 568:../Libraries/FT800-FT813-5.x/tft.c **** 			// Evaluate current status of the swipe - if it is in progress and evoked by me
 569:../Libraries/FT800-FT813-5.x/tft.c **** 			else if(swipeInProgress == 1 && swipeEvokedBy == 1){
 2135              	 .loc 1 569 0
 2136 00ec 394B     	 ldr r3,.L73+8
 2137 00ee 1B78     	 ldrb r3,[r3]
 2138 00f0 012B     	 cmp r3,#1
 2139 00f2 26D1     	 bne .L66
 2140              	 .loc 1 569 0 is_stmt 0 discriminator 1
 2141 00f4 3D4B     	 ldr r3,.L73+32
 2142 00f6 1B78     	 ldrb r3,[r3]
 2143 00f8 012B     	 cmp r3,#1
 2144 00fa 22D1     	 bne .L66
 570:../Libraries/FT800-FT813-5.x/tft.c **** 				// If the user swiped more on x than on y-axis he probably wants to swipe left/right
 571:../Libraries/FT800-FT813-5.x/tft.c **** 				if(abs(swipeDistance_X) > abs(swipeDistance_Y)){
 2145              	 .loc 1 571 0 is_stmt 1
 2146 00fc 384B     	 ldr r3,.L73+20
 2147 00fe 1B68     	 ldr r3,[r3]
 2148 0100 83EAE372 	 eor r2,r3,r3,asr#31
 2149 0104 A2EBE372 	 sub r2,r2,r3,asr#31
 2150 0108 364B     	 ldr r3,.L73+24
 2151 010a 1B68     	 ldr r3,[r3]
 2152 010c 002B     	 cmp r3,#0
 2153 010e B8BF     	 it lt
 2154 0110 5B42     	 rsblt r3,r3,#0
 2155 0112 9A42     	 cmp r2,r3
 2156 0114 14DD     	 ble .L67
 572:../Libraries/FT800-FT813-5.x/tft.c **** 					if(swipeDistance_X > 50)      	// swipe to left
 2157              	 .loc 1 572 0
 2158 0116 324B     	 ldr r3,.L73+20
 2159 0118 1B68     	 ldr r3,[r3]
 2160 011a 322B     	 cmp r3,#50
 2161 011c 03DD     	 ble .L68
 573:../Libraries/FT800-FT813-5.x/tft.c **** 						swipeDetect = Left;
 2162              	 .loc 1 573 0
 2163 011e 354B     	 ldr r3,.L73+40
 2164 0120 0322     	 movs r2,#3
 2165 0122 1A70     	 strb r2,[r3]
 2166 0124 0CE0     	 b .L67
 2167              	.L68:
 574:../Libraries/FT800-FT813-5.x/tft.c **** 					else if(swipeDistance_X < -50)	// swipe to right
 2168              	 .loc 1 574 0
 2169 0126 2E4B     	 ldr r3,.L73+20
 2170 0128 1B68     	 ldr r3,[r3]
 2171 012a 13F1320F 	 cmn r3,#50
 2172 012e 03DA     	 bge .L69
 575:../Libraries/FT800-FT813-5.x/tft.c **** 						swipeDetect = Right;
 2173              	 .loc 1 575 0
 2174 0130 304B     	 ldr r3,.L73+40
 2175 0132 0422     	 movs r2,#4
 2176 0134 1A70     	 strb r2,[r3]
 2177 0136 03E0     	 b .L67
 2178              	.L69:
 576:../Libraries/FT800-FT813-5.x/tft.c **** 					else
 577:../Libraries/FT800-FT813-5.x/tft.c **** 						swipeDetect = None;
 2179              	 .loc 1 577 0
 2180 0138 2E4B     	 ldr r3,.L73+40
 2181 013a 0022     	 movs r2,#0
 2182 013c 1A70     	 strb r2,[r3]
 571:../Libraries/FT800-FT813-5.x/tft.c **** 					if(swipeDistance_X > 50)      	// swipe to left
 2183              	 .loc 1 571 0
 2184 013e 30E0     	 b .L65
 2185              	.L67:
 2186 0140 2FE0     	 b .L65
 2187              	.L66:
 578:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 579:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 580:../Libraries/FT800-FT813-5.x/tft.c **** 			// Final actions after end-of-touch was detected - if the swipe is not in progress but swipeEvok
 581:../Libraries/FT800-FT813-5.x/tft.c **** 			else if(swipeInProgress == 0 && swipeEvokedBy == 1){
 2188              	 .loc 1 581 0
 2189 0142 244B     	 ldr r3,.L73+8
 2190 0144 1B78     	 ldrb r3,[r3]
 2191 0146 002B     	 cmp r3,#0
 2192 0148 2BD1     	 bne .L65
 2193              	 .loc 1 581 0 is_stmt 0 discriminator 1
 2194 014a 284B     	 ldr r3,.L73+32
 2195 014c 1B78     	 ldrb r3,[r3]
 2196 014e 012B     	 cmp r3,#1
 2197 0150 27D1     	 bne .L65
 582:../Libraries/FT800-FT813-5.x/tft.c **** 				// Change menu if swipe was detected
 583:../Libraries/FT800-FT813-5.x/tft.c **** 				if(swipeDetect == Left && TFT_cur_Menu < (TFT_MENU_SIZE-1)) TFT_cur_Menu++;
 2198              	 .loc 1 583 0 is_stmt 1
 2199 0152 284B     	 ldr r3,.L73+40
 2200 0154 1B78     	 ldrb r3,[r3]
 2201 0156 032B     	 cmp r3,#3
 2202 0158 0DD1     	 bne .L70
 2203              	 .loc 1 583 0 is_stmt 0 discriminator 1
 2204 015a 274B     	 ldr r3,.L73+44
 2205 015c 1B78     	 ldrb r3,[r3]
 2206 015e 002B     	 cmp r3,#0
 2207 0160 09D1     	 bne .L70
 2208              	 .loc 1 583 0 discriminator 2
 2209 0162 254B     	 ldr r3,.L73+44
 2210 0164 1B78     	 ldrb r3,[r3]
 2211 0166 DBB2     	 uxtb r3,r3
 2212 0168 DBB2     	 uxtb r3,r3
 2213 016a 0133     	 adds r3,r3,#1
 2214 016c DBB2     	 uxtb r3,r3
 2215 016e DAB2     	 uxtb r2,r3
 2216 0170 214B     	 ldr r3,.L73+44
 2217 0172 1A70     	 strb r2,[r3]
 2218 0174 11E0     	 b .L71
 2219              	.L70:
 584:../Libraries/FT800-FT813-5.x/tft.c **** 				else if(swipeDetect == Right && TFT_cur_Menu > 0) TFT_cur_Menu--;
 2220              	 .loc 1 584 0 is_stmt 1
 2221 0176 1F4B     	 ldr r3,.L73+40
 2222 0178 1B78     	 ldrb r3,[r3]
 2223 017a 042B     	 cmp r3,#4
 2224 017c 0DD1     	 bne .L71
 2225              	 .loc 1 584 0 is_stmt 0 discriminator 1
 2226 017e 1E4B     	 ldr r3,.L73+44
 2227 0180 1B78     	 ldrb r3,[r3]
 2228 0182 5BB2     	 sxtb r3,r3
 2229 0184 002B     	 cmp r3,#0
 2230 0186 08DD     	 ble .L71
 2231              	 .loc 1 584 0 discriminator 2
 2232 0188 1B4B     	 ldr r3,.L73+44
 2233 018a 1B78     	 ldrb r3,[r3]
 2234 018c DBB2     	 uxtb r3,r3
 2235 018e DBB2     	 uxtb r3,r3
 2236 0190 013B     	 subs r3,r3,#1
 2237 0192 DBB2     	 uxtb r3,r3
 2238 0194 DAB2     	 uxtb r2,r3
 2239 0196 184B     	 ldr r3,.L73+44
 2240 0198 1A70     	 strb r2,[r3]
 2241              	.L71:
 585:../Libraries/FT800-FT813-5.x/tft.c **** 
 586:../Libraries/FT800-FT813-5.x/tft.c **** 				// Finalize swipe by resetting swipeEvokedBy
 587:../Libraries/FT800-FT813-5.x/tft.c **** 				swipeEvokedBy = 0;
 2242              	 .loc 1 587 0 is_stmt 1
 2243 019a 144B     	 ldr r3,.L73+32
 2244 019c 0022     	 movs r2,#0
 2245 019e 1A70     	 strb r2,[r3]
 588:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 589:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2246              	 .loc 1 589 0
 2247 01a0 11E0     	 b .L54
 2248              	.L65:
 2249              	 .loc 1 589 0 is_stmt 0 discriminator 1
 2250 01a2 10E0     	 b .L54
 2251              	.L72:
 590:../Libraries/FT800-FT813-5.x/tft.c **** 		default:
 591:../Libraries/FT800-FT813-5.x/tft.c **** 			// Execute current menu specific code
 592:../Libraries/FT800-FT813-5.x/tft.c **** 			(*TFT_touch_cur_Menu__fptr_arr[TFT_cur_Menu])(tag, swipeInProgress, &swipeEvokedBy, &swipeDistan
 2252              	 .loc 1 592 0 is_stmt 1
 2253 01a4 144B     	 ldr r3,.L73+44
 2254 01a6 1B78     	 ldrb r3,[r3]
 2255 01a8 5BB2     	 sxtb r3,r3
 2256 01aa 144A     	 ldr r2,.L73+48
 2257 01ac 52F82340 	 ldr r4,[r2,r3,lsl#2]
 2258 01b0 084B     	 ldr r3,.L73+8
 2259 01b2 1A78     	 ldrb r2,[r3]
 2260 01b4 F97B     	 ldrb r1,[r7,#15]
 2261 01b6 0B4B     	 ldr r3,.L73+24
 2262 01b8 0093     	 str r3,[sp]
 2263 01ba 0846     	 mov r0,r1
 2264 01bc 1146     	 mov r1,r2
 2265 01be 0B4A     	 ldr r2,.L73+32
 2266 01c0 074B     	 ldr r3,.L73+20
 2267 01c2 A047     	 blx r4
 593:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2268              	 .loc 1 593 0
 2269 01c4 00BF     	 nop
 2270              	.L54:
 594:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 595:../Libraries/FT800-FT813-5.x/tft.c **** 
 596:../Libraries/FT800-FT813-5.x/tft.c **** 	//printf("%d %d %d %d-%d\n", swipeInProgress, (int)swipeDetect, TFT_cur_Menu, swipeInitialTouch_X,
 597:../Libraries/FT800-FT813-5.x/tft.c **** }
 2271              	 .loc 1 597 0
 2272 01c6 1437     	 adds r7,r7,#20
 2273              	.LCFI21:
 2274              	 .cfi_def_cfa_offset 12
 2275 01c8 BD46     	 mov sp,r7
 2276              	.LCFI22:
 2277              	 .cfi_def_cfa_register 13
 2278              	 
 2279 01ca 90BD     	 pop {r4,r7,pc}
 2280              	.L74:
 2281              	 .align 2
 2282              	.L73:
 2283 01cc 2C213000 	 .word 3154220
 2284 01d0 24213000 	 .word 3154212
 2285 01d4 00000000 	 .word swipeInProgress
 2286 01d8 00000000 	 .word swipeInitialTouch_X
 2287 01dc 00000000 	 .word swipeInitialTouch_Y
 2288 01e0 00000000 	 .word swipeDistance_X
 2289 01e4 00000000 	 .word swipeDistance_Y
 2290 01e8 00000000 	 .word swipeEndOfTouch_Debounce
 2291 01ec 00000000 	 .word swipeEvokedBy
 2292 01f0 00000000 	 .word toggle_lock
 2293 01f4 00000000 	 .word swipeDetect
 2294 01f8 00000000 	 .word TFT_cur_Menu
 2295 01fc 00000000 	 .word TFT_touch_cur_Menu__fptr_arr
 2296              	 .cfi_endproc
 2297              	.LFE452:
 2299              	 .section .text.TFT_display,"ax",%progbits
 2300              	 .align 2
 2301              	 .global TFT_display
 2302              	 .thumb
 2303              	 .thumb_func
 2305              	TFT_display:
 2306              	.LFB453:
 598:../Libraries/FT800-FT813-5.x/tft.c **** 
 599:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display(void)
 600:../Libraries/FT800-FT813-5.x/tft.c **** {
 2307              	 .loc 1 600 0
 2308              	 .cfi_startproc
 2309              	 
 2310              	 
 2311 0000 80B5     	 push {r7,lr}
 2312              	.LCFI23:
 2313              	 .cfi_def_cfa_offset 8
 2314              	 .cfi_offset 7,-8
 2315              	 .cfi_offset 14,-4
 2316 0002 00AF     	 add r7,sp,#0
 2317              	.LCFI24:
 2318              	 .cfi_def_cfa_register 7
 601:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Dynamic portion of display-handling, meant to be called every 20ms or more. Created by Rudolph
 602:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 603:../Libraries/FT800-FT813-5.x/tft.c **** 
 604:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 2319              	 .loc 1 604 0
 2320 0004 214B     	 ldr r3,.L78
 2321 0006 1B78     	 ldrb r3,[r3]
 2322 0008 002B     	 cmp r3,#0
 2323 000a 3ED0     	 beq .L75
 605:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 606:../Libraries/FT800-FT813-5.x/tft.c **** 		// Setup static part of the current menu - only needed once when the menu is changed
 607:../Libraries/FT800-FT813-5.x/tft.c **** 		if(TFT_last_Menu != TFT_cur_Menu)
 2324              	 .loc 1 607 0
 2325 000c 204B     	 ldr r3,.L78+4
 2326 000e 1A78     	 ldrb r2,[r3]
 2327 0010 204B     	 ldr r3,.L78+8
 2328 0012 1B78     	 ldrb r3,[r3]
 2329 0014 52B2     	 sxtb r2,r2
 2330 0016 5BB2     	 sxtb r3,r3
 2331 0018 9A42     	 cmp r2,r3
 2332 001a 01D0     	 beq .L77
 608:../Libraries/FT800-FT813-5.x/tft.c **** 			TFT_display_static();
 2333              	 .loc 1 608 0
 2334 001c FFF7FEFF 	 bl TFT_display_static
 2335              	.L77:
 609:../Libraries/FT800-FT813-5.x/tft.c **** 
 610:../Libraries/FT800-FT813-5.x/tft.c **** 		// Debug
 611:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (EVE_DMA)
 612:../Libraries/FT800-FT813-5.x/tft.c **** 			uint16_t cmd_fifo_size;
 613:../Libraries/FT800-FT813-5.x/tft.c **** 			cmd_fifo_size = EVE_dma_buffer_index*4; /* without DMA there is no way to tell how many bytes ar
 614:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 615:../Libraries/FT800-FT813-5.x/tft.c **** 
 616:../Libraries/FT800-FT813-5.x/tft.c **** 		// Get size of last display list to be printed on screen (section "Debug Values")
 617:../Libraries/FT800-FT813-5.x/tft.c **** 		display_list_size = EVE_memRead16(REG_CMD_DL);
 2336              	 .loc 1 617 0
 2337 0020 1D48     	 ldr r0,.L78+12
 2338 0022 FFF7FEFF 	 bl EVE_memRead16
 2339 0026 0346     	 mov r3,r0
 2340 0028 1A46     	 mov r2,r3
 2341 002a 1C4B     	 ldr r3,.L78+16
 2342 002c 1A80     	 strh r2,[r3]
 618:../Libraries/FT800-FT813-5.x/tft.c **** 		tracker = EVE_memRead32(REG_TRACKER);
 2343              	 .loc 1 618 0
 2344 002e 1C48     	 ldr r0,.L78+20
 2345 0030 FFF7FEFF 	 bl EVE_memRead32
 2346 0034 0246     	 mov r2,r0
 2347 0036 1B4B     	 ldr r3,.L78+24
 2348 0038 1A60     	 str r2,[r3]
 619:../Libraries/FT800-FT813-5.x/tft.c **** 
 620:../Libraries/FT800-FT813-5.x/tft.c **** 		// Start Burst (start writing to the cmd-fifo as one stream of bytes, only sending the address on
 621:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst();
 2349              	 .loc 1 621 0
 2350 003a FFF7FEFF 	 bl EVE_start_cmd_burst
 622:../Libraries/FT800-FT813-5.x/tft.c **** 
 623:../Libraries/FT800-FT813-5.x/tft.c **** 
 624:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Start the actual display list
 625:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART);
 2351              	 .loc 1 625 0
 2352 003e 6FF0FF00 	 mvn r0,#255
 2353 0042 FFF7FEFF 	 bl EVE_cmd_dl_burst
 626:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 2354              	 .loc 1 626 0
 2355 0046 6FF07D40 	 mvn r0,#-50331648
 2356 004a FFF7FEFF 	 bl EVE_cmd_dl_burst
 627:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 2357              	 .loc 1 627 0
 2358 004e 1648     	 ldr r0,.L78+28
 2359 0050 FFF7FEFF 	 bl EVE_cmd_dl_burst
 628:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 2360              	 .loc 1 628 0
 2361 0054 4FF04070 	 mov r0,#50331648
 2362 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 629:../Libraries/FT800-FT813-5.x/tft.c **** 
 630:../Libraries/FT800-FT813-5.x/tft.c **** 		// Insert static part of display-list from copy in gfx-mem
 631:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_append_burst(MEM_DL_STATIC, num_dl_static);
 2363              	 .loc 1 631 0
 2364 005c 134B     	 ldr r3,.L78+32
 2365 005e 1B68     	 ldr r3,[r3]
 2366 0060 4FF47F20 	 mov r0,#1044480
 2367 0064 1946     	 mov r1,r3
 2368 0066 FFF7FEFF 	 bl EVE_cmd_append_burst
 632:../Libraries/FT800-FT813-5.x/tft.c **** 
 633:../Libraries/FT800-FT813-5.x/tft.c **** 
 634:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Execute current menu specific code
 635:../Libraries/FT800-FT813-5.x/tft.c **** 		(*TFT_display_cur_Menu__fptr_arr[TFT_cur_Menu])();
 2369              	 .loc 1 635 0
 2370 006a 0A4B     	 ldr r3,.L78+8
 2371 006c 1B78     	 ldrb r3,[r3]
 2372 006e 5BB2     	 sxtb r3,r3
 2373 0070 0F4A     	 ldr r2,.L78+36
 2374 0072 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2375 0076 9847     	 blx r3
 636:../Libraries/FT800-FT813-5.x/tft.c **** 
 637:../Libraries/FT800-FT813-5.x/tft.c **** 
 638:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Finish Display list and burst
 639:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 2376              	 .loc 1 639 0
 2377 0078 0020     	 movs r0,#0
 2378 007a FFF7FEFF 	 bl EVE_cmd_dl_burst
 640:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 2379              	 .loc 1 640 0
 2380 007e 6FF0FE00 	 mvn r0,#254
 2381 0082 FFF7FEFF 	 bl EVE_cmd_dl_burst
 641:../Libraries/FT800-FT813-5.x/tft.c **** 
 642:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 2382              	 .loc 1 642 0
 2383 0086 FFF7FEFF 	 bl EVE_end_cmd_burst
 2384              	.L75:
 643:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 644:../Libraries/FT800-FT813-5.x/tft.c **** }
 2385              	 .loc 1 644 0
 2386 008a 80BD     	 pop {r7,pc}
 2387              	.L79:
 2388              	 .align 2
 2389              	.L78:
 2390 008c 00000000 	 .word tft_active
 2391 0090 00000000 	 .word TFT_last_Menu
 2392 0094 00000000 	 .word TFT_cur_Menu
 2393 0098 00213000 	 .word 3154176
 2394 009c 00000000 	 .word display_list_size
 2395 00a0 00903000 	 .word 3182592
 2396 00a4 00000000 	 .word tracker
 2397 00a8 07000026 	 .word 637534215
 2398 00ac 00000000 	 .word num_dl_static
 2399 00b0 00000000 	 .word TFT_display_cur_Menu__fptr_arr
 2400              	 .cfi_endproc
 2401              	.LFE453:
 2403              	 .section .rodata
 2404 005a 0000     	 .align 2
 2405              	.LC7:
 2406 005c 444C2D73 	 .ascii "DL-size:\000"
 2406      697A653A 
 2406      00
 2407 0065 000000   	 .align 2
 2408              	.LC8:
 2409 0068 53656E73 	 .ascii "Sensor:\000"
 2409      6F723A00 
 2410              	 .section .text.TFT_display_static_menu0,"ax",%progbits
 2411              	 .align 2
 2412              	 .global TFT_display_static_menu0
 2413              	 .thumb
 2414              	 .thumb_func
 2416              	TFT_display_static_menu0:
 2417              	.LFB454:
 645:../Libraries/FT800-FT813-5.x/tft.c **** 
 646:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu0(void){
 2418              	 .loc 1 646 0
 2419              	 .cfi_startproc
 2420              	 
 2421              	 
 2422 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 2423              	.LCFI25:
 2424              	 .cfi_def_cfa_offset 32
 2425              	 .cfi_offset 4,-32
 2426              	 .cfi_offset 5,-28
 2427              	 .cfi_offset 6,-24
 2428              	 .cfi_offset 7,-20
 2429              	 .cfi_offset 8,-16
 2430              	 .cfi_offset 9,-12
 2431              	 .cfi_offset 10,-8
 2432              	 .cfi_offset 14,-4
 2433 0004 8AB0     	 sub sp,sp,#40
 2434              	.LCFI26:
 2435              	 .cfi_def_cfa_offset 72
 2436 0006 0AAF     	 add r7,sp,#40
 2437              	.LCFI27:
 2438              	 .cfi_def_cfa 7,32
 647:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw Banner and divider line on top
 648:../Libraries/FT800-FT813-5.x/tft.c **** 	// Banner
 649:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature*/
 2439              	 .loc 1 649 0
 2440 0008 3A48     	 ldr r0,.L81
 2441 000a FFF7FEFF 	 bl EVE_cmd_dl
 650:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 2442              	 .loc 1 650 0
 2443 000e 3A48     	 ldr r0,.L81+4
 2444 0010 FFF7FEFF 	 bl EVE_cmd_dl
 651:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 2445              	 .loc 1 651 0
 2446 0014 3948     	 ldr r0,.L81+8
 2447 0016 FFF7FEFF 	 bl EVE_cmd_dl
 652:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 2448              	 .loc 1 652 0
 2449 001a 3948     	 ldr r0,.L81+12
 2450 001c FFF7FEFF 	 bl EVE_cmd_dl
 653:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2451              	 .loc 1 653 0
 2452 0020 3848     	 ldr r0,.L81+16
 2453 0022 FFF7FEFF 	 bl EVE_cmd_dl
 654:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2454              	 .loc 1 654 0
 2455 0026 3848     	 ldr r0,.L81+20
 2456 0028 FFF7FEFF 	 bl EVE_cmd_dl
 655:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2457              	 .loc 1 655 0
 2458 002c 3748     	 ldr r0,.L81+24
 2459 002e FFF7FEFF 	 bl EVE_cmd_dl
 656:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2460              	 .loc 1 656 0
 2461 0032 3748     	 ldr r0,.L81+28
 2462 0034 FFF7FEFF 	 bl EVE_cmd_dl
 657:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2463              	 .loc 1 657 0
 2464 0038 4FF00450 	 mov r0,#553648128
 2465 003c FFF7FEFF 	 bl EVE_cmd_dl
 658:../Libraries/FT800-FT813-5.x/tft.c **** 	// Divider
 659:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 2466              	 .loc 1 659 0
 2467 0040 3448     	 ldr r0,.L81+32
 2468 0042 FFF7FEFF 	 bl EVE_cmd_dl
 660:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 2469              	 .loc 1 660 0
 2470 0046 3448     	 ldr r0,.L81+36
 2471 0048 FFF7FEFF 	 bl EVE_cmd_dl
 661:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2472              	 .loc 1 661 0
 2473 004c 2D48     	 ldr r0,.L81+16
 2474 004e FFF7FEFF 	 bl EVE_cmd_dl
 662:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2475              	 .loc 1 662 0
 2476 0052 2D48     	 ldr r0,.L81+20
 2477 0054 FFF7FEFF 	 bl EVE_cmd_dl
 663:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2478              	 .loc 1 663 0
 2479 0058 2C48     	 ldr r0,.L81+24
 2480 005a FFF7FEFF 	 bl EVE_cmd_dl
 664:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2481              	 .loc 1 664 0
 2482 005e 2C48     	 ldr r0,.L81+28
 2483 0060 FFF7FEFF 	 bl EVE_cmd_dl
 665:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2484              	 .loc 1 665 0
 2485 0064 4FF00450 	 mov r0,#553648128
 2486 0068 FFF7FEFF 	 bl EVE_cmd_dl
 666:../Libraries/FT800-FT813-5.x/tft.c **** 
 667:../Libraries/FT800-FT813-5.x/tft.c **** 	// Add the static text
 668:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 2487              	 .loc 1 668 0
 2488 006c 4FF04070 	 mov r0,#50331648
 2489 0070 FFF7FEFF 	 bl EVE_cmd_dl
 669:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 2490              	 .loc 1 669 0
 2491 0074 2748     	 ldr r0,.L81+32
 2492 0076 FFF7FEFF 	 bl EVE_cmd_dl
 670:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 671:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_text(10, EVE_VSIZE - 65, 26, 0, "Bytes: ");
 672:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 673:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 10, 26, 0, "DL-size:");
 2493              	 .loc 1 673 0
 2494 007a 284B     	 ldr r3,.L81+40
 2495 007c 0093     	 str r3,[sp]
 2496 007e 4FF4B470 	 mov r0,#360
 2497 0082 0A21     	 movs r1,#10
 2498 0084 1A22     	 movs r2,#26
 2499 0086 0023     	 movs r3,#0
 2500 0088 FFF7FEFF 	 bl EVE_cmd_text
 674:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 25, 26, 0, "Sensor:");
 2501              	 .loc 1 674 0
 2502 008c 244B     	 ldr r3,.L81+44
 2503 008e 0093     	 str r3,[sp]
 2504 0090 4FF4B470 	 mov r0,#360
 2505 0094 1921     	 movs r1,#25
 2506 0096 1A22     	 movs r2,#26
 2507 0098 0023     	 movs r3,#0
 2508 009a FFF7FEFF 	 bl EVE_cmd_text
 675:../Libraries/FT800-FT813-5.x/tft.c **** 
 676:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the static part of the Graph to the display list
 677:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphStatic(0, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, G_v
 2509              	 .loc 1 677 0
 2510 009e 214B     	 ldr r3,.L81+48
 2511 00a0 B3F800A0 	 ldrh r10,[r3]
 2512 00a4 204B     	 ldr r3,.L81+52
 2513 00a6 B3F800C0 	 ldrh ip,[r3]
 2514 00aa 204B     	 ldr r3,.L81+56
 2515 00ac B3F800E0 	 ldrh lr,[r3]
 2516 00b0 1F4B     	 ldr r3,.L81+60
 2517 00b2 1E88     	 ldrh r6,[r3]
 2518 00b4 1F4B     	 ldr r3,.L81+64
 2519 00b6 D3E90089 	 ldrd r8,[r3]
 2520 00ba 1F4B     	 ldr r3,.L81+68
 2521 00bc D3E90045 	 ldrd r4,[r3]
 2522 00c0 1E4B     	 ldr r3,.L81+72
 2523 00c2 D3E90001 	 ldrd r0,[r3]
 2524 00c6 1E4B     	 ldr r3,.L81+76
 2525 00c8 D3E90023 	 ldrd r2,[r3]
 2526 00cc 0096     	 str r6,[sp]
 2527 00ce 0A26     	 movs r6,#10
 2528 00d0 0196     	 str r6,[sp,#4]
 2529 00d2 CDE90289 	 strd r8,[sp,#8]
 2530 00d6 CDE90445 	 strd r4,[sp,#16]
 2531 00da CDE90601 	 strd r0,[sp,#24]
 2532 00de CDE90823 	 strd r2,[sp,#32]
 2533 00e2 0020     	 movs r0,#0
 2534 00e4 5146     	 mov r1,r10
 2535 00e6 6246     	 mov r2,ip
 2536 00e8 7346     	 mov r3,lr
 2537 00ea FFF7FEFF 	 bl TFT_GraphStatic
 678:../Libraries/FT800-FT813-5.x/tft.c **** 
 679:../Libraries/FT800-FT813-5.x/tft.c **** 
 680:../Libraries/FT800-FT813-5.x/tft.c **** }
 2538              	 .loc 1 680 0
 2539 00ee BD46     	 mov sp,r7
 2540              	.LCFI28:
 2541              	 .cfi_def_cfa_register 13
 2542              	 
 2543 00f0 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 2544              	.L82:
 2545              	 .align 2
 2546              	.L81:
 2547 00f4 01000003 	 .word 50331649
 2548 00f8 1000000E 	 .word 234881040
 2549 00fc 4B586404 	 .word 73685067
 2550 0100 0700001F 	 .word 520093703
 2551 0104 42000040 	 .word 1073741890
 2552 0108 42008C40 	 .word 1082916930
 2553 010c 3200A040 	 .word 1084227634
 2554 0110 3200F040 	 .word 1089470514
 2555 0114 29CDF304 	 .word 83086633
 2556 0118 0400001F 	 .word 520093700
 2557 011c 5C000000 	 .word .LC7
 2558 0120 68000000 	 .word .LC8
 2559 0124 00000000 	 .word G_x
 2560 0128 00000000 	 .word G_y
 2561 012c 00000000 	 .word G_width
 2562 0130 00000000 	 .word G_height
 2563 0134 00000000 	 .word G_amp_max
 2564 0138 00000000 	 .word G_t_max
 2565 013c 00000000 	 .word G_h_grid_lines
 2566 0140 00000000 	 .word G_v_grid_lines
 2567              	 .cfi_endproc
 2568              	.LFE454:
 2570              	 .section .rodata
 2571              	 .align 2
 2572              	.LC9:
 2573 0070 583A00   	 .ascii "X:\000"
 2574 0073 00       	 .align 2
 2575              	.LC10:
 2576 0074 593A00   	 .ascii "Y:\000"
 2577              	 .section .text.TFT_display_static_menu1,"ax",%progbits
 2578              	 .align 2
 2579              	 .global TFT_display_static_menu1
 2580              	 .thumb
 2581              	 .thumb_func
 2583              	TFT_display_static_menu1:
 2584              	.LFB455:
 681:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu1(void){
 2585              	 .loc 1 681 0
 2586              	 .cfi_startproc
 2587              	 
 2588              	 
 2589 0000 80B5     	 push {r7,lr}
 2590              	.LCFI29:
 2591              	 .cfi_def_cfa_offset 8
 2592              	 .cfi_offset 7,-8
 2593              	 .cfi_offset 14,-4
 2594 0002 82B0     	 sub sp,sp,#8
 2595              	.LCFI30:
 2596              	 .cfi_def_cfa_offset 16
 2597 0004 02AF     	 add r7,sp,#8
 2598              	.LCFI31:
 2599              	 .cfi_def_cfa 7,8
 682:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw Banner and divider line on top
 683:../Libraries/FT800-FT813-5.x/tft.c **** 	// Banner
 684:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature*/
 2600              	 .loc 1 684 0
 2601 0006 2648     	 ldr r0,.L84
 2602 0008 FFF7FEFF 	 bl EVE_cmd_dl
 685:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 2603              	 .loc 1 685 0
 2604 000c 2548     	 ldr r0,.L84+4
 2605 000e FFF7FEFF 	 bl EVE_cmd_dl
 686:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 2606              	 .loc 1 686 0
 2607 0012 2548     	 ldr r0,.L84+8
 2608 0014 FFF7FEFF 	 bl EVE_cmd_dl
 687:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 2609              	 .loc 1 687 0
 2610 0018 2448     	 ldr r0,.L84+12
 2611 001a FFF7FEFF 	 bl EVE_cmd_dl
 688:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2612              	 .loc 1 688 0
 2613 001e 2448     	 ldr r0,.L84+16
 2614 0020 FFF7FEFF 	 bl EVE_cmd_dl
 689:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2615              	 .loc 1 689 0
 2616 0024 2348     	 ldr r0,.L84+20
 2617 0026 FFF7FEFF 	 bl EVE_cmd_dl
 690:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2618              	 .loc 1 690 0
 2619 002a 2348     	 ldr r0,.L84+24
 2620 002c FFF7FEFF 	 bl EVE_cmd_dl
 691:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2621              	 .loc 1 691 0
 2622 0030 2248     	 ldr r0,.L84+28
 2623 0032 FFF7FEFF 	 bl EVE_cmd_dl
 692:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2624              	 .loc 1 692 0
 2625 0036 4FF00450 	 mov r0,#553648128
 2626 003a FFF7FEFF 	 bl EVE_cmd_dl
 693:../Libraries/FT800-FT813-5.x/tft.c **** 	// Divider
 694:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 2627              	 .loc 1 694 0
 2628 003e 2048     	 ldr r0,.L84+32
 2629 0040 FFF7FEFF 	 bl EVE_cmd_dl
 695:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 2630              	 .loc 1 695 0
 2631 0044 1F48     	 ldr r0,.L84+36
 2632 0046 FFF7FEFF 	 bl EVE_cmd_dl
 696:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2633              	 .loc 1 696 0
 2634 004a 1948     	 ldr r0,.L84+16
 2635 004c FFF7FEFF 	 bl EVE_cmd_dl
 697:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2636              	 .loc 1 697 0
 2637 0050 1848     	 ldr r0,.L84+20
 2638 0052 FFF7FEFF 	 bl EVE_cmd_dl
 698:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2639              	 .loc 1 698 0
 2640 0056 1848     	 ldr r0,.L84+24
 2641 0058 FFF7FEFF 	 bl EVE_cmd_dl
 699:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2642              	 .loc 1 699 0
 2643 005c 1748     	 ldr r0,.L84+28
 2644 005e FFF7FEFF 	 bl EVE_cmd_dl
 700:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2645              	 .loc 1 700 0
 2646 0062 4FF00450 	 mov r0,#553648128
 2647 0066 FFF7FEFF 	 bl EVE_cmd_dl
 701:../Libraries/FT800-FT813-5.x/tft.c **** 
 702:../Libraries/FT800-FT813-5.x/tft.c **** 	// Add the static text
 703:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 2648              	 .loc 1 703 0
 2649 006a 4FF04070 	 mov r0,#50331648
 2650 006e FFF7FEFF 	 bl EVE_cmd_dl
 704:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 2651              	 .loc 1 704 0
 2652 0072 1348     	 ldr r0,.L84+32
 2653 0074 FFF7FEFF 	 bl EVE_cmd_dl
 705:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 10, 26, 0, "X:");
 2654              	 .loc 1 705 0
 2655 0078 134B     	 ldr r3,.L84+40
 2656 007a 0093     	 str r3,[sp]
 2657 007c 4FF4B470 	 mov r0,#360
 2658 0080 0A21     	 movs r1,#10
 2659 0082 1A22     	 movs r2,#26
 2660 0084 0023     	 movs r3,#0
 2661 0086 FFF7FEFF 	 bl EVE_cmd_text
 706:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 25, 26, 0, "Y:");
 2662              	 .loc 1 706 0
 2663 008a 104B     	 ldr r3,.L84+44
 2664 008c 0093     	 str r3,[sp]
 2665 008e 4FF4B470 	 mov r0,#360
 2666 0092 1921     	 movs r1,#25
 2667 0094 1A22     	 movs r2,#26
 2668 0096 0023     	 movs r3,#0
 2669 0098 FFF7FEFF 	 bl EVE_cmd_text
 707:../Libraries/FT800-FT813-5.x/tft.c **** 
 708:../Libraries/FT800-FT813-5.x/tft.c **** }
 2670              	 .loc 1 708 0
 2671 009c BD46     	 mov sp,r7
 2672              	.LCFI32:
 2673              	 .cfi_def_cfa_register 13
 2674              	 
 2675 009e 80BD     	 pop {r7,pc}
 2676              	.L85:
 2677              	 .align 2
 2678              	.L84:
 2679 00a0 01000003 	 .word 50331649
 2680 00a4 1000000E 	 .word 234881040
 2681 00a8 4B586404 	 .word 73685067
 2682 00ac 0700001F 	 .word 520093703
 2683 00b0 42000040 	 .word 1073741890
 2684 00b4 42008C40 	 .word 1082916930
 2685 00b8 3200A040 	 .word 1084227634
 2686 00bc 3200F040 	 .word 1089470514
 2687 00c0 29CDF304 	 .word 83086633
 2688 00c4 0400001F 	 .word 520093700
 2689 00c8 70000000 	 .word .LC9
 2690 00cc 74000000 	 .word .LC10
 2691              	 .cfi_endproc
 2692              	.LFE455:
 2694              	 .section .rodata
 2695 0077 00       	 .align 2
 2696              	.LC11:
 2697 0078 53656E73 	 .ascii "Sensor\000"
 2697      6F7200
 2698 007f 00       	 .align 2
 2699              	.LC12:
 2700 0080 496D7000 	 .ascii "Imp\000"
 2701              	 .align 2
 2702              	.LC13:
 2703 0084 53617700 	 .ascii "Saw\000"
 2704              	 .align 2
 2705              	.LC14:
 2706 0088 53696E65 	 .ascii "Sine\000"
 2706      00
 2707 008d 000000   	 .align 2
 2708              	.LC15:
 2709 0090 526F6C6C 	 .ascii "Roll\000"
 2709      00
 2710 0095 000000   	 .align 2
 2711              	.LC16:
 2712 0098 4672616D 	 .ascii "Frame\000"
 2712      6500
 2713 009e 0000     	 .align 2
 2714              	.LC17:
 2715 00a0 44696D6D 	 .ascii "Dimmer\000"
 2715      657200
 2716 00a7 00       	 .align 2
 2717              	.LC18:
 2718 00a8 252E326C 	 .ascii "%.2lf\000"
 2718      6600
 2719 00ae 0000     	 .align 2
 2720              	.LC19:
 2721 00b0 205600   	 .ascii " V\000"
 2722              	 .section .text.TFT_display_menu0,"ax",%progbits
 2723              	 .align 2
 2724              	 .global TFT_display_menu0
 2725              	 .thumb
 2726              	 .thumb_func
 2728              	TFT_display_menu0:
 2729              	.LFB456:
 709:../Libraries/FT800-FT813-5.x/tft.c **** 
 710:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu0(void)
 711:../Libraries/FT800-FT813-5.x/tft.c **** {
 2730              	 .loc 1 711 0
 2731              	 .cfi_startproc
 2732              	 
 2733              	 
 2734 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2735              	.LCFI33:
 2736              	 .cfi_def_cfa_offset 20
 2737              	 .cfi_offset 4,-20
 2738              	 .cfi_offset 5,-16
 2739              	 .cfi_offset 6,-12
 2740              	 .cfi_offset 7,-8
 2741              	 .cfi_offset 14,-4
 2742 0002 93B0     	 sub sp,sp,#76
 2743              	.LCFI34:
 2744              	 .cfi_def_cfa_offset 96
 2745 0004 0AAF     	 add r7,sp,#40
 2746              	.LCFI35:
 2747              	 .cfi_def_cfa 7,56
 712:../Libraries/FT800-FT813-5.x/tft.c **** 	/// The inputs are used to draw the Graph data. Note that also some predefined graph settings are 
 713:../Libraries/FT800-FT813-5.x/tft.c **** 
 714:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Display BUTTONS and Toggles
 715:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 2748              	 .loc 1 715 0
 2749 0006 7C48     	 ldr r0,.L93
 2750 0008 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 716:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 2751              	 .loc 1 716 0
 2752 000c 7B48     	 ldr r0,.L93+4
 2753 000e FFF7FEFF 	 bl EVE_cmd_dl_burst
 717:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 2754              	 .loc 1 717 0
 2755 0012 7B48     	 ldr r0,.L93+8
 2756 0014 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 718:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 2757              	 .loc 1 718 0
 2758 0018 7A48     	 ldr r0,.L93+12
 2759 001a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 719:../Libraries/FT800-FT813-5.x/tft.c **** 
 720:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(13)); /* assign tag-value '13' to the button that follows */
 2760              	 .loc 1 720 0
 2761 001e 7A48     	 ldr r0,.L93+16
 2762 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 721:../Libraries/FT800-FT813-5.x/tft.c **** 	if(InputType == 0){ 		EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sensor");	}
 2763              	 .loc 1 721 0
 2764 0024 794B     	 ldr r3,.L93+20
 2765 0026 1B78     	 ldrb r3,[r3]
 2766 0028 DBB2     	 uxtb r3,r3
 2767 002a 002B     	 cmp r3,#0
 2768 002c 0CD1     	 bne .L87
 2769              	 .loc 1 721 0 is_stmt 0 discriminator 1
 2770 002e 1B23     	 movs r3,#27
 2771 0030 0093     	 str r3,[sp]
 2772 0032 0023     	 movs r3,#0
 2773 0034 0193     	 str r3,[sp,#4]
 2774 0036 764B     	 ldr r3,.L93+24
 2775 0038 0293     	 str r3,[sp,#8]
 2776 003a 1420     	 movs r0,#20
 2777 003c 0F21     	 movs r1,#15
 2778 003e 5022     	 movs r2,#80
 2779 0040 1E23     	 movs r3,#30
 2780 0042 FFF7FEFF 	 bl EVE_cmd_button_burst
 2781 0046 2FE0     	 b .L88
 2782              	.L87:
 722:../Libraries/FT800-FT813-5.x/tft.c **** 	else if(InputType == 1){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Imp");	}
 2783              	 .loc 1 722 0 is_stmt 1
 2784 0048 704B     	 ldr r3,.L93+20
 2785 004a 1B78     	 ldrb r3,[r3]
 2786 004c DBB2     	 uxtb r3,r3
 2787 004e 012B     	 cmp r3,#1
 2788 0050 0CD1     	 bne .L89
 2789              	 .loc 1 722 0 is_stmt 0 discriminator 1
 2790 0052 1B23     	 movs r3,#27
 2791 0054 0093     	 str r3,[sp]
 2792 0056 0023     	 movs r3,#0
 2793 0058 0193     	 str r3,[sp,#4]
 2794 005a 6E4B     	 ldr r3,.L93+28
 2795 005c 0293     	 str r3,[sp,#8]
 2796 005e 1420     	 movs r0,#20
 2797 0060 0F21     	 movs r1,#15
 2798 0062 5022     	 movs r2,#80
 2799 0064 1E23     	 movs r3,#30
 2800 0066 FFF7FEFF 	 bl EVE_cmd_button_burst
 2801 006a 1DE0     	 b .L88
 2802              	.L89:
 723:../Libraries/FT800-FT813-5.x/tft.c **** 	else if(InputType == 2){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Saw");	}
 2803              	 .loc 1 723 0 is_stmt 1
 2804 006c 674B     	 ldr r3,.L93+20
 2805 006e 1B78     	 ldrb r3,[r3]
 2806 0070 DBB2     	 uxtb r3,r3
 2807 0072 022B     	 cmp r3,#2
 2808 0074 0CD1     	 bne .L90
 2809              	 .loc 1 723 0 is_stmt 0 discriminator 1
 2810 0076 1B23     	 movs r3,#27
 2811 0078 0093     	 str r3,[sp]
 2812 007a 0023     	 movs r3,#0
 2813 007c 0193     	 str r3,[sp,#4]
 2814 007e 664B     	 ldr r3,.L93+32
 2815 0080 0293     	 str r3,[sp,#8]
 2816 0082 1420     	 movs r0,#20
 2817 0084 0F21     	 movs r1,#15
 2818 0086 5022     	 movs r2,#80
 2819 0088 1E23     	 movs r3,#30
 2820 008a FFF7FEFF 	 bl EVE_cmd_button_burst
 2821 008e 0BE0     	 b .L88
 2822              	.L90:
 724:../Libraries/FT800-FT813-5.x/tft.c **** 	else{						EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sine");	}
 2823              	 .loc 1 724 0 is_stmt 1
 2824 0090 1B23     	 movs r3,#27
 2825 0092 0093     	 str r3,[sp]
 2826 0094 0023     	 movs r3,#0
 2827 0096 0193     	 str r3,[sp,#4]
 2828 0098 604B     	 ldr r3,.L93+36
 2829 009a 0293     	 str r3,[sp,#8]
 2830 009c 1420     	 movs r0,#20
 2831 009e 0F21     	 movs r1,#15
 2832 00a0 5022     	 movs r2,#80
 2833 00a2 1E23     	 movs r3,#30
 2834 00a4 FFF7FEFF 	 bl EVE_cmd_button_burst
 2835              	.L88:
 725:../Libraries/FT800-FT813-5.x/tft.c **** 
 726:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 2836              	 .loc 1 726 0
 2837 00a8 5D48     	 ldr r0,.L93+40
 2838 00aa FFF7FEFF 	 bl EVE_cmd_dl_burst
 727:../Libraries/FT800-FT813-5.x/tft.c **** 	if(toggle_state_graphmode){
 2839              	 .loc 1 727 0
 2840 00ae 5D4B     	 ldr r3,.L93+44
 2841 00b0 1B88     	 ldrh r3,[r3]
 2842 00b2 002B     	 cmp r3,#0
 2843 00b4 0DD0     	 beq .L91
 728:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "Roll");
 2844              	 .loc 1 728 0
 2845 00b6 0023     	 movs r3,#0
 2846 00b8 0093     	 str r3,[sp]
 2847 00ba 4FF6FF73 	 movw r3,#65535
 2848 00be 0193     	 str r3,[sp,#4]
 2849 00c0 594B     	 ldr r3,.L93+48
 2850 00c2 0293     	 str r3,[sp,#8]
 2851 00c4 7820     	 movs r0,#120
 2852 00c6 1821     	 movs r1,#24
 2853 00c8 3E22     	 movs r2,#62
 2854 00ca 1B23     	 movs r3,#27
 2855 00cc FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2856 00d0 0BE0     	 b .L92
 2857              	.L91:
 729:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 730:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 731:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "Frame");
 2858              	 .loc 1 731 0
 2859 00d2 0023     	 movs r3,#0
 2860 00d4 0093     	 str r3,[sp]
 2861 00d6 0023     	 movs r3,#0
 2862 00d8 0193     	 str r3,[sp,#4]
 2863 00da 544B     	 ldr r3,.L93+52
 2864 00dc 0293     	 str r3,[sp,#8]
 2865 00de 7820     	 movs r0,#120
 2866 00e0 1821     	 movs r1,#24
 2867 00e2 3E22     	 movs r2,#62
 2868 00e4 1B23     	 movs r3,#27
 2869 00e6 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2870              	.L92:
 732:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 733:../Libraries/FT800-FT813-5.x/tft.c **** 
 734:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(10)); /* assign tag-value '10' to the button that follows */
 2871              	 .loc 1 734 0
 2872 00ea 5148     	 ldr r0,.L93+56
 2873 00ec FFF7FEFF 	 bl EVE_cmd_dl_burst
 735:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_button_burst(205,15,80,30, 27, toggle_state_dimmer,"Dimmer");
 2874              	 .loc 1 735 0
 2875 00f0 504B     	 ldr r3,.L93+60
 2876 00f2 1B88     	 ldrh r3,[r3]
 2877 00f4 1B22     	 movs r2,#27
 2878 00f6 0092     	 str r2,[sp]
 2879 00f8 0193     	 str r3,[sp,#4]
 2880 00fa 4F4B     	 ldr r3,.L93+64
 2881 00fc 0293     	 str r3,[sp,#8]
 2882 00fe CD20     	 movs r0,#205
 2883 0100 0F21     	 movs r1,#15
 2884 0102 5022     	 movs r2,#80
 2885 0104 1E23     	 movs r3,#30
 2886 0106 FFF7FEFF 	 bl EVE_cmd_button_burst
 736:../Libraries/FT800-FT813-5.x/tft.c **** 
 737:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 2887              	 .loc 1 737 0
 2888 010a 4FF04070 	 mov r0,#50331648
 2889 010e FFF7FEFF 	 bl EVE_cmd_dl_burst
 738:../Libraries/FT800-FT813-5.x/tft.c **** 
 739:../Libraries/FT800-FT813-5.x/tft.c **** 
 740:../Libraries/FT800-FT813-5.x/tft.c **** 
 741:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Debug Values
 742:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 743:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(120, EVE_VSIZE - 65, 26, EVE_OPT_RIGHTX, cmd_fifo_size); /* number of bytes w
 744:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 745:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, display_list_size); /* number of bytes written t
 2890              	 .loc 1 745 0
 2891 0112 4A4B     	 ldr r3,.L93+68
 2892 0114 1B88     	 ldrh r3,[r3]
 2893 0116 0093     	 str r3,[sp]
 2894 0118 4FF4EB70 	 mov r0,#470
 2895 011c 0A21     	 movs r1,#10
 2896 011e 1A22     	 movs r2,#26
 2897 0120 4FF40063 	 mov r3,#2048
 2898 0124 FFF7FEFF 	 bl EVE_cmd_number_burst
 746:../Libraries/FT800-FT813-5.x/tft.c **** 
 747:../Libraries/FT800-FT813-5.x/tft.c **** 	// Write current sensor value with unit
 748:../Libraries/FT800-FT813-5.x/tft.c **** 	char buffer[32]; // buffer for double to string conversion
 749:../Libraries/FT800-FT813-5.x/tft.c **** 	sprintf(buffer, "%.2lf", (G_amp_max/G_y_max)*InputBuffer1[InputBuffer1_idx]); // double to string 
 2899              	 .loc 1 749 0
 2900 0128 454B     	 ldr r3,.L93+72
 2901 012a D3E90001 	 ldrd r0,[r3]
 2902 012e 454B     	 ldr r3,.L93+76
 2903 0130 D3E90023 	 ldrd r2,[r3]
 2904 0134 FFF7FEFF 	 bl __aeabi_ddiv
 2905 0138 0246     	 mov r2,r0
 2906 013a 0B46     	 mov r3,r1
 2907 013c 1446     	 mov r4,r2
 2908 013e 1D46     	 mov r5,r3
 2909 0140 414B     	 ldr r3,.L93+80
 2910 0142 1B88     	 ldrh r3,[r3]
 2911 0144 1A46     	 mov r2,r3
 2912 0146 414B     	 ldr r3,.L93+84
 2913 0148 33F81230 	 ldrh r3,[r3,r2,lsl#1]
 2914 014c 1846     	 mov r0,r3
 2915 014e FFF7FEFF 	 bl __aeabi_i2d
 2916 0152 0246     	 mov r2,r0
 2917 0154 0B46     	 mov r3,r1
 2918 0156 2046     	 mov r0,r4
 2919 0158 2946     	 mov r1,r5
 2920 015a FFF7FEFF 	 bl __aeabi_dmul
 2921 015e 0246     	 mov r2,r0
 2922 0160 0B46     	 mov r3,r1
 2923 0162 1446     	 mov r4,r2
 2924 0164 1D46     	 mov r5,r3
 2925 0166 3B46     	 mov r3,r7
 2926 0168 1846     	 mov r0,r3
 2927 016a 3949     	 ldr r1,.L93+88
 2928 016c 2246     	 mov r2,r4
 2929 016e 2B46     	 mov r3,r5
 2930 0170 FFF7FEFF 	 bl sprintf
 750:../Libraries/FT800-FT813-5.x/tft.c **** 	strcat(buffer, unit_Sensor);
 2931              	 .loc 1 750 0
 2932 0174 3B46     	 mov r3,r7
 2933 0176 1846     	 mov r0,r3
 2934 0178 FFF7FEFF 	 bl strlen
 2935 017c 0346     	 mov r3,r0
 2936 017e 1A46     	 mov r2,r3
 2937 0180 3B46     	 mov r3,r7
 2938 0182 1344     	 add r3,r3,r2
 2939 0184 334A     	 ldr r2,.L93+92
 2940 0186 1188     	 ldrh r1,[r2]
 2941 0188 9278     	 ldrb r2,[r2,#2]
 2942 018a 1980     	 strh r1,[r3]
 2943 018c 9A70     	 strb r2,[r3,#2]
 751:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text_burst(470, 25, 26, EVE_OPT_RIGHTX, buffer);
 2944              	 .loc 1 751 0
 2945 018e 3B46     	 mov r3,r7
 2946 0190 0093     	 str r3,[sp]
 2947 0192 4FF4EB70 	 mov r0,#470
 2948 0196 1921     	 movs r1,#25
 2949 0198 1A22     	 movs r2,#26
 2950 019a 4FF40063 	 mov r3,#2048
 2951 019e FFF7FEFF 	 bl EVE_cmd_text_burst
 752:../Libraries/FT800-FT813-5.x/tft.c **** 
 753:../Libraries/FT800-FT813-5.x/tft.c **** 
 754:../Libraries/FT800-FT813-5.x/tft.c **** 
 755:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH
 756:../Libraries/FT800-FT813-5.x/tft.c **** 	///// Print dynamic part of the Graph (data & marker)
 757:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphData(G_x, G_y, G_width, G_height, G_PADDING, G_y_max, &InputBuffer1[0], INPUTBUFFER1_SIZE
 2952              	 .loc 1 757 0
 2953 01a2 2D4B     	 ldr r3,.L93+96
 2954 01a4 B3F800E0 	 ldrh lr,[r3]
 2955 01a8 2C4B     	 ldr r3,.L93+100
 2956 01aa 1E88     	 ldrh r6,[r3]
 2957 01ac 2C4B     	 ldr r3,.L93+104
 2958 01ae 1D88     	 ldrh r5,[r3]
 2959 01b0 2C4B     	 ldr r3,.L93+108
 2960 01b2 1C88     	 ldrh r4,[r3]
 2961 01b4 234B     	 ldr r3,.L93+76
 2962 01b6 D3E90023 	 ldrd r2,[r3]
 2963 01ba 1A49     	 ldr r1,.L93+44
 2964 01bc 0988     	 ldrh r1,[r1]
 2965 01be C9B2     	 uxtb r1,r1
 2966 01c0 0A20     	 movs r0,#10
 2967 01c2 0090     	 str r0,[sp]
 2968 01c4 CDE90223 	 strd r2,[sp,#8]
 2969 01c8 204B     	 ldr r3,.L93+84
 2970 01ca 0493     	 str r3,[sp,#16]
 2971 01cc 4FF4DC73 	 mov r3,#440
 2972 01d0 0593     	 str r3,[sp,#20]
 2973 01d2 1D4B     	 ldr r3,.L93+80
 2974 01d4 0693     	 str r3,[sp,#24]
 2975 01d6 0791     	 str r1,[sp,#28]
 2976 01d8 43F69E73 	 movw r3,#16286
 2977 01dc 0893     	 str r3,[sp,#32]
 2978 01de 4FF47F03 	 mov r3,#16711680
 2979 01e2 0993     	 str r3,[sp,#36]
 2980 01e4 7046     	 mov r0,lr
 2981 01e6 3146     	 mov r1,r6
 2982 01e8 2A46     	 mov r2,r5
 2983 01ea 2346     	 mov r3,r4
 2984 01ec FFF7FEFF 	 bl TFT_GraphData
 758:../Libraries/FT800-FT813-5.x/tft.c **** 
 759:../Libraries/FT800-FT813-5.x/tft.c **** }
 2985              	 .loc 1 759 0
 2986 01f0 2437     	 adds r7,r7,#36
 2987              	.LCFI36:
 2988              	 .cfi_def_cfa_offset 20
 2989 01f2 BD46     	 mov sp,r7
 2990              	.LCFI37:
 2991              	 .cfi_def_cfa_register 13
 2992              	 
 2993 01f4 F0BD     	 pop {r4,r5,r6,r7,pc}
 2994              	.L94:
 2995 01f6 00BF     	 .align 2
 2996              	.L93:
 2997 01f8 124B8C00 	 .word 9194258
 2998 01fc EEF8FF04 	 .word 83884270
 2999 0200 2BA9EA00 	 .word 15378731
 3000 0204 6696AD00 	 .word 11376230
 3001 0208 0D000003 	 .word 50331661
 3002 020c 00000000 	 .word InputType
 3003 0210 78000000 	 .word .LC11
 3004 0214 80000000 	 .word .LC12
 3005 0218 84000000 	 .word .LC13
 3006 021c 88000000 	 .word .LC14
 3007 0220 0C000003 	 .word 50331660
 3008 0224 00000000 	 .word toggle_state_graphmode
 3009 0228 90000000 	 .word .LC15
 3010 022c 98000000 	 .word .LC16
 3011 0230 0A000003 	 .word 50331658
 3012 0234 00000000 	 .word toggle_state_dimmer
 3013 0238 A0000000 	 .word .LC17
 3014 023c 00000000 	 .word display_list_size
 3015 0240 00000000 	 .word G_amp_max
 3016 0244 00000000 	 .word G_y_max
 3017 0248 00000000 	 .word InputBuffer1_idx
 3018 024c 00000000 	 .word InputBuffer1
 3019 0250 A8000000 	 .word .LC18
 3020 0254 B0000000 	 .word .LC19
 3021 0258 00000000 	 .word G_x
 3022 025c 00000000 	 .word G_y
 3023 0260 00000000 	 .word G_width
 3024 0264 00000000 	 .word G_height
 3025              	 .cfi_endproc
 3026              	.LFE456:
 3028              	 .section .rodata
 3029 00b3 00       	 .align 2
 3030              	.LC20:
 3031 00b4 6C6900   	 .ascii "li\000"
 3032 00b7 00       	 .align 2
 3033              	.LC21:
 3034 00b8 726500   	 .ascii "re\000"
 3035              	 .section .text.TFT_display_menu1,"ax",%progbits
 3036              	 .align 2
 3037              	 .global TFT_display_menu1
 3038              	 .thumb
 3039              	 .thumb_func
 3041              	TFT_display_menu1:
 3042              	.LFB457:
 760:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu1(void)
 761:../Libraries/FT800-FT813-5.x/tft.c **** {
 3043              	 .loc 1 761 0
 3044              	 .cfi_startproc
 3045              	 
 3046              	 
 3047 0000 80B5     	 push {r7,lr}
 3048              	.LCFI38:
 3049              	 .cfi_def_cfa_offset 8
 3050              	 .cfi_offset 7,-8
 3051              	 .cfi_offset 14,-4
 3052 0002 84B0     	 sub sp,sp,#16
 3053              	.LCFI39:
 3054              	 .cfi_def_cfa_offset 24
 3055 0004 04AF     	 add r7,sp,#16
 3056              	.LCFI40:
 3057              	 .cfi_def_cfa 7,8
 762:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Test menu
 763:../Libraries/FT800-FT813-5.x/tft.c **** 
 764:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Display BUTTONS and Toggles
 765:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 3058              	 .loc 1 765 0
 3059 0006 2648     	 ldr r0,.L98
 3060 0008 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 766:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 3061              	 .loc 1 766 0
 3062 000c 2548     	 ldr r0,.L98+4
 3063 000e FFF7FEFF 	 bl EVE_cmd_dl_burst
 767:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 3064              	 .loc 1 767 0
 3065 0012 2548     	 ldr r0,.L98+8
 3066 0014 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 768:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 3067              	 .loc 1 768 0
 3068 0018 2448     	 ldr r0,.L98+12
 3069 001a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 769:../Libraries/FT800-FT813-5.x/tft.c **** 
 770:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 3070              	 .loc 1 770 0
 3071 001e 2448     	 ldr r0,.L98+16
 3072 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 771:../Libraries/FT800-FT813-5.x/tft.c **** 	if(toggle_state_graphmode){
 3073              	 .loc 1 771 0
 3074 0024 234B     	 ldr r3,.L98+20
 3075 0026 1B88     	 ldrh r3,[r3]
 3076 0028 002B     	 cmp r3,#0
 3077 002a 0DD0     	 beq .L96
 772:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "li");
 3078              	 .loc 1 772 0
 3079 002c 0023     	 movs r3,#0
 3080 002e 0093     	 str r3,[sp]
 3081 0030 4FF6FF73 	 movw r3,#65535
 3082 0034 0193     	 str r3,[sp,#4]
 3083 0036 204B     	 ldr r3,.L98+24
 3084 0038 0293     	 str r3,[sp,#8]
 3085 003a 7820     	 movs r0,#120
 3086 003c 1821     	 movs r1,#24
 3087 003e 3E22     	 movs r2,#62
 3088 0040 1B23     	 movs r3,#27
 3089 0042 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 3090 0046 0BE0     	 b .L97
 3091              	.L96:
 773:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 774:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 775:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "re");
 3092              	 .loc 1 775 0
 3093 0048 0023     	 movs r3,#0
 3094 004a 0093     	 str r3,[sp]
 3095 004c 0023     	 movs r3,#0
 3096 004e 0193     	 str r3,[sp,#4]
 3097 0050 1A4B     	 ldr r3,.L98+28
 3098 0052 0293     	 str r3,[sp,#8]
 3099 0054 7820     	 movs r0,#120
 3100 0056 1821     	 movs r1,#24
 3101 0058 3E22     	 movs r2,#62
 3102 005a 1B23     	 movs r3,#27
 3103 005c FFF7FEFF 	 bl EVE_cmd_toggle_burst
 3104              	.L97:
 776:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 777:../Libraries/FT800-FT813-5.x/tft.c **** 
 778:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 3105              	 .loc 1 778 0
 3106 0060 4FF04070 	 mov r0,#50331648
 3107 0064 FFF7FEFF 	 bl EVE_cmd_dl_burst
 779:../Libraries/FT800-FT813-5.x/tft.c **** 
 780:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_TEXTCOLOR);
 3108              	 .loc 1 780 0
 3109 0068 1548     	 ldr r0,.L98+32
 3110 006a FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 781:../Libraries/FT800-FT813-5.x/tft.c **** 
 782:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_int_burst(470, 10, 26, EVE_OPT_RIGHTX, swipeDistance_X);
 3111              	 .loc 1 782 0
 3112 006e 154B     	 ldr r3,.L98+36
 3113 0070 1B68     	 ldr r3,[r3]
 3114 0072 0093     	 str r3,[sp]
 3115 0074 4FF4EB70 	 mov r0,#470
 3116 0078 0A21     	 movs r1,#10
 3117 007a 1A22     	 movs r2,#26
 3118 007c 4FF40063 	 mov r3,#2048
 3119 0080 FFF7FEFF 	 bl EVE_cmd_int_burst
 783:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_int_burst(470, 25, 26, EVE_OPT_RIGHTX, swipeDistance_Y);
 3120              	 .loc 1 783 0
 3121 0084 104B     	 ldr r3,.L98+40
 3122 0086 1B68     	 ldr r3,[r3]
 3123 0088 0093     	 str r3,[sp]
 3124 008a 4FF4EB70 	 mov r0,#470
 3125 008e 1921     	 movs r1,#25
 3126 0090 1A22     	 movs r2,#26
 3127 0092 4FF40063 	 mov r3,#2048
 3128 0096 FFF7FEFF 	 bl EVE_cmd_int_burst
 784:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, swipeDistance_X);
 785:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_cmd_number_burst(470, 25, 26, EVE_OPT_RIGHTX, swipeDistance_Y);
 786:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_cmd_text_var_burst(470, 25, 26, EVE_OPT_RIGHTX, "%d", swipeDistance_Y);
 787:../Libraries/FT800-FT813-5.x/tft.c **** }
 3129              	 .loc 1 787 0
 3130 009a BD46     	 mov sp,r7
 3131              	.LCFI41:
 3132              	 .cfi_def_cfa_register 13
 3133              	 
 3134 009c 80BD     	 pop {r7,pc}
 3135              	.L99:
 3136 009e 00BF     	 .align 2
 3137              	.L98:
 3138 00a0 124B8C00 	 .word 9194258
 3139 00a4 EEF8FF04 	 .word 83884270
 3140 00a8 2BA9EA00 	 .word 15378731
 3141 00ac 6696AD00 	 .word 11376230
 3142 00b0 0C000003 	 .word 50331660
 3143 00b4 00000000 	 .word toggle_state_graphmode
 3144 00b8 B4000000 	 .word .LC20
 3145 00bc B8000000 	 .word .LC21
 3146 00c0 29CDF300 	 .word 15977769
 3147 00c4 00000000 	 .word swipeDistance_X
 3148 00c8 00000000 	 .word swipeDistance_Y
 3149              	 .cfi_endproc
 3150              	.LFE457:
 3152              	 .section .rodata
 3153 00bb 00       	 .align 2
 3154              	.LC22:
 3155 00bc 42757474 	 .ascii "Button Dimmer touched\000"
 3155      6F6E2044 
 3155      696D6D65 
 3155      7220746F 
 3155      75636865 
 3156 00d2 0000     	 .align 2
 3157              	.LC23:
 3158 00d4 546F6767 	 .ascii "Toggle Roll touched\000"
 3158      6C652052 
 3158      6F6C6C20 
 3158      746F7563 
 3158      68656400 
 3159              	 .align 2
 3160              	.LC24:
 3161 00e8 53776974 	 .ascii "Switch Signal\000"
 3161      63682053 
 3161      69676E61 
 3161      6C00
 3162              	 .section .text.TFT_touch_menu0,"ax",%progbits
 3163              	 .align 2
 3164              	 .global TFT_touch_menu0
 3165              	 .thumb
 3166              	 .thumb_func
 3168              	TFT_touch_menu0:
 3169              	.LFB458:
 788:../Libraries/FT800-FT813-5.x/tft.c **** 
 789:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu0(uint8_t tag, uint8_t swipeInProgress, uint8_t *swipeEvokedBy, int32_t *swipeDi
 3170              	 .loc 1 789 0
 3171              	 .cfi_startproc
 3172              	 
 3173              	 
 3174 0000 80B5     	 push {r7,lr}
 3175              	.LCFI42:
 3176              	 .cfi_def_cfa_offset 8
 3177              	 .cfi_offset 7,-8
 3178              	 .cfi_offset 14,-4
 3179 0002 84B0     	 sub sp,sp,#16
 3180              	.LCFI43:
 3181              	 .cfi_def_cfa_offset 24
 3182 0004 00AF     	 add r7,sp,#0
 3183              	.LCFI44:
 3184              	 .cfi_def_cfa_register 7
 3185 0006 BA60     	 str r2,[r7,#8]
 3186 0008 7B60     	 str r3,[r7,#4]
 3187 000a 0346     	 mov r3,r0
 3188 000c FB73     	 strb r3,[r7,#15]
 3189 000e 0B46     	 mov r3,r1
 3190 0010 BB73     	 strb r3,[r7,#14]
 790:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 791:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 3191              	 .loc 1 791 0
 3192 0012 FB7B     	 ldrb r3,[r7,#15]
 3193 0014 0C2B     	 cmp r3,#12
 3194 0016 23D0     	 beq .L102
 3195 0018 0D2B     	 cmp r3,#13
 3196 001a 38D0     	 beq .L103
 3197 001c 0A2B     	 cmp r3,#10
 3198 001e 50D1     	 bne .L100
 792:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 793:../Libraries/FT800-FT813-5.x/tft.c **** 		// dimmer button on top as on/off radio-switch
 794:../Libraries/FT800-FT813-5.x/tft.c **** 		case 10:
 795:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3199              	 .loc 1 795 0
 3200 0020 294B     	 ldr r3,.L110
 3201 0022 1B78     	 ldrb r3,[r3]
 3202 0024 002B     	 cmp r3,#0
 3203 0026 1AD1     	 bne .L105
 796:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Button Dimmer touched\n");
 3204              	 .loc 1 796 0
 3205 0028 2848     	 ldr r0,.L110+4
 3206 002a FFF7FEFF 	 bl puts
 797:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3207              	 .loc 1 797 0
 3208 002e 264B     	 ldr r3,.L110
 3209 0030 2A22     	 movs r2,#42
 3210 0032 1A70     	 strb r2,[r3]
 798:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_dimmer == 0){
 3211              	 .loc 1 798 0
 3212 0034 264B     	 ldr r3,.L110+8
 3213 0036 1B88     	 ldrh r3,[r3]
 3214 0038 002B     	 cmp r3,#0
 3215 003a 08D1     	 bne .L106
 799:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = EVE_OPT_FLAT;
 3216              	 .loc 1 799 0
 3217 003c 244B     	 ldr r3,.L110+8
 3218 003e 4FF48072 	 mov r2,#256
 3219 0042 1A80     	 strh r2,[r3]
 800:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x01);	/* setup backlight, range is from 0 = off to 0x80 = max */
 3220              	 .loc 1 800 0
 3221 0044 2348     	 ldr r0,.L110+12
 3222 0046 0121     	 movs r1,#1
 3223 0048 FFF7FEFF 	 bl EVE_memWrite8
 3224 004c 07E0     	 b .L105
 3225              	.L106:
 801:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 802:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 803:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = 0;
 3226              	 .loc 1 803 0
 3227 004e 204B     	 ldr r3,.L110+8
 3228 0050 0022     	 movs r2,#0
 3229 0052 1A80     	 strh r2,[r3]
 804:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x80);	/* setup backlight, range is from 0 = off to 0x80 = max */
 3230              	 .loc 1 804 0
 3231 0054 1F48     	 ldr r0,.L110+12
 3232 0056 8021     	 movs r1,#128
 3233 0058 FFF7FEFF 	 bl EVE_memWrite8
 805:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 806:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 807:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3234              	 .loc 1 807 0
 3235 005c 31E0     	 b .L100
 3236              	.L105:
 3237 005e 30E0     	 b .L100
 3238              	.L102:
 808:../Libraries/FT800-FT813-5.x/tft.c **** 		// roll/frame mode toggle on top
 809:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 810:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3239              	 .loc 1 810 0
 3240 0060 194B     	 ldr r3,.L110
 3241 0062 1B78     	 ldrb r3,[r3]
 3242 0064 002B     	 cmp r3,#0
 3243 0066 11D1     	 bne .L107
 811:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle Roll touched\n");
 3244              	 .loc 1 811 0
 3245 0068 1B48     	 ldr r0,.L110+16
 3246 006a FFF7FEFF 	 bl puts
 812:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3247              	 .loc 1 812 0
 3248 006e 164B     	 ldr r3,.L110
 3249 0070 2A22     	 movs r2,#42
 3250 0072 1A70     	 strb r2,[r3]
 813:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 3251              	 .loc 1 813 0
 3252 0074 194B     	 ldr r3,.L110+20
 3253 0076 1B88     	 ldrh r3,[r3]
 3254 0078 002B     	 cmp r3,#0
 3255 007a 03D1     	 bne .L108
 814:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 3256              	 .loc 1 814 0
 3257 007c 174B     	 ldr r3,.L110+20
 3258 007e 0122     	 movs r2,#1
 3259 0080 1A80     	 strh r2,[r3]
 3260 0082 03E0     	 b .L107
 3261              	.L108:
 815:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 816:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 817:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 3262              	 .loc 1 817 0
 3263 0084 154B     	 ldr r3,.L110+20
 3264 0086 0022     	 movs r2,#0
 3265 0088 1A80     	 strh r2,[r3]
 818:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 819:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 820:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3266              	 .loc 1 820 0
 3267 008a 1AE0     	 b .L100
 3268              	.L107:
 3269 008c 19E0     	 b .L100
 3270              	.L103:
 821:../Libraries/FT800-FT813-5.x/tft.c **** 		// signal switcher button
 822:../Libraries/FT800-FT813-5.x/tft.c **** 		case 13:
 823:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3271              	 .loc 1 823 0
 3272 008e 0E4B     	 ldr r3,.L110
 3273 0090 1B78     	 ldrb r3,[r3]
 3274 0092 002B     	 cmp r3,#0
 3275 0094 14D1     	 bne .L109
 824:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Switch Signal\n");
 3276              	 .loc 1 824 0
 3277 0096 1248     	 ldr r0,.L110+24
 3278 0098 FFF7FEFF 	 bl puts
 825:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3279              	 .loc 1 825 0
 3280 009c 0A4B     	 ldr r3,.L110
 3281 009e 2A22     	 movs r2,#42
 3282 00a0 1A70     	 strb r2,[r3]
 826:../Libraries/FT800-FT813-5.x/tft.c **** 				InputType++;
 3283              	 .loc 1 826 0
 3284 00a2 104B     	 ldr r3,.L110+28
 3285 00a4 1B78     	 ldrb r3,[r3]
 3286 00a6 DBB2     	 uxtb r3,r3
 3287 00a8 0133     	 adds r3,r3,#1
 3288 00aa DAB2     	 uxtb r2,r3
 3289 00ac 0D4B     	 ldr r3,.L110+28
 3290 00ae 1A70     	 strb r2,[r3]
 827:../Libraries/FT800-FT813-5.x/tft.c **** 				if(InputType > 3){ InputType = 0; }
 3291              	 .loc 1 827 0
 3292 00b0 0C4B     	 ldr r3,.L110+28
 3293 00b2 1B78     	 ldrb r3,[r3]
 3294 00b4 DBB2     	 uxtb r3,r3
 3295 00b6 032B     	 cmp r3,#3
 3296 00b8 02D9     	 bls .L109
 3297              	 .loc 1 827 0 is_stmt 0 discriminator 1
 3298 00ba 0A4B     	 ldr r3,.L110+28
 3299 00bc 0022     	 movs r2,#0
 3300 00be 1A70     	 strb r2,[r3]
 3301              	.L109:
 828:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 829:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3302              	 .loc 1 829 0 is_stmt 1
 3303 00c0 00BF     	 nop
 3304              	.L100:
 830:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 831:../Libraries/FT800-FT813-5.x/tft.c **** }
 3305              	 .loc 1 831 0
 3306 00c2 1037     	 adds r7,r7,#16
 3307              	.LCFI45:
 3308              	 .cfi_def_cfa_offset 8
 3309 00c4 BD46     	 mov sp,r7
 3310              	.LCFI46:
 3311              	 .cfi_def_cfa_register 13
 3312              	 
 3313 00c6 80BD     	 pop {r7,pc}
 3314              	.L111:
 3315              	 .align 2
 3316              	.L110:
 3317 00c8 00000000 	 .word toggle_lock
 3318 00cc BC000000 	 .word .LC22
 3319 00d0 00000000 	 .word toggle_state_dimmer
 3320 00d4 D4203000 	 .word 3154132
 3321 00d8 D4000000 	 .word .LC23
 3322 00dc 00000000 	 .word toggle_state_graphmode
 3323 00e0 E8000000 	 .word .LC24
 3324 00e4 00000000 	 .word InputType
 3325              	 .cfi_endproc
 3326              	.LFE458:
 3328              	 .section .rodata
 3329 00f6 0000     	 .align 2
 3330              	.LC25:
 3331 00f8 546F6767 	 .ascii "Toggle li/re touched\000"
 3331      6C65206C 
 3331      692F7265 
 3331      20746F75 
 3331      63686564 
 3332 010d 000000   	 .section .text.TFT_touch_menu1,"ax",%progbits
 3333              	 .align 2
 3334              	 .global TFT_touch_menu1
 3335              	 .thumb
 3336              	 .thumb_func
 3338              	TFT_touch_menu1:
 3339              	.LFB459:
 832:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu1(uint8_t tag, uint8_t swipeInProgress, uint8_t *swipeEvokedBy, int32_t *swipeDi
 3340              	 .loc 1 832 0
 3341              	 .cfi_startproc
 3342              	 
 3343              	 
 3344 0000 80B5     	 push {r7,lr}
 3345              	.LCFI47:
 3346              	 .cfi_def_cfa_offset 8
 3347              	 .cfi_offset 7,-8
 3348              	 .cfi_offset 14,-4
 3349 0002 84B0     	 sub sp,sp,#16
 3350              	.LCFI48:
 3351              	 .cfi_def_cfa_offset 24
 3352 0004 00AF     	 add r7,sp,#0
 3353              	.LCFI49:
 3354              	 .cfi_def_cfa_register 7
 3355 0006 BA60     	 str r2,[r7,#8]
 3356 0008 7B60     	 str r3,[r7,#4]
 3357 000a 0346     	 mov r3,r0
 3358 000c FB73     	 strb r3,[r7,#15]
 3359 000e 0B46     	 mov r3,r1
 3360 0010 BB73     	 strb r3,[r7,#14]
 833:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 834:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 3361              	 .loc 1 834 0
 3362 0012 FB7B     	 ldrb r3,[r7,#15]
 3363 0014 002B     	 cmp r3,#0
 3364 0016 02D0     	 beq .L114
 3365 0018 0C2B     	 cmp r3,#12
 3366 001a 04D0     	 beq .L115
 3367 001c 19E0     	 b .L112
 3368              	.L114:
 835:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 836:../Libraries/FT800-FT813-5.x/tft.c **** 		// nothing touched - reset states and locks
 837:../Libraries/FT800-FT813-5.x/tft.c **** 		case 0:
 838:../Libraries/FT800-FT813-5.x/tft.c **** 			toggle_lock = 0;
 3369              	 .loc 1 838 0
 3370 001e 0E4B     	 ldr r3,.L118
 3371 0020 0022     	 movs r2,#0
 3372 0022 1A70     	 strb r2,[r3]
 839:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3373              	 .loc 1 839 0
 3374 0024 15E0     	 b .L112
 3375              	.L115:
 840:../Libraries/FT800-FT813-5.x/tft.c **** 		// li/re mode toggle on top
 841:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 842:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3376              	 .loc 1 842 0
 3377 0026 0C4B     	 ldr r3,.L118
 3378 0028 1B78     	 ldrb r3,[r3]
 3379 002a 002B     	 cmp r3,#0
 3380 002c 10D1     	 bne .L116
 843:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle li/re touched\n");
 3381              	 .loc 1 843 0
 3382 002e 0B48     	 ldr r0,.L118+4
 3383 0030 FFF7FEFF 	 bl puts
 844:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3384              	 .loc 1 844 0
 3385 0034 084B     	 ldr r3,.L118
 3386 0036 2A22     	 movs r2,#42
 3387 0038 1A70     	 strb r2,[r3]
 845:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 3388              	 .loc 1 845 0
 3389 003a 094B     	 ldr r3,.L118+8
 3390 003c 1B88     	 ldrh r3,[r3]
 3391 003e 002B     	 cmp r3,#0
 3392 0040 03D1     	 bne .L117
 846:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 3393              	 .loc 1 846 0
 3394 0042 074B     	 ldr r3,.L118+8
 3395 0044 0122     	 movs r2,#1
 3396 0046 1A80     	 strh r2,[r3]
 3397 0048 02E0     	 b .L116
 3398              	.L117:
 847:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 848:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 849:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 3399              	 .loc 1 849 0
 3400 004a 054B     	 ldr r3,.L118+8
 3401 004c 0022     	 movs r2,#0
 3402 004e 1A80     	 strh r2,[r3]
 3403              	.L116:
 850:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 851:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 852:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3404              	 .loc 1 852 0
 3405 0050 00BF     	 nop
 3406              	.L112:
 853:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 854:../Libraries/FT800-FT813-5.x/tft.c **** 
 855:../Libraries/FT800-FT813-5.x/tft.c **** 	//// If the user swiped more on x-axis he probably wants to swipe left/right
 856:../Libraries/FT800-FT813-5.x/tft.c **** 	//if(abs(swipeDistance_X) > abs(swipeDistance_Y)){
 857:../Libraries/FT800-FT813-5.x/tft.c **** 	//	if(swipeDistance_X > 50)      	// swipe to left
 858:../Libraries/FT800-FT813-5.x/tft.c **** 	//		swipeDetect = Left;
 859:../Libraries/FT800-FT813-5.x/tft.c **** 	//	else if(swipeDistance_X < -50)	// swipe to right
 860:../Libraries/FT800-FT813-5.x/tft.c **** 	//		swipeDetect = Right;
 861:../Libraries/FT800-FT813-5.x/tft.c **** 	//	else
 862:../Libraries/FT800-FT813-5.x/tft.c **** 	//		swipeDetect = None;
 863:../Libraries/FT800-FT813-5.x/tft.c **** 	//}
 864:../Libraries/FT800-FT813-5.x/tft.c **** 	//// If the user swiped more on y-axis he probably wants to swipe up/down
 865:../Libraries/FT800-FT813-5.x/tft.c **** 	//else{
 866:../Libraries/FT800-FT813-5.x/tft.c **** 	//	if(swipeDistance_Y > 50)		// swipe down
 867:../Libraries/FT800-FT813-5.x/tft.c **** 	//		swipeDetect = Down;
 868:../Libraries/FT800-FT813-5.x/tft.c **** 	//	else if(swipeDistance_Y < -50)	// swipe up
 869:../Libraries/FT800-FT813-5.x/tft.c **** 	//		swipeDetect = Up;
 870:../Libraries/FT800-FT813-5.x/tft.c **** 	//	else
 871:../Libraries/FT800-FT813-5.x/tft.c **** 	//		swipeDetect = None;
 872:../Libraries/FT800-FT813-5.x/tft.c **** 	//}
 873:../Libraries/FT800-FT813-5.x/tft.c **** 
 874:../Libraries/FT800-FT813-5.x/tft.c **** 
 875:../Libraries/FT800-FT813-5.x/tft.c **** }
 3407              	 .loc 1 875 0
 3408 0052 1037     	 adds r7,r7,#16
 3409              	.LCFI50:
 3410              	 .cfi_def_cfa_offset 8
 3411 0054 BD46     	 mov sp,r7
 3412              	.LCFI51:
 3413              	 .cfi_def_cfa_register 13
 3414              	 
 3415 0056 80BD     	 pop {r7,pc}
 3416              	.L119:
 3417              	 .align 2
 3418              	.L118:
 3419 0058 00000000 	 .word toggle_lock
 3420 005c F8000000 	 .word .LC25
 3421 0060 00000000 	 .word toggle_state_graphmode
 3422              	 .cfi_endproc
 3423              	.LFE459:
 3425              	 .text
 3426              	.Letext0:
 3427              	 .file 2 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3428              	 .file 3 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3429              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_gpio.h"
 3430              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_gpio.h"
 3431              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_usic.h"
 3432              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_spi.h"
 3433              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master.h"
 3434              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io.h"
 3435              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_vadc.h"
 3436              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 3437              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
 3438              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 3439              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 3440              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 3441              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/globals.h"
 3442              	 .file 17 "../Libraries/FT800-FT813-5.x/EVE_target.h"
 3443              	 .file 18 "../Libraries/FT800-FT813-5.x/tft_data.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tft.c
                            *COM*:00000004 _msCounter
                            *COM*:00000001 tft_tick
                            *COM*:00000004 MeasurementCounter
                            *COM*:00000002 InputBuffer1_idx
                            *COM*:00000001 InputType
                            *COM*:00000001 frameover
                            *COM*:00000001 ReadData
    {standard input}:31     .data.G_x:00000000 G_x
    {standard input}:28     .data.G_x:00000000 $d
    {standard input}:38     .data.G_y:00000000 G_y
    {standard input}:35     .data.G_y:00000000 $d
    {standard input}:45     .data.G_width:00000000 G_width
    {standard input}:42     .data.G_width:00000000 $d
    {standard input}:52     .data.G_height:00000000 G_height
    {standard input}:49     .data.G_height:00000000 $d
    {standard input}:59     .rodata.unit_Sensor:00000000 unit_Sensor
    {standard input}:56     .rodata.unit_Sensor:00000000 $d
    {standard input}:66     .data.G_amp_max:00000000 G_amp_max
    {standard input}:63     .data.G_amp_max:00000000 $d
    {standard input}:74     .data.G_t_max:00000000 G_t_max
    {standard input}:71     .data.G_t_max:00000000 $d
    {standard input}:82     .data.G_y_max:00000000 G_y_max
    {standard input}:79     .data.G_y_max:00000000 $d
    {standard input}:90     .data.G_h_grid_lines:00000000 G_h_grid_lines
    {standard input}:87     .data.G_h_grid_lines:00000000 $d
    {standard input}:98     .data.G_v_grid_lines:00000000 G_v_grid_lines
    {standard input}:95     .data.G_v_grid_lines:00000000 $d
                            *COM*:00000004 num_dl_static
    {standard input}:106    .bss.tft_active:00000000 tft_active
    {standard input}:107    .bss.tft_active:00000000 $d
    {standard input}:112    .bss.TFT_cur_Menu:00000000 TFT_cur_Menu
    {standard input}:113    .bss.TFT_cur_Menu:00000000 $d
    {standard input}:118    .data.TFT_last_Menu:00000000 TFT_last_Menu
    {standard input}:125    .data.TFT_display_cur_Menu__fptr_arr:00000000 TFT_display_cur_Menu__fptr_arr
    {standard input}:122    .data.TFT_display_cur_Menu__fptr_arr:00000000 $d
    {standard input}:2728   .text.TFT_display_menu0:00000000 TFT_display_menu0
    {standard input}:3041   .text.TFT_display_menu1:00000000 TFT_display_menu1
    {standard input}:133    .data.TFT_touch_cur_Menu__fptr_arr:00000000 TFT_touch_cur_Menu__fptr_arr
    {standard input}:130    .data.TFT_touch_cur_Menu__fptr_arr:00000000 $d
    {standard input}:3168   .text.TFT_touch_menu0:00000000 TFT_touch_menu0
    {standard input}:3338   .text.TFT_touch_menu1:00000000 TFT_touch_menu1
    {standard input}:141    .data.TFT_display_static_cur_Menu__fptr_arr:00000000 TFT_display_static_cur_Menu__fptr_arr
    {standard input}:138    .data.TFT_display_static_cur_Menu__fptr_arr:00000000 $d
    {standard input}:2416   .text.TFT_display_static_menu0:00000000 TFT_display_static_menu0
    {standard input}:2583   .text.TFT_display_static_menu1:00000000 TFT_display_static_menu1
    {standard input}:149    .bss.display_list_size:00000000 display_list_size
    {standard input}:146    .bss.display_list_size:00000000 $d
    {standard input}:156    .bss.tracker:00000000 tracker
    {standard input}:153    .bss.tracker:00000000 $d
    {standard input}:162    .bss.swipeDetect:00000000 swipeDetect
    {standard input}:163    .bss.swipeDetect:00000000 $d
    {standard input}:168    .bss.swipeInProgress:00000000 swipeInProgress
    {standard input}:169    .bss.swipeInProgress:00000000 $d
    {standard input}:174    .bss.swipeEvokedBy:00000000 swipeEvokedBy
    {standard input}:175    .bss.swipeEvokedBy:00000000 $d
    {standard input}:181    .data.swipeInitialTouch_X:00000000 swipeInitialTouch_X
    {standard input}:178    .data.swipeInitialTouch_X:00000000 $d
    {standard input}:188    .data.swipeInitialTouch_Y:00000000 swipeInitialTouch_Y
    {standard input}:185    .data.swipeInitialTouch_Y:00000000 $d
    {standard input}:195    .bss.swipeDistance_X:00000000 swipeDistance_X
    {standard input}:192    .bss.swipeDistance_X:00000000 $d
    {standard input}:202    .bss.swipeDistance_Y:00000000 swipeDistance_Y
    {standard input}:199    .bss.swipeDistance_Y:00000000 $d
    {standard input}:208    .bss.swipeEndOfTouch_Debounce:00000000 swipeEndOfTouch_Debounce
    {standard input}:209    .bss.swipeEndOfTouch_Debounce:00000000 $d
    {standard input}:214    .bss.toggle_lock:00000000 toggle_lock
    {standard input}:215    .bss.toggle_lock:00000000 $d
    {standard input}:221    .bss.toggle_state_graphmode:00000000 toggle_state_graphmode
    {standard input}:218    .bss.toggle_state_graphmode:00000000 $d
    {standard input}:228    .bss.toggle_state_dimmer:00000000 toggle_state_dimmer
    {standard input}:225    .bss.toggle_state_dimmer:00000000 $d
    {standard input}:233    .rodata:00000000 $d
    {standard input}:261    .text.TFT_GraphStatic:00000000 $t
    {standard input}:266    .text.TFT_GraphStatic:00000000 TFT_GraphStatic
    {standard input}:568    .text.TFT_GraphStatic:000002a0 $d
    {standard input}:578    .text.TFT_GraphStatic:000002c0 $t
    {standard input}:1067   .text.TFT_GraphStatic:0000073c $d
    {standard input}:1072   .text.TFT_GraphStatic:00000744 $t
    {standard input}:1334   .text.TFT_GraphStatic:000009bc $d
    {standard input}:1340   .text.TFT_GraphData:00000000 $t
    {standard input}:1345   .text.TFT_GraphData:00000000 TFT_GraphData
    {standard input}:1623   .text.TFT_GraphData:0000020c $d
    {standard input}:1628   .text.touch_calibrate:00000000 $t
    {standard input}:1633   .text.touch_calibrate:00000000 touch_calibrate
    {standard input}:1676   .text.touch_calibrate:00000040 $d
    {standard input}:1692   .text.TFT_init:00000000 $t
    {standard input}:1697   .text.TFT_init:00000000 TFT_init
    {standard input}:1770   .text.TFT_init:00000074 $d
    {standard input}:1779   .text.TFT_display_init_screen:00000000 $t
    {standard input}:1784   .text.TFT_display_init_screen:00000000 TFT_display_init_screen
    {standard input}:1851   .text.TFT_display_init_screen:00000070 $d
    {standard input}:1860   .text.TFT_display_static:00000000 $t
    {standard input}:1865   .text.TFT_display_static:00000000 TFT_display_static
    {standard input}:1953   .text.TFT_display_static:00000094 $d
    {standard input}:1967   .text.TFT_touch:00000000 $t
    {standard input}:1972   .text.TFT_touch:00000000 TFT_touch
    {standard input}:2283   .text.TFT_touch:000001cc $d
    {standard input}:2300   .text.TFT_display:00000000 $t
    {standard input}:2305   .text.TFT_display:00000000 TFT_display
    {standard input}:2390   .text.TFT_display:0000008c $d
    {standard input}:2411   .text.TFT_display_static_menu0:00000000 $t
    {standard input}:2547   .text.TFT_display_static_menu0:000000f4 $d
    {standard input}:2578   .text.TFT_display_static_menu1:00000000 $t
    {standard input}:2679   .text.TFT_display_static_menu1:000000a0 $d
    {standard input}:2723   .text.TFT_display_menu0:00000000 $t
    {standard input}:2997   .text.TFT_display_menu0:000001f8 $d
    {standard input}:3036   .text.TFT_display_menu1:00000000 $t
    {standard input}:3138   .text.TFT_display_menu1:000000a0 $d
    {standard input}:3163   .text.TFT_touch_menu0:00000000 $t
    {standard input}:3317   .text.TFT_touch_menu0:000000c8 $d
    {standard input}:3333   .text.TFT_touch_menu1:00000000 $t
    {standard input}:3419   .text.TFT_touch_menu1:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_d2iz
__aeabi_dsub
__aeabi_dcmpeq
EVE_cmd_dl
EVE_cmd_dl_burst
EVE_cmd_text
EVE_cmd_text_burst
EVE_cmd_number
EVE_cmd_number_burst
floor
sprintf
ceil
EVE_memWrite32
EVE_init
puts
EVE_memWrite8
EVE_start_cmd_burst
EVE_cmd_bgcolor_burst
EVE_end_cmd_burst
EVE_cmd_inflate
EVE_cmd_setbitmap_burst
logo_init
EVE_cmd_bgcolor
EVE_busy
EVE_memRead16
EVE_cmd_memcpy
EVE_memRead8
EVE_memRead32
EVE_cmd_append_burst
EVE_cmd_gradcolor_burst
EVE_cmd_fgcolor_burst
EVE_cmd_button_burst
EVE_cmd_toggle_burst
strlen
InputBuffer1
EVE_cmd_int_burst
