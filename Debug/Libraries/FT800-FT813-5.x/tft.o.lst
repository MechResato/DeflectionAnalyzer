   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tft.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm ReadData,1,1
  20              	 .global G_x
  21              	 .section .data.G_x,"aw",%progbits
  22              	 .align 1
  25              	G_x:
  26 0000 0A00     	 .short 10
  27              	 .global G_y
  28              	 .section .data.G_y,"aw",%progbits
  29              	 .align 1
  32              	G_y:
  33 0000 5100     	 .short 81
  34              	 .global G_width
  35              	 .section .data.G_width,"aw",%progbits
  36              	 .align 1
  39              	G_width:
  40 0000 B801     	 .short 440
  41              	 .global G_height
  42              	 .section .data.G_height,"aw",%progbits
  43              	 .align 1
  46              	G_height:
  47 0000 A100     	 .short 161
  48              	 .global unit_Sensor
  49              	 .section .rodata.unit_Sensor,"a",%progbits
  50              	 .align 2
  53              	unit_Sensor:
  54 0000 205600   	 .ascii " V\000"
  55              	 .global G_amp_max
  56 0003 00       	 .section .data.G_amp_max,"aw",%progbits
  57              	 .align 3
  60              	G_amp_max:
  61 0000 00000000 	 .word 0
  62 0004 00002440 	 .word 1076101120
  63              	 .global G_t_max
  64              	 .section .data.G_t_max,"aw",%progbits
  65              	 .align 3
  68              	G_t_max:
  69 0000 9A999999 	 .word -1717986918
  70 0004 99990140 	 .word 1073846681
  71              	 .global G_y_max
  72              	 .section .data.G_y_max,"aw",%progbits
  73              	 .align 3
  76              	G_y_max:
  77 0000 00000000 	 .word 0
  78 0004 00FEAF40 	 .word 1085275648
  79              	 .global G_h_grid_lines
  80              	 .section .data.G_h_grid_lines,"aw",%progbits
  81              	 .align 3
  84              	G_h_grid_lines:
  85 0000 00000000 	 .word 0
  86 0004 00001040 	 .word 1074790400
  87              	 .global G_v_grid_lines
  88              	 .section .data.G_v_grid_lines,"aw",%progbits
  89              	 .align 3
  92              	G_v_grid_lines:
  93 0000 9A999999 	 .word -1717986918
  94 0004 99990140 	 .word 1073846681
  95              	 .comm num_dl_static,4,4
  96              	 .global tft_active
  97              	 .section .bss.tft_active,"aw",%nobits
 100              	tft_active:
 101 0000 00       	 .space 1
 102              	 .global frameover
 103              	 .section .bss.frameover,"aw",%nobits
 106              	frameover:
 107 0000 00       	 .space 1
 108              	 .global InputType
 109              	 .section .data.InputType,"aw",%progbits
 112              	InputType:
 113 0000 03       	 .byte 3
 114              	 .global toggle_state_graphmode
 115              	 .section .bss.toggle_state_graphmode,"aw",%nobits
 116              	 .align 1
 119              	toggle_state_graphmode:
 120 0000 0000     	 .space 2
 121              	 .global toggle_state_dimmer
 122              	 .section .bss.toggle_state_dimmer,"aw",%nobits
 123              	 .align 1
 126              	toggle_state_dimmer:
 127 0000 0000     	 .space 2
 128              	 .global __aeabi_ui2d
 129              	 .global __aeabi_ddiv
 130              	 .section .rodata
 131              	 .align 2
 132              	.LC3:
 133 0000 5600     	 .ascii "V\000"
 134 0002 0000     	 .align 2
 135              	.LC4:
 136 0004 7400     	 .ascii "t\000"
 137              	 .global __aeabi_i2d
 138              	 .global __aeabi_dmul
 139              	 .global __aeabi_d2uiz
 140              	 .global __aeabi_d2iz
 141              	 .global __aeabi_dsub
 142              	 .global __aeabi_dcmpeq
 143 0006 0000     	 .align 2
 144              	.LC5:
 145 0008 252E316C 	 .ascii "%.1lf\000"
 145      6600
 146 000e 0000     	 .align 2
 147              	.LC0:
 148 0010 00000000 	 .word EVE_cmd_dl
 149 0014 00000000 	 .word EVE_cmd_dl_burst
 150              	 .align 2
 151              	.LC1:
 152 0018 00000000 	 .word EVE_cmd_text
 153 001c 00000000 	 .word EVE_cmd_text_burst
 154              	 .align 2
 155              	.LC2:
 156 0020 00000000 	 .word EVE_cmd_number
 157 0024 00000000 	 .word EVE_cmd_number_burst
 158              	 .section .text.TFT_GraphStatic,"ax",%progbits
 159              	 .align 2
 160              	 .global TFT_GraphStatic
 161              	 .thumb
 162              	 .thumb_func
 164              	TFT_GraphStatic:
 165              	.LFB446:
 166              	 .file 1 "../Libraries/FT800-FT813-5.x/tft.c"
   1:../Libraries/FT800-FT813-5.x/tft.c **** /*
   2:../Libraries/FT800-FT813-5.x/tft.c **** @file    		tft.c
   3:../Libraries/FT800-FT813-5.x/tft.c **** @brief   		Implementation of display communication using the EVE Library. Meant to display a menu a
   4:../Libraries/FT800-FT813-5.x/tft.c **** @version 		2.0 (base lib version was 1.13)
   5:../Libraries/FT800-FT813-5.x/tft.c **** @date    		2020-09-05
   6:../Libraries/FT800-FT813-5.x/tft.c **** @initialauthor  Rudolph Riedel
   7:../Libraries/FT800-FT813-5.x/tft.c **** @author 		RS (Rene Santeler & Stefan Reinm√ºller) @ MCI 2020/21 (initially created by Rudolph Riede
   8:../Libraries/FT800-FT813-5.x/tft.c **** 
   9:../Libraries/FT800-FT813-5.x/tft.c **** @section History
  10:../Libraries/FT800-FT813-5.x/tft.c **** 2.0 (adapted from Rudolph Riedel base version 1.13 - below changes are from RS 2020/21)
  11:../Libraries/FT800-FT813-5.x/tft.c **** - Added color scheme, adaptable banner, dynamic graph implementation (TFT_GraphStatic & TFT_GraphDa
  12:../Libraries/FT800-FT813-5.x/tft.c **** - Adapted TFT_init to only do the most necessary thins for init (no static DL creation! you need to
  13:../Libraries/FT800-FT813-5.x/tft.c **** 
  14:../Libraries/FT800-FT813-5.x/tft.c **** // See https://brtchip.com/eve-toolchains/ for helpful Tools
  15:../Libraries/FT800-FT813-5.x/tft.c ****  */
  16:../Libraries/FT800-FT813-5.x/tft.c **** 
  17:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdint.h>
  18:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdio.h>
  19:../Libraries/FT800-FT813-5.x/tft.c **** #include <string.h>
  20:../Libraries/FT800-FT813-5.x/tft.c **** #include <math.h>
  21:../Libraries/FT800-FT813-5.x/tft.c **** #include "EVE.h"
  22:../Libraries/FT800-FT813-5.x/tft.c **** #include "tft_data.h"
  23:../Libraries/FT800-FT813-5.x/tft.c **** 
  24:../Libraries/FT800-FT813-5.x/tft.c **** 
  25:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Banner line strip edge positions (from left to right: Y1 is held horizontal till X1, in
  26:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y1 66
  27:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y2 50
  28:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X1 280
  29:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X2 320
  30:../Libraries/FT800-FT813-5.x/tft.c **** 
  31:../Libraries/FT800-FT813-5.x/tft.c **** 
  32:../Libraries/FT800-FT813-5.x/tft.c **** /////////// COLOR SCHEME
  33:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BGCOLOR       0x00F5F1EE // background
  34:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_TEXTCOLOR     0x00F3CD29 // main text
  35:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BANNERCOLOR   0x0064584B // banner
  36:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_DIVIDERCOLOR  0x00F3CD29 // divider
  37:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCOLOR  	   0x00EAA92B // button
  38:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCTSCOLOR   0x00AD9666 // button contrast
  39:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNTXTCOLOR   0x00FFF8EE // button text
  40:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNGRDCOLOR   0x008C4B12 // 3D gradient color
  41:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_AXISCOLOR    0x003B1E0B // graph axis
  42:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_GRIDCOLOR    0x00C5DAE2 // graph grid
  43:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA1COLOR   0x00003F9E // graph data 1
  44:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA2COLOR   0x0064584B // graph data 2 (alternative/additional color)
  45:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_POSMARKCOLOR 0x00ff0000 // graph position marker
  46:../Libraries/FT800-FT813-5.x/tft.c **** 
  47:../Libraries/FT800-FT813-5.x/tft.c **** /* simple pre-definded colors */
  48:../Libraries/FT800-FT813-5.x/tft.c **** #define RED		0xff0000UL
  49:../Libraries/FT800-FT813-5.x/tft.c **** #define ORANGE	0xffa500UL
  50:../Libraries/FT800-FT813-5.x/tft.c **** #define GREEN	0x00ff00UL
  51:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE	0x0000ffUL
  52:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE_1	0x5dade2L
  53:../Libraries/FT800-FT813-5.x/tft.c **** #define YELLOW	0xffff00UL
  54:../Libraries/FT800-FT813-5.x/tft.c **** #define PINK	0xff00ffUL
  55:../Libraries/FT800-FT813-5.x/tft.c **** #define PURPLE	0x800080UL
  56:../Libraries/FT800-FT813-5.x/tft.c **** #define WHITE	0xffffffUL
  57:../Libraries/FT800-FT813-5.x/tft.c **** #define BLACK	0x000000UL
  58:../Libraries/FT800-FT813-5.x/tft.c **** 
  59:../Libraries/FT800-FT813-5.x/tft.c **** 
  60:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions
  61:../Libraries/FT800-FT813-5.x/tft.c **** // Graph position and size. Here -> quick an dirty estimation where x, y, width and height must be 
  62:../Libraries/FT800-FT813-5.x/tft.c **** #define G_PADDING 10 									// Only needed because we want to calc how much width and height can 
  63:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_x        = 10;													 // 10 px from left to leave some room
  64:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_y      	= (LAYOUT_Y1 + 15);										 // end of banner plus 10 to leave some room  (for 
  65:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_width 	= (0 + EVE_HSIZE - 10 - (2*G_PADDING) - 10);			   // actual width of the data are
  66:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_height	= (0 + EVE_VSIZE - (LAYOUT_Y1 + 15) - (2*G_PADDING) - 10); // actual height of th
  67:../Libraries/FT800-FT813-5.x/tft.c **** // axes
  68:../Libraries/FT800-FT813-5.x/tft.c **** const char unit_Sensor[] = " V"; // unit string used at print of current sensor value
  69:../Libraries/FT800-FT813-5.x/tft.c **** double G_amp_max = 10.0; // volts - used at print of vertical grid value labels
  70:../Libraries/FT800-FT813-5.x/tft.c **** double G_t_max = 2.2;    // seconds - used at print of horizontal grid value labels
  71:../Libraries/FT800-FT813-5.x/tft.c **** // data properties
  72:../Libraries/FT800-FT813-5.x/tft.c **** double G_y_max = 4095.0; // maximum allowed amplitude y (here for 12bit sensor value)
  73:../Libraries/FT800-FT813-5.x/tft.c **** // grid
  74:../Libraries/FT800-FT813-5.x/tft.c **** double G_h_grid_lines = 4.0; // number of grey horizontal grid lines
  75:../Libraries/FT800-FT813-5.x/tft.c **** double G_v_grid_lines = 2.2; // number of grey vertical grid lines
  76:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions END
  77:../Libraries/FT800-FT813-5.x/tft.c **** 
  78:../Libraries/FT800-FT813-5.x/tft.c **** 
  79:../Libraries/FT800-FT813-5.x/tft.c **** // Memory-map definitions
  80:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_LOGO 0x00000000 // start-address of logo, needs about 20228 bytes of memory. Will be wr
  81:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_DL_STATIC (EVE_RAM_G_SIZE - 4096) // 0xff000 -> Start-address of the static part of the
  82:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t num_dl_static; // amount of bytes in the static part of our display-list
  83:../Libraries/FT800-FT813-5.x/tft.c **** 
  84:../Libraries/FT800-FT813-5.x/tft.c **** 
  85:../Libraries/FT800-FT813-5.x/tft.c **** /////////// General Variables
  86:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t tft_active = 0;  // Prevents TFT_display of doing anything if EVE_init isn't successful of 
  87:../Libraries/FT800-FT813-5.x/tft.c **** volatile uint8_t frameover = 0; // Debug value - is set to one if the sensor buffer gets full the f
  88:../Libraries/FT800-FT813-5.x/tft.c **** // Input signal type used in main for measurement and here for swithcen on touch
  89:../Libraries/FT800-FT813-5.x/tft.c **** volatile uint8_t InputType = 3; // 0=Sensor5, 1=TestImpulse, 2=TestSawTooth, 3=TestSine
  90:../Libraries/FT800-FT813-5.x/tft.c **** 
  91:../Libraries/FT800-FT813-5.x/tft.c **** 
  92:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Button states
  93:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_graphmode = 0;
  94:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_dimmer = 0;
  95:../Libraries/FT800-FT813-5.x/tft.c **** 
  96:../Libraries/FT800-FT813-5.x/tft.c **** 
  97:../Libraries/FT800-FT813-5.x/tft.c **** 
  98:../Libraries/FT800-FT813-5.x/tft.c **** 
  99:../Libraries/FT800-FT813-5.x/tft.c **** 
 100:../Libraries/FT800-FT813-5.x/tft.c **** 
 101:../Libraries/FT800-FT813-5.x/tft.c **** 
 102:../Libraries/FT800-FT813-5.x/tft.c **** 
 103:../Libraries/FT800-FT813-5.x/tft.c **** 
 104:../Libraries/FT800-FT813-5.x/tft.c **** 
 105:../Libraries/FT800-FT813-5.x/tft.c **** 
 106:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphStatic(uint8_t burst, uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16
 167              	 .loc 1 106 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 172              	.LCFI0:
 173              	 .cfi_def_cfa_offset 20
 174              	 .cfi_offset 4,-20
 175              	 .cfi_offset 5,-16
 176              	 .cfi_offset 6,-12
 177              	 .cfi_offset 7,-8
 178              	 .cfi_offset 14,-4
 179 0002 A3B0     	 sub sp,sp,#140
 180              	.LCFI1:
 181              	 .cfi_def_cfa_offset 160
 182 0004 02AF     	 add r7,sp,#8
 183              	.LCFI2:
 184              	 .cfi_def_cfa 7,152
 185 0006 0446     	 mov r4,r0
 186 0008 0846     	 mov r0,r1
 187 000a 1146     	 mov r1,r2
 188 000c 1A46     	 mov r2,r3
 189 000e 2346     	 mov r3,r4
 190 0010 FB71     	 strb r3,[r7,#7]
 191 0012 0346     	 mov r3,r0
 192 0014 BB80     	 strh r3,[r7,#4]
 193 0016 0B46     	 mov r3,r1
 194 0018 7B80     	 strh r3,[r7,#2]
 195 001a 1346     	 mov r3,r2
 196 001c 3B80     	 strh r3,[r7]
 107:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the non-dynamic parts of an Graph to the TFT (axes & labels, grids and values, axis-arro
 108:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 109:../Libraries/FT800-FT813-5.x/tft.c **** 	///  burst	... determines if the normal or the burst version of the EVE Library is used to transmi
 110:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 111:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 112:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 113:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 114:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding	...	clearance from the outer corners (x,y) to the axes
 115:../Libraries/FT800-FT813-5.x/tft.c **** 	///  amp_max ... maximum represented value of amplitude (e.g. 10 Volts), will be used at 100% hori
 116:../Libraries/FT800-FT813-5.x/tft.c **** 	///  t_max 	... maximum represented value of time (e.g. 2.2 Seconds), will be used at 100% horizon
 117:../Libraries/FT800-FT813-5.x/tft.c **** 	///  h_grid_lines ... number of horizontal grid lines
 118:../Libraries/FT800-FT813-5.x/tft.c **** 	///  v_grid_lines ... number of vertical grid lines
 119:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: The predefined GRAPH_AXISCOLOR and GRAPH_GRIDCOLOR are used directly!
 120:../Libraries/FT800-FT813-5.x/tft.c **** 
 121:../Libraries/FT800-FT813-5.x/tft.c **** 	// Define a array of function pointers for every used "EVE_cmd_dl..." function. First on is normal
 122:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_dl__fptr_arr[])(uint32_t) = {EVE_cmd_dl, EVE_cmd_dl_burst};
 197              	 .loc 1 122 0
 198 001e A04A     	 ldr r2,.L20
 199 0020 07F13803 	 add r3,r7,#56
 200 0024 92E80300 	 ldmia r2,{r0,r1}
 201 0028 83E80300 	 stmia r3,{r0,r1}
 123:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_text__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, const char*) = {EVE_cmd_text
 202              	 .loc 1 123 0
 203 002c 9D4A     	 ldr r2,.L20+4
 204 002e 07F13003 	 add r3,r7,#48
 205 0032 92E80300 	 ldmia r2,{r0,r1}
 206 0036 83E80300 	 stmia r3,{r0,r1}
 124:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_number__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, int32_t) = {EVE_cmd_number
 207              	 .loc 1 124 0
 208 003a 9B4A     	 ldr r2,.L20+8
 209 003c 07F12803 	 add r3,r7,#40
 210 0040 92E80300 	 ldmia r2,{r0,r1}
 211 0044 83E80300 	 stmia r3,{r0,r1}
 125:../Libraries/FT800-FT813-5.x/tft.c **** 
 126:../Libraries/FT800-FT813-5.x/tft.c **** 
 127:../Libraries/FT800-FT813-5.x/tft.c **** 	// Internal offsets and sizes
 128:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t arrow_offset = 5;   // Offset of the ARROW HEAD corners
 212              	 .loc 1 128 0
 213 0048 0523     	 movs r3,#5
 214 004a 87F86F30 	 strb r3,[r7,#111]
 129:../Libraries/FT800-FT813-5.x/tft.c **** 
 130:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t grid_linewidth = 9; // linewidth of the grid in 1/16 pixel (16=1px)
 215              	 .loc 1 130 0
 216 004e 0923     	 movs r3,#9
 217 0050 87F86E30 	 strb r3,[r7,#110]
 131:../Libraries/FT800-FT813-5.x/tft.c **** 
 132:../Libraries/FT800-FT813-5.x/tft.c **** 	#define axis_lbl_txt_size 26 	  // Font for axis labels
 133:../Libraries/FT800-FT813-5.x/tft.c **** 	#define grid_lbl_txt_size 20 	  // Font for grid labels
 134:../Libraries/FT800-FT813-5.x/tft.c **** 
 135:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_x = 6;  // Offset used to print the horizontal axis label at the right
 218              	 .loc 1 135 0
 219 0054 0623     	 movs r3,#6
 220 0056 87F86D30 	 strb r3,[r7,#109]
 136:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_y = 20; // Offset used to print the horizontal axis label at the right
 221              	 .loc 1 136 0
 222 005a 1423     	 movs r3,#20
 223 005c 87F86C30 	 strb r3,[r7,#108]
 137:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_x = 2;  // Offset used to print the vertical axis label at the right p
 224              	 .loc 1 137 0
 225 0060 0223     	 movs r3,#2
 226 0062 87F86B30 	 strb r3,[r7,#107]
 138:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_y = 22; // Offset used to print the vertical axis label at the right p
 227              	 .loc 1 138 0
 228 0066 1623     	 movs r3,#22
 229 0068 87F86A30 	 strb r3,[r7,#106]
 139:../Libraries/FT800-FT813-5.x/tft.c **** 
 140:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_x = 3;  // Offset used to print the horizontal grid labels (numbers)
 230              	 .loc 1 140 0
 231 006c 0323     	 movs r3,#3
 232 006e 87F86930 	 strb r3,[r7,#105]
 141:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_y = 10; // Offset used to print the horizontal grid labels (numbers)
 233              	 .loc 1 141 0
 234 0072 0A23     	 movs r3,#10
 235 0074 87F86830 	 strb r3,[r7,#104]
 142:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_x = 7;  // Offset used to print the vertical grid labels (numbers) a
 236              	 .loc 1 142 0
 237 0078 0723     	 movs r3,#7
 238 007a 87F86730 	 strb r3,[r7,#103]
 143:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_y = 0;  // Offset used to print the vertical grid labels (numbers) a
 239              	 .loc 1 143 0
 240 007e 0023     	 movs r3,#0
 241 0080 87F86630 	 strb r3,[r7,#102]
 144:../Libraries/FT800-FT813-5.x/tft.c **** 
 145:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Calculate pixels between lines and labels of the grid
 146:../Libraries/FT800-FT813-5.x/tft.c **** 	// Used by grid lines and labels (space between them)
 147:../Libraries/FT800-FT813-5.x/tft.c **** 	double widthPerSection = (double)(width)/v_grid_lines;
 242              	 .loc 1 147 0
 243 0084 3B88     	 ldrh r3,[r7]
 244 0086 1846     	 mov r0,r3
 245 0088 FFF7FEFF 	 bl __aeabi_ui2d
 246 008c 0246     	 mov r2,r0
 247 008e 0B46     	 mov r3,r1
 248 0090 1046     	 mov r0,r2
 249 0092 1946     	 mov r1,r3
 250 0094 D7E92E23 	 ldrd r2,[r7,#184]
 251 0098 FFF7FEFF 	 bl __aeabi_ddiv
 252 009c 0246     	 mov r2,r0
 253 009e 0B46     	 mov r3,r1
 254 00a0 C7E91623 	 strd r2,[r7,#88]
 148:../Libraries/FT800-FT813-5.x/tft.c **** 	double heightPerSection = (double)(height)/h_grid_lines;
 255              	 .loc 1 148 0
 256 00a4 B7F89830 	 ldrh r3,[r7,#152]
 257 00a8 1846     	 mov r0,r3
 258 00aa FFF7FEFF 	 bl __aeabi_ui2d
 259 00ae 0246     	 mov r2,r0
 260 00b0 0B46     	 mov r3,r1
 261 00b2 1046     	 mov r0,r2
 262 00b4 1946     	 mov r1,r3
 263 00b6 D7E92C23 	 ldrd r2,[r7,#176]
 264 00ba FFF7FEFF 	 bl __aeabi_ddiv
 265 00be 0246     	 mov r2,r0
 266 00c0 0B46     	 mov r3,r1
 267 00c2 C7E91423 	 strd r2,[r7,#80]
 149:../Libraries/FT800-FT813-5.x/tft.c **** 
 150:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Axes LABELS
 151:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 268              	 .loc 1 151 0
 269 00c6 FB79     	 ldrb r3,[r7,#7]
 270 00c8 9B00     	 lsls r3,r3,#2
 271 00ca 07F18002 	 add r2,r7,#128
 272 00ce 1344     	 add r3,r3,r2
 273 00d0 53F8483C 	 ldr r3,[r3,#-72]
 274 00d4 7548     	 ldr r0,.L20+12
 275 00d6 9847     	 blx r3
 152:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding         + h_ax_lbl_comp_x, y + padding          - h_a
 276              	 .loc 1 152 0
 277 00d8 FB79     	 ldrb r3,[r7,#7]
 278 00da 9B00     	 lsls r3,r3,#2
 279 00dc 07F18002 	 add r2,r7,#128
 280 00e0 1344     	 add r3,r3,r2
 281 00e2 53F8504C 	 ldr r4,[r3,#-80]
 282 00e6 BA88     	 ldrh r2,[r7,#4]
 283 00e8 B7F89C30 	 ldrh r3,[r7,#156]
 284 00ec 1344     	 add r3,r3,r2
 285 00ee 9AB2     	 uxth r2,r3
 286 00f0 97F86D30 	 ldrb r3,[r7,#109]
 287 00f4 9BB2     	 uxth r3,r3
 288 00f6 1344     	 add r3,r3,r2
 289 00f8 9BB2     	 uxth r3,r3
 290 00fa 99B2     	 uxth r1,r3
 291 00fc 7A88     	 ldrh r2,[r7,#2]
 292 00fe B7F89C30 	 ldrh r3,[r7,#156]
 293 0102 1344     	 add r3,r3,r2
 294 0104 9AB2     	 uxth r2,r3
 295 0106 97F86C30 	 ldrb r3,[r7,#108]
 296 010a 9BB2     	 uxth r3,r3
 297 010c D31A     	 subs r3,r2,r3
 298 010e 9BB2     	 uxth r3,r3
 299 0110 9BB2     	 uxth r3,r3
 300 0112 09B2     	 sxth r1,r1
 301 0114 1AB2     	 sxth r2,r3
 302 0116 664B     	 ldr r3,.L20+16
 303 0118 0093     	 str r3,[sp]
 304 011a 0846     	 mov r0,r1
 305 011c 1146     	 mov r1,r2
 306 011e 1A22     	 movs r2,#26
 307 0120 0023     	 movs r3,#0
 308 0122 A047     	 blx r4
 153:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding + width + v_ax_lbl_comp_x, y + padding + height - v_a
 309              	 .loc 1 153 0
 310 0124 FB79     	 ldrb r3,[r7,#7]
 311 0126 9B00     	 lsls r3,r3,#2
 312 0128 07F18002 	 add r2,r7,#128
 313 012c 1344     	 add r3,r3,r2
 314 012e 53F8504C 	 ldr r4,[r3,#-80]
 315 0132 BA88     	 ldrh r2,[r7,#4]
 316 0134 B7F89C30 	 ldrh r3,[r7,#156]
 317 0138 1344     	 add r3,r3,r2
 318 013a 9AB2     	 uxth r2,r3
 319 013c 3B88     	 ldrh r3,[r7]
 320 013e 1344     	 add r3,r3,r2
 321 0140 9AB2     	 uxth r2,r3
 322 0142 97F86B30 	 ldrb r3,[r7,#107]
 323 0146 9BB2     	 uxth r3,r3
 324 0148 1344     	 add r3,r3,r2
 325 014a 9BB2     	 uxth r3,r3
 326 014c 99B2     	 uxth r1,r3
 327 014e 7A88     	 ldrh r2,[r7,#2]
 328 0150 B7F89C30 	 ldrh r3,[r7,#156]
 329 0154 1344     	 add r3,r3,r2
 330 0156 9AB2     	 uxth r2,r3
 331 0158 B7F89830 	 ldrh r3,[r7,#152]
 332 015c 1344     	 add r3,r3,r2
 333 015e 9AB2     	 uxth r2,r3
 334 0160 97F86A30 	 ldrb r3,[r7,#106]
 335 0164 9BB2     	 uxth r3,r3
 336 0166 D31A     	 subs r3,r2,r3
 337 0168 9BB2     	 uxth r3,r3
 338 016a 9BB2     	 uxth r3,r3
 339 016c 09B2     	 sxth r1,r1
 340 016e 1AB2     	 sxth r2,r3
 341 0170 504B     	 ldr r3,.L20+20
 342 0172 0093     	 str r3,[sp]
 343 0174 0846     	 mov r0,r1
 344 0176 1146     	 mov r1,r2
 345 0178 1A22     	 movs r2,#26
 346 017a 0023     	 movs r3,#0
 347 017c A047     	 blx r4
 154:../Libraries/FT800-FT813-5.x/tft.c **** 
 155:../Libraries/FT800-FT813-5.x/tft.c **** 	/// AXES lines
 156:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 157:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINES);
 348              	 .loc 1 157 0
 349 017e FB79     	 ldrb r3,[r7,#7]
 350 0180 9B00     	 lsls r3,r3,#2
 351 0182 07F18002 	 add r2,r7,#128
 352 0186 1344     	 add r3,r3,r2
 353 0188 53F8483C 	 ldr r3,[r3,#-72]
 354 018c 4A48     	 ldr r0,.L20+24
 355 018e 9847     	 blx r3
 158:../Libraries/FT800-FT813-5.x/tft.c **** 	// left vertical line (Amplitude)
 159:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y));
 356              	 .loc 1 159 0
 357 0190 FB79     	 ldrb r3,[r7,#7]
 358 0192 9B00     	 lsls r3,r3,#2
 359 0194 07F18002 	 add r2,r7,#128
 360 0198 1344     	 add r3,r3,r2
 361 019a 53F8483C 	 ldr r3,[r3,#-72]
 362 019e B988     	 ldrh r1,[r7,#4]
 363 01a0 B7F89C20 	 ldrh r2,[r7,#156]
 364 01a4 0A44     	 add r2,r2,r1
 365 01a6 C2F30E02 	 ubfx r2,r2,#0,#15
 366 01aa D103     	 lsls r1,r2,#15
 367 01ac 7A88     	 ldrh r2,[r7,#2]
 368 01ae C2F30E02 	 ubfx r2,r2,#0,#15
 369 01b2 0A43     	 orrs r2,r2,r1
 370 01b4 42F08042 	 orr r2,r2,#1073741824
 371 01b8 1046     	 mov r0,r2
 372 01ba 9847     	 blx r3
 160:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y + padding + height + padding));
 373              	 .loc 1 160 0
 374 01bc FB79     	 ldrb r3,[r7,#7]
 375 01be 9B00     	 lsls r3,r3,#2
 376 01c0 07F18002 	 add r2,r7,#128
 377 01c4 1344     	 add r3,r3,r2
 378 01c6 53F8483C 	 ldr r3,[r3,#-72]
 379 01ca B988     	 ldrh r1,[r7,#4]
 380 01cc B7F89C20 	 ldrh r2,[r7,#156]
 381 01d0 0A44     	 add r2,r2,r1
 382 01d2 C2F30E02 	 ubfx r2,r2,#0,#15
 383 01d6 D103     	 lsls r1,r2,#15
 384 01d8 7888     	 ldrh r0,[r7,#2]
 385 01da B7F89C20 	 ldrh r2,[r7,#156]
 386 01de 1044     	 add r0,r0,r2
 387 01e0 B7F89820 	 ldrh r2,[r7,#152]
 388 01e4 1044     	 add r0,r0,r2
 389 01e6 B7F89C20 	 ldrh r2,[r7,#156]
 390 01ea 0244     	 add r2,r2,r0
 391 01ec C2F30E02 	 ubfx r2,r2,#0,#15
 392 01f0 0A43     	 orrs r2,r2,r1
 393 01f2 42F08042 	 orr r2,r2,#1073741824
 394 01f6 1046     	 mov r0,r2
 395 01f8 9847     	 blx r3
 161:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal line (Time)
 162:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x                            , y + padding + height ));
 396              	 .loc 1 162 0
 397 01fa FB79     	 ldrb r3,[r7,#7]
 398 01fc 9B00     	 lsls r3,r3,#2
 399 01fe 07F18002 	 add r2,r7,#128
 400 0202 1344     	 add r3,r3,r2
 401 0204 53F8483C 	 ldr r3,[r3,#-72]
 402 0208 BA88     	 ldrh r2,[r7,#4]
 403 020a C2F30E02 	 ubfx r2,r2,#0,#15
 404 020e D103     	 lsls r1,r2,#15
 405 0210 7888     	 ldrh r0,[r7,#2]
 406 0212 B7F89C20 	 ldrh r2,[r7,#156]
 407 0216 1044     	 add r0,r0,r2
 408 0218 B7F89820 	 ldrh r2,[r7,#152]
 409 021c 0244     	 add r2,r2,r0
 410 021e C2F30E02 	 ubfx r2,r2,#0,#15
 411 0222 0A43     	 orrs r2,r2,r1
 412 0224 42F08042 	 orr r2,r2,#1073741824
 413 0228 1046     	 mov r0,r2
 414 022a 9847     	 blx r3
 163:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding, y + padding + height ));
 415              	 .loc 1 163 0
 416 022c FB79     	 ldrb r3,[r7,#7]
 417 022e 9B00     	 lsls r3,r3,#2
 418 0230 07F18002 	 add r2,r7,#128
 419 0234 1344     	 add r3,r3,r2
 420 0236 53F8483C 	 ldr r3,[r3,#-72]
 421 023a B988     	 ldrh r1,[r7,#4]
 422 023c B7F89C20 	 ldrh r2,[r7,#156]
 423 0240 1144     	 add r1,r1,r2
 424 0242 3A88     	 ldrh r2,[r7]
 425 0244 1144     	 add r1,r1,r2
 426 0246 B7F89C20 	 ldrh r2,[r7,#156]
 427 024a 0A44     	 add r2,r2,r1
 428 024c C2F30E02 	 ubfx r2,r2,#0,#15
 429 0250 D103     	 lsls r1,r2,#15
 430 0252 7888     	 ldrh r0,[r7,#2]
 431 0254 B7F89C20 	 ldrh r2,[r7,#156]
 432 0258 1044     	 add r0,r0,r2
 433 025a B7F89820 	 ldrh r2,[r7,#152]
 434 025e 0244     	 add r2,r2,r0
 435 0260 C2F30E02 	 ubfx r2,r2,#0,#15
 436 0264 0A43     	 orrs r2,r2,r1
 437 0266 42F08042 	 orr r2,r2,#1073741824
 438 026a 1046     	 mov r0,r2
 439 026c 9847     	 blx r3
 164:../Libraries/FT800-FT813-5.x/tft.c **** 
 165:../Libraries/FT800-FT813-5.x/tft.c **** 	/// GRID lines
 166:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(LINE_WIDTH(grid_linewidth)); /* size is in 1/16 pixel */
 440              	 .loc 1 166 0
 441 026e FB79     	 ldrb r3,[r7,#7]
 442 0270 9B00     	 lsls r3,r3,#2
 443 0272 07F18002 	 add r2,r7,#128
 444 0276 1344     	 add r3,r3,r2
 445 0278 53F8483C 	 ldr r3,[r3,#-72]
 446 027c 97F86E20 	 ldrb r2,[r7,#110]
 447 0280 42F06062 	 orr r2,r2,#234881024
 448 0284 1046     	 mov r0,r2
 449 0286 9847     	 blx r3
 167:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_GRIDCOLOR);
 450              	 .loc 1 167 0
 451 0288 FB79     	 ldrb r3,[r7,#7]
 452 028a 9B00     	 lsls r3,r3,#2
 453 028c 07F18002 	 add r2,r7,#128
 454 0290 1344     	 add r3,r3,r2
 455 0292 53F8483C 	 ldr r3,[r3,#-72]
 456 0296 0948     	 ldr r0,.L20+28
 457 0298 9847     	 blx r3
 458              	.LBB2:
 168:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid
 169:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(v_grid_lines); i++){
 459              	 .loc 1 169 0
 460 029a 0123     	 movs r3,#1
 461 029c FB67     	 str r3,[r7,#124]
 462 029e 6FE0     	 b .L2
 463              	.L21:
 464              	 .align 2
 465              	.L20:
 466 02a0 10000000 	 .word .LC0
 467 02a4 18000000 	 .word .LC1
 468 02a8 20000000 	 .word .LC2
 469 02ac 0B1E3B04 	 .word 70983179
 470 02b0 00000000 	 .word .LC3
 471 02b4 04000000 	 .word .LC4
 472 02b8 0300001F 	 .word 520093699
 473 02bc E2DAC504 	 .word 80075490
 474              	.L3:
 170:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 171:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 475              	 .loc 1 171 0 discriminator 3
 476 02c0 FB79     	 ldrb r3,[r7,#7]
 477 02c2 9B00     	 lsls r3,r3,#2
 478 02c4 07F18002 	 add r2,r7,#128
 479 02c8 1344     	 add r3,r3,r2
 480 02ca 53F8484C 	 ldr r4,[r3,#-72]
 481 02ce BA88     	 ldrh r2,[r7,#4]
 482 02d0 B7F89C30 	 ldrh r3,[r7,#156]
 483 02d4 D518     	 adds r5,r2,r3
 484 02d6 F86F     	 ldr r0,[r7,#124]
 485 02d8 FFF7FEFF 	 bl __aeabi_i2d
 486 02dc 0246     	 mov r2,r0
 487 02de 0B46     	 mov r3,r1
 488 02e0 1046     	 mov r0,r2
 489 02e2 1946     	 mov r1,r3
 490 02e4 D7E91623 	 ldrd r2,[r7,#88]
 491 02e8 FFF7FEFF 	 bl __aeabi_dmul
 492 02ec 0246     	 mov r2,r0
 493 02ee 0B46     	 mov r3,r1
 494 02f0 1046     	 mov r0,r2
 495 02f2 1946     	 mov r1,r3
 496 02f4 FFF7FEFF 	 bl __aeabi_d2uiz
 497 02f8 0346     	 mov r3,r0
 498 02fa 9BB2     	 uxth r3,r3
 499 02fc 2B44     	 add r3,r3,r5
 500 02fe C3F30E03 	 ubfx r3,r3,#0,#15
 501 0302 DA03     	 lsls r2,r3,#15
 502 0304 7988     	 ldrh r1,[r7,#2]
 503 0306 B7F89C30 	 ldrh r3,[r7,#156]
 504 030a 0B44     	 add r3,r3,r1
 505 030c C3F30E03 	 ubfx r3,r3,#0,#15
 506 0310 1343     	 orrs r3,r3,r2
 507 0312 43F08043 	 orr r3,r3,#1073741824
 508 0316 1846     	 mov r0,r3
 509 0318 A047     	 blx r4
 172:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 510              	 .loc 1 172 0 discriminator 3
 511 031a FB79     	 ldrb r3,[r7,#7]
 512 031c 9B00     	 lsls r3,r3,#2
 513 031e 07F18002 	 add r2,r7,#128
 514 0322 1344     	 add r3,r3,r2
 515 0324 53F8484C 	 ldr r4,[r3,#-72]
 516 0328 BA88     	 ldrh r2,[r7,#4]
 517 032a B7F89C30 	 ldrh r3,[r7,#156]
 518 032e D518     	 adds r5,r2,r3
 519 0330 F86F     	 ldr r0,[r7,#124]
 520 0332 FFF7FEFF 	 bl __aeabi_i2d
 521 0336 0246     	 mov r2,r0
 522 0338 0B46     	 mov r3,r1
 523 033a 1046     	 mov r0,r2
 524 033c 1946     	 mov r1,r3
 525 033e D7E91623 	 ldrd r2,[r7,#88]
 526 0342 FFF7FEFF 	 bl __aeabi_dmul
 527 0346 0246     	 mov r2,r0
 528 0348 0B46     	 mov r3,r1
 529 034a 1046     	 mov r0,r2
 530 034c 1946     	 mov r1,r3
 531 034e FFF7FEFF 	 bl __aeabi_d2uiz
 532 0352 0346     	 mov r3,r0
 533 0354 9BB2     	 uxth r3,r3
 534 0356 2B44     	 add r3,r3,r5
 535 0358 C3F30E03 	 ubfx r3,r3,#0,#15
 536 035c DA03     	 lsls r2,r3,#15
 537 035e 7988     	 ldrh r1,[r7,#2]
 538 0360 B7F89C30 	 ldrh r3,[r7,#156]
 539 0364 1944     	 add r1,r1,r3
 540 0366 B7F89830 	 ldrh r3,[r7,#152]
 541 036a 0B44     	 add r3,r3,r1
 542 036c C3F30E03 	 ubfx r3,r3,#0,#15
 543 0370 1343     	 orrs r3,r3,r2
 544 0372 43F08043 	 orr r3,r3,#1073741824
 545 0376 1846     	 mov r0,r3
 546 0378 A047     	 blx r4
 169:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 547              	 .loc 1 169 0 discriminator 3
 548 037a FB6F     	 ldr r3,[r7,#124]
 549 037c 0133     	 adds r3,r3,#1
 550 037e FB67     	 str r3,[r7,#124]
 551              	.L2:
 169:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 552              	 .loc 1 169 0 is_stmt 0 discriminator 1
 553 0380 D7E92E01 	 ldrd r0,[r7,#184]
 554 0384 FFF7FEFF 	 bl floor
 555 0388 0246     	 mov r2,r0
 556 038a 0B46     	 mov r3,r1
 557 038c 1046     	 mov r0,r2
 558 038e 1946     	 mov r1,r3
 559 0390 FFF7FEFF 	 bl __aeabi_d2iz
 560 0394 0246     	 mov r2,r0
 561 0396 FB6F     	 ldr r3,[r7,#124]
 562 0398 9A42     	 cmp r2,r3
 563 039a 91DA     	 bge .L3
 564              	.LBE2:
 565              	.LBB3:
 173:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 174:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid
 175:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){
 566              	 .loc 1 175 0 is_stmt 1
 567 039c 0123     	 movs r3,#1
 568 039e BB67     	 str r3,[r7,#120]
 569 03a0 64E0     	 b .L4
 570              	.L5:
 176:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 177:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding        , y + padding + height - (uint16_t)(he
 571              	 .loc 1 177 0 discriminator 3
 572 03a2 FB79     	 ldrb r3,[r7,#7]
 573 03a4 9B00     	 lsls r3,r3,#2
 574 03a6 07F18002 	 add r2,r7,#128
 575 03aa 1344     	 add r3,r3,r2
 576 03ac 53F8484C 	 ldr r4,[r3,#-72]
 577 03b0 BA88     	 ldrh r2,[r7,#4]
 578 03b2 B7F89C30 	 ldrh r3,[r7,#156]
 579 03b6 1344     	 add r3,r3,r2
 580 03b8 C3F30E03 	 ubfx r3,r3,#0,#15
 581 03bc DD03     	 lsls r5,r3,#15
 582 03be 7A88     	 ldrh r2,[r7,#2]
 583 03c0 B7F89C30 	 ldrh r3,[r7,#156]
 584 03c4 1A44     	 add r2,r2,r3
 585 03c6 B7F89830 	 ldrh r3,[r7,#152]
 586 03ca D618     	 adds r6,r2,r3
 587 03cc B86F     	 ldr r0,[r7,#120]
 588 03ce FFF7FEFF 	 bl __aeabi_i2d
 589 03d2 0246     	 mov r2,r0
 590 03d4 0B46     	 mov r3,r1
 591 03d6 1046     	 mov r0,r2
 592 03d8 1946     	 mov r1,r3
 593 03da D7E91423 	 ldrd r2,[r7,#80]
 594 03de FFF7FEFF 	 bl __aeabi_dmul
 595 03e2 0246     	 mov r2,r0
 596 03e4 0B46     	 mov r3,r1
 597 03e6 1046     	 mov r0,r2
 598 03e8 1946     	 mov r1,r3
 599 03ea FFF7FEFF 	 bl __aeabi_d2uiz
 600 03ee 0346     	 mov r3,r0
 601 03f0 9BB2     	 uxth r3,r3
 602 03f2 F31A     	 subs r3,r6,r3
 603 03f4 C3F30E03 	 ubfx r3,r3,#0,#15
 604 03f8 2B43     	 orrs r3,r3,r5
 605 03fa 43F08043 	 orr r3,r3,#1073741824
 606 03fe 1846     	 mov r0,r3
 607 0400 A047     	 blx r4
 178:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width, y + padding + height - (uint16_t)(he
 608              	 .loc 1 178 0 discriminator 3
 609 0402 FB79     	 ldrb r3,[r7,#7]
 610 0404 9B00     	 lsls r3,r3,#2
 611 0406 07F18002 	 add r2,r7,#128
 612 040a 1344     	 add r3,r3,r2
 613 040c 53F8484C 	 ldr r4,[r3,#-72]
 614 0410 BA88     	 ldrh r2,[r7,#4]
 615 0412 B7F89C30 	 ldrh r3,[r7,#156]
 616 0416 1A44     	 add r2,r2,r3
 617 0418 3B88     	 ldrh r3,[r7]
 618 041a 1344     	 add r3,r3,r2
 619 041c C3F30E03 	 ubfx r3,r3,#0,#15
 620 0420 DD03     	 lsls r5,r3,#15
 621 0422 7A88     	 ldrh r2,[r7,#2]
 622 0424 B7F89C30 	 ldrh r3,[r7,#156]
 623 0428 1A44     	 add r2,r2,r3
 624 042a B7F89830 	 ldrh r3,[r7,#152]
 625 042e D618     	 adds r6,r2,r3
 626 0430 B86F     	 ldr r0,[r7,#120]
 627 0432 FFF7FEFF 	 bl __aeabi_i2d
 628 0436 0246     	 mov r2,r0
 629 0438 0B46     	 mov r3,r1
 630 043a 1046     	 mov r0,r2
 631 043c 1946     	 mov r1,r3
 632 043e D7E91423 	 ldrd r2,[r7,#80]
 633 0442 FFF7FEFF 	 bl __aeabi_dmul
 634 0446 0246     	 mov r2,r0
 635 0448 0B46     	 mov r3,r1
 636 044a 1046     	 mov r0,r2
 637 044c 1946     	 mov r1,r3
 638 044e FFF7FEFF 	 bl __aeabi_d2uiz
 639 0452 0346     	 mov r3,r0
 640 0454 9BB2     	 uxth r3,r3
 641 0456 F31A     	 subs r3,r6,r3
 642 0458 C3F30E03 	 ubfx r3,r3,#0,#15
 643 045c 2B43     	 orrs r3,r3,r5
 644 045e 43F08043 	 orr r3,r3,#1073741824
 645 0462 1846     	 mov r0,r3
 646 0464 A047     	 blx r4
 175:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 647              	 .loc 1 175 0 discriminator 3
 648 0466 BB6F     	 ldr r3,[r7,#120]
 649 0468 0133     	 adds r3,r3,#1
 650 046a BB67     	 str r3,[r7,#120]
 651              	.L4:
 175:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 652              	 .loc 1 175 0 is_stmt 0 discriminator 1
 653 046c D7E92C01 	 ldrd r0,[r7,#176]
 654 0470 FFF7FEFF 	 bl floor
 655 0474 0246     	 mov r2,r0
 656 0476 0B46     	 mov r3,r1
 657 0478 1046     	 mov r0,r2
 658 047a 1946     	 mov r1,r3
 659 047c FFF7FEFF 	 bl __aeabi_d2iz
 660 0480 0246     	 mov r2,r0
 661 0482 BB6F     	 ldr r3,[r7,#120]
 662 0484 9A42     	 cmp r2,r3
 663 0486 8CDA     	 bge .L5
 664              	.LBE3:
 179:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 180:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 665              	 .loc 1 180 0 is_stmt 1
 666 0488 FB79     	 ldrb r3,[r7,#7]
 667 048a 9B00     	 lsls r3,r3,#2
 668 048c 07F18002 	 add r2,r7,#128
 669 0490 1344     	 add r3,r3,r2
 670 0492 53F8483C 	 ldr r3,[r3,#-72]
 671 0496 4FF00450 	 mov r0,#553648128
 672 049a 9847     	 blx r3
 181:../Libraries/FT800-FT813-5.x/tft.c **** 
 182:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Grid VALUES
 183:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 673              	 .loc 1 183 0
 674 049c FB79     	 ldrb r3,[r7,#7]
 675 049e 9B00     	 lsls r3,r3,#2
 676 04a0 07F18002 	 add r2,r7,#128
 677 04a4 1344     	 add r3,r3,r2
 678 04a6 53F8483C 	 ldr r3,[r3,#-72]
 679 04aa A448     	 ldr r0,.L22
 680 04ac 9847     	 blx r3
 681              	.LBB4:
 184:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid (time)
 185:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)ceil(v_grid_lines); i++){ // "ceil" and "i-1" at val -> print also the 0 valu
 682              	 .loc 1 185 0
 683 04ae 0123     	 movs r3,#1
 684 04b0 7B67     	 str r3,[r7,#116]
 685 04b2 BEE0     	 b .L6
 686              	.L10:
 687              	.LBB5:
 186:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 187:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (t_max/v_grid_lines*(double)(i-1));
 688              	 .loc 1 187 0
 689 04b4 D7E92A01 	 ldrd r0,[r7,#168]
 690 04b8 D7E92E23 	 ldrd r2,[r7,#184]
 691 04bc FFF7FEFF 	 bl __aeabi_ddiv
 692 04c0 0246     	 mov r2,r0
 693 04c2 0B46     	 mov r3,r1
 694 04c4 1446     	 mov r4,r2
 695 04c6 1D46     	 mov r5,r3
 696 04c8 7B6F     	 ldr r3,[r7,#116]
 697 04ca 013B     	 subs r3,r3,#1
 698 04cc 1846     	 mov r0,r3
 699 04ce FFF7FEFF 	 bl __aeabi_i2d
 700 04d2 0246     	 mov r2,r0
 701 04d4 0B46     	 mov r3,r1
 702 04d6 2046     	 mov r0,r4
 703 04d8 2946     	 mov r1,r5
 704 04da FFF7FEFF 	 bl __aeabi_dmul
 705 04de 0246     	 mov r2,r0
 706 04e0 0B46     	 mov r3,r1
 707 04e2 C7E91223 	 strd r2,[r7,#72]
 188:../Libraries/FT800-FT813-5.x/tft.c **** 
 189:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 190:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 708              	 .loc 1 190 0
 709 04e6 D7E91201 	 ldrd r0,[r7,#72]
 710 04ea FFF7FEFF 	 bl __aeabi_d2uiz
 711 04ee 0346     	 mov r3,r0
 712 04f0 1846     	 mov r0,r3
 713 04f2 FFF7FEFF 	 bl __aeabi_ui2d
 714 04f6 0246     	 mov r2,r0
 715 04f8 0B46     	 mov r3,r1
 716 04fa D7E91201 	 ldrd r0,[r7,#72]
 717 04fe FFF7FEFF 	 bl __aeabi_dsub
 718 0502 0246     	 mov r2,r0
 719 0504 0B46     	 mov r3,r1
 720 0506 1046     	 mov r0,r2
 721 0508 1946     	 mov r1,r3
 722 050a 4FF00002 	 mov r2,#0
 723 050e 4FF00003 	 mov r3,#0
 724 0512 FFF7FEFF 	 bl __aeabi_dcmpeq
 725 0516 0346     	 mov r3,r0
 726 0518 002B     	 cmp r3,#0
 727 051a 41D0     	 beq .L18
 191:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_g
 728              	 .loc 1 191 0
 729 051c FB79     	 ldrb r3,[r7,#7]
 730 051e 9B00     	 lsls r3,r3,#2
 731 0520 07F18002 	 add r2,r7,#128
 732 0524 1344     	 add r3,r3,r2
 733 0526 53F8584C 	 ldr r4,[r3,#-88]
 734 052a BA88     	 ldrh r2,[r7,#4]
 735 052c B7F89C30 	 ldrh r3,[r7,#156]
 736 0530 1344     	 add r3,r3,r2
 737 0532 9DB2     	 uxth r5,r3
 738 0534 7B6F     	 ldr r3,[r7,#116]
 739 0536 013B     	 subs r3,r3,#1
 740 0538 1846     	 mov r0,r3
 741 053a FFF7FEFF 	 bl __aeabi_i2d
 742 053e 0246     	 mov r2,r0
 743 0540 0B46     	 mov r3,r1
 744 0542 1046     	 mov r0,r2
 745 0544 1946     	 mov r1,r3
 746 0546 D7E91623 	 ldrd r2,[r7,#88]
 747 054a FFF7FEFF 	 bl __aeabi_dmul
 748 054e 0246     	 mov r2,r0
 749 0550 0B46     	 mov r3,r1
 750 0552 1046     	 mov r0,r2
 751 0554 1946     	 mov r1,r3
 752 0556 FFF7FEFF 	 bl __aeabi_d2uiz
 753 055a 0346     	 mov r3,r0
 754 055c 9BB2     	 uxth r3,r3
 755 055e 2B44     	 add r3,r3,r5
 756 0560 9AB2     	 uxth r2,r3
 757 0562 97F86930 	 ldrb r3,[r7,#105]
 758 0566 9BB2     	 uxth r3,r3
 759 0568 1344     	 add r3,r3,r2
 760 056a 9BB2     	 uxth r3,r3
 761 056c 9EB2     	 uxth r6,r3
 762 056e 7A88     	 ldrh r2,[r7,#2]
 763 0570 B7F89830 	 ldrh r3,[r7,#152]
 764 0574 1344     	 add r3,r3,r2
 765 0576 9AB2     	 uxth r2,r3
 766 0578 97F86830 	 ldrb r3,[r7,#104]
 767 057c 9BB2     	 uxth r3,r3
 768 057e 1344     	 add r3,r3,r2
 769 0580 9BB2     	 uxth r3,r3
 770 0582 9DB2     	 uxth r5,r3
 771 0584 D7E91201 	 ldrd r0,[r7,#72]
 772 0588 FFF7FEFF 	 bl __aeabi_d2iz
 773 058c 0146     	 mov r1,r0
 774 058e 32B2     	 sxth r2,r6
 775 0590 2BB2     	 sxth r3,r5
 776 0592 0091     	 str r1,[sp]
 777 0594 1046     	 mov r0,r2
 778 0596 1946     	 mov r1,r3
 779 0598 1422     	 movs r2,#20
 780 059a 0023     	 movs r3,#0
 781 059c A047     	 blx r4
 782 059e 45E0     	 b .L9
 783              	.L18:
 784              	.LBB6:
 192:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 193:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 194:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 195:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 785              	 .loc 1 195 0
 786 05a0 07F10803 	 add r3,r7,#8
 787 05a4 1846     	 mov r0,r3
 788 05a6 6649     	 ldr r1,.L22+4
 789 05a8 D7E91223 	 ldrd r2,[r7,#72]
 790 05ac FFF7FEFF 	 bl sprintf
 196:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_gri
 791              	 .loc 1 196 0
 792 05b0 FB79     	 ldrb r3,[r7,#7]
 793 05b2 9B00     	 lsls r3,r3,#2
 794 05b4 07F18002 	 add r2,r7,#128
 795 05b8 1344     	 add r3,r3,r2
 796 05ba 53F8504C 	 ldr r4,[r3,#-80]
 797 05be BA88     	 ldrh r2,[r7,#4]
 798 05c0 B7F89C30 	 ldrh r3,[r7,#156]
 799 05c4 1344     	 add r3,r3,r2
 800 05c6 9DB2     	 uxth r5,r3
 801 05c8 7B6F     	 ldr r3,[r7,#116]
 802 05ca 013B     	 subs r3,r3,#1
 803 05cc 1846     	 mov r0,r3
 804 05ce FFF7FEFF 	 bl __aeabi_i2d
 805 05d2 0246     	 mov r2,r0
 806 05d4 0B46     	 mov r3,r1
 807 05d6 1046     	 mov r0,r2
 808 05d8 1946     	 mov r1,r3
 809 05da D7E91623 	 ldrd r2,[r7,#88]
 810 05de FFF7FEFF 	 bl __aeabi_dmul
 811 05e2 0246     	 mov r2,r0
 812 05e4 0B46     	 mov r3,r1
 813 05e6 1046     	 mov r0,r2
 814 05e8 1946     	 mov r1,r3
 815 05ea FFF7FEFF 	 bl __aeabi_d2uiz
 816 05ee 0346     	 mov r3,r0
 817 05f0 9BB2     	 uxth r3,r3
 818 05f2 2B44     	 add r3,r3,r5
 819 05f4 9AB2     	 uxth r2,r3
 820 05f6 97F86930 	 ldrb r3,[r7,#105]
 821 05fa 9BB2     	 uxth r3,r3
 822 05fc 1344     	 add r3,r3,r2
 823 05fe 9BB2     	 uxth r3,r3
 824 0600 99B2     	 uxth r1,r3
 825 0602 7A88     	 ldrh r2,[r7,#2]
 826 0604 B7F89830 	 ldrh r3,[r7,#152]
 827 0608 1344     	 add r3,r3,r2
 828 060a 9AB2     	 uxth r2,r3
 829 060c 97F86830 	 ldrb r3,[r7,#104]
 830 0610 9BB2     	 uxth r3,r3
 831 0612 1344     	 add r3,r3,r2
 832 0614 9BB2     	 uxth r3,r3
 833 0616 9BB2     	 uxth r3,r3
 834 0618 09B2     	 sxth r1,r1
 835 061a 1AB2     	 sxth r2,r3
 836 061c 07F10803 	 add r3,r7,#8
 837 0620 0093     	 str r3,[sp]
 838 0622 0846     	 mov r0,r1
 839 0624 1146     	 mov r1,r2
 840 0626 1422     	 movs r2,#20
 841 0628 0023     	 movs r3,#0
 842 062a A047     	 blx r4
 843              	.L9:
 844              	.LBE6:
 845              	.LBE5:
 185:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 846              	 .loc 1 185 0 discriminator 2
 847 062c 7B6F     	 ldr r3,[r7,#116]
 848 062e 0133     	 adds r3,r3,#1
 849 0630 7B67     	 str r3,[r7,#116]
 850              	.L6:
 185:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 851              	 .loc 1 185 0 is_stmt 0 discriminator 1
 852 0632 D7E92E01 	 ldrd r0,[r7,#184]
 853 0636 FFF7FEFF 	 bl ceil
 854 063a 0246     	 mov r2,r0
 855 063c 0B46     	 mov r3,r1
 856 063e 1046     	 mov r0,r2
 857 0640 1946     	 mov r1,r3
 858 0642 FFF7FEFF 	 bl __aeabi_d2iz
 859 0646 0246     	 mov r2,r0
 860 0648 7B6F     	 ldr r3,[r7,#116]
 861 064a 9A42     	 cmp r2,r3
 862 064c BFF632AF 	 bge .L10
 863              	.LBE4:
 864              	.LBB7:
 197:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 198:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 199:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid (amplitude)
 200:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 201:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){  // "floor" and "i" at val -> don't print the 0 va
 865              	 .loc 1 201 0 is_stmt 1
 866 0650 0123     	 movs r3,#1
 867 0652 3B67     	 str r3,[r7,#112]
 868 0654 BDE0     	 b .L11
 869              	.L15:
 870              	.LBB8:
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 203:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (amp_max/h_grid_lines*(double)i);
 871              	 .loc 1 203 0
 872 0656 D7E92801 	 ldrd r0,[r7,#160]
 873 065a D7E92C23 	 ldrd r2,[r7,#176]
 874 065e FFF7FEFF 	 bl __aeabi_ddiv
 875 0662 0246     	 mov r2,r0
 876 0664 0B46     	 mov r3,r1
 877 0666 1446     	 mov r4,r2
 878 0668 1D46     	 mov r5,r3
 879 066a 386F     	 ldr r0,[r7,#112]
 880 066c FFF7FEFF 	 bl __aeabi_i2d
 881 0670 0246     	 mov r2,r0
 882 0672 0B46     	 mov r3,r1
 883 0674 2046     	 mov r0,r4
 884 0676 2946     	 mov r1,r5
 885 0678 FFF7FEFF 	 bl __aeabi_dmul
 886 067c 0246     	 mov r2,r0
 887 067e 0B46     	 mov r3,r1
 888 0680 C7E91023 	 strd r2,[r7,#64]
 204:../Libraries/FT800-FT813-5.x/tft.c **** 
 205:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 206:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 889              	 .loc 1 206 0
 890 0684 D7E91001 	 ldrd r0,[r7,#64]
 891 0688 FFF7FEFF 	 bl __aeabi_d2uiz
 892 068c 0346     	 mov r3,r0
 893 068e 1846     	 mov r0,r3
 894 0690 FFF7FEFF 	 bl __aeabi_ui2d
 895 0694 0246     	 mov r2,r0
 896 0696 0B46     	 mov r3,r1
 897 0698 D7E91001 	 ldrd r0,[r7,#64]
 898 069c FFF7FEFF 	 bl __aeabi_dsub
 899 06a0 0246     	 mov r2,r0
 900 06a2 0B46     	 mov r3,r1
 901 06a4 1046     	 mov r0,r2
 902 06a6 1946     	 mov r1,r3
 903 06a8 4FF00002 	 mov r2,#0
 904 06ac 4FF00003 	 mov r3,#0
 905 06b0 FFF7FEFF 	 bl __aeabi_dcmpeq
 906 06b4 0346     	 mov r3,r0
 907 06b6 002B     	 cmp r3,#0
 908 06b8 44D0     	 beq .L19
 207:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(heig
 909              	 .loc 1 207 0
 910 06ba FB79     	 ldrb r3,[r7,#7]
 911 06bc 9B00     	 lsls r3,r3,#2
 912 06be 07F18002 	 add r2,r7,#128
 913 06c2 1344     	 add r3,r3,r2
 914 06c4 53F8584C 	 ldr r4,[r3,#-88]
 915 06c8 97F86730 	 ldrb r3,[r7,#103]
 916 06cc 9BB2     	 uxth r3,r3
 917 06ce BA88     	 ldrh r2,[r7,#4]
 918 06d0 D31A     	 subs r3,r2,r3
 919 06d2 9BB2     	 uxth r3,r3
 920 06d4 9EB2     	 uxth r6,r3
 921 06d6 7A88     	 ldrh r2,[r7,#2]
 922 06d8 B7F89C30 	 ldrh r3,[r7,#156]
 923 06dc 1344     	 add r3,r3,r2
 924 06de 9AB2     	 uxth r2,r3
 925 06e0 B7F89830 	 ldrh r3,[r7,#152]
 926 06e4 1344     	 add r3,r3,r2
 927 06e6 9DB2     	 uxth r5,r3
 928 06e8 386F     	 ldr r0,[r7,#112]
 929 06ea FFF7FEFF 	 bl __aeabi_i2d
 930 06ee 0246     	 mov r2,r0
 931 06f0 0B46     	 mov r3,r1
 932 06f2 1046     	 mov r0,r2
 933 06f4 1946     	 mov r1,r3
 934 06f6 D7E91423 	 ldrd r2,[r7,#80]
 935 06fa FFF7FEFF 	 bl __aeabi_dmul
 936 06fe 0246     	 mov r2,r0
 937 0700 0B46     	 mov r3,r1
 938 0702 1046     	 mov r0,r2
 939 0704 1946     	 mov r1,r3
 940 0706 FFF7FEFF 	 bl __aeabi_d2uiz
 941 070a 0346     	 mov r3,r0
 942 070c 9BB2     	 uxth r3,r3
 943 070e EB1A     	 subs r3,r5,r3
 944 0710 9AB2     	 uxth r2,r3
 945 0712 97F86630 	 ldrb r3,[r7,#102]
 946 0716 9BB2     	 uxth r3,r3
 947 0718 1344     	 add r3,r3,r2
 948 071a 9BB2     	 uxth r3,r3
 949 071c 9DB2     	 uxth r5,r3
 950 071e D7E91001 	 ldrd r0,[r7,#64]
 951 0722 FFF7FEFF 	 bl __aeabi_d2iz
 952 0726 0146     	 mov r1,r0
 953 0728 32B2     	 sxth r2,r6
 954 072a 2BB2     	 sxth r3,r5
 955 072c 0091     	 str r1,[sp]
 956 072e 1046     	 mov r0,r2
 957 0730 1946     	 mov r1,r3
 958 0732 1422     	 movs r2,#20
 959 0734 0023     	 movs r3,#0
 960 0736 A047     	 blx r4
 961 0738 48E0     	 b .L14
 962              	.L23:
 963 073a 00BF     	 .align 2
 964              	.L22:
 965 073c 0B1E3B04 	 .word 70983179
 966 0740 08000000 	 .word .LC5
 967              	.L19:
 968              	.LBB9:
 208:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 209:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 210:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 211:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 969              	 .loc 1 211 0
 970 0744 07F10803 	 add r3,r7,#8
 971 0748 1846     	 mov r0,r3
 972 074a 9C49     	 ldr r1,.L24
 973 074c D7E91023 	 ldrd r2,[r7,#64]
 974 0750 FFF7FEFF 	 bl sprintf
 212:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(height
 975              	 .loc 1 212 0
 976 0754 FB79     	 ldrb r3,[r7,#7]
 977 0756 9B00     	 lsls r3,r3,#2
 978 0758 07F18002 	 add r2,r7,#128
 979 075c 1344     	 add r3,r3,r2
 980 075e 53F8504C 	 ldr r4,[r3,#-80]
 981 0762 97F86730 	 ldrb r3,[r7,#103]
 982 0766 9BB2     	 uxth r3,r3
 983 0768 BA88     	 ldrh r2,[r7,#4]
 984 076a D31A     	 subs r3,r2,r3
 985 076c 9BB2     	 uxth r3,r3
 986 076e 9EB2     	 uxth r6,r3
 987 0770 7A88     	 ldrh r2,[r7,#2]
 988 0772 B7F89C30 	 ldrh r3,[r7,#156]
 989 0776 1344     	 add r3,r3,r2
 990 0778 9AB2     	 uxth r2,r3
 991 077a B7F89830 	 ldrh r3,[r7,#152]
 992 077e 1344     	 add r3,r3,r2
 993 0780 9DB2     	 uxth r5,r3
 994 0782 386F     	 ldr r0,[r7,#112]
 995 0784 FFF7FEFF 	 bl __aeabi_i2d
 996 0788 0246     	 mov r2,r0
 997 078a 0B46     	 mov r3,r1
 998 078c 1046     	 mov r0,r2
 999 078e 1946     	 mov r1,r3
 1000 0790 D7E91423 	 ldrd r2,[r7,#80]
 1001 0794 FFF7FEFF 	 bl __aeabi_dmul
 1002 0798 0246     	 mov r2,r0
 1003 079a 0B46     	 mov r3,r1
 1004 079c 1046     	 mov r0,r2
 1005 079e 1946     	 mov r1,r3
 1006 07a0 FFF7FEFF 	 bl __aeabi_d2uiz
 1007 07a4 0346     	 mov r3,r0
 1008 07a6 9BB2     	 uxth r3,r3
 1009 07a8 EB1A     	 subs r3,r5,r3
 1010 07aa 9AB2     	 uxth r2,r3
 1011 07ac 97F86630 	 ldrb r3,[r7,#102]
 1012 07b0 9BB2     	 uxth r3,r3
 1013 07b2 1344     	 add r3,r3,r2
 1014 07b4 9BB2     	 uxth r3,r3
 1015 07b6 9BB2     	 uxth r3,r3
 1016 07b8 31B2     	 sxth r1,r6
 1017 07ba 1AB2     	 sxth r2,r3
 1018 07bc 07F10803 	 add r3,r7,#8
 1019 07c0 0093     	 str r3,[sp]
 1020 07c2 0846     	 mov r0,r1
 1021 07c4 1146     	 mov r1,r2
 1022 07c6 1422     	 movs r2,#20
 1023 07c8 0023     	 movs r3,#0
 1024 07ca A047     	 blx r4
 1025              	.L14:
 1026              	.LBE9:
 1027              	.LBE8:
 201:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1028              	 .loc 1 201 0 discriminator 2
 1029 07cc 3B6F     	 ldr r3,[r7,#112]
 1030 07ce 0133     	 adds r3,r3,#1
 1031 07d0 3B67     	 str r3,[r7,#112]
 1032              	.L11:
 201:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1033              	 .loc 1 201 0 is_stmt 0 discriminator 1
 1034 07d2 D7E92C01 	 ldrd r0,[r7,#176]
 1035 07d6 FFF7FEFF 	 bl floor
 1036 07da 0246     	 mov r2,r0
 1037 07dc 0B46     	 mov r3,r1
 1038 07de 1046     	 mov r0,r2
 1039 07e0 1946     	 mov r1,r3
 1040 07e2 FFF7FEFF 	 bl __aeabi_d2iz
 1041 07e6 0246     	 mov r2,r0
 1042 07e8 3B6F     	 ldr r3,[r7,#112]
 1043 07ea 9A42     	 cmp r2,r3
 1044 07ec BFF633AF 	 bge .L15
 1045              	.LBE7:
 213:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 214:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 215:../Libraries/FT800-FT813-5.x/tft.c **** 
 216:../Libraries/FT800-FT813-5.x/tft.c **** 	/// ARROWS on axes
 217:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 218:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom vertical arrow (Amplitude)
 219:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1046              	 .loc 1 219 0 is_stmt 1
 1047 07f0 FB79     	 ldrb r3,[r7,#7]
 1048 07f2 9B00     	 lsls r3,r3,#2
 1049 07f4 07F18002 	 add r2,r7,#128
 1050 07f8 1344     	 add r3,r3,r2
 1051 07fa 53F8483C 	 ldr r3,[r3,#-72]
 1052 07fe 7048     	 ldr r0,.L24+4
 1053 0800 9847     	 blx r3
 220:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + arrow_offset, y + arrow_offset ));
 1054              	 .loc 1 220 0
 1055 0802 FB79     	 ldrb r3,[r7,#7]
 1056 0804 9B00     	 lsls r3,r3,#2
 1057 0806 07F18002 	 add r2,r7,#128
 1058 080a 1344     	 add r3,r3,r2
 1059 080c 53F8483C 	 ldr r3,[r3,#-72]
 1060 0810 B988     	 ldrh r1,[r7,#4]
 1061 0812 B7F89C20 	 ldrh r2,[r7,#156]
 1062 0816 1144     	 add r1,r1,r2
 1063 0818 97F86F20 	 ldrb r2,[r7,#111]
 1064 081c 0A44     	 add r2,r2,r1
 1065 081e C2F30E02 	 ubfx r2,r2,#0,#15
 1066 0822 D103     	 lsls r1,r2,#15
 1067 0824 7888     	 ldrh r0,[r7,#2]
 1068 0826 97F86F20 	 ldrb r2,[r7,#111]
 1069 082a 0244     	 add r2,r2,r0
 1070 082c C2F30E02 	 ubfx r2,r2,#0,#15
 1071 0830 0A43     	 orrs r2,r2,r1
 1072 0832 42F08042 	 orr r2,r2,#1073741824
 1073 0836 1046     	 mov r0,r2
 1074 0838 9847     	 blx r3
 221:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding               , y                ));
 1075              	 .loc 1 221 0
 1076 083a FB79     	 ldrb r3,[r7,#7]
 1077 083c 9B00     	 lsls r3,r3,#2
 1078 083e 07F18002 	 add r2,r7,#128
 1079 0842 1344     	 add r3,r3,r2
 1080 0844 53F8483C 	 ldr r3,[r3,#-72]
 1081 0848 B988     	 ldrh r1,[r7,#4]
 1082 084a B7F89C20 	 ldrh r2,[r7,#156]
 1083 084e 0A44     	 add r2,r2,r1
 1084 0850 C2F30E02 	 ubfx r2,r2,#0,#15
 1085 0854 D103     	 lsls r1,r2,#15
 1086 0856 7A88     	 ldrh r2,[r7,#2]
 1087 0858 C2F30E02 	 ubfx r2,r2,#0,#15
 1088 085c 0A43     	 orrs r2,r2,r1
 1089 085e 42F08042 	 orr r2,r2,#1073741824
 1090 0862 1046     	 mov r0,r2
 1091 0864 9847     	 blx r3
 222:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding - arrow_offset, y + arrow_offset ));
 1092              	 .loc 1 222 0
 1093 0866 FB79     	 ldrb r3,[r7,#7]
 1094 0868 9B00     	 lsls r3,r3,#2
 1095 086a 07F18002 	 add r2,r7,#128
 1096 086e 1344     	 add r3,r3,r2
 1097 0870 53F8483C 	 ldr r3,[r3,#-72]
 1098 0874 B988     	 ldrh r1,[r7,#4]
 1099 0876 B7F89C20 	 ldrh r2,[r7,#156]
 1100 087a 1144     	 add r1,r1,r2
 1101 087c 97F86F20 	 ldrb r2,[r7,#111]
 1102 0880 8A1A     	 subs r2,r1,r2
 1103 0882 C2F30E02 	 ubfx r2,r2,#0,#15
 1104 0886 D103     	 lsls r1,r2,#15
 1105 0888 7888     	 ldrh r0,[r7,#2]
 1106 088a 97F86F20 	 ldrb r2,[r7,#111]
 1107 088e 0244     	 add r2,r2,r0
 1108 0890 C2F30E02 	 ubfx r2,r2,#0,#15
 1109 0894 0A43     	 orrs r2,r2,r1
 1110 0896 42F08042 	 orr r2,r2,#1073741824
 1111 089a 1046     	 mov r0,r2
 1112 089c 9847     	 blx r3
 223:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1113              	 .loc 1 223 0
 1114 089e FB79     	 ldrb r3,[r7,#7]
 1115 08a0 9B00     	 lsls r3,r3,#2
 1116 08a2 07F18002 	 add r2,r7,#128
 1117 08a6 1344     	 add r3,r3,r2
 1118 08a8 53F8483C 	 ldr r3,[r3,#-72]
 1119 08ac 4FF00450 	 mov r0,#553648128
 1120 08b0 9847     	 blx r3
 224:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal arrow (Time)
 225:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1121              	 .loc 1 225 0
 1122 08b2 FB79     	 ldrb r3,[r7,#7]
 1123 08b4 9B00     	 lsls r3,r3,#2
 1124 08b6 07F18002 	 add r2,r7,#128
 1125 08ba 1344     	 add r3,r3,r2
 1126 08bc 53F8483C 	 ldr r3,[r3,#-72]
 1127 08c0 3F48     	 ldr r0,.L24+4
 1128 08c2 9847     	 blx r3
 226:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1129              	 .loc 1 226 0
 1130 08c4 FB79     	 ldrb r3,[r7,#7]
 1131 08c6 9B00     	 lsls r3,r3,#2
 1132 08c8 07F18002 	 add r2,r7,#128
 1133 08cc 1344     	 add r3,r3,r2
 1134 08ce 53F8483C 	 ldr r3,[r3,#-72]
 1135 08d2 B988     	 ldrh r1,[r7,#4]
 1136 08d4 B7F89C20 	 ldrh r2,[r7,#156]
 1137 08d8 1144     	 add r1,r1,r2
 1138 08da 3A88     	 ldrh r2,[r7]
 1139 08dc 1144     	 add r1,r1,r2
 1140 08de B7F89C20 	 ldrh r2,[r7,#156]
 1141 08e2 1144     	 add r1,r1,r2
 1142 08e4 97F86F20 	 ldrb r2,[r7,#111]
 1143 08e8 8A1A     	 subs r2,r1,r2
 1144 08ea C2F30E02 	 ubfx r2,r2,#0,#15
 1145 08ee D103     	 lsls r1,r2,#15
 1146 08f0 7888     	 ldrh r0,[r7,#2]
 1147 08f2 B7F89C20 	 ldrh r2,[r7,#156]
 1148 08f6 1044     	 add r0,r0,r2
 1149 08f8 B7F89820 	 ldrh r2,[r7,#152]
 1150 08fc 1044     	 add r0,r0,r2
 1151 08fe 97F86F20 	 ldrb r2,[r7,#111]
 1152 0902 0244     	 add r2,r2,r0
 1153 0904 C2F30E02 	 ubfx r2,r2,#0,#15
 1154 0908 0A43     	 orrs r2,r2,r1
 1155 090a 42F08042 	 orr r2,r2,#1073741824
 1156 090e 1046     	 mov r0,r2
 1157 0910 9847     	 blx r3
 227:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding               , y + padding 
 1158              	 .loc 1 227 0
 1159 0912 FB79     	 ldrb r3,[r7,#7]
 1160 0914 9B00     	 lsls r3,r3,#2
 1161 0916 07F18002 	 add r2,r7,#128
 1162 091a 1344     	 add r3,r3,r2
 1163 091c 53F8483C 	 ldr r3,[r3,#-72]
 1164 0920 B988     	 ldrh r1,[r7,#4]
 1165 0922 B7F89C20 	 ldrh r2,[r7,#156]
 1166 0926 1144     	 add r1,r1,r2
 1167 0928 3A88     	 ldrh r2,[r7]
 1168 092a 1144     	 add r1,r1,r2
 1169 092c B7F89C20 	 ldrh r2,[r7,#156]
 1170 0930 0A44     	 add r2,r2,r1
 1171 0932 C2F30E02 	 ubfx r2,r2,#0,#15
 1172 0936 D103     	 lsls r1,r2,#15
 1173 0938 7888     	 ldrh r0,[r7,#2]
 1174 093a B7F89C20 	 ldrh r2,[r7,#156]
 1175 093e 1044     	 add r0,r0,r2
 1176 0940 B7F89820 	 ldrh r2,[r7,#152]
 1177 0944 0244     	 add r2,r2,r0
 1178 0946 C2F30E02 	 ubfx r2,r2,#0,#15
 1179 094a 0A43     	 orrs r2,r2,r1
 1180 094c 42F08042 	 orr r2,r2,#1073741824
 1181 0950 1046     	 mov r0,r2
 1182 0952 9847     	 blx r3
 228:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1183              	 .loc 1 228 0
 1184 0954 FB79     	 ldrb r3,[r7,#7]
 1185 0956 9B00     	 lsls r3,r3,#2
 1186 0958 07F18002 	 add r2,r7,#128
 1187 095c 1344     	 add r3,r3,r2
 1188 095e 53F8483C 	 ldr r3,[r3,#-72]
 1189 0962 B988     	 ldrh r1,[r7,#4]
 1190 0964 B7F89C20 	 ldrh r2,[r7,#156]
 1191 0968 1144     	 add r1,r1,r2
 1192 096a 3A88     	 ldrh r2,[r7]
 1193 096c 1144     	 add r1,r1,r2
 1194 096e B7F89C20 	 ldrh r2,[r7,#156]
 1195 0972 1144     	 add r1,r1,r2
 1196 0974 97F86F20 	 ldrb r2,[r7,#111]
 1197 0978 8A1A     	 subs r2,r1,r2
 1198 097a C2F30E02 	 ubfx r2,r2,#0,#15
 1199 097e D103     	 lsls r1,r2,#15
 1200 0980 7888     	 ldrh r0,[r7,#2]
 1201 0982 B7F89C20 	 ldrh r2,[r7,#156]
 1202 0986 1044     	 add r0,r0,r2
 1203 0988 B7F89820 	 ldrh r2,[r7,#152]
 1204 098c 1044     	 add r0,r0,r2
 1205 098e 97F86F20 	 ldrb r2,[r7,#111]
 1206 0992 821A     	 subs r2,r0,r2
 1207 0994 C2F30E02 	 ubfx r2,r2,#0,#15
 1208 0998 0A43     	 orrs r2,r2,r1
 1209 099a 42F08042 	 orr r2,r2,#1073741824
 1210 099e 1046     	 mov r0,r2
 1211 09a0 9847     	 blx r3
 229:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1212              	 .loc 1 229 0
 1213 09a2 FB79     	 ldrb r3,[r7,#7]
 1214 09a4 9B00     	 lsls r3,r3,#2
 1215 09a6 07F18002 	 add r2,r7,#128
 1216 09aa 1344     	 add r3,r3,r2
 1217 09ac 53F8483C 	 ldr r3,[r3,#-72]
 1218 09b0 4FF00450 	 mov r0,#553648128
 1219 09b4 9847     	 blx r3
 230:../Libraries/FT800-FT813-5.x/tft.c **** 
 231:../Libraries/FT800-FT813-5.x/tft.c **** }
 1220              	 .loc 1 231 0
 1221 09b6 8437     	 adds r7,r7,#132
 1222              	.LCFI3:
 1223              	 .cfi_def_cfa_offset 20
 1224 09b8 BD46     	 mov sp,r7
 1225              	.LCFI4:
 1226              	 .cfi_def_cfa_register 13
 1227              	 
 1228 09ba F0BD     	 pop {r4,r5,r6,r7,pc}
 1229              	.L25:
 1230              	 .align 2
 1231              	.L24:
 1232 09bc 08000000 	 .word .LC5
 1233 09c0 0400001F 	 .word 520093700
 1234              	 .cfi_endproc
 1235              	.LFE446:
 1237              	 .section .text.TFT_GraphData,"ax",%progbits
 1238              	 .align 2
 1239              	 .global TFT_GraphData
 1240              	 .thumb
 1241              	 .thumb_func
 1243              	TFT_GraphData:
 1244              	.LFB447:
 232:../Libraries/FT800-FT813-5.x/tft.c **** 
 233:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphData(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t padding, doubl
 1245              	 .loc 1 233 0
 1246              	 .cfi_startproc
 1247              	 
 1248              	 
 1249 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 1250              	.LCFI5:
 1251              	 .cfi_def_cfa_offset 24
 1252              	 .cfi_offset 4,-24
 1253              	 .cfi_offset 5,-20
 1254              	 .cfi_offset 7,-16
 1255              	 .cfi_offset 8,-12
 1256              	 .cfi_offset 9,-8
 1257              	 .cfi_offset 14,-4
 1258 0004 84B0     	 sub sp,sp,#16
 1259              	.LCFI6:
 1260              	 .cfi_def_cfa_offset 40
 1261 0006 00AF     	 add r7,sp,#0
 1262              	.LCFI7:
 1263              	 .cfi_def_cfa_register 7
 1264 0008 0446     	 mov r4,r0
 1265 000a 0846     	 mov r0,r1
 1266 000c 1146     	 mov r1,r2
 1267 000e 1A46     	 mov r2,r3
 1268 0010 2346     	 mov r3,r4
 1269 0012 FB80     	 strh r3,[r7,#6]
 1270 0014 0346     	 mov r3,r0
 1271 0016 BB80     	 strh r3,[r7,#4]
 1272 0018 0B46     	 mov r3,r1
 1273 001a 7B80     	 strh r3,[r7,#2]
 1274 001c 1346     	 mov r3,r2
 1275 001e 3B80     	 strh r3,[r7]
 234:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the dynamic parts of an Graph to the TFT (data and markers). Used at recurring display l
 235:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 236:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 237:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 238:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 239:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 240:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding	...	clearance from the outer corners (x,y) to the axes
 241:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y_max   ... maximum expected value of input (e.g. for 12bit ADC 4095), will represent 100%
 242:../Libraries/FT800-FT813-5.x/tft.c **** 	///  SBuffer[] 		...	Array of data values
 243:../Libraries/FT800-FT813-5.x/tft.c **** 	///  size	 		... size of array of data values
 244:../Libraries/FT800-FT813-5.x/tft.c **** 	///  *SBuffer_curidx ... current position (index of most recent value)
 245:../Libraries/FT800-FT813-5.x/tft.c **** 	///  graphmode 		... 0 = frame-mode, 1 = roll-mode
 246:../Libraries/FT800-FT813-5.x/tft.c **** 	///  datacolor 		... 24bit color (as 32 bit integer with leading 0's) used for the dataline
 247:../Libraries/FT800-FT813-5.x/tft.c **** 	///  markercolor		... 24bit color (as 32 bit integer with leading 0's) used for the current positi
 248:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: No predefined graph settings are used direct (#define ...)!
 249:../Libraries/FT800-FT813-5.x/tft.c **** 
 250:../Libraries/FT800-FT813-5.x/tft.c **** 
 251:../Libraries/FT800-FT813-5.x/tft.c **** 
 252:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display current DATA as line strip in frame or roll mode
 253:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | datacolor);
 1276              	 .loc 1 253 0
 1277 0020 BB6C     	 ldr r3,[r7,#72]
 1278 0022 43F08063 	 orr r3,r3,#67108864
 1279 0026 1846     	 mov r0,r3
 1280 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 254:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1281              	 .loc 1 254 0
 1282 002c 7748     	 ldr r0,.L35
 1283 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 255:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph frame-mode
 256:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1284              	 .loc 1 256 0
 1285 0032 97F84430 	 ldrb r3,[r7,#68]
 1286 0036 002B     	 cmp r3,#0
 1287 0038 46D1     	 bne .L27
 1288              	.LBB10:
 257:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print values in the order they are stored
 258:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int x_cur = 0; x_cur < size; ++x_cur) {
 1289              	 .loc 1 258 0
 1290 003a 0023     	 movs r3,#0
 1291 003c FB60     	 str r3,[r7,#12]
 1292 003e 3EE0     	 b .L28
 1293              	.L29:
 259:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1294              	 .loc 1 259 0 discriminator 3
 1295 0040 FA88     	 ldrh r2,[r7,#6]
 1296 0042 3B8D     	 ldrh r3,[r7,#40]
 1297 0044 1A44     	 add r2,r2,r3
 1298 0046 FB68     	 ldr r3,[r7,#12]
 1299 0048 1344     	 add r3,r3,r2
 1300 004a C3F30E03 	 ubfx r3,r3,#0,#15
 1301 004e DC03     	 lsls r4,r3,#15
 1302 0050 BA88     	 ldrh r2,[r7,#4]
 1303 0052 3B8D     	 ldrh r3,[r7,#40]
 1304 0054 1A44     	 add r2,r2,r3
 1305 0056 3B88     	 ldrh r3,[r7]
 1306 0058 D518     	 adds r5,r2,r3
 1307 005a FB68     	 ldr r3,[r7,#12]
 1308 005c 5B00     	 lsls r3,r3,#1
 1309 005e BA6B     	 ldr r2,[r7,#56]
 1310 0060 1344     	 add r3,r3,r2
 1311 0062 1B88     	 ldrh r3,[r3]
 1312 0064 1846     	 mov r0,r3
 1313 0066 FFF7FEFF 	 bl __aeabi_ui2d
 1314 006a 0246     	 mov r2,r0
 1315 006c 0B46     	 mov r3,r1
 1316 006e 1046     	 mov r0,r2
 1317 0070 1946     	 mov r1,r3
 1318 0072 D7E90C23 	 ldrd r2,[r7,#48]
 1319 0076 FFF7FEFF 	 bl __aeabi_ddiv
 1320 007a 0246     	 mov r2,r0
 1321 007c 0B46     	 mov r3,r1
 1322 007e 9046     	 mov r8,r2
 1323 0080 9946     	 mov r9,r3
 1324 0082 3B88     	 ldrh r3,[r7]
 1325 0084 1846     	 mov r0,r3
 1326 0086 FFF7FEFF 	 bl __aeabi_ui2d
 1327 008a 0246     	 mov r2,r0
 1328 008c 0B46     	 mov r3,r1
 1329 008e 4046     	 mov r0,r8
 1330 0090 4946     	 mov r1,r9
 1331 0092 FFF7FEFF 	 bl __aeabi_dmul
 1332 0096 0246     	 mov r2,r0
 1333 0098 0B46     	 mov r3,r1
 1334 009a 1046     	 mov r0,r2
 1335 009c 1946     	 mov r1,r3
 1336 009e FFF7FEFF 	 bl __aeabi_d2uiz
 1337 00a2 0346     	 mov r3,r0
 1338 00a4 9BB2     	 uxth r3,r3
 1339 00a6 EB1A     	 subs r3,r5,r3
 1340 00a8 C3F30E03 	 ubfx r3,r3,#0,#15
 1341 00ac 2343     	 orrs r3,r3,r4
 1342 00ae 43F08043 	 orr r3,r3,#1073741824
 1343 00b2 1846     	 mov r0,r3
 1344 00b4 FFF7FEFF 	 bl EVE_cmd_dl_burst
 258:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1345              	 .loc 1 258 0 discriminator 3
 1346 00b8 FB68     	 ldr r3,[r7,#12]
 1347 00ba 0133     	 adds r3,r3,#1
 1348 00bc FB60     	 str r3,[r7,#12]
 1349              	.L28:
 258:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1350              	 .loc 1 258 0 is_stmt 0 discriminator 1
 1351 00be BA8F     	 ldrh r2,[r7,#60]
 1352 00c0 FB68     	 ldr r3,[r7,#12]
 1353 00c2 9A42     	 cmp r2,r3
 1354 00c4 BCDC     	 bgt .L29
 1355              	.LBE10:
 1356 00c6 5BE0     	 b .L30
 1357              	.L27:
 1358              	.LBB11:
 260:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 261:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 262:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph roll-mode
 263:../Libraries/FT800-FT813-5.x/tft.c **** 	else {
 264:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print newest value always at the rightmost corner with all older values to the right
 265:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Display    x position at rightmost corner and decrement till 0 (last run will make it
 266:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Arrayindex i at current index and decrement every loop. If i goes below 0, reset to m
 267:../Libraries/FT800-FT813-5.x/tft.c **** 		//    value before current is hit.
 268:../Libraries/FT800-FT813-5.x/tft.c **** 
 269:../Libraries/FT800-FT813-5.x/tft.c **** 		int16_t i = *SBuffer_curidx;
 1359              	 .loc 1 269 0 is_stmt 1
 1360 00c8 3B6C     	 ldr r3,[r7,#64]
 1361 00ca 1B88     	 ldrh r3,[r3]
 1362 00cc 7B81     	 strh r3,[r7,#10]
 1363              	.LBB12:
 270:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int16_t x_cur = size-1; x_cur >= 0; x_cur--) {
 1364              	 .loc 1 270 0
 1365 00ce BB8F     	 ldrh r3,[r7,#60]
 1366 00d0 013B     	 subs r3,r3,#1
 1367 00d2 9BB2     	 uxth r3,r3
 1368 00d4 3B81     	 strh r3,[r7,#8]
 1369 00d6 4FE0     	 b .L31
 1370              	.L33:
 271:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 272:../Libraries/FT800-FT813-5.x/tft.c **** 			if(i < 0){i = size-1;}
 1371              	 .loc 1 272 0
 1372 00d8 B7F90A30 	 ldrsh r3,[r7,#10]
 1373 00dc 002B     	 cmp r3,#0
 1374 00de 03DA     	 bge .L32
 1375              	 .loc 1 272 0 is_stmt 0 discriminator 1
 1376 00e0 BB8F     	 ldrh r3,[r7,#60]
 1377 00e2 013B     	 subs r3,r3,#1
 1378 00e4 9BB2     	 uxth r3,r3
 1379 00e6 7B81     	 strh r3,[r7,#10]
 1380              	.L32:
 273:../Libraries/FT800-FT813-5.x/tft.c **** 
 274:../Libraries/FT800-FT813-5.x/tft.c **** 			// Send next point for EVE_LINE_STRIP at current x+padding and normalized buffer value
 275:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1381              	 .loc 1 275 0 is_stmt 1 discriminator 2
 1382 00e8 FA88     	 ldrh r2,[r7,#6]
 1383 00ea 3B8D     	 ldrh r3,[r7,#40]
 1384 00ec 1A44     	 add r2,r2,r3
 1385 00ee B7F90830 	 ldrsh r3,[r7,#8]
 1386 00f2 1344     	 add r3,r3,r2
 1387 00f4 C3F30E03 	 ubfx r3,r3,#0,#15
 1388 00f8 DC03     	 lsls r4,r3,#15
 1389 00fa BA88     	 ldrh r2,[r7,#4]
 1390 00fc 3B8D     	 ldrh r3,[r7,#40]
 1391 00fe 1A44     	 add r2,r2,r3
 1392 0100 3B88     	 ldrh r3,[r7]
 1393 0102 D518     	 adds r5,r2,r3
 1394 0104 B7F90A30 	 ldrsh r3,[r7,#10]
 1395 0108 5B00     	 lsls r3,r3,#1
 1396 010a BA6B     	 ldr r2,[r7,#56]
 1397 010c 1344     	 add r3,r3,r2
 1398 010e 1B88     	 ldrh r3,[r3]
 1399 0110 1846     	 mov r0,r3
 1400 0112 FFF7FEFF 	 bl __aeabi_ui2d
 1401 0116 0246     	 mov r2,r0
 1402 0118 0B46     	 mov r3,r1
 1403 011a 1046     	 mov r0,r2
 1404 011c 1946     	 mov r1,r3
 1405 011e D7E90C23 	 ldrd r2,[r7,#48]
 1406 0122 FFF7FEFF 	 bl __aeabi_ddiv
 1407 0126 0246     	 mov r2,r0
 1408 0128 0B46     	 mov r3,r1
 1409 012a 9046     	 mov r8,r2
 1410 012c 9946     	 mov r9,r3
 1411 012e 3B88     	 ldrh r3,[r7]
 1412 0130 1846     	 mov r0,r3
 1413 0132 FFF7FEFF 	 bl __aeabi_ui2d
 1414 0136 0246     	 mov r2,r0
 1415 0138 0B46     	 mov r3,r1
 1416 013a 4046     	 mov r0,r8
 1417 013c 4946     	 mov r1,r9
 1418 013e FFF7FEFF 	 bl __aeabi_dmul
 1419 0142 0246     	 mov r2,r0
 1420 0144 0B46     	 mov r3,r1
 1421 0146 1046     	 mov r0,r2
 1422 0148 1946     	 mov r1,r3
 1423 014a FFF7FEFF 	 bl __aeabi_d2uiz
 1424 014e 0346     	 mov r3,r0
 1425 0150 9BB2     	 uxth r3,r3
 1426 0152 EB1A     	 subs r3,r5,r3
 1427 0154 C3F30E03 	 ubfx r3,r3,#0,#15
 1428 0158 2343     	 orrs r3,r3,r4
 1429 015a 43F08043 	 orr r3,r3,#1073741824
 1430 015e 1846     	 mov r0,r3
 1431 0160 FFF7FEFF 	 bl EVE_cmd_dl_burst
 276:../Libraries/FT800-FT813-5.x/tft.c **** 
 277:../Libraries/FT800-FT813-5.x/tft.c **** 			// decrement index
 278:../Libraries/FT800-FT813-5.x/tft.c **** 			i--;
 1432              	 .loc 1 278 0 discriminator 2
 1433 0164 7B89     	 ldrh r3,[r7,#10]
 1434 0166 9BB2     	 uxth r3,r3
 1435 0168 013B     	 subs r3,r3,#1
 1436 016a 9BB2     	 uxth r3,r3
 1437 016c 7B81     	 strh r3,[r7,#10]
 270:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1438              	 .loc 1 270 0 discriminator 2
 1439 016e 3B89     	 ldrh r3,[r7,#8]
 1440 0170 9BB2     	 uxth r3,r3
 1441 0172 013B     	 subs r3,r3,#1
 1442 0174 9BB2     	 uxth r3,r3
 1443 0176 3B81     	 strh r3,[r7,#8]
 1444              	.L31:
 270:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1445              	 .loc 1 270 0 is_stmt 0 discriminator 1
 1446 0178 B7F90830 	 ldrsh r3,[r7,#8]
 1447 017c 002B     	 cmp r3,#0
 1448 017e ABDA     	 bge .L33
 1449              	.L30:
 1450              	.LBE12:
 1451              	.LBE11:
 279:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 280:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 281:../Libraries/FT800-FT813-5.x/tft.c **** 	// End EVE_LINE_STRIP and therefore DATA
 282:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_END);
 1452              	 .loc 1 282 0 is_stmt 1
 1453 0180 4FF00450 	 mov r0,#553648128
 1454 0184 FFF7FEFF 	 bl EVE_cmd_dl_burst
 283:../Libraries/FT800-FT813-5.x/tft.c **** 
 284:../Libraries/FT800-FT813-5.x/tft.c **** 
 285:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw current POSITION MARKER in frame mode
 286:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1455              	 .loc 1 286 0
 1456 0188 97F84430 	 ldrb r3,[r7,#68]
 1457 018c 002B     	 cmp r3,#0
 1458 018e 38D1     	 bne .L26
 287:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_COLOR_RGB | markercolor);
 1459              	 .loc 1 287 0
 1460 0190 FB6C     	 ldr r3,[r7,#76]
 1461 0192 43F08063 	 orr r3,r3,#67108864
 1462 0196 1846     	 mov r0,r3
 1463 0198 FFF7FEFF 	 bl EVE_cmd_dl_burst
 288:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1464              	 .loc 1 288 0
 1465 019c 1B48     	 ldr r0,.L35
 1466 019e FFF7FEFF 	 bl EVE_cmd_dl_burst
 289:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding - 5 ));
 1467              	 .loc 1 289 0
 1468 01a2 FA88     	 ldrh r2,[r7,#6]
 1469 01a4 3B8D     	 ldrh r3,[r7,#40]
 1470 01a6 1344     	 add r3,r3,r2
 1471 01a8 3A6C     	 ldr r2,[r7,#64]
 1472 01aa 1288     	 ldrh r2,[r2]
 1473 01ac 1344     	 add r3,r3,r2
 1474 01ae C3F30E03 	 ubfx r3,r3,#0,#15
 1475 01b2 DA03     	 lsls r2,r3,#15
 1476 01b4 B988     	 ldrh r1,[r7,#4]
 1477 01b6 3B8D     	 ldrh r3,[r7,#40]
 1478 01b8 0B44     	 add r3,r3,r1
 1479 01ba 053B     	 subs r3,r3,#5
 1480 01bc C3F30E03 	 ubfx r3,r3,#0,#15
 1481 01c0 1343     	 orrs r3,r3,r2
 1482 01c2 43F08043 	 orr r3,r3,#1073741824
 1483 01c6 1846     	 mov r0,r3
 1484 01c8 FFF7FEFF 	 bl EVE_cmd_dl_burst
 290:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding + height + 5 ));
 1485              	 .loc 1 290 0
 1486 01cc FA88     	 ldrh r2,[r7,#6]
 1487 01ce 3B8D     	 ldrh r3,[r7,#40]
 1488 01d0 1344     	 add r3,r3,r2
 1489 01d2 3A6C     	 ldr r2,[r7,#64]
 1490 01d4 1288     	 ldrh r2,[r2]
 1491 01d6 1344     	 add r3,r3,r2
 1492 01d8 C3F30E03 	 ubfx r3,r3,#0,#15
 1493 01dc DA03     	 lsls r2,r3,#15
 1494 01de B988     	 ldrh r1,[r7,#4]
 1495 01e0 3B8D     	 ldrh r3,[r7,#40]
 1496 01e2 1944     	 add r1,r1,r3
 1497 01e4 3B88     	 ldrh r3,[r7]
 1498 01e6 0B44     	 add r3,r3,r1
 1499 01e8 0533     	 adds r3,r3,#5
 1500 01ea C3F30E03 	 ubfx r3,r3,#0,#15
 1501 01ee 1343     	 orrs r3,r3,r2
 1502 01f0 43F08043 	 orr r3,r3,#1073741824
 1503 01f4 1846     	 mov r0,r3
 1504 01f6 FFF7FEFF 	 bl EVE_cmd_dl_burst
 291:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1505              	 .loc 1 291 0
 1506 01fa 4FF00450 	 mov r0,#553648128
 1507 01fe FFF7FEFF 	 bl EVE_cmd_dl_burst
 1508              	.L26:
 292:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 293:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH END
 294:../Libraries/FT800-FT813-5.x/tft.c **** 
 295:../Libraries/FT800-FT813-5.x/tft.c **** }
 1509              	 .loc 1 295 0
 1510 0202 1037     	 adds r7,r7,#16
 1511              	.LCFI8:
 1512              	 .cfi_def_cfa_offset 24
 1513 0204 BD46     	 mov sp,r7
 1514              	.LCFI9:
 1515              	 .cfi_def_cfa_register 13
 1516              	 
 1517 0206 BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 1518              	.L36:
 1519 020a 00BF     	 .align 2
 1520              	.L35:
 1521 020c 0400001F 	 .word 520093700
 1522              	 .cfi_endproc
 1523              	.LFE447:
 1525              	 .section .text.touch_calibrate,"ax",%progbits
 1526              	 .align 2
 1527              	 .global touch_calibrate
 1528              	 .thumb
 1529              	 .thumb_func
 1531              	touch_calibrate:
 1532              	.LFB448:
 296:../Libraries/FT800-FT813-5.x/tft.c **** 
 297:../Libraries/FT800-FT813-5.x/tft.c **** 
 298:../Libraries/FT800-FT813-5.x/tft.c **** void touch_calibrate(void) {
 1533              	 .loc 1 298 0
 1534              	 .cfi_startproc
 1535              	 
 1536              	 
 1537 0000 80B5     	 push {r7,lr}
 1538              	.LCFI10:
 1539              	 .cfi_def_cfa_offset 8
 1540              	 .cfi_offset 7,-8
 1541              	 .cfi_offset 14,-4
 1542 0002 00AF     	 add r7,sp,#0
 1543              	.LCFI11:
 1544              	 .cfi_def_cfa_register 7
 299:../Libraries/FT800-FT813-5.x/tft.c **** // Sends pre-recorded touch calibration values, depending on the display the code is compiled for. 
 300:../Libraries/FT800-FT813-5.x/tft.c **** 
 301:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF240400C1_030SC)
 302:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x0000ed11);
 303:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00001139);
 304:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff76809);
 305:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00000000);
 306:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00010690);
 307:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xfffadf2e);
 308:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 309:../Libraries/FT800-FT813-5.x/tft.c **** 
 310:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF320240F_035T)
 311:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00005614);
 312:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000009e);
 313:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff43422);
 314:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x0000001d);
 315:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0xffffbda4);
 316:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x00f8f2ef);
 317:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 318:../Libraries/FT800-FT813-5.x/tft.c **** 
 319:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF480128A0_039TC)
 320:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00010485);
 321:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000017f);
 322:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfffb0bd3);
 323:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00000073);
 324:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000e293);
 325:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x00069904);
 326:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 327:../Libraries/FT800-FT813-5.x/tft.c **** 
 328:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_CFAF800480E0_050SC)
 329:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000107f9);
 330:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xffffff8c);
 331:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff451ae);
 332:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000000d2);
 333:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000feac);
 334:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xfffcfaaf);
 335:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 336:../Libraries/FT800-FT813-5.x/tft.c **** 
 337:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_PAF90)
 338:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00000159);
 339:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0001019c);
 340:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff93625);
 341:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00010157);
 342:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00000000);
 343:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x0000c101);
 344:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 345:../Libraries/FT800-FT813-5.x/tft.c **** 
 346:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_RiTFT43)
 347:../Libraries/FT800-FT813-5.x/tft.c **** 	// Original library values
 348:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000062cd);
 349:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xfffffe45);
 350:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff45e0a);
 351:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000001a3);
 352:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b33);
 353:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFbb870);
 354:../Libraries/FT800-FT813-5.x/tft.c **** 
 355:../Libraries/FT800-FT813-5.x/tft.c **** 	// Actual values (measured with routine down below) by Rene S. at 20.12.2020 on Display SM-RVT43UL
 356:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000061c4);
 1545              	 .loc 1 356 0
 1546 0004 0E48     	 ldr r0,.L38
 1547 0006 46F2C411 	 movw r1,#25028
 1548 000a FFF7FEFF 	 bl EVE_memWrite32
 357:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000025d);
 1549              	 .loc 1 357 0
 1550 000e 0D48     	 ldr r0,.L38+4
 1551 0010 40F25D21 	 movw r1,#605
 1552 0014 FFF7FEFF 	 bl EVE_memWrite32
 358:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff14ab1);
 1553              	 .loc 1 358 0
 1554 0018 0B48     	 ldr r0,.L38+8
 1555 001a 0C49     	 ldr r1,.L38+12
 1556 001c FFF7FEFF 	 bl EVE_memWrite32
 359:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xffffff91);
 1557              	 .loc 1 359 0
 1558 0020 0B48     	 ldr r0,.L38+16
 1559 0022 6FF06E01 	 mvn r1,#110
 1560 0026 FFF7FEFF 	 bl EVE_memWrite32
 360:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b6b);
 1561              	 .loc 1 360 0
 1562 002a 0A48     	 ldr r0,.L38+20
 1563 002c 45F66B31 	 movw r1,#23403
 1564 0030 FFF7FEFF 	 bl EVE_memWrite32
 361:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFac7ab);
 1565              	 .loc 1 361 0
 1566 0034 0848     	 ldr r0,.L38+24
 1567 0036 0949     	 ldr r1,.L38+28
 1568 0038 FFF7FEFF 	 bl EVE_memWrite32
 362:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 363:../Libraries/FT800-FT813-5.x/tft.c **** 
 364:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_38)
 365:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x00007bed);
 366:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000001b0);
 367:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff60aa5);
 368:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x00000095);
 369:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0xffffdcda);
 370:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x00829c08);
 371:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 372:../Libraries/FT800-FT813-5.x/tft.c **** 
 373:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_35G) ||  defined (EVE_EVE3_35G)
 374:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000109E4);
 375:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000007A6);
 376:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xFFEC1EBA);
 377:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x0000072C);
 378:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0001096A);
 379:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFF469CF);
 380:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 381:../Libraries/FT800-FT813-5.x/tft.c **** 
 382:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_43G) ||  defined (EVE_EVE3_43G)
 383:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x0000a1ff);
 384:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00000680);
 385:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xffe54cc2);
 386:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xffffff53);
 387:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000912c);
 388:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xfffe628d);
 389:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 390:../Libraries/FT800-FT813-5.x/tft.c **** 
 391:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_50G) || defined (EVE_EVE3_50G)
 392:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000109E4);
 393:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000007A6);
 394:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xFFEC1EBA);
 395:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x0000072C);
 396:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0001096A);
 397:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFF469CF);
 398:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 399:../Libraries/FT800-FT813-5.x/tft.c **** 
 400:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_EVE2_70G)
 401:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000105BC);
 402:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xFFFFFA8A);
 403:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0x00004670);
 404:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xFFFFFF75);
 405:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00010074);
 406:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFF14C8);
 407:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 408:../Libraries/FT800-FT813-5.x/tft.c **** 
 409:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_NHD_35)
 410:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x0000f78b);
 411:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00000427);
 412:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfffcedf8);
 413:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xfffffba4);
 414:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x0000f756);
 415:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x0009279e);
 416:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 417:../Libraries/FT800-FT813-5.x/tft.c **** 
 418:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_RVT70)
 419:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000074df);
 420:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x000000e6);
 421:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfffd5474);
 422:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000001af);
 423:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00007e79);
 424:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xffe9a63c);
 425:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 426:../Libraries/FT800-FT813-5.x/tft.c **** 
 427:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_FT811CB_HY50HD)
 428:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 66353);
 429:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 712);
 430:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 4293876677);
 431:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 4294966157);
 432:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 67516);
 433:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 418276);
 434:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 435:../Libraries/FT800-FT813-5.x/tft.c **** 
 436:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_ADAM101)
 437:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000101E3);
 438:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x00000114);
 439:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xFFF5EEBA);
 440:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xFFFFFF5E);
 441:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00010226);
 442:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0x0000C783);
 443:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 444:../Libraries/FT800-FT813-5.x/tft.c **** 
 445:../Libraries/FT800-FT813-5.x/tft.c **** /* activate this if you are using a module for the first time or if you need to re-calibrate it */
 446:../Libraries/FT800-FT813-5.x/tft.c **** /* write down the numbers on the screen and either place them in one of the pre-defined blocks abov
 447:../Libraries/FT800-FT813-5.x/tft.c **** #if 0
 448:../Libraries/FT800-FT813-5.x/tft.c **** 	/* calibrate touch and displays values to screen */
 449:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 450:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 451:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 452:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text((EVE_HSIZE/2), 50, 26, EVE_OPT_CENTER, "Please tap on the dot.");
 453:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_calibrate();
 454:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);
 455:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP);
 456:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 457:../Libraries/FT800-FT813-5.x/tft.c **** 
 458:../Libraries/FT800-FT813-5.x/tft.c **** 	uint32_t touch_a, touch_b, touch_c, touch_d, touch_e, touch_f;
 459:../Libraries/FT800-FT813-5.x/tft.c **** 
 460:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_a = EVE_memRead32(REG_TOUCH_TRANSFORM_A);
 461:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_b = EVE_memRead32(REG_TOUCH_TRANSFORM_B);
 462:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_c = EVE_memRead32(REG_TOUCH_TRANSFORM_C);
 463:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_d = EVE_memRead32(REG_TOUCH_TRANSFORM_D);
 464:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_e = EVE_memRead32(REG_TOUCH_TRANSFORM_E);
 465:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_f = EVE_memRead32(REG_TOUCH_TRANSFORM_F);
 466:../Libraries/FT800-FT813-5.x/tft.c **** 
 467:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 468:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 469:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 470:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0));
 471:../Libraries/FT800-FT813-5.x/tft.c **** 
 472:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 15, 26, 0, "TOUCH_TRANSFORM_A:");
 473:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 30, 26, 0, "TOUCH_TRANSFORM_B:");
 474:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 45, 26, 0, "TOUCH_TRANSFORM_C:");
 475:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 60, 26, 0, "TOUCH_TRANSFORM_D:");
 476:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 75, 26, 0, "TOUCH_TRANSFORM_E:");
 477:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 90, 26, 0, "TOUCH_TRANSFORM_F:");
 478:../Libraries/FT800-FT813-5.x/tft.c **** 
 479:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_setbase(16L);
 480:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 15, 26, EVE_OPT_RIGHTX|8, touch_a);
 481:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 30, 26, EVE_OPT_RIGHTX|8, touch_b);
 482:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 45, 26, EVE_OPT_RIGHTX|8, touch_c);
 483:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 60, 26, EVE_OPT_RIGHTX|8, touch_d);
 484:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 75, 26, EVE_OPT_RIGHTX|8, touch_e);
 485:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 90, 26, EVE_OPT_RIGHTX|8, touch_f);
 486:../Libraries/FT800-FT813-5.x/tft.c **** 
 487:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);	/* instruct the graphics processor to show the list */
 488:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP); /* make this list active */
 489:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 490:../Libraries/FT800-FT813-5.x/tft.c **** 
 491:../Libraries/FT800-FT813-5.x/tft.c **** 	while(1);
 492:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 493:../Libraries/FT800-FT813-5.x/tft.c **** }
 1569              	 .loc 1 493 0
 1570 003c 80BD     	 pop {r7,pc}
 1571              	.L39:
 1572 003e 00BF     	 .align 2
 1573              	.L38:
 1574 0040 50213000 	 .word 3154256
 1575 0044 54213000 	 .word 3154260
 1576 0048 58213000 	 .word 3154264
 1577 004c B14AF1FF 	 .word -963919
 1578 0050 5C213000 	 .word 3154268
 1579 0054 60213000 	 .word 3154272
 1580 0058 64213000 	 .word 3154276
 1581 005c ABC7FAFF 	 .word -342101
 1582              	 .cfi_endproc
 1583              	.LFE448:
 1585              	 .section .text.TFT_display_init_screen,"ax",%progbits
 1586              	 .align 2
 1587              	 .global TFT_display_init_screen
 1588              	 .thumb
 1589              	 .thumb_func
 1591              	TFT_display_init_screen:
 1592              	.LFB449:
 494:../Libraries/FT800-FT813-5.x/tft.c **** 
 495:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_init_screen(void)
 496:../Libraries/FT800-FT813-5.x/tft.c **** {
 1593              	 .loc 1 496 0
 1594              	 .cfi_startproc
 1595              	 
 1596              	 
 1597 0000 80B5     	 push {r7,lr}
 1598              	.LCFI12:
 1599              	 .cfi_def_cfa_offset 8
 1600              	 .cfi_offset 7,-8
 1601              	 .cfi_offset 14,-4
 1602 0002 00AF     	 add r7,sp,#0
 1603              	.LCFI13:
 1604              	 .cfi_def_cfa_register 7
 497:../Libraries/FT800-FT813-5.x/tft.c **** 
 498:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 1605              	 .loc 1 498 0
 1606 0004 1A4B     	 ldr r3,.L42
 1607 0006 1B78     	 ldrb r3,[r3]
 1608 0008 002B     	 cmp r3,#0
 1609 000a 30D0     	 beq .L40
 499:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 500:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_inflate(MEM_LOGO, logo_init, sizeof(logo_init)); /* load logo into gfx-memory and de-comp
 1610              	 .loc 1 500 0
 1611 000c 0020     	 movs r0,#0
 1612 000e 1949     	 ldr r1,.L42+4
 1613 0010 44F60472 	 movw r2,#20228
 1614 0014 FFF7FEFF 	 bl EVE_cmd_inflate
 501:../Libraries/FT800-FT813-5.x/tft.c **** 
 502:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1615              	 .loc 1 502 0
 1616 0018 FFF7FEFF 	 bl EVE_start_cmd_burst
 503:../Libraries/FT800-FT813-5.x/tft.c **** 
 504:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1617              	 .loc 1 504 0
 1618 001c 6FF0FF00 	 mvn r0,#255
 1619 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 505:../Libraries/FT800-FT813-5.x/tft.c **** 		//EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16
 506:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1620              	 .loc 1 506 0
 1621 0024 6FF07D40 	 mvn r0,#-50331648
 1622 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 507:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1623              	 .loc 1 507 0
 1624 002c 1248     	 ldr r0,.L42+8
 1625 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 508:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 1626              	 .loc 1 508 0
 1627 0032 4FF04070 	 mov r0,#50331648
 1628 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 509:../Libraries/FT800-FT813-5.x/tft.c **** 
 510:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_setbitmap_burst(MEM_LOGO, EVE_ARGB1555, 308, 250);
 1629              	 .loc 1 510 0
 1630 003a 0020     	 movs r0,#0
 1631 003c 0021     	 movs r1,#0
 1632 003e 4FF49A72 	 mov r2,#308
 1633 0042 FA23     	 movs r3,#250
 1634 0044 FFF7FEFF 	 bl EVE_cmd_setbitmap_burst
 511:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_BITMAPS);
 1635              	 .loc 1 511 0
 1636 0048 0C48     	 ldr r0,.L42+12
 1637 004a FFF7FEFF 	 bl EVE_cmd_dl_burst
 512:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(86*16, 11*16));  //105*16
 1638              	 .loc 1 512 0
 1639 004e 0C48     	 ldr r0,.L42+16
 1640 0050 FFF7FEFF 	 bl EVE_cmd_dl_burst
 513:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1641              	 .loc 1 513 0
 1642 0054 4FF00450 	 mov r0,#553648128
 1643 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 514:../Libraries/FT800-FT813-5.x/tft.c **** 
 515:../Libraries/FT800-FT813-5.x/tft.c **** 
 516:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1644              	 .loc 1 516 0
 1645 005c 0020     	 movs r0,#0
 1646 005e FFF7FEFF 	 bl EVE_cmd_dl_burst
 517:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1647              	 .loc 1 517 0
 1648 0062 6FF0FE00 	 mvn r0,#254
 1649 0066 FFF7FEFF 	 bl EVE_cmd_dl_burst
 518:../Libraries/FT800-FT813-5.x/tft.c **** 
 519:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1650              	 .loc 1 519 0
 1651 006a FFF7FEFF 	 bl EVE_end_cmd_burst
 1652              	.L40:
 520:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 521:../Libraries/FT800-FT813-5.x/tft.c **** }
 1653              	 .loc 1 521 0
 1654 006e 80BD     	 pop {r7,pc}
 1655              	.L43:
 1656              	 .align 2
 1657              	.L42:
 1658 0070 00000000 	 .word tft_active
 1659 0074 00000000 	 .word logo_init
 1660 0078 07000026 	 .word 637534215
 1661 007c 0100001F 	 .word 520093697
 1662 0080 B000B042 	 .word 1118830768
 1663              	 .cfi_endproc
 1664              	.LFE449:
 1666              	 .section .rodata
 1667              	 .align 2
 1668              	.LC6:
 1669 0028 444C2D73 	 .ascii "DL-size:\000"
 1669      697A653A 
 1669      00
 1670 0031 000000   	 .align 2
 1671              	.LC7:
 1672 0034 53656E73 	 .ascii "Sensor:\000"
 1672      6F723A00 
 1673              	 .section .text.initStaticGraphBackground,"ax",%progbits
 1674              	 .align 2
 1675              	 .global initStaticGraphBackground
 1676              	 .thumb
 1677              	 .thumb_func
 1679              	initStaticGraphBackground:
 1680              	.LFB450:
 522:../Libraries/FT800-FT813-5.x/tft.c **** 
 523:../Libraries/FT800-FT813-5.x/tft.c **** void initStaticGraphBackground(void)
 524:../Libraries/FT800-FT813-5.x/tft.c **** {
 1681              	 .loc 1 524 0
 1682              	 .cfi_startproc
 1683              	 
 1684              	 
 1685 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 1686              	.LCFI14:
 1687              	 .cfi_def_cfa_offset 32
 1688              	 .cfi_offset 4,-32
 1689              	 .cfi_offset 5,-28
 1690              	 .cfi_offset 6,-24
 1691              	 .cfi_offset 7,-20
 1692              	 .cfi_offset 8,-16
 1693              	 .cfi_offset 9,-12
 1694              	 .cfi_offset 10,-8
 1695              	 .cfi_offset 14,-4
 1696 0004 8AB0     	 sub sp,sp,#40
 1697              	.LCFI15:
 1698              	 .cfi_def_cfa_offset 72
 1699 0006 0AAF     	 add r7,sp,#40
 1700              	.LCFI16:
 1701              	 .cfi_def_cfa 7,32
 525:../Libraries/FT800-FT813-5.x/tft.c **** 	// Static portion of display-handling, meant to be called once at startup. Created by Rudolph Ried
 526:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART); // Start a new display list (resets REG_CMD_DL to 0)
 1702              	 .loc 1 526 0
 1703 0008 6FF0FF00 	 mvn r0,#255
 1704 000c FFF7FEFF 	 bl EVE_cmd_dl
 527:../Libraries/FT800-FT813-5.x/tft.c **** 
 528:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Main settings
 529:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 1705              	 .loc 1 529 0
 1706 0010 4FF04070 	 mov r0,#50331648
 1707 0014 FFF7FEFF 	 bl EVE_cmd_dl
 530:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor(MAIN_BGCOLOR); /* light grey */
 1708              	 .loc 1 530 0
 1709 0018 4848     	 ldr r0,.L47
 1710 001a FFF7FEFF 	 bl EVE_cmd_bgcolor
 531:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 pixel de
 1711              	 .loc 1 531 0
 1712 001e 4FF01C50 	 mov r0,#654311424
 1713 0022 FFF7FEFF 	 bl EVE_cmd_dl
 532:../Libraries/FT800-FT813-5.x/tft.c **** 
 533:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw Banner and divider line on top
 534:../Libraries/FT800-FT813-5.x/tft.c **** 	// Banner
 535:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 1714              	 .loc 1 535 0
 1715 0026 4648     	 ldr r0,.L47+4
 1716 0028 FFF7FEFF 	 bl EVE_cmd_dl
 536:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 1717              	 .loc 1 536 0
 1718 002c 4548     	 ldr r0,.L47+8
 1719 002e FFF7FEFF 	 bl EVE_cmd_dl
 537:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 1720              	 .loc 1 537 0
 1721 0032 4548     	 ldr r0,.L47+12
 1722 0034 FFF7FEFF 	 bl EVE_cmd_dl
 538:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 1723              	 .loc 1 538 0
 1724 0038 4448     	 ldr r0,.L47+16
 1725 003a FFF7FEFF 	 bl EVE_cmd_dl
 539:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 1726              	 .loc 1 539 0
 1727 003e 4448     	 ldr r0,.L47+20
 1728 0040 FFF7FEFF 	 bl EVE_cmd_dl
 540:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 1729              	 .loc 1 540 0
 1730 0044 4348     	 ldr r0,.L47+24
 1731 0046 FFF7FEFF 	 bl EVE_cmd_dl
 541:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 1732              	 .loc 1 541 0
 1733 004a 4348     	 ldr r0,.L47+28
 1734 004c FFF7FEFF 	 bl EVE_cmd_dl
 542:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1735              	 .loc 1 542 0
 1736 0050 4FF00450 	 mov r0,#553648128
 1737 0054 FFF7FEFF 	 bl EVE_cmd_dl
 543:../Libraries/FT800-FT813-5.x/tft.c **** 	// Divider
 544:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 1738              	 .loc 1 544 0
 1739 0058 4048     	 ldr r0,.L47+32
 1740 005a FFF7FEFF 	 bl EVE_cmd_dl
 545:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 1741              	 .loc 1 545 0
 1742 005e 4048     	 ldr r0,.L47+36
 1743 0060 FFF7FEFF 	 bl EVE_cmd_dl
 546:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 1744              	 .loc 1 546 0
 1745 0064 3948     	 ldr r0,.L47+16
 1746 0066 FFF7FEFF 	 bl EVE_cmd_dl
 547:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 1747              	 .loc 1 547 0
 1748 006a 3948     	 ldr r0,.L47+20
 1749 006c FFF7FEFF 	 bl EVE_cmd_dl
 548:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 1750              	 .loc 1 548 0
 1751 0070 3848     	 ldr r0,.L47+24
 1752 0072 FFF7FEFF 	 bl EVE_cmd_dl
 549:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 1753              	 .loc 1 549 0
 1754 0076 3848     	 ldr r0,.L47+28
 1755 0078 FFF7FEFF 	 bl EVE_cmd_dl
 550:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1756              	 .loc 1 550 0
 1757 007c 4FF00450 	 mov r0,#553648128
 1758 0080 FFF7FEFF 	 bl EVE_cmd_dl
 551:../Libraries/FT800-FT813-5.x/tft.c **** 
 552:../Libraries/FT800-FT813-5.x/tft.c **** 
 553:../Libraries/FT800-FT813-5.x/tft.c **** 	// Add the static text
 554:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 1759              	 .loc 1 554 0
 1760 0084 3548     	 ldr r0,.L47+32
 1761 0086 FFF7FEFF 	 bl EVE_cmd_dl
 555:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 556:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_text(10, EVE_VSIZE - 65, 26, 0, "Bytes: ");
 557:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 558:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 10, 26, 0, "DL-size:");
 1762              	 .loc 1 558 0
 1763 008a 364B     	 ldr r3,.L47+40
 1764 008c 0093     	 str r3,[sp]
 1765 008e 4FF4B470 	 mov r0,#360
 1766 0092 0A21     	 movs r1,#10
 1767 0094 1A22     	 movs r2,#26
 1768 0096 0023     	 movs r3,#0
 1769 0098 FFF7FEFF 	 bl EVE_cmd_text
 559:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 25, 26, 0, "Sensor:");
 1770              	 .loc 1 559 0
 1771 009c 324B     	 ldr r3,.L47+44
 1772 009e 0093     	 str r3,[sp]
 1773 00a0 4FF4B470 	 mov r0,#360
 1774 00a4 1921     	 movs r1,#25
 1775 00a6 1A22     	 movs r2,#26
 1776 00a8 0023     	 movs r3,#0
 1777 00aa FFF7FEFF 	 bl EVE_cmd_text
 560:../Libraries/FT800-FT813-5.x/tft.c **** 
 561:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the static part of the Graph to the display list
 562:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphStatic(0, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, G_v
 1778              	 .loc 1 562 0
 1779 00ae 2F4B     	 ldr r3,.L47+48
 1780 00b0 B3F800A0 	 ldrh r10,[r3]
 1781 00b4 2E4B     	 ldr r3,.L47+52
 1782 00b6 B3F800C0 	 ldrh ip,[r3]
 1783 00ba 2E4B     	 ldr r3,.L47+56
 1784 00bc B3F800E0 	 ldrh lr,[r3]
 1785 00c0 2D4B     	 ldr r3,.L47+60
 1786 00c2 1E88     	 ldrh r6,[r3]
 1787 00c4 2D4B     	 ldr r3,.L47+64
 1788 00c6 D3E90089 	 ldrd r8,[r3]
 1789 00ca 2D4B     	 ldr r3,.L47+68
 1790 00cc D3E90045 	 ldrd r4,[r3]
 1791 00d0 2C4B     	 ldr r3,.L47+72
 1792 00d2 D3E90001 	 ldrd r0,[r3]
 1793 00d6 2C4B     	 ldr r3,.L47+76
 1794 00d8 D3E90023 	 ldrd r2,[r3]
 1795 00dc 0096     	 str r6,[sp]
 1796 00de 0A26     	 movs r6,#10
 1797 00e0 0196     	 str r6,[sp,#4]
 1798 00e2 CDE90289 	 strd r8,[sp,#8]
 1799 00e6 CDE90445 	 strd r4,[sp,#16]
 1800 00ea CDE90601 	 strd r0,[sp,#24]
 1801 00ee CDE90823 	 strd r2,[sp,#32]
 1802 00f2 0020     	 movs r0,#0
 1803 00f4 5146     	 mov r1,r10
 1804 00f6 6246     	 mov r2,ip
 1805 00f8 7346     	 mov r3,lr
 1806 00fa FFF7FEFF 	 bl TFT_GraphStatic
 563:../Libraries/FT800-FT813-5.x/tft.c **** 
 564:../Libraries/FT800-FT813-5.x/tft.c **** 	// Wait for Display to be finished
 565:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1807              	 .loc 1 565 0
 1808 00fe 00BF     	 nop
 1809              	.L45:
 1810              	 .loc 1 565 0 is_stmt 0 discriminator 1
 1811 0100 FFF7FEFF 	 bl EVE_busy
 1812 0104 0346     	 mov r3,r0
 1813 0106 002B     	 cmp r3,#0
 1814 0108 FAD1     	 bne .L45
 566:../Libraries/FT800-FT813-5.x/tft.c **** 
 567:../Libraries/FT800-FT813-5.x/tft.c **** 	// Get size of the current display list
 568:../Libraries/FT800-FT813-5.x/tft.c **** 	num_dl_static = EVE_memRead16(REG_CMD_DL); // REG_CMD_DL = Command display list offset
 1815              	 .loc 1 568 0 is_stmt 1
 1816 010a 2048     	 ldr r0,.L47+80
 1817 010c FFF7FEFF 	 bl EVE_memRead16
 1818 0110 0346     	 mov r3,r0
 1819 0112 1A46     	 mov r2,r3
 1820 0114 1E4B     	 ldr r3,.L47+84
 1821 0116 1A60     	 str r2,[r3]
 569:../Libraries/FT800-FT813-5.x/tft.c **** 
 570:../Libraries/FT800-FT813-5.x/tft.c **** 	// Copy "num_dl_static" bytes from pointer "EVE_RAM_DL" to pointer "MEM_DL_STATIC"
 571:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_memcpy(MEM_DL_STATIC, EVE_RAM_DL, num_dl_static);
 1822              	 .loc 1 571 0
 1823 0118 1D4B     	 ldr r3,.L47+84
 1824 011a 1B68     	 ldr r3,[r3]
 1825 011c 4FF47F20 	 mov r0,#1044480
 1826 0120 4FF44011 	 mov r1,#3145728
 1827 0124 1A46     	 mov r2,r3
 1828 0126 FFF7FEFF 	 bl EVE_cmd_memcpy
 572:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1829              	 .loc 1 572 0
 1830 012a 00BF     	 nop
 1831              	.L46:
 1832              	 .loc 1 572 0 is_stmt 0 discriminator 1
 1833 012c FFF7FEFF 	 bl EVE_busy
 1834 0130 0346     	 mov r3,r0
 1835 0132 002B     	 cmp r3,#0
 1836 0134 FAD1     	 bne .L46
 573:../Libraries/FT800-FT813-5.x/tft.c **** 
 574:../Libraries/FT800-FT813-5.x/tft.c **** }
 1837              	 .loc 1 574 0 is_stmt 1
 1838 0136 BD46     	 mov sp,r7
 1839              	.LCFI17:
 1840              	 .cfi_def_cfa_register 13
 1841              	 
 1842 0138 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 1843              	.L48:
 1844              	 .align 2
 1845              	.L47:
 1846 013c EEF1F500 	 .word 16118254
 1847 0140 1000000E 	 .word 234881040
 1848 0144 4B586404 	 .word 73685067
 1849 0148 0700001F 	 .word 520093703
 1850 014c 42000040 	 .word 1073741890
 1851 0150 42008C40 	 .word 1082916930
 1852 0154 3200A040 	 .word 1084227634
 1853 0158 3200F040 	 .word 1089470514
 1854 015c 29CDF304 	 .word 83086633
 1855 0160 0400001F 	 .word 520093700
 1856 0164 28000000 	 .word .LC6
 1857 0168 34000000 	 .word .LC7
 1858 016c 00000000 	 .word G_x
 1859 0170 00000000 	 .word G_y
 1860 0174 00000000 	 .word G_width
 1861 0178 00000000 	 .word G_height
 1862 017c 00000000 	 .word G_amp_max
 1863 0180 00000000 	 .word G_t_max
 1864 0184 00000000 	 .word G_h_grid_lines
 1865 0188 00000000 	 .word G_v_grid_lines
 1866 018c 00213000 	 .word 3154176
 1867 0190 00000000 	 .word num_dl_static
 1868              	 .cfi_endproc
 1869              	.LFE450:
 1871              	 .section .text.TFT_init,"ax",%progbits
 1872              	 .align 2
 1873              	 .global TFT_init
 1874              	 .thumb
 1875              	 .thumb_func
 1877              	TFT_init:
 1878              	.LFB451:
 575:../Libraries/FT800-FT813-5.x/tft.c **** 
 576:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t TFT_init(void)
 577:../Libraries/FT800-FT813-5.x/tft.c **** {
 1879              	 .loc 1 577 0
 1880              	 .cfi_startproc
 1881              	 
 1882              	 
 1883 0000 80B5     	 push {r7,lr}
 1884              	.LCFI18:
 1885              	 .cfi_def_cfa_offset 8
 1886              	 .cfi_offset 7,-8
 1887              	 .cfi_offset 14,-4
 1888 0002 00AF     	 add r7,sp,#0
 1889              	.LCFI19:
 1890              	 .cfi_def_cfa_register 7
 578:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Initializes EVE (or checks if its already initialized). Only at first sucessful EVE_init() the
 579:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_init() != 0)
 1891              	 .loc 1 579 0
 1892 0004 FFF7FEFF 	 bl EVE_init
 1893 0008 0346     	 mov r3,r0
 1894 000a 002B     	 cmp r3,#0
 1895 000c 2BD0     	 beq .L50
 580:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 581:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (DEBUG_ENABLE)
 582:../Libraries/FT800-FT813-5.x/tft.c **** 			printf("TFT_init - EVE_init was ok, starting to init TFT!\n");
 583:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 584:../Libraries/FT800-FT813-5.x/tft.c **** 		// Mark Display as active (TFT_display only does anythin after his)
 585:../Libraries/FT800-FT813-5.x/tft.c **** 		tft_active = 1;
 1896              	 .loc 1 585 0
 1897 000e 174B     	 ldr r3,.L52
 1898 0010 0122     	 movs r2,#1
 1899 0012 1A70     	 strb r2,[r3]
 586:../Libraries/FT800-FT813-5.x/tft.c **** 
 587:../Libraries/FT800-FT813-5.x/tft.c **** 		// Initial Backlight strength
 588:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_memWrite8(REG_PWM_DUTY, 0x30);	/* setup backlight, range is from 0 = off to 0x80 = max */
 1900              	 .loc 1 588 0
 1901 0014 1648     	 ldr r0,.L52+4
 1902 0016 3021     	 movs r1,#48
 1903 0018 FFF7FEFF 	 bl EVE_memWrite8
 589:../Libraries/FT800-FT813-5.x/tft.c **** 
 590:../Libraries/FT800-FT813-5.x/tft.c **** 		// Write prerecorded touchscreen calibration back to display
 591:../Libraries/FT800-FT813-5.x/tft.c **** 		touch_calibrate();
 1904              	 .loc 1 591 0
 1905 001c FFF7FEFF 	 bl touch_calibrate
 592:../Libraries/FT800-FT813-5.x/tft.c **** 
 593:../Libraries/FT800-FT813-5.x/tft.c **** 		// Clear screen, set precision for VERTEX2F to 1 pixel and show DL for the first time
 594:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1906              	 .loc 1 594 0
 1907 0020 FFF7FEFF 	 bl EVE_start_cmd_burst
 595:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1908              	 .loc 1 595 0
 1909 0024 6FF0FF00 	 mvn r0,#255
 1910 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 596:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0)); /* do not use the following objects for touch-detection */
 1911              	 .loc 1 596 0
 1912 002c 4FF04070 	 mov r0,#50331648
 1913 0030 FFF7FEFF 	 bl EVE_cmd_dl_burst
 597:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_bgcolor_burst(MAIN_BGCOLOR);
 1914              	 .loc 1 597 0
 1915 0034 0F48     	 ldr r0,.L52+8
 1916 0036 FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 598:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 p
 1917              	 .loc 1 598 0
 1918 003a 4FF01C50 	 mov r0,#654311424
 1919 003e FFF7FEFF 	 bl EVE_cmd_dl_burst
 599:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1920              	 .loc 1 599 0
 1921 0042 6FF07D40 	 mvn r0,#-50331648
 1922 0046 FFF7FEFF 	 bl EVE_cmd_dl_burst
 600:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1923              	 .loc 1 600 0
 1924 004a 0B48     	 ldr r0,.L52+12
 1925 004c FFF7FEFF 	 bl EVE_cmd_dl_burst
 601:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1926              	 .loc 1 601 0
 1927 0050 0020     	 movs r0,#0
 1928 0052 FFF7FEFF 	 bl EVE_cmd_dl_burst
 602:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1929              	 .loc 1 602 0
 1930 0056 6FF0FE00 	 mvn r0,#254
 1931 005a FFF7FEFF 	 bl EVE_cmd_dl_burst
 603:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1932              	 .loc 1 603 0
 1933 005e FFF7FEFF 	 bl EVE_end_cmd_burst
 604:../Libraries/FT800-FT813-5.x/tft.c **** 		return 1;
 1934              	 .loc 1 604 0
 1935 0062 0123     	 movs r3,#1
 1936 0064 00E0     	 b .L51
 1937              	.L50:
 605:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 606:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 607:../Libraries/FT800-FT813-5.x/tft.c **** 		return 0;
 1938              	 .loc 1 607 0
 1939 0066 0023     	 movs r3,#0
 1940              	.L51:
 608:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 609:../Libraries/FT800-FT813-5.x/tft.c **** }
 1941              	 .loc 1 609 0
 1942 0068 1846     	 mov r0,r3
 1943 006a 80BD     	 pop {r7,pc}
 1944              	.L53:
 1945              	 .align 2
 1946              	.L52:
 1947 006c 00000000 	 .word tft_active
 1948 0070 D4203000 	 .word 3154132
 1949 0074 EEF1F500 	 .word 16118254
 1950 0078 07000026 	 .word 637534215
 1951              	 .cfi_endproc
 1952              	.LFE451:
 1954              	 .section .rodata
 1955              	 .align 2
 1956              	.LC8:
 1957 003c 42757474 	 .ascii "Button Dimmer touched\000"
 1957      6F6E2044 
 1957      696D6D65 
 1957      7220746F 
 1957      75636865 
 1958 0052 0000     	 .align 2
 1959              	.LC9:
 1960 0054 546F6767 	 .ascii "Toggle Roll touched\000"
 1960      6C652052 
 1960      6F6C6C20 
 1960      746F7563 
 1960      68656400 
 1961              	 .align 2
 1962              	.LC10:
 1963 0068 53776974 	 .ascii "Switch Signal\000"
 1963      63682053 
 1963      69676E61 
 1963      6C00
 1964              	 .section .text.TFT_touch,"ax",%progbits
 1965              	 .align 2
 1966              	 .global TFT_touch
 1967              	 .thumb
 1968              	 .thumb_func
 1970              	TFT_touch:
 1971              	.LFB452:
 610:../Libraries/FT800-FT813-5.x/tft.c **** 
 611:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch(void)
 612:../Libraries/FT800-FT813-5.x/tft.c **** {
 1972              	 .loc 1 612 0
 1973              	 .cfi_startproc
 1974              	 
 1975              	 
 1976 0000 80B5     	 push {r7,lr}
 1977              	.LCFI20:
 1978              	 .cfi_def_cfa_offset 8
 1979              	 .cfi_offset 7,-8
 1980              	 .cfi_offset 14,-4
 1981 0002 82B0     	 sub sp,sp,#8
 1982              	.LCFI21:
 1983              	 .cfi_def_cfa_offset 16
 1984 0004 00AF     	 add r7,sp,#0
 1985              	.LCFI22:
 1986              	 .cfi_def_cfa_register 7
 613:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Check for touch events and setup vars for TFT_display() (Buttons). Created by Rudolph Riedel, 
 614:../Libraries/FT800-FT813-5.x/tft.c **** 	// Init vars
 615:../Libraries/FT800-FT813-5.x/tft.c **** 	uint8_t tag; // temporary store of received touched tag
 616:../Libraries/FT800-FT813-5.x/tft.c **** 	static uint8_t toggle_lock = 0; // "Debouncing of touches" -> If something is touched, this is set
 617:../Libraries/FT800-FT813-5.x/tft.c **** 	
 618:../Libraries/FT800-FT813-5.x/tft.c **** 	// If Display is still busy, skip this evaluation to prevent hanging, glitches and flickers
 619:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_busy()) { return; } /* is EVE still processing the last display list? */
 1987              	 .loc 1 619 0
 1988 0006 FFF7FEFF 	 bl EVE_busy
 1989 000a 0346     	 mov r3,r0
 1990 000c 002B     	 cmp r3,#0
 1991 000e 00D0     	 beq .L55
 1992 0010 7BE0     	 b .L54
 1993              	.L55:
 620:../Libraries/FT800-FT813-5.x/tft.c **** 
 621:../Libraries/FT800-FT813-5.x/tft.c **** 	// Read the value for the first touch point
 622:../Libraries/FT800-FT813-5.x/tft.c **** 	tag = EVE_memRead8(REG_TOUCH_TAG);
 1994              	 .loc 1 622 0
 1995 0012 3F48     	 ldr r0,.L67
 1996 0014 FFF7FEFF 	 bl EVE_memRead8
 1997 0018 0346     	 mov r3,r0
 1998 001a FB71     	 strb r3,[r7,#7]
 623:../Libraries/FT800-FT813-5.x/tft.c **** 
 624:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 625:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 1999              	 .loc 1 625 0
 2000 001c FB79     	 ldrb r3,[r7,#7]
 2001 001e 0D2B     	 cmp r3,#13
 2002 0020 73D8     	 bhi .L54
 2003 0022 01A2     	 adr r2,.L58
 2004 0024 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2005              	 .p2align 2
 2006              	.L58:
 2007 0028 61000000 	 .word .L57+1
 2008 002c 0B010000 	 .word .L54+1
 2009 0030 0B010000 	 .word .L54+1
 2010 0034 0B010000 	 .word .L54+1
 2011 0038 0B010000 	 .word .L54+1
 2012 003c 0B010000 	 .word .L54+1
 2013 0040 0B010000 	 .word .L54+1
 2014 0044 0B010000 	 .word .L54+1
 2015 0048 0B010000 	 .word .L54+1
 2016 004c 0B010000 	 .word .L54+1
 2017 0050 69000000 	 .word .L59+1
 2018 0054 0B010000 	 .word .L54+1
 2019 0058 A9000000 	 .word .L60+1
 2020 005c D7000000 	 .word .L61+1
 2021              	 .p2align 1
 2022              	.L57:
 626:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 627:../Libraries/FT800-FT813-5.x/tft.c **** 		// nothing touched - reset states and locks
 628:../Libraries/FT800-FT813-5.x/tft.c **** 		case 0:
 629:../Libraries/FT800-FT813-5.x/tft.c **** 			toggle_lock = 0;
 2023              	 .loc 1 629 0
 2024 0060 2C4B     	 ldr r3,.L67+4
 2025 0062 0022     	 movs r2,#0
 2026 0064 1A70     	 strb r2,[r3]
 630:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2027              	 .loc 1 630 0
 2028 0066 50E0     	 b .L54
 2029              	.L59:
 631:../Libraries/FT800-FT813-5.x/tft.c **** 		// dimmer button on top as on/off radio-switch
 632:../Libraries/FT800-FT813-5.x/tft.c **** 		case 10:
 633:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2030              	 .loc 1 633 0
 2031 0068 2A4B     	 ldr r3,.L67+4
 2032 006a 1B78     	 ldrb r3,[r3]
 2033 006c 002B     	 cmp r3,#0
 2034 006e 1AD1     	 bne .L62
 634:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Button Dimmer touched\n");
 2035              	 .loc 1 634 0
 2036 0070 2948     	 ldr r0,.L67+8
 2037 0072 FFF7FEFF 	 bl puts
 635:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2038              	 .loc 1 635 0
 2039 0076 274B     	 ldr r3,.L67+4
 2040 0078 2A22     	 movs r2,#42
 2041 007a 1A70     	 strb r2,[r3]
 636:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_dimmer == 0){
 2042              	 .loc 1 636 0
 2043 007c 274B     	 ldr r3,.L67+12
 2044 007e 1B88     	 ldrh r3,[r3]
 2045 0080 002B     	 cmp r3,#0
 2046 0082 08D1     	 bne .L63
 637:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = EVE_OPT_FLAT;
 2047              	 .loc 1 637 0
 2048 0084 254B     	 ldr r3,.L67+12
 2049 0086 4FF48072 	 mov r2,#256
 2050 008a 1A80     	 strh r2,[r3]
 638:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x01);	/* setup backlight, range is from 0 = off to 0x80 = max */
 2051              	 .loc 1 638 0
 2052 008c 2448     	 ldr r0,.L67+16
 2053 008e 0121     	 movs r1,#1
 2054 0090 FFF7FEFF 	 bl EVE_memWrite8
 2055 0094 07E0     	 b .L62
 2056              	.L63:
 639:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 640:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 641:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = 0;
 2057              	 .loc 1 641 0
 2058 0096 214B     	 ldr r3,.L67+12
 2059 0098 0022     	 movs r2,#0
 2060 009a 1A80     	 strh r2,[r3]
 642:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x80);	/* setup backlight, range is from 0 = off to 0x80 = max */
 2061              	 .loc 1 642 0
 2062 009c 2048     	 ldr r0,.L67+16
 2063 009e 8021     	 movs r1,#128
 2064 00a0 FFF7FEFF 	 bl EVE_memWrite8
 643:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 644:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 645:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2065              	 .loc 1 645 0
 2066 00a4 31E0     	 b .L54
 2067              	.L62:
 2068 00a6 30E0     	 b .L54
 2069              	.L60:
 646:../Libraries/FT800-FT813-5.x/tft.c **** 		// roll/frame mode toggle on top
 647:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 648:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2070              	 .loc 1 648 0
 2071 00a8 1A4B     	 ldr r3,.L67+4
 2072 00aa 1B78     	 ldrb r3,[r3]
 2073 00ac 002B     	 cmp r3,#0
 2074 00ae 11D1     	 bne .L64
 649:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle Roll touched\n");
 2075              	 .loc 1 649 0
 2076 00b0 1C48     	 ldr r0,.L67+20
 2077 00b2 FFF7FEFF 	 bl puts
 650:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2078              	 .loc 1 650 0
 2079 00b6 174B     	 ldr r3,.L67+4
 2080 00b8 2A22     	 movs r2,#42
 2081 00ba 1A70     	 strb r2,[r3]
 651:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 2082              	 .loc 1 651 0
 2083 00bc 1A4B     	 ldr r3,.L67+24
 2084 00be 1B88     	 ldrh r3,[r3]
 2085 00c0 002B     	 cmp r3,#0
 2086 00c2 03D1     	 bne .L65
 652:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 2087              	 .loc 1 652 0
 2088 00c4 184B     	 ldr r3,.L67+24
 2089 00c6 0122     	 movs r2,#1
 2090 00c8 1A80     	 strh r2,[r3]
 2091 00ca 03E0     	 b .L64
 2092              	.L65:
 653:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 654:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 655:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 2093              	 .loc 1 655 0
 2094 00cc 164B     	 ldr r3,.L67+24
 2095 00ce 0022     	 movs r2,#0
 2096 00d0 1A80     	 strh r2,[r3]
 656:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 657:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 658:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2097              	 .loc 1 658 0
 2098 00d2 1AE0     	 b .L54
 2099              	.L64:
 2100 00d4 19E0     	 b .L54
 2101              	.L61:
 659:../Libraries/FT800-FT813-5.x/tft.c **** 		// signal switcher button
 660:../Libraries/FT800-FT813-5.x/tft.c **** 		case 13:
 661:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 2102              	 .loc 1 661 0
 2103 00d6 0F4B     	 ldr r3,.L67+4
 2104 00d8 1B78     	 ldrb r3,[r3]
 2105 00da 002B     	 cmp r3,#0
 2106 00dc 14D1     	 bne .L66
 662:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Switch Signal\n");
 2107              	 .loc 1 662 0
 2108 00de 1348     	 ldr r0,.L67+28
 2109 00e0 FFF7FEFF 	 bl puts
 663:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 2110              	 .loc 1 663 0
 2111 00e4 0B4B     	 ldr r3,.L67+4
 2112 00e6 2A22     	 movs r2,#42
 2113 00e8 1A70     	 strb r2,[r3]
 664:../Libraries/FT800-FT813-5.x/tft.c **** 				InputType++;
 2114              	 .loc 1 664 0
 2115 00ea 114B     	 ldr r3,.L67+32
 2116 00ec 1B78     	 ldrb r3,[r3]
 2117 00ee DBB2     	 uxtb r3,r3
 2118 00f0 0133     	 adds r3,r3,#1
 2119 00f2 DAB2     	 uxtb r2,r3
 2120 00f4 0E4B     	 ldr r3,.L67+32
 2121 00f6 1A70     	 strb r2,[r3]
 665:../Libraries/FT800-FT813-5.x/tft.c **** 				if(InputType > 3){ InputType = 0; }
 2122              	 .loc 1 665 0
 2123 00f8 0D4B     	 ldr r3,.L67+32
 2124 00fa 1B78     	 ldrb r3,[r3]
 2125 00fc DBB2     	 uxtb r3,r3
 2126 00fe 032B     	 cmp r3,#3
 2127 0100 02D9     	 bls .L66
 2128              	 .loc 1 665 0 is_stmt 0 discriminator 1
 2129 0102 0B4B     	 ldr r3,.L67+32
 2130 0104 0022     	 movs r2,#0
 2131 0106 1A70     	 strb r2,[r3]
 2132              	.L66:
 666:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 667:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 2133              	 .loc 1 667 0 is_stmt 1
 2134 0108 00BF     	 nop
 2135              	.L54:
 668:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 669:../Libraries/FT800-FT813-5.x/tft.c **** }
 2136              	 .loc 1 669 0
 2137 010a 0837     	 adds r7,r7,#8
 2138              	.LCFI23:
 2139              	 .cfi_def_cfa_offset 8
 2140 010c BD46     	 mov sp,r7
 2141              	.LCFI24:
 2142              	 .cfi_def_cfa_register 13
 2143              	 
 2144 010e 80BD     	 pop {r7,pc}
 2145              	.L68:
 2146              	 .align 2
 2147              	.L67:
 2148 0110 2C213000 	 .word 3154220
 2149 0114 00000000 	 .word toggle_lock.12313
 2150 0118 3C000000 	 .word .LC8
 2151 011c 00000000 	 .word toggle_state_dimmer
 2152 0120 D4203000 	 .word 3154132
 2153 0124 54000000 	 .word .LC9
 2154 0128 00000000 	 .word toggle_state_graphmode
 2155 012c 68000000 	 .word .LC10
 2156 0130 00000000 	 .word InputType
 2157              	 .cfi_endproc
 2158              	.LFE452:
 2160              	 .section .rodata
 2161 0076 0000     	 .align 2
 2162              	.LC11:
 2163 0078 53656E73 	 .ascii "Sensor\000"
 2163      6F7200
 2164 007f 00       	 .align 2
 2165              	.LC12:
 2166 0080 496D7000 	 .ascii "Imp\000"
 2167              	 .align 2
 2168              	.LC13:
 2169 0084 53617700 	 .ascii "Saw\000"
 2170              	 .align 2
 2171              	.LC14:
 2172 0088 53696E65 	 .ascii "Sine\000"
 2172      00
 2173 008d 000000   	 .align 2
 2174              	.LC15:
 2175 0090 526F6C6C 	 .ascii "Roll\000"
 2175      00
 2176 0095 000000   	 .align 2
 2177              	.LC16:
 2178 0098 4672616D 	 .ascii "Frame\000"
 2178      6500
 2179 009e 0000     	 .align 2
 2180              	.LC17:
 2181 00a0 44696D6D 	 .ascii "Dimmer\000"
 2181      657200
 2182 00a7 00       	 .align 2
 2183              	.LC18:
 2184 00a8 252E326C 	 .ascii "%.2lf\000"
 2184      6600
 2185 00ae 0000     	 .align 2
 2186              	.LC19:
 2187 00b0 205600   	 .ascii " V\000"
 2188 00b3 00       	 .section .text.TFT_display,"ax",%progbits
 2189              	 .align 2
 2190              	 .global TFT_display
 2191              	 .thumb
 2192              	 .thumb_func
 2194              	TFT_display:
 2195              	.LFB453:
 670:../Libraries/FT800-FT813-5.x/tft.c **** 
 671:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display(XMC_VADC_RESULT_SIZE_t SBuffer[], uint16_t size, uint16_t *SBuffer_curidx)
 672:../Libraries/FT800-FT813-5.x/tft.c **** {
 2196              	 .loc 1 672 0
 2197              	 .cfi_startproc
 2198              	 
 2199              	 
 2200 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2201              	.LCFI25:
 2202              	 .cfi_def_cfa_offset 20
 2203              	 .cfi_offset 4,-20
 2204              	 .cfi_offset 5,-16
 2205              	 .cfi_offset 6,-12
 2206              	 .cfi_offset 7,-8
 2207              	 .cfi_offset 14,-4
 2208 0002 99B0     	 sub sp,sp,#100
 2209              	.LCFI26:
 2210              	 .cfi_def_cfa_offset 120
 2211 0004 0AAF     	 add r7,sp,#40
 2212              	.LCFI27:
 2213              	 .cfi_def_cfa 7,80
 2214 0006 F860     	 str r0,[r7,#12]
 2215 0008 0B46     	 mov r3,r1
 2216 000a 7A60     	 str r2,[r7,#4]
 2217 000c 7B81     	 strh r3,[r7,#10]
 673:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Dynamic portion of display-handling, meant to be called every 20ms or more. Created by Rudolph
 674:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 675:../Libraries/FT800-FT813-5.x/tft.c **** 	/// The inputs are used to draw the Graph data. Note that also some predefined graph settings are 
 676:../Libraries/FT800-FT813-5.x/tft.c **** 
 677:../Libraries/FT800-FT813-5.x/tft.c **** 	//static int32_t rotate = 0;
 678:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t display_list_size = 0;
 2218              	 .loc 1 678 0
 2219 000e 0023     	 movs r3,#0
 2220 0010 FB86     	 strh r3,[r7,#54]
 679:../Libraries/FT800-FT813-5.x/tft.c **** 
 680:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 2221              	 .loc 1 680 0
 2222 0012 924B     	 ldr r3,.L77
 2223 0014 1B78     	 ldrb r3,[r3]
 2224 0016 002B     	 cmp r3,#0
 2225 0018 00F01D81 	 beq .L69
 2226              	.LBB13:
 681:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 682:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (EVE_DMA)
 683:../Libraries/FT800-FT813-5.x/tft.c **** 			uint16_t cmd_fifo_size;
 684:../Libraries/FT800-FT813-5.x/tft.c **** 			cmd_fifo_size = EVE_dma_buffer_index*4; /* without DMA there is no way to tell how many bytes ar
 685:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 686:../Libraries/FT800-FT813-5.x/tft.c **** 
 687:../Libraries/FT800-FT813-5.x/tft.c **** 		// get size of last display list to be printed on screen (section "Debug Values")
 688:../Libraries/FT800-FT813-5.x/tft.c **** 		display_list_size = EVE_memRead16(REG_CMD_DL);
 2227              	 .loc 1 688 0
 2228 001c 9048     	 ldr r0,.L77+4
 2229 001e FFF7FEFF 	 bl EVE_memRead16
 2230 0022 0346     	 mov r3,r0
 2231 0024 FB86     	 strh r3,[r7,#54]
 689:../Libraries/FT800-FT813-5.x/tft.c **** 
 690:../Libraries/FT800-FT813-5.x/tft.c **** 		// start Burst (start writing to the cmd-fifo as one stream of bytes, only sending the address on
 691:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst();
 2232              	 .loc 1 691 0
 2233 0026 FFF7FEFF 	 bl EVE_start_cmd_burst
 692:../Libraries/FT800-FT813-5.x/tft.c **** 
 693:../Libraries/FT800-FT813-5.x/tft.c **** 
 694:../Libraries/FT800-FT813-5.x/tft.c **** 
 695:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Start the actual display list
 696:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART);
 2234              	 .loc 1 696 0
 2235 002a 6FF0FF00 	 mvn r0,#255
 2236 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 697:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 2237              	 .loc 1 697 0
 2238 0032 6FF07D40 	 mvn r0,#-50331648
 2239 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 698:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 2240              	 .loc 1 698 0
 2241 003a 8A48     	 ldr r0,.L77+8
 2242 003c FFF7FEFF 	 bl EVE_cmd_dl_burst
 699:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 2243              	 .loc 1 699 0
 2244 0040 4FF04070 	 mov r0,#50331648
 2245 0044 FFF7FEFF 	 bl EVE_cmd_dl_burst
 700:../Libraries/FT800-FT813-5.x/tft.c **** 
 701:../Libraries/FT800-FT813-5.x/tft.c **** 		// insert static part of display-list from copy in gfx-mem
 702:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_append_burst(MEM_DL_STATIC, num_dl_static);
 2246              	 .loc 1 702 0
 2247 0048 874B     	 ldr r3,.L77+12
 2248 004a 1B68     	 ldr r3,[r3]
 2249 004c 4FF47F20 	 mov r0,#1044480
 2250 0050 1946     	 mov r1,r3
 2251 0052 FFF7FEFF 	 bl EVE_cmd_append_burst
 703:../Libraries/FT800-FT813-5.x/tft.c **** 
 704:../Libraries/FT800-FT813-5.x/tft.c **** 
 705:../Libraries/FT800-FT813-5.x/tft.c **** 
 706:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Display BUTTONS and Toggles
 707:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 2252              	 .loc 1 707 0
 2253 0056 8548     	 ldr r0,.L77+16
 2254 0058 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 708:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 2255              	 .loc 1 708 0
 2256 005c 8448     	 ldr r0,.L77+20
 2257 005e FFF7FEFF 	 bl EVE_cmd_dl_burst
 709:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 2258              	 .loc 1 709 0
 2259 0062 8448     	 ldr r0,.L77+24
 2260 0064 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 710:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 2261              	 .loc 1 710 0
 2262 0068 8348     	 ldr r0,.L77+28
 2263 006a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 711:../Libraries/FT800-FT813-5.x/tft.c **** 
 712:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(13)); /* assign tag-value '13' to the button that follows */
 2264              	 .loc 1 712 0
 2265 006e 8348     	 ldr r0,.L77+32
 2266 0070 FFF7FEFF 	 bl EVE_cmd_dl_burst
 713:../Libraries/FT800-FT813-5.x/tft.c **** 		if(InputType == 0){ 		EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sensor");	}
 2267              	 .loc 1 713 0
 2268 0074 824B     	 ldr r3,.L77+36
 2269 0076 1B78     	 ldrb r3,[r3]
 2270 0078 DBB2     	 uxtb r3,r3
 2271 007a 002B     	 cmp r3,#0
 2272 007c 0CD1     	 bne .L71
 2273              	 .loc 1 713 0 is_stmt 0 discriminator 1
 2274 007e 1B23     	 movs r3,#27
 2275 0080 0093     	 str r3,[sp]
 2276 0082 0023     	 movs r3,#0
 2277 0084 0193     	 str r3,[sp,#4]
 2278 0086 7F4B     	 ldr r3,.L77+40
 2279 0088 0293     	 str r3,[sp,#8]
 2280 008a 1420     	 movs r0,#20
 2281 008c 0F21     	 movs r1,#15
 2282 008e 5022     	 movs r2,#80
 2283 0090 1E23     	 movs r3,#30
 2284 0092 FFF7FEFF 	 bl EVE_cmd_button_burst
 2285 0096 2FE0     	 b .L72
 2286              	.L71:
 714:../Libraries/FT800-FT813-5.x/tft.c **** 		else if(InputType == 1){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Imp");	}
 2287              	 .loc 1 714 0 is_stmt 1
 2288 0098 794B     	 ldr r3,.L77+36
 2289 009a 1B78     	 ldrb r3,[r3]
 2290 009c DBB2     	 uxtb r3,r3
 2291 009e 012B     	 cmp r3,#1
 2292 00a0 0CD1     	 bne .L73
 2293              	 .loc 1 714 0 is_stmt 0 discriminator 1
 2294 00a2 1B23     	 movs r3,#27
 2295 00a4 0093     	 str r3,[sp]
 2296 00a6 0023     	 movs r3,#0
 2297 00a8 0193     	 str r3,[sp,#4]
 2298 00aa 774B     	 ldr r3,.L77+44
 2299 00ac 0293     	 str r3,[sp,#8]
 2300 00ae 1420     	 movs r0,#20
 2301 00b0 0F21     	 movs r1,#15
 2302 00b2 5022     	 movs r2,#80
 2303 00b4 1E23     	 movs r3,#30
 2304 00b6 FFF7FEFF 	 bl EVE_cmd_button_burst
 2305 00ba 1DE0     	 b .L72
 2306              	.L73:
 715:../Libraries/FT800-FT813-5.x/tft.c **** 		else if(InputType == 2){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Saw");	}
 2307              	 .loc 1 715 0 is_stmt 1
 2308 00bc 704B     	 ldr r3,.L77+36
 2309 00be 1B78     	 ldrb r3,[r3]
 2310 00c0 DBB2     	 uxtb r3,r3
 2311 00c2 022B     	 cmp r3,#2
 2312 00c4 0CD1     	 bne .L74
 2313              	 .loc 1 715 0 is_stmt 0 discriminator 1
 2314 00c6 1B23     	 movs r3,#27
 2315 00c8 0093     	 str r3,[sp]
 2316 00ca 0023     	 movs r3,#0
 2317 00cc 0193     	 str r3,[sp,#4]
 2318 00ce 6F4B     	 ldr r3,.L77+48
 2319 00d0 0293     	 str r3,[sp,#8]
 2320 00d2 1420     	 movs r0,#20
 2321 00d4 0F21     	 movs r1,#15
 2322 00d6 5022     	 movs r2,#80
 2323 00d8 1E23     	 movs r3,#30
 2324 00da FFF7FEFF 	 bl EVE_cmd_button_burst
 2325 00de 0BE0     	 b .L72
 2326              	.L74:
 716:../Libraries/FT800-FT813-5.x/tft.c **** 		else{						EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sine");	}
 2327              	 .loc 1 716 0 is_stmt 1
 2328 00e0 1B23     	 movs r3,#27
 2329 00e2 0093     	 str r3,[sp]
 2330 00e4 0023     	 movs r3,#0
 2331 00e6 0193     	 str r3,[sp,#4]
 2332 00e8 694B     	 ldr r3,.L77+52
 2333 00ea 0293     	 str r3,[sp,#8]
 2334 00ec 1420     	 movs r0,#20
 2335 00ee 0F21     	 movs r1,#15
 2336 00f0 5022     	 movs r2,#80
 2337 00f2 1E23     	 movs r3,#30
 2338 00f4 FFF7FEFF 	 bl EVE_cmd_button_burst
 2339              	.L72:
 717:../Libraries/FT800-FT813-5.x/tft.c **** 
 718:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 2340              	 .loc 1 718 0
 2341 00f8 6648     	 ldr r0,.L77+56
 2342 00fa FFF7FEFF 	 bl EVE_cmd_dl_burst
 719:../Libraries/FT800-FT813-5.x/tft.c **** 		if(toggle_state_graphmode){
 2343              	 .loc 1 719 0
 2344 00fe 664B     	 ldr r3,.L77+60
 2345 0100 1B88     	 ldrh r3,[r3]
 2346 0102 002B     	 cmp r3,#0
 2347 0104 0DD0     	 beq .L75
 720:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "Roll");
 2348              	 .loc 1 720 0
 2349 0106 0023     	 movs r3,#0
 2350 0108 0093     	 str r3,[sp]
 2351 010a 4FF6FF73 	 movw r3,#65535
 2352 010e 0193     	 str r3,[sp,#4]
 2353 0110 624B     	 ldr r3,.L77+64
 2354 0112 0293     	 str r3,[sp,#8]
 2355 0114 7820     	 movs r0,#120
 2356 0116 1821     	 movs r1,#24
 2357 0118 3E22     	 movs r2,#62
 2358 011a 1B23     	 movs r3,#27
 2359 011c FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2360 0120 0BE0     	 b .L76
 2361              	.L75:
 721:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 722:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 723:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "Frame");
 2362              	 .loc 1 723 0
 2363 0122 0023     	 movs r3,#0
 2364 0124 0093     	 str r3,[sp]
 2365 0126 0023     	 movs r3,#0
 2366 0128 0193     	 str r3,[sp,#4]
 2367 012a 5D4B     	 ldr r3,.L77+68
 2368 012c 0293     	 str r3,[sp,#8]
 2369 012e 7820     	 movs r0,#120
 2370 0130 1821     	 movs r1,#24
 2371 0132 3E22     	 movs r2,#62
 2372 0134 1B23     	 movs r3,#27
 2373 0136 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2374              	.L76:
 724:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 725:../Libraries/FT800-FT813-5.x/tft.c **** 
 726:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(10)); /* assign tag-value '10' to the button that follows */
 2375              	 .loc 1 726 0
 2376 013a 5A48     	 ldr r0,.L77+72
 2377 013c FFF7FEFF 	 bl EVE_cmd_dl_burst
 727:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_button_burst(205,15,80,30, 27, toggle_state_dimmer,"Dimmer");
 2378              	 .loc 1 727 0
 2379 0140 594B     	 ldr r3,.L77+76
 2380 0142 1B88     	 ldrh r3,[r3]
 2381 0144 1B22     	 movs r2,#27
 2382 0146 0092     	 str r2,[sp]
 2383 0148 0193     	 str r3,[sp,#4]
 2384 014a 584B     	 ldr r3,.L77+80
 2385 014c 0293     	 str r3,[sp,#8]
 2386 014e CD20     	 movs r0,#205
 2387 0150 0F21     	 movs r1,#15
 2388 0152 5022     	 movs r2,#80
 2389 0154 1E23     	 movs r3,#30
 2390 0156 FFF7FEFF 	 bl EVE_cmd_button_burst
 728:../Libraries/FT800-FT813-5.x/tft.c **** 
 729:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 2391              	 .loc 1 729 0
 2392 015a 4FF04070 	 mov r0,#50331648
 2393 015e FFF7FEFF 	 bl EVE_cmd_dl_burst
 730:../Libraries/FT800-FT813-5.x/tft.c **** 
 731:../Libraries/FT800-FT813-5.x/tft.c **** 
 732:../Libraries/FT800-FT813-5.x/tft.c **** 
 733:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Debug Values
 734:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (EVE_DMA)
 735:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_number_burst(120, EVE_VSIZE - 65, 26, EVE_OPT_RIGHTX, cmd_fifo_size); /* number of bytes 
 736:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 737:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, display_list_size); /* number of bytes written 
 2394              	 .loc 1 737 0
 2395 0162 FB8E     	 ldrh r3,[r7,#54]
 2396 0164 0093     	 str r3,[sp]
 2397 0166 4FF4EB70 	 mov r0,#470
 2398 016a 0A21     	 movs r1,#10
 2399 016c 1A22     	 movs r2,#26
 2400 016e 4FF40063 	 mov r3,#2048
 2401 0172 FFF7FEFF 	 bl EVE_cmd_number_burst
 738:../Libraries/FT800-FT813-5.x/tft.c **** 
 739:../Libraries/FT800-FT813-5.x/tft.c **** 		// Write current sensor value with unit
 740:../Libraries/FT800-FT813-5.x/tft.c **** 		char buffer[32]; // buffer for double to string conversion
 741:../Libraries/FT800-FT813-5.x/tft.c **** 		sprintf(buffer, "%.2lf", (G_amp_max/G_y_max)*SBuffer[*SBuffer_curidx]); // double to string conve
 2402              	 .loc 1 741 0
 2403 0176 4E4B     	 ldr r3,.L77+84
 2404 0178 D3E90001 	 ldrd r0,[r3]
 2405 017c 4D4B     	 ldr r3,.L77+88
 2406 017e D3E90023 	 ldrd r2,[r3]
 2407 0182 FFF7FEFF 	 bl __aeabi_ddiv
 2408 0186 0246     	 mov r2,r0
 2409 0188 0B46     	 mov r3,r1
 2410 018a 1446     	 mov r4,r2
 2411 018c 1D46     	 mov r5,r3
 2412 018e 7B68     	 ldr r3,[r7,#4]
 2413 0190 1B88     	 ldrh r3,[r3]
 2414 0192 5B00     	 lsls r3,r3,#1
 2415 0194 FA68     	 ldr r2,[r7,#12]
 2416 0196 1344     	 add r3,r3,r2
 2417 0198 1B88     	 ldrh r3,[r3]
 2418 019a 1846     	 mov r0,r3
 2419 019c FFF7FEFF 	 bl __aeabi_i2d
 2420 01a0 0246     	 mov r2,r0
 2421 01a2 0B46     	 mov r3,r1
 2422 01a4 2046     	 mov r0,r4
 2423 01a6 2946     	 mov r1,r5
 2424 01a8 FFF7FEFF 	 bl __aeabi_dmul
 2425 01ac 0246     	 mov r2,r0
 2426 01ae 0B46     	 mov r3,r1
 2427 01b0 1446     	 mov r4,r2
 2428 01b2 1D46     	 mov r5,r3
 2429 01b4 07F11403 	 add r3,r7,#20
 2430 01b8 1846     	 mov r0,r3
 2431 01ba 3F49     	 ldr r1,.L77+92
 2432 01bc 2246     	 mov r2,r4
 2433 01be 2B46     	 mov r3,r5
 2434 01c0 FFF7FEFF 	 bl sprintf
 742:../Libraries/FT800-FT813-5.x/tft.c **** 		strcat(buffer, unit_Sensor);
 2435              	 .loc 1 742 0
 2436 01c4 07F11403 	 add r3,r7,#20
 2437 01c8 1846     	 mov r0,r3
 2438 01ca FFF7FEFF 	 bl strlen
 2439 01ce 0346     	 mov r3,r0
 2440 01d0 1A46     	 mov r2,r3
 2441 01d2 07F11403 	 add r3,r7,#20
 2442 01d6 1344     	 add r3,r3,r2
 2443 01d8 384A     	 ldr r2,.L77+96
 2444 01da 1188     	 ldrh r1,[r2]
 2445 01dc 9278     	 ldrb r2,[r2,#2]
 2446 01de 1980     	 strh r1,[r3]
 2447 01e0 9A70     	 strb r2,[r3,#2]
 743:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_text_burst(470, 25, 26, EVE_OPT_RIGHTX, buffer);
 2448              	 .loc 1 743 0
 2449 01e2 07F11403 	 add r3,r7,#20
 2450 01e6 0093     	 str r3,[sp]
 2451 01e8 4FF4EB70 	 mov r0,#470
 2452 01ec 1921     	 movs r1,#25
 2453 01ee 1A22     	 movs r2,#26
 2454 01f0 4FF40063 	 mov r3,#2048
 2455 01f4 FFF7FEFF 	 bl EVE_cmd_text_burst
 744:../Libraries/FT800-FT813-5.x/tft.c **** 
 745:../Libraries/FT800-FT813-5.x/tft.c **** 
 746:../Libraries/FT800-FT813-5.x/tft.c **** 
 747:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// GRAPH
 748:../Libraries/FT800-FT813-5.x/tft.c **** 		///// Print static part of the Graph ---> Moved to initStaticBackground()
 749:../Libraries/FT800-FT813-5.x/tft.c **** 		//TFT_GraphStatic(1, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, 
 750:../Libraries/FT800-FT813-5.x/tft.c **** 
 751:../Libraries/FT800-FT813-5.x/tft.c **** 		///// Print dynamic part of the Graph (data & marker)
 752:../Libraries/FT800-FT813-5.x/tft.c **** 		TFT_GraphData(G_x, G_y, G_width, G_height, G_PADDING, G_y_max, SBuffer, size, SBuffer_curidx, tog
 2456              	 .loc 1 752 0
 2457 01f8 314B     	 ldr r3,.L77+100
 2458 01fa B3F800E0 	 ldrh lr,[r3]
 2459 01fe 314B     	 ldr r3,.L77+104
 2460 0200 1E88     	 ldrh r6,[r3]
 2461 0202 314B     	 ldr r3,.L77+108
 2462 0204 1D88     	 ldrh r5,[r3]
 2463 0206 314B     	 ldr r3,.L77+112
 2464 0208 1C88     	 ldrh r4,[r3]
 2465 020a 2A4B     	 ldr r3,.L77+88
 2466 020c D3E90023 	 ldrd r2,[r3]
 2467 0210 2149     	 ldr r1,.L77+60
 2468 0212 0988     	 ldrh r1,[r1]
 2469 0214 C9B2     	 uxtb r1,r1
 2470 0216 0A20     	 movs r0,#10
 2471 0218 0090     	 str r0,[sp]
 2472 021a CDE90223 	 strd r2,[sp,#8]
 2473 021e FB68     	 ldr r3,[r7,#12]
 2474 0220 0493     	 str r3,[sp,#16]
 2475 0222 7B89     	 ldrh r3,[r7,#10]
 2476 0224 0593     	 str r3,[sp,#20]
 2477 0226 7B68     	 ldr r3,[r7,#4]
 2478 0228 0693     	 str r3,[sp,#24]
 2479 022a 0791     	 str r1,[sp,#28]
 2480 022c 43F69E73 	 movw r3,#16286
 2481 0230 0893     	 str r3,[sp,#32]
 2482 0232 4FF47F03 	 mov r3,#16711680
 2483 0236 0993     	 str r3,[sp,#36]
 2484 0238 7046     	 mov r0,lr
 2485 023a 3146     	 mov r1,r6
 2486 023c 2A46     	 mov r2,r5
 2487 023e 2346     	 mov r3,r4
 2488 0240 FFF7FEFF 	 bl TFT_GraphData
 753:../Libraries/FT800-FT813-5.x/tft.c **** 
 754:../Libraries/FT800-FT813-5.x/tft.c **** 
 755:../Libraries/FT800-FT813-5.x/tft.c **** 
 756:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Finish Display list and burst
 757:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 2489              	 .loc 1 757 0
 2490 0244 0020     	 movs r0,#0
 2491 0246 FFF7FEFF 	 bl EVE_cmd_dl_burst
 758:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 2492              	 .loc 1 758 0
 2493 024a 6FF0FE00 	 mvn r0,#254
 2494 024e FFF7FEFF 	 bl EVE_cmd_dl_burst
 759:../Libraries/FT800-FT813-5.x/tft.c **** 
 760:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 2495              	 .loc 1 760 0
 2496 0252 FFF7FEFF 	 bl EVE_end_cmd_burst
 2497              	.L69:
 2498              	.LBE13:
 761:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 762:../Libraries/FT800-FT813-5.x/tft.c **** }
 2499              	 .loc 1 762 0
 2500 0256 3C37     	 adds r7,r7,#60
 2501              	.LCFI28:
 2502              	 .cfi_def_cfa_offset 20
 2503 0258 BD46     	 mov sp,r7
 2504              	.LCFI29:
 2505              	 .cfi_def_cfa_register 13
 2506              	 
 2507 025a F0BD     	 pop {r4,r5,r6,r7,pc}
 2508              	.L78:
 2509              	 .align 2
 2510              	.L77:
 2511 025c 00000000 	 .word tft_active
 2512 0260 00213000 	 .word 3154176
 2513 0264 07000026 	 .word 637534215
 2514 0268 00000000 	 .word num_dl_static
 2515 026c 124B8C00 	 .word 9194258
 2516 0270 EEF8FF04 	 .word 83884270
 2517 0274 2BA9EA00 	 .word 15378731
 2518 0278 6696AD00 	 .word 11376230
 2519 027c 0D000003 	 .word 50331661
 2520 0280 00000000 	 .word InputType
 2521 0284 78000000 	 .word .LC11
 2522 0288 80000000 	 .word .LC12
 2523 028c 84000000 	 .word .LC13
 2524 0290 88000000 	 .word .LC14
 2525 0294 0C000003 	 .word 50331660
 2526 0298 00000000 	 .word toggle_state_graphmode
 2527 029c 90000000 	 .word .LC15
 2528 02a0 98000000 	 .word .LC16
 2529 02a4 0A000003 	 .word 50331658
 2530 02a8 00000000 	 .word toggle_state_dimmer
 2531 02ac A0000000 	 .word .LC17
 2532 02b0 00000000 	 .word G_amp_max
 2533 02b4 00000000 	 .word G_y_max
 2534 02b8 A8000000 	 .word .LC18
 2535 02bc B0000000 	 .word .LC19
 2536 02c0 00000000 	 .word G_x
 2537 02c4 00000000 	 .word G_y
 2538 02c8 00000000 	 .word G_width
 2539 02cc 00000000 	 .word G_height
 2540              	 .cfi_endproc
 2541              	.LFE453:
 2543              	 .section .bss.toggle_lock.12313,"aw",%nobits
 2546              	toggle_lock.12313:
 2547 0000 00       	 .space 1
 2548              	 .text
 2549              	.Letext0:
 2550              	 .file 2 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2551              	 .file 3 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2552              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_gpio.h"
 2553              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_gpio.h"
 2554              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_usic.h"
 2555              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_spi.h"
 2556              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master.h"
 2557              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io.h"
 2558              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_vadc.h"
 2559              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 2560              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
 2561              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 2562              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 2563              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 2564              	 .file 16 "../Libraries/FT800-FT813-5.x/EVE_target.h"
 2565              	 .file 17 "../Libraries/FT800-FT813-5.x/tft_data.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tft.c
                            *COM*:00000001 ReadData
    {standard input}:25     .data.G_x:00000000 G_x
    {standard input}:22     .data.G_x:00000000 $d
    {standard input}:32     .data.G_y:00000000 G_y
    {standard input}:29     .data.G_y:00000000 $d
    {standard input}:39     .data.G_width:00000000 G_width
    {standard input}:36     .data.G_width:00000000 $d
    {standard input}:46     .data.G_height:00000000 G_height
    {standard input}:43     .data.G_height:00000000 $d
    {standard input}:53     .rodata.unit_Sensor:00000000 unit_Sensor
    {standard input}:50     .rodata.unit_Sensor:00000000 $d
    {standard input}:60     .data.G_amp_max:00000000 G_amp_max
    {standard input}:57     .data.G_amp_max:00000000 $d
    {standard input}:68     .data.G_t_max:00000000 G_t_max
    {standard input}:65     .data.G_t_max:00000000 $d
    {standard input}:76     .data.G_y_max:00000000 G_y_max
    {standard input}:73     .data.G_y_max:00000000 $d
    {standard input}:84     .data.G_h_grid_lines:00000000 G_h_grid_lines
    {standard input}:81     .data.G_h_grid_lines:00000000 $d
    {standard input}:92     .data.G_v_grid_lines:00000000 G_v_grid_lines
    {standard input}:89     .data.G_v_grid_lines:00000000 $d
                            *COM*:00000004 num_dl_static
    {standard input}:100    .bss.tft_active:00000000 tft_active
    {standard input}:101    .bss.tft_active:00000000 $d
    {standard input}:106    .bss.frameover:00000000 frameover
    {standard input}:107    .bss.frameover:00000000 $d
    {standard input}:112    .data.InputType:00000000 InputType
    {standard input}:119    .bss.toggle_state_graphmode:00000000 toggle_state_graphmode
    {standard input}:116    .bss.toggle_state_graphmode:00000000 $d
    {standard input}:126    .bss.toggle_state_dimmer:00000000 toggle_state_dimmer
    {standard input}:123    .bss.toggle_state_dimmer:00000000 $d
    {standard input}:131    .rodata:00000000 $d
    {standard input}:159    .text.TFT_GraphStatic:00000000 $t
    {standard input}:164    .text.TFT_GraphStatic:00000000 TFT_GraphStatic
    {standard input}:466    .text.TFT_GraphStatic:000002a0 $d
    {standard input}:476    .text.TFT_GraphStatic:000002c0 $t
    {standard input}:965    .text.TFT_GraphStatic:0000073c $d
    {standard input}:970    .text.TFT_GraphStatic:00000744 $t
    {standard input}:1232   .text.TFT_GraphStatic:000009bc $d
    {standard input}:1238   .text.TFT_GraphData:00000000 $t
    {standard input}:1243   .text.TFT_GraphData:00000000 TFT_GraphData
    {standard input}:1521   .text.TFT_GraphData:0000020c $d
    {standard input}:1526   .text.touch_calibrate:00000000 $t
    {standard input}:1531   .text.touch_calibrate:00000000 touch_calibrate
    {standard input}:1574   .text.touch_calibrate:00000040 $d
    {standard input}:1586   .text.TFT_display_init_screen:00000000 $t
    {standard input}:1591   .text.TFT_display_init_screen:00000000 TFT_display_init_screen
    {standard input}:1658   .text.TFT_display_init_screen:00000070 $d
    {standard input}:1674   .text.initStaticGraphBackground:00000000 $t
    {standard input}:1679   .text.initStaticGraphBackground:00000000 initStaticGraphBackground
    {standard input}:1846   .text.initStaticGraphBackground:0000013c $d
    {standard input}:1872   .text.TFT_init:00000000 $t
    {standard input}:1877   .text.TFT_init:00000000 TFT_init
    {standard input}:1947   .text.TFT_init:0000006c $d
    {standard input}:1965   .text.TFT_touch:00000000 $t
    {standard input}:1970   .text.TFT_touch:00000000 TFT_touch
    {standard input}:2007   .text.TFT_touch:00000028 $d
    {standard input}:2021   .text.TFT_touch:00000060 $t
    {standard input}:2148   .text.TFT_touch:00000110 $d
    {standard input}:2546   .bss.toggle_lock.12313:00000000 toggle_lock.12313
    {standard input}:2189   .text.TFT_display:00000000 $t
    {standard input}:2194   .text.TFT_display:00000000 TFT_display
    {standard input}:2511   .text.TFT_display:0000025c $d
    {standard input}:2547   .bss.toggle_lock.12313:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_d2iz
__aeabi_dsub
__aeabi_dcmpeq
EVE_cmd_dl
EVE_cmd_dl_burst
EVE_cmd_text
EVE_cmd_text_burst
EVE_cmd_number
EVE_cmd_number_burst
floor
sprintf
ceil
EVE_memWrite32
EVE_cmd_inflate
EVE_start_cmd_burst
EVE_cmd_setbitmap_burst
EVE_end_cmd_burst
logo_init
EVE_cmd_bgcolor
EVE_busy
EVE_memRead16
EVE_cmd_memcpy
EVE_init
EVE_memWrite8
EVE_cmd_bgcolor_burst
EVE_memRead8
puts
EVE_cmd_append_burst
EVE_cmd_gradcolor_burst
EVE_cmd_fgcolor_burst
EVE_cmd_button_burst
EVE_cmd_toggle_burst
strlen
