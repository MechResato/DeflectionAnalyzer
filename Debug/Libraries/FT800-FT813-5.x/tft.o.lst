   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tft.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm _msCounter,4,4
  20              	 .comm tft_tick,1,1
  21              	 .comm MeasurementCounter,4,4
  22              	 .comm InputBuffer1_idx,2,2
  23              	 .comm InputType,1,1
  24              	 .comm frameover,1,1
  25              	 .comm ReadData,1,1
  26              	 .global G_x
  27              	 .section .data.G_x,"aw",%progbits
  28              	 .align 1
  31              	G_x:
  32 0000 0A00     	 .short 10
  33              	 .global G_y
  34              	 .section .data.G_y,"aw",%progbits
  35              	 .align 1
  38              	G_y:
  39 0000 5100     	 .short 81
  40              	 .global G_width
  41              	 .section .data.G_width,"aw",%progbits
  42              	 .align 1
  45              	G_width:
  46 0000 B801     	 .short 440
  47              	 .global G_height
  48              	 .section .data.G_height,"aw",%progbits
  49              	 .align 1
  52              	G_height:
  53 0000 A100     	 .short 161
  54              	 .global unit_Sensor
  55              	 .section .rodata.unit_Sensor,"a",%progbits
  56              	 .align 2
  59              	unit_Sensor:
  60 0000 205600   	 .ascii " V\000"
  61              	 .global G_amp_max
  62 0003 00       	 .section .data.G_amp_max,"aw",%progbits
  63              	 .align 3
  66              	G_amp_max:
  67 0000 00000000 	 .word 0
  68 0004 00002440 	 .word 1076101120
  69              	 .global G_t_max
  70              	 .section .data.G_t_max,"aw",%progbits
  71              	 .align 3
  74              	G_t_max:
  75 0000 9A999999 	 .word -1717986918
  76 0004 99990140 	 .word 1073846681
  77              	 .global G_y_max
  78              	 .section .data.G_y_max,"aw",%progbits
  79              	 .align 3
  82              	G_y_max:
  83 0000 00000000 	 .word 0
  84 0004 00FEAF40 	 .word 1085275648
  85              	 .global G_h_grid_lines
  86              	 .section .data.G_h_grid_lines,"aw",%progbits
  87              	 .align 3
  90              	G_h_grid_lines:
  91 0000 00000000 	 .word 0
  92 0004 00001040 	 .word 1074790400
  93              	 .global G_v_grid_lines
  94              	 .section .data.G_v_grid_lines,"aw",%progbits
  95              	 .align 3
  98              	G_v_grid_lines:
  99 0000 9A999999 	 .word -1717986918
 100 0004 99990140 	 .word 1073846681
 101              	 .comm num_dl_static,4,4
 102              	 .global tft_active
 103              	 .section .bss.tft_active,"aw",%nobits
 106              	tft_active:
 107 0000 00       	 .space 1
 108              	 .global TFT_cur_Menu
 109              	 .section .bss.TFT_cur_Menu,"aw",%nobits
 112              	TFT_cur_Menu:
 113 0000 00       	 .space 1
 114              	 .global TFT_last_Menu
 115              	 .section .data.TFT_last_Menu,"aw",%progbits
 118              	TFT_last_Menu:
 119 0000 FF       	 .byte -1
 120              	 .global TFT_display_cur_Menu__fptr_arr
 121              	 .section .data.TFT_display_cur_Menu__fptr_arr,"aw",%progbits
 122              	 .align 2
 125              	TFT_display_cur_Menu__fptr_arr:
 126 0000 00000000 	 .word TFT_display_menu0
 127 0004 00000000 	 .word TFT_display_menu1
 128              	 .global TFT_touch_cur_Menu__fptr_arr
 129              	 .section .data.TFT_touch_cur_Menu__fptr_arr,"aw",%progbits
 130              	 .align 2
 133              	TFT_touch_cur_Menu__fptr_arr:
 134 0000 00000000 	 .word TFT_touch_menu0
 135 0004 00000000 	 .word TFT_touch_menu1
 136              	 .global TFT_display_static_cur_Menu__fptr_arr
 137              	 .section .data.TFT_display_static_cur_Menu__fptr_arr,"aw",%progbits
 138              	 .align 2
 141              	TFT_display_static_cur_Menu__fptr_arr:
 142 0000 00000000 	 .word TFT_display_static_menu0
 143 0004 00000000 	 .word TFT_display_static_menu1
 144              	 .global display_list_size
 145              	 .section .bss.display_list_size,"aw",%nobits
 146              	 .align 1
 149              	display_list_size:
 150 0000 0000     	 .space 2
 151              	 .global tracker
 152              	 .section .bss.tracker,"aw",%nobits
 153              	 .align 2
 156              	tracker:
 157 0000 00000000 	 .space 4
 158              	 .global TouchXY
 159              	 .section .bss.TouchXY,"aw",%nobits
 160              	 .align 2
 163              	TouchXY:
 164 0000 00000000 	 .space 4
 165              	 .global BGtouchInitial_X
 166              	 .section .data.BGtouchInitial_X,"aw",%progbits
 167              	 .align 1
 170              	BGtouchInitial_X:
 171 0000 0080     	 .short -32768
 172              	 .global BGtouchInitial_Y
 173              	 .section .data.BGtouchInitial_Y,"aw",%progbits
 174              	 .align 1
 177              	BGtouchInitial_Y:
 178 0000 0080     	 .short -32768
 179              	 .global swipeDetect
 180              	 .section .bss.swipeDetect,"aw",%nobits
 183              	swipeDetect:
 184 0000 00       	 .space 1
 185              	 .global swipeInProgress
 186              	 .section .bss.swipeInProgress,"aw",%nobits
 189              	swipeInProgress:
 190 0000 00       	 .space 1
 191              	 .global swipeDebounce
 192              	 .section .bss.swipeDebounce,"aw",%nobits
 195              	swipeDebounce:
 196 0000 00       	 .space 1
 197              	 .global toggle_lock
 198              	 .section .bss.toggle_lock,"aw",%nobits
 201              	toggle_lock:
 202 0000 00       	 .space 1
 203              	 .global toggle_state_graphmode
 204              	 .section .bss.toggle_state_graphmode,"aw",%nobits
 205              	 .align 1
 208              	toggle_state_graphmode:
 209 0000 0000     	 .space 2
 210              	 .global toggle_state_dimmer
 211              	 .section .bss.toggle_state_dimmer,"aw",%nobits
 212              	 .align 1
 215              	toggle_state_dimmer:
 216 0000 0000     	 .space 2
 217              	 .global __aeabi_ui2d
 218              	 .global __aeabi_ddiv
 219              	 .section .rodata
 220              	 .align 2
 221              	.LC3:
 222 0000 5600     	 .ascii "V\000"
 223 0002 0000     	 .align 2
 224              	.LC4:
 225 0004 7400     	 .ascii "t\000"
 226              	 .global __aeabi_i2d
 227              	 .global __aeabi_dmul
 228              	 .global __aeabi_d2uiz
 229              	 .global __aeabi_d2iz
 230              	 .global __aeabi_dsub
 231              	 .global __aeabi_dcmpeq
 232 0006 0000     	 .align 2
 233              	.LC5:
 234 0008 252E316C 	 .ascii "%.1lf\000"
 234      6600
 235 000e 0000     	 .align 2
 236              	.LC0:
 237 0010 00000000 	 .word EVE_cmd_dl
 238 0014 00000000 	 .word EVE_cmd_dl_burst
 239              	 .align 2
 240              	.LC1:
 241 0018 00000000 	 .word EVE_cmd_text
 242 001c 00000000 	 .word EVE_cmd_text_burst
 243              	 .align 2
 244              	.LC2:
 245 0020 00000000 	 .word EVE_cmd_number
 246 0024 00000000 	 .word EVE_cmd_number_burst
 247              	 .section .text.TFT_GraphStatic,"ax",%progbits
 248              	 .align 2
 249              	 .global TFT_GraphStatic
 250              	 .thumb
 251              	 .thumb_func
 253              	TFT_GraphStatic:
 254              	.LFB446:
 255              	 .file 1 "../Libraries/FT800-FT813-5.x/tft.c"
   1:../Libraries/FT800-FT813-5.x/tft.c **** /*
   2:../Libraries/FT800-FT813-5.x/tft.c **** @file    		tft.c
   3:../Libraries/FT800-FT813-5.x/tft.c **** @brief   		Implementation of display communication using the EVE Library. Meant to display a menu a
   4:../Libraries/FT800-FT813-5.x/tft.c **** @version 		2.0 (base lib version was 1.13)
   5:../Libraries/FT800-FT813-5.x/tft.c **** @date    		2020-09-05
   6:../Libraries/FT800-FT813-5.x/tft.c **** @initialauthor  Rudolph Riedel
   7:../Libraries/FT800-FT813-5.x/tft.c **** @author 		RS (Rene Santeler & Stefan Reinm√ºller) @ MCI 2020/21 (initially created by Rudolph Riede
   8:../Libraries/FT800-FT813-5.x/tft.c **** 
   9:../Libraries/FT800-FT813-5.x/tft.c **** @section History
  10:../Libraries/FT800-FT813-5.x/tft.c **** 2.0 (adapted from Rudolph Riedel base version 1.13 - below changes are from RS 2020/21)
  11:../Libraries/FT800-FT813-5.x/tft.c **** - Added color scheme, adaptable banner, dynamic graph implementation (TFT_GraphStatic & TFT_GraphDa
  12:../Libraries/FT800-FT813-5.x/tft.c **** - Adapted TFT_init to only do the most necessary thins for init (no static DL creation! you need to
  13:../Libraries/FT800-FT813-5.x/tft.c **** 
  14:../Libraries/FT800-FT813-5.x/tft.c **** // See https://brtchip.com/eve-toolchains/ for helpful Tools
  15:../Libraries/FT800-FT813-5.x/tft.c ****  */
  16:../Libraries/FT800-FT813-5.x/tft.c **** 
  17:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdint.h>
  18:../Libraries/FT800-FT813-5.x/tft.c **** #include <stdio.h>
  19:../Libraries/FT800-FT813-5.x/tft.c **** #include <string.h>
  20:../Libraries/FT800-FT813-5.x/tft.c **** #include <math.h>
  21:../Libraries/FT800-FT813-5.x/tft.c **** #include <globals.h>
  22:../Libraries/FT800-FT813-5.x/tft.c **** #include "EVE.h"
  23:../Libraries/FT800-FT813-5.x/tft.c **** #include "tft_data.h"
  24:../Libraries/FT800-FT813-5.x/tft.c **** 
  25:../Libraries/FT800-FT813-5.x/tft.c **** 
  26:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Banner line strip edge positions (from left to right: Y1 is held horizontal till X1, in
  27:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y1 66
  28:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_Y2 50
  29:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X1 280
  30:../Libraries/FT800-FT813-5.x/tft.c **** #define LAYOUT_X2 320
  31:../Libraries/FT800-FT813-5.x/tft.c **** 
  32:../Libraries/FT800-FT813-5.x/tft.c **** 
  33:../Libraries/FT800-FT813-5.x/tft.c **** /////////// COLOR SCHEME
  34:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BGCOLOR       0x00F5F1EE // background
  35:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_TEXTCOLOR     0x00F3CD29 // main text
  36:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BANNERCOLOR   0x0064584B // banner
  37:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_DIVIDERCOLOR  0x00F3CD29 // divider
  38:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCOLOR  	   0x00EAA92B // button
  39:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNCTSCOLOR   0x00AD9666 // button contrast
  40:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNTXTCOLOR   0x00FFF8EE // button text
  41:../Libraries/FT800-FT813-5.x/tft.c **** #define MAIN_BTNGRDCOLOR   0x008C4B12 // 3D gradient color
  42:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_AXISCOLOR    0x003B1E0B // graph axis
  43:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_GRIDCOLOR    0x00C5DAE2 // graph grid
  44:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA1COLOR   0x00003F9E // graph data 1
  45:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_DATA2COLOR   0x0064584B // graph data 2 (alternative/additional color)
  46:../Libraries/FT800-FT813-5.x/tft.c **** #define GRAPH_POSMARKCOLOR 0x00ff0000 // graph position marker
  47:../Libraries/FT800-FT813-5.x/tft.c **** 
  48:../Libraries/FT800-FT813-5.x/tft.c **** /* simple pre-defined colors */
  49:../Libraries/FT800-FT813-5.x/tft.c **** #define RED		0xff0000UL
  50:../Libraries/FT800-FT813-5.x/tft.c **** #define ORANGE	0xffa500UL
  51:../Libraries/FT800-FT813-5.x/tft.c **** #define GREEN	0x00ff00UL
  52:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE	0x0000ffUL
  53:../Libraries/FT800-FT813-5.x/tft.c **** #define BLUE_1	0x5dade2L
  54:../Libraries/FT800-FT813-5.x/tft.c **** #define YELLOW	0xffff00UL
  55:../Libraries/FT800-FT813-5.x/tft.c **** #define PINK	0xff00ffUL
  56:../Libraries/FT800-FT813-5.x/tft.c **** #define PURPLE	0x800080UL
  57:../Libraries/FT800-FT813-5.x/tft.c **** #define WHITE	0xffffffUL
  58:../Libraries/FT800-FT813-5.x/tft.c **** #define BLACK	0x000000UL
  59:../Libraries/FT800-FT813-5.x/tft.c **** 
  60:../Libraries/FT800-FT813-5.x/tft.c **** 
  61:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions
  62:../Libraries/FT800-FT813-5.x/tft.c **** // Graph position and size. Here -> quick an dirty estimation where x, y, width and height must be 
  63:../Libraries/FT800-FT813-5.x/tft.c **** #define G_PADDING 10 									// Only needed because we want to calc how much width and height can 
  64:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_x        = 10;													 // 10 px from left to leave some room
  65:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_y      	= (LAYOUT_Y1 + 15);										 // end of banner plus 10 to leave some room  (for 
  66:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_width 	= (0 + EVE_HSIZE - 10 - (2*G_PADDING) - 10);			   // actual width of the data are
  67:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t G_height	= (0 + EVE_VSIZE - (LAYOUT_Y1 + 15) - (2*G_PADDING) - 10); // actual height of th
  68:../Libraries/FT800-FT813-5.x/tft.c **** // axes
  69:../Libraries/FT800-FT813-5.x/tft.c **** const char unit_Sensor[] = " V"; // unit string used at print of current sensor value
  70:../Libraries/FT800-FT813-5.x/tft.c **** double G_amp_max = 10.0; // volts - used at print of vertical grid value labels
  71:../Libraries/FT800-FT813-5.x/tft.c **** double G_t_max = 2.2;    // seconds - used at print of horizontal grid value labels
  72:../Libraries/FT800-FT813-5.x/tft.c **** // data properties
  73:../Libraries/FT800-FT813-5.x/tft.c **** double G_y_max = 4095.0; // maximum allowed amplitude y (here for 12bit sensor value)
  74:../Libraries/FT800-FT813-5.x/tft.c **** // grid
  75:../Libraries/FT800-FT813-5.x/tft.c **** double G_h_grid_lines = 4.0; // number of grey horizontal grid lines
  76:../Libraries/FT800-FT813-5.x/tft.c **** double G_v_grid_lines = 2.2; // number of grey vertical grid lines
  77:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Graph Definitions END
  78:../Libraries/FT800-FT813-5.x/tft.c **** 
  79:../Libraries/FT800-FT813-5.x/tft.c **** 
  80:../Libraries/FT800-FT813-5.x/tft.c **** // Memory-map definitions
  81:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_LOGO 0x00000000 // start-address of logo, needs about 20228 bytes of memory. Will be wr
  82:../Libraries/FT800-FT813-5.x/tft.c **** #define MEM_DL_STATIC (EVE_RAM_G_SIZE - 4096) // 0xff000 -> Start-address of the static part of the
  83:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t num_dl_static; // amount of bytes in the static part of our display-list
  84:../Libraries/FT800-FT813-5.x/tft.c **** 
  85:../Libraries/FT800-FT813-5.x/tft.c **** 
  86:../Libraries/FT800-FT813-5.x/tft.c **** /////////// General Variables
  87:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t tft_active = 0;  // Prevents TFT_display of doing anything if EVE_init isn't successful of 
  88:../Libraries/FT800-FT813-5.x/tft.c **** 
  89:../Libraries/FT800-FT813-5.x/tft.c **** // Current menu display function pointer - At the end of the TFT_display() the function referenced 
  90:../Libraries/FT800-FT813-5.x/tft.c **** int8_t TFT_cur_Menu = 0; // Used as index of currently used menu (TFT_display,TFT_touch)
  91:../Libraries/FT800-FT813-5.x/tft.c **** int8_t TFT_last_Menu = -1; // Used as index of last used menu (TFT_display_static). If this differs
  92:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu0(void);
  93:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu1(void);
  94:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_display_cur_Menu__fptr_arr[])(void) = {&TFT_display_menu0, &TFT_display_menu1};
  95:../Libraries/FT800-FT813-5.x/tft.c **** 
  96:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu0(uint8_t);
  97:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu1(uint8_t);
  98:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_touch_cur_Menu__fptr_arr[])(uint8_t) = {&TFT_touch_menu0, &TFT_touch_menu1};
  99:../Libraries/FT800-FT813-5.x/tft.c **** 
 100:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu0(void);
 101:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu1(void);
 102:../Libraries/FT800-FT813-5.x/tft.c **** void (*TFT_display_static_cur_Menu__fptr_arr[])(void) = {&TFT_display_static_menu0, &TFT_display_st
 103:../Libraries/FT800-FT813-5.x/tft.c **** 
 104:../Libraries/FT800-FT813-5.x/tft.c **** #define TFT_MENU_SIZE (sizeof(TFT_display_cur_Menu__fptr_arr) / sizeof(*(TFT_display_cur_Menu__fptr
 105:../Libraries/FT800-FT813-5.x/tft.c **** 
 106:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Debug
 107:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t display_list_size = 0; // Currently size of the display-list from register. Used by TFT_di
 108:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t tracker = 0; // Value of tracker register (1.byte=tag, 2.byte=value). Used by TFT_display(
 109:../Libraries/FT800-FT813-5.x/tft.c **** uint32_t TouchXY = 0; // Currently touched X and Y coordinate from register (1.byte=X, 2.byte=Y). U
 110:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t BGtouchInitial_X = 32768;
 111:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t BGtouchInitial_Y = 32768;
 112:../Libraries/FT800-FT813-5.x/tft.c **** enum SwipeDetection{None, Up, Down, Left, Right};
 113:../Libraries/FT800-FT813-5.x/tft.c **** enum SwipeDetection swipeDetect = None;
 114:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t swipeInProgress = 0;
 115:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t swipeDebounce = 0;
 116:../Libraries/FT800-FT813-5.x/tft.c **** 
 117:../Libraries/FT800-FT813-5.x/tft.c **** /////////// Button states
 118:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t toggle_lock = 0; // "Debouncing of touches" -> If something is touched, this is set to prev
 119:../Libraries/FT800-FT813-5.x/tft.c **** 
 120:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_graphmode = 0;
 121:../Libraries/FT800-FT813-5.x/tft.c **** uint16_t toggle_state_dimmer = 0;
 122:../Libraries/FT800-FT813-5.x/tft.c **** 
 123:../Libraries/FT800-FT813-5.x/tft.c **** 
 124:../Libraries/FT800-FT813-5.x/tft.c **** 
 125:../Libraries/FT800-FT813-5.x/tft.c **** 
 126:../Libraries/FT800-FT813-5.x/tft.c **** 
 127:../Libraries/FT800-FT813-5.x/tft.c **** 
 128:../Libraries/FT800-FT813-5.x/tft.c **** 
 129:../Libraries/FT800-FT813-5.x/tft.c **** 
 130:../Libraries/FT800-FT813-5.x/tft.c **** 
 131:../Libraries/FT800-FT813-5.x/tft.c **** 
 132:../Libraries/FT800-FT813-5.x/tft.c **** 
 133:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphStatic(uint8_t burst, uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16
 256              	 .loc 1 133 0
 257              	 .cfi_startproc
 258              	 
 259              	 
 260 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 261              	.LCFI0:
 262              	 .cfi_def_cfa_offset 20
 263              	 .cfi_offset 4,-20
 264              	 .cfi_offset 5,-16
 265              	 .cfi_offset 6,-12
 266              	 .cfi_offset 7,-8
 267              	 .cfi_offset 14,-4
 268 0002 A3B0     	 sub sp,sp,#140
 269              	.LCFI1:
 270              	 .cfi_def_cfa_offset 160
 271 0004 02AF     	 add r7,sp,#8
 272              	.LCFI2:
 273              	 .cfi_def_cfa 7,152
 274 0006 0446     	 mov r4,r0
 275 0008 0846     	 mov r0,r1
 276 000a 1146     	 mov r1,r2
 277 000c 1A46     	 mov r2,r3
 278 000e 2346     	 mov r3,r4
 279 0010 FB71     	 strb r3,[r7,#7]
 280 0012 0346     	 mov r3,r0
 281 0014 BB80     	 strh r3,[r7,#4]
 282 0016 0B46     	 mov r3,r1
 283 0018 7B80     	 strh r3,[r7,#2]
 284 001a 1346     	 mov r3,r2
 285 001c 3B80     	 strh r3,[r7]
 134:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the non-dynamic parts of an Graph to the TFT (axes & labels, grids and values, axis-arro
 135:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 136:../Libraries/FT800-FT813-5.x/tft.c **** 	///  burst	... determines if the normal or the burst version of the EVE Library is used to transmi
 137:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 138:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 139:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 140:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 141:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding ... clearance from the outer corners (x,y) to the axes
 142:../Libraries/FT800-FT813-5.x/tft.c **** 	///  amp_max ... maximum represented value of amplitude (e.g. 10 Volts), will be used at 100% hori
 143:../Libraries/FT800-FT813-5.x/tft.c **** 	///  t_max 	 ... maximum represented value of time (e.g. 2.2 Seconds), will be used at 100% horizo
 144:../Libraries/FT800-FT813-5.x/tft.c **** 	///  h_grid_lines ... number of horizontal grid lines
 145:../Libraries/FT800-FT813-5.x/tft.c **** 	///  v_grid_lines ... number of vertical grid lines
 146:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: The predefined GRAPH_AXISCOLOR and GRAPH_GRIDCOLOR are used directly!
 147:../Libraries/FT800-FT813-5.x/tft.c **** 
 148:../Libraries/FT800-FT813-5.x/tft.c **** 	// Define a array of function pointers for every used "EVE_cmd_dl..." function. First one is norma
 149:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_dl__fptr_arr[])(uint32_t) = {EVE_cmd_dl, EVE_cmd_dl_burst};
 286              	 .loc 1 149 0
 287 001e A04A     	 ldr r2,.L20
 288 0020 07F13803 	 add r3,r7,#56
 289 0024 92E80300 	 ldmia r2,{r0,r1}
 290 0028 83E80300 	 stmia r3,{r0,r1}
 150:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_text__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, const char*) = {EVE_cmd_text
 291              	 .loc 1 150 0
 292 002c 9D4A     	 ldr r2,.L20+4
 293 002e 07F13003 	 add r3,r7,#48
 294 0032 92E80300 	 ldmia r2,{r0,r1}
 295 0036 83E80300 	 stmia r3,{r0,r1}
 151:../Libraries/FT800-FT813-5.x/tft.c **** 	void (*EVE_cmd_number__fptr_arr[])(int16_t, int16_t, int16_t, uint16_t, int32_t) = {EVE_cmd_number
 296              	 .loc 1 151 0
 297 003a 9B4A     	 ldr r2,.L20+8
 298 003c 07F12803 	 add r3,r7,#40
 299 0040 92E80300 	 ldmia r2,{r0,r1}
 300 0044 83E80300 	 stmia r3,{r0,r1}
 152:../Libraries/FT800-FT813-5.x/tft.c **** 
 153:../Libraries/FT800-FT813-5.x/tft.c **** 
 154:../Libraries/FT800-FT813-5.x/tft.c **** 	// Internal offsets and sizes
 155:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t arrow_offset = 5;   // Offset of the ARROW HEAD corners
 301              	 .loc 1 155 0
 302 0048 0523     	 movs r3,#5
 303 004a 87F86F30 	 strb r3,[r7,#111]
 156:../Libraries/FT800-FT813-5.x/tft.c **** 
 157:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t grid_linewidth = 9; // linewidth of the grid in 1/16 pixel (16=1px)
 304              	 .loc 1 157 0
 305 004e 0923     	 movs r3,#9
 306 0050 87F86E30 	 strb r3,[r7,#110]
 158:../Libraries/FT800-FT813-5.x/tft.c **** 
 159:../Libraries/FT800-FT813-5.x/tft.c **** 	#define axis_lbl_txt_size 26 	  // Font for axis labels
 160:../Libraries/FT800-FT813-5.x/tft.c **** 	#define grid_lbl_txt_size 20 	  // Font for grid labels
 161:../Libraries/FT800-FT813-5.x/tft.c **** 
 162:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_x = 6;  // Offset used to print the horizontal axis label at the right
 307              	 .loc 1 162 0
 308 0054 0623     	 movs r3,#6
 309 0056 87F86D30 	 strb r3,[r7,#109]
 163:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_ax_lbl_comp_y = 20; // Offset used to print the horizontal axis label at the right
 310              	 .loc 1 163 0
 311 005a 1423     	 movs r3,#20
 312 005c 87F86C30 	 strb r3,[r7,#108]
 164:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_x = 2;  // Offset used to print the vertical axis label at the right p
 313              	 .loc 1 164 0
 314 0060 0223     	 movs r3,#2
 315 0062 87F86B30 	 strb r3,[r7,#107]
 165:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_ax_lbl_comp_y = 22; // Offset used to print the vertical axis label at the right p
 316              	 .loc 1 165 0
 317 0066 1623     	 movs r3,#22
 318 0068 87F86A30 	 strb r3,[r7,#106]
 166:../Libraries/FT800-FT813-5.x/tft.c **** 
 167:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_x = 3;  // Offset used to print the horizontal grid labels (numbers)
 319              	 .loc 1 167 0
 320 006c 0323     	 movs r3,#3
 321 006e 87F86930 	 strb r3,[r7,#105]
 168:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t h_grid_lbl_comp_y = 10; // Offset used to print the horizontal grid labels (numbers)
 322              	 .loc 1 168 0
 323 0072 0A23     	 movs r3,#10
 324 0074 87F86830 	 strb r3,[r7,#104]
 169:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_x = 7;  // Offset used to print the vertical grid labels (numbers) a
 325              	 .loc 1 169 0
 326 0078 0723     	 movs r3,#7
 327 007a 87F86730 	 strb r3,[r7,#103]
 170:../Libraries/FT800-FT813-5.x/tft.c **** 	const uint8_t v_grid_lbl_comp_y = 0;  // Offset used to print the vertical grid labels (numbers) a
 328              	 .loc 1 170 0
 329 007e 0023     	 movs r3,#0
 330 0080 87F86630 	 strb r3,[r7,#102]
 171:../Libraries/FT800-FT813-5.x/tft.c **** 
 172:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Calculate pixels between lines and labels of the grid
 173:../Libraries/FT800-FT813-5.x/tft.c **** 	// Used by grid lines and labels (space between them)
 174:../Libraries/FT800-FT813-5.x/tft.c **** 	double widthPerSection = (double)(width)/v_grid_lines;
 331              	 .loc 1 174 0
 332 0084 3B88     	 ldrh r3,[r7]
 333 0086 1846     	 mov r0,r3
 334 0088 FFF7FEFF 	 bl __aeabi_ui2d
 335 008c 0246     	 mov r2,r0
 336 008e 0B46     	 mov r3,r1
 337 0090 1046     	 mov r0,r2
 338 0092 1946     	 mov r1,r3
 339 0094 D7E92E23 	 ldrd r2,[r7,#184]
 340 0098 FFF7FEFF 	 bl __aeabi_ddiv
 341 009c 0246     	 mov r2,r0
 342 009e 0B46     	 mov r3,r1
 343 00a0 C7E91623 	 strd r2,[r7,#88]
 175:../Libraries/FT800-FT813-5.x/tft.c **** 	double heightPerSection = (double)(height)/h_grid_lines;
 344              	 .loc 1 175 0
 345 00a4 B7F89830 	 ldrh r3,[r7,#152]
 346 00a8 1846     	 mov r0,r3
 347 00aa FFF7FEFF 	 bl __aeabi_ui2d
 348 00ae 0246     	 mov r2,r0
 349 00b0 0B46     	 mov r3,r1
 350 00b2 1046     	 mov r0,r2
 351 00b4 1946     	 mov r1,r3
 352 00b6 D7E92C23 	 ldrd r2,[r7,#176]
 353 00ba FFF7FEFF 	 bl __aeabi_ddiv
 354 00be 0246     	 mov r2,r0
 355 00c0 0B46     	 mov r3,r1
 356 00c2 C7E91423 	 strd r2,[r7,#80]
 176:../Libraries/FT800-FT813-5.x/tft.c **** 
 177:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Axes LABELS
 178:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 357              	 .loc 1 178 0
 358 00c6 FB79     	 ldrb r3,[r7,#7]
 359 00c8 9B00     	 lsls r3,r3,#2
 360 00ca 07F18002 	 add r2,r7,#128
 361 00ce 1344     	 add r3,r3,r2
 362 00d0 53F8483C 	 ldr r3,[r3,#-72]
 363 00d4 7548     	 ldr r0,.L20+12
 364 00d6 9847     	 blx r3
 179:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding         + h_ax_lbl_comp_x, y + padding          - h_a
 365              	 .loc 1 179 0
 366 00d8 FB79     	 ldrb r3,[r7,#7]
 367 00da 9B00     	 lsls r3,r3,#2
 368 00dc 07F18002 	 add r2,r7,#128
 369 00e0 1344     	 add r3,r3,r2
 370 00e2 53F8504C 	 ldr r4,[r3,#-80]
 371 00e6 BA88     	 ldrh r2,[r7,#4]
 372 00e8 B7F89C30 	 ldrh r3,[r7,#156]
 373 00ec 1344     	 add r3,r3,r2
 374 00ee 9AB2     	 uxth r2,r3
 375 00f0 97F86D30 	 ldrb r3,[r7,#109]
 376 00f4 9BB2     	 uxth r3,r3
 377 00f6 1344     	 add r3,r3,r2
 378 00f8 9BB2     	 uxth r3,r3
 379 00fa 99B2     	 uxth r1,r3
 380 00fc 7A88     	 ldrh r2,[r7,#2]
 381 00fe B7F89C30 	 ldrh r3,[r7,#156]
 382 0102 1344     	 add r3,r3,r2
 383 0104 9AB2     	 uxth r2,r3
 384 0106 97F86C30 	 ldrb r3,[r7,#108]
 385 010a 9BB2     	 uxth r3,r3
 386 010c D31A     	 subs r3,r2,r3
 387 010e 9BB2     	 uxth r3,r3
 388 0110 9BB2     	 uxth r3,r3
 389 0112 09B2     	 sxth r1,r1
 390 0114 1AB2     	 sxth r2,r3
 391 0116 664B     	 ldr r3,.L20+16
 392 0118 0093     	 str r3,[sp]
 393 011a 0846     	 mov r0,r1
 394 011c 1146     	 mov r1,r2
 395 011e 1A22     	 movs r2,#26
 396 0120 0023     	 movs r3,#0
 397 0122 A047     	 blx r4
 180:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_text__fptr_arr[burst])(x + padding + width + v_ax_lbl_comp_x, y + padding + height - v_a
 398              	 .loc 1 180 0
 399 0124 FB79     	 ldrb r3,[r7,#7]
 400 0126 9B00     	 lsls r3,r3,#2
 401 0128 07F18002 	 add r2,r7,#128
 402 012c 1344     	 add r3,r3,r2
 403 012e 53F8504C 	 ldr r4,[r3,#-80]
 404 0132 BA88     	 ldrh r2,[r7,#4]
 405 0134 B7F89C30 	 ldrh r3,[r7,#156]
 406 0138 1344     	 add r3,r3,r2
 407 013a 9AB2     	 uxth r2,r3
 408 013c 3B88     	 ldrh r3,[r7]
 409 013e 1344     	 add r3,r3,r2
 410 0140 9AB2     	 uxth r2,r3
 411 0142 97F86B30 	 ldrb r3,[r7,#107]
 412 0146 9BB2     	 uxth r3,r3
 413 0148 1344     	 add r3,r3,r2
 414 014a 9BB2     	 uxth r3,r3
 415 014c 99B2     	 uxth r1,r3
 416 014e 7A88     	 ldrh r2,[r7,#2]
 417 0150 B7F89C30 	 ldrh r3,[r7,#156]
 418 0154 1344     	 add r3,r3,r2
 419 0156 9AB2     	 uxth r2,r3
 420 0158 B7F89830 	 ldrh r3,[r7,#152]
 421 015c 1344     	 add r3,r3,r2
 422 015e 9AB2     	 uxth r2,r3
 423 0160 97F86A30 	 ldrb r3,[r7,#106]
 424 0164 9BB2     	 uxth r3,r3
 425 0166 D31A     	 subs r3,r2,r3
 426 0168 9BB2     	 uxth r3,r3
 427 016a 9BB2     	 uxth r3,r3
 428 016c 09B2     	 sxth r1,r1
 429 016e 1AB2     	 sxth r2,r3
 430 0170 504B     	 ldr r3,.L20+20
 431 0172 0093     	 str r3,[sp]
 432 0174 0846     	 mov r0,r1
 433 0176 1146     	 mov r1,r2
 434 0178 1A22     	 movs r2,#26
 435 017a 0023     	 movs r3,#0
 436 017c A047     	 blx r4
 181:../Libraries/FT800-FT813-5.x/tft.c **** 
 182:../Libraries/FT800-FT813-5.x/tft.c **** 	/// AXES lines
 183:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 184:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINES);
 437              	 .loc 1 184 0
 438 017e FB79     	 ldrb r3,[r7,#7]
 439 0180 9B00     	 lsls r3,r3,#2
 440 0182 07F18002 	 add r2,r7,#128
 441 0186 1344     	 add r3,r3,r2
 442 0188 53F8483C 	 ldr r3,[r3,#-72]
 443 018c 4A48     	 ldr r0,.L20+24
 444 018e 9847     	 blx r3
 185:../Libraries/FT800-FT813-5.x/tft.c **** 	// left vertical line (Amplitude)
 186:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y));
 445              	 .loc 1 186 0
 446 0190 FB79     	 ldrb r3,[r7,#7]
 447 0192 9B00     	 lsls r3,r3,#2
 448 0194 07F18002 	 add r2,r7,#128
 449 0198 1344     	 add r3,r3,r2
 450 019a 53F8483C 	 ldr r3,[r3,#-72]
 451 019e B988     	 ldrh r1,[r7,#4]
 452 01a0 B7F89C20 	 ldrh r2,[r7,#156]
 453 01a4 0A44     	 add r2,r2,r1
 454 01a6 C2F30E02 	 ubfx r2,r2,#0,#15
 455 01aa D103     	 lsls r1,r2,#15
 456 01ac 7A88     	 ldrh r2,[r7,#2]
 457 01ae C2F30E02 	 ubfx r2,r2,#0,#15
 458 01b2 0A43     	 orrs r2,r2,r1
 459 01b4 42F08042 	 orr r2,r2,#1073741824
 460 01b8 1046     	 mov r0,r2
 461 01ba 9847     	 blx r3
 187:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding, y + padding + height + padding));
 462              	 .loc 1 187 0
 463 01bc FB79     	 ldrb r3,[r7,#7]
 464 01be 9B00     	 lsls r3,r3,#2
 465 01c0 07F18002 	 add r2,r7,#128
 466 01c4 1344     	 add r3,r3,r2
 467 01c6 53F8483C 	 ldr r3,[r3,#-72]
 468 01ca B988     	 ldrh r1,[r7,#4]
 469 01cc B7F89C20 	 ldrh r2,[r7,#156]
 470 01d0 0A44     	 add r2,r2,r1
 471 01d2 C2F30E02 	 ubfx r2,r2,#0,#15
 472 01d6 D103     	 lsls r1,r2,#15
 473 01d8 7888     	 ldrh r0,[r7,#2]
 474 01da B7F89C20 	 ldrh r2,[r7,#156]
 475 01de 1044     	 add r0,r0,r2
 476 01e0 B7F89820 	 ldrh r2,[r7,#152]
 477 01e4 1044     	 add r0,r0,r2
 478 01e6 B7F89C20 	 ldrh r2,[r7,#156]
 479 01ea 0244     	 add r2,r2,r0
 480 01ec C2F30E02 	 ubfx r2,r2,#0,#15
 481 01f0 0A43     	 orrs r2,r2,r1
 482 01f2 42F08042 	 orr r2,r2,#1073741824
 483 01f6 1046     	 mov r0,r2
 484 01f8 9847     	 blx r3
 188:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal line (Time)
 189:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x                            , y + padding + height ));
 485              	 .loc 1 189 0
 486 01fa FB79     	 ldrb r3,[r7,#7]
 487 01fc 9B00     	 lsls r3,r3,#2
 488 01fe 07F18002 	 add r2,r7,#128
 489 0202 1344     	 add r3,r3,r2
 490 0204 53F8483C 	 ldr r3,[r3,#-72]
 491 0208 BA88     	 ldrh r2,[r7,#4]
 492 020a C2F30E02 	 ubfx r2,r2,#0,#15
 493 020e D103     	 lsls r1,r2,#15
 494 0210 7888     	 ldrh r0,[r7,#2]
 495 0212 B7F89C20 	 ldrh r2,[r7,#156]
 496 0216 1044     	 add r0,r0,r2
 497 0218 B7F89820 	 ldrh r2,[r7,#152]
 498 021c 0244     	 add r2,r2,r0
 499 021e C2F30E02 	 ubfx r2,r2,#0,#15
 500 0222 0A43     	 orrs r2,r2,r1
 501 0224 42F08042 	 orr r2,r2,#1073741824
 502 0228 1046     	 mov r0,r2
 503 022a 9847     	 blx r3
 190:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding, y + padding + height ));
 504              	 .loc 1 190 0
 505 022c FB79     	 ldrb r3,[r7,#7]
 506 022e 9B00     	 lsls r3,r3,#2
 507 0230 07F18002 	 add r2,r7,#128
 508 0234 1344     	 add r3,r3,r2
 509 0236 53F8483C 	 ldr r3,[r3,#-72]
 510 023a B988     	 ldrh r1,[r7,#4]
 511 023c B7F89C20 	 ldrh r2,[r7,#156]
 512 0240 1144     	 add r1,r1,r2
 513 0242 3A88     	 ldrh r2,[r7]
 514 0244 1144     	 add r1,r1,r2
 515 0246 B7F89C20 	 ldrh r2,[r7,#156]
 516 024a 0A44     	 add r2,r2,r1
 517 024c C2F30E02 	 ubfx r2,r2,#0,#15
 518 0250 D103     	 lsls r1,r2,#15
 519 0252 7888     	 ldrh r0,[r7,#2]
 520 0254 B7F89C20 	 ldrh r2,[r7,#156]
 521 0258 1044     	 add r0,r0,r2
 522 025a B7F89820 	 ldrh r2,[r7,#152]
 523 025e 0244     	 add r2,r2,r0
 524 0260 C2F30E02 	 ubfx r2,r2,#0,#15
 525 0264 0A43     	 orrs r2,r2,r1
 526 0266 42F08042 	 orr r2,r2,#1073741824
 527 026a 1046     	 mov r0,r2
 528 026c 9847     	 blx r3
 191:../Libraries/FT800-FT813-5.x/tft.c **** 
 192:../Libraries/FT800-FT813-5.x/tft.c **** 	/// GRID lines
 193:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(LINE_WIDTH(grid_linewidth)); /* size is in 1/16 pixel */
 529              	 .loc 1 193 0
 530 026e FB79     	 ldrb r3,[r7,#7]
 531 0270 9B00     	 lsls r3,r3,#2
 532 0272 07F18002 	 add r2,r7,#128
 533 0276 1344     	 add r3,r3,r2
 534 0278 53F8483C 	 ldr r3,[r3,#-72]
 535 027c 97F86E20 	 ldrb r2,[r7,#110]
 536 0280 42F06062 	 orr r2,r2,#234881024
 537 0284 1046     	 mov r0,r2
 538 0286 9847     	 blx r3
 194:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_GRIDCOLOR);
 539              	 .loc 1 194 0
 540 0288 FB79     	 ldrb r3,[r7,#7]
 541 028a 9B00     	 lsls r3,r3,#2
 542 028c 07F18002 	 add r2,r7,#128
 543 0290 1344     	 add r3,r3,r2
 544 0292 53F8483C 	 ldr r3,[r3,#-72]
 545 0296 0948     	 ldr r0,.L20+28
 546 0298 9847     	 blx r3
 547              	.LBB2:
 195:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid
 196:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(v_grid_lines); i++){
 548              	 .loc 1 196 0
 549 029a 0123     	 movs r3,#1
 550 029c FB67     	 str r3,[r7,#124]
 551 029e 6FE0     	 b .L2
 552              	.L21:
 553              	 .align 2
 554              	.L20:
 555 02a0 10000000 	 .word .LC0
 556 02a4 18000000 	 .word .LC1
 557 02a8 20000000 	 .word .LC2
 558 02ac 0B1E3B04 	 .word 70983179
 559 02b0 00000000 	 .word .LC3
 560 02b4 04000000 	 .word .LC4
 561 02b8 0300001F 	 .word 520093699
 562 02bc E2DAC504 	 .word 80075490
 563              	.L3:
 197:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 198:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 564              	 .loc 1 198 0 discriminator 3
 565 02c0 FB79     	 ldrb r3,[r7,#7]
 566 02c2 9B00     	 lsls r3,r3,#2
 567 02c4 07F18002 	 add r2,r7,#128
 568 02c8 1344     	 add r3,r3,r2
 569 02ca 53F8484C 	 ldr r4,[r3,#-72]
 570 02ce BA88     	 ldrh r2,[r7,#4]
 571 02d0 B7F89C30 	 ldrh r3,[r7,#156]
 572 02d4 D518     	 adds r5,r2,r3
 573 02d6 F86F     	 ldr r0,[r7,#124]
 574 02d8 FFF7FEFF 	 bl __aeabi_i2d
 575 02dc 0246     	 mov r2,r0
 576 02de 0B46     	 mov r3,r1
 577 02e0 1046     	 mov r0,r2
 578 02e2 1946     	 mov r1,r3
 579 02e4 D7E91623 	 ldrd r2,[r7,#88]
 580 02e8 FFF7FEFF 	 bl __aeabi_dmul
 581 02ec 0246     	 mov r2,r0
 582 02ee 0B46     	 mov r3,r1
 583 02f0 1046     	 mov r0,r2
 584 02f2 1946     	 mov r1,r3
 585 02f4 FFF7FEFF 	 bl __aeabi_d2uiz
 586 02f8 0346     	 mov r3,r0
 587 02fa 9BB2     	 uxth r3,r3
 588 02fc 2B44     	 add r3,r3,r5
 589 02fe C3F30E03 	 ubfx r3,r3,#0,#15
 590 0302 DA03     	 lsls r2,r3,#15
 591 0304 7988     	 ldrh r1,[r7,#2]
 592 0306 B7F89C30 	 ldrh r3,[r7,#156]
 593 030a 0B44     	 add r3,r3,r1
 594 030c C3F30E03 	 ubfx r3,r3,#0,#15
 595 0310 1343     	 orrs r3,r3,r2
 596 0312 43F08043 	 orr r3,r3,#1073741824
 597 0316 1846     	 mov r0,r3
 598 0318 A047     	 blx r4
 199:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + (uint16_t)(widthPerSection*(double)i), y + 
 599              	 .loc 1 199 0 discriminator 3
 600 031a FB79     	 ldrb r3,[r7,#7]
 601 031c 9B00     	 lsls r3,r3,#2
 602 031e 07F18002 	 add r2,r7,#128
 603 0322 1344     	 add r3,r3,r2
 604 0324 53F8484C 	 ldr r4,[r3,#-72]
 605 0328 BA88     	 ldrh r2,[r7,#4]
 606 032a B7F89C30 	 ldrh r3,[r7,#156]
 607 032e D518     	 adds r5,r2,r3
 608 0330 F86F     	 ldr r0,[r7,#124]
 609 0332 FFF7FEFF 	 bl __aeabi_i2d
 610 0336 0246     	 mov r2,r0
 611 0338 0B46     	 mov r3,r1
 612 033a 1046     	 mov r0,r2
 613 033c 1946     	 mov r1,r3
 614 033e D7E91623 	 ldrd r2,[r7,#88]
 615 0342 FFF7FEFF 	 bl __aeabi_dmul
 616 0346 0246     	 mov r2,r0
 617 0348 0B46     	 mov r3,r1
 618 034a 1046     	 mov r0,r2
 619 034c 1946     	 mov r1,r3
 620 034e FFF7FEFF 	 bl __aeabi_d2uiz
 621 0352 0346     	 mov r3,r0
 622 0354 9BB2     	 uxth r3,r3
 623 0356 2B44     	 add r3,r3,r5
 624 0358 C3F30E03 	 ubfx r3,r3,#0,#15
 625 035c DA03     	 lsls r2,r3,#15
 626 035e 7988     	 ldrh r1,[r7,#2]
 627 0360 B7F89C30 	 ldrh r3,[r7,#156]
 628 0364 1944     	 add r1,r1,r3
 629 0366 B7F89830 	 ldrh r3,[r7,#152]
 630 036a 0B44     	 add r3,r3,r1
 631 036c C3F30E03 	 ubfx r3,r3,#0,#15
 632 0370 1343     	 orrs r3,r3,r2
 633 0372 43F08043 	 orr r3,r3,#1073741824
 634 0376 1846     	 mov r0,r3
 635 0378 A047     	 blx r4
 196:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 636              	 .loc 1 196 0 discriminator 3
 637 037a FB6F     	 ldr r3,[r7,#124]
 638 037c 0133     	 adds r3,r3,#1
 639 037e FB67     	 str r3,[r7,#124]
 640              	.L2:
 196:../Libraries/FT800-FT813-5.x/tft.c **** 		// y-position at upper and lower corner; x-position from left with padding and width of graph div
 641              	 .loc 1 196 0 is_stmt 0 discriminator 1
 642 0380 D7E92E01 	 ldrd r0,[r7,#184]
 643 0384 FFF7FEFF 	 bl floor
 644 0388 0246     	 mov r2,r0
 645 038a 0B46     	 mov r3,r1
 646 038c 1046     	 mov r0,r2
 647 038e 1946     	 mov r1,r3
 648 0390 FFF7FEFF 	 bl __aeabi_d2iz
 649 0394 0246     	 mov r2,r0
 650 0396 FB6F     	 ldr r3,[r7,#124]
 651 0398 9A42     	 cmp r2,r3
 652 039a 91DA     	 bge .L3
 653              	.LBE2:
 654              	.LBB3:
 200:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 201:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid
 202:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){
 655              	 .loc 1 202 0 is_stmt 1
 656 039c 0123     	 movs r3,#1
 657 039e BB67     	 str r3,[r7,#120]
 658 03a0 64E0     	 b .L4
 659              	.L5:
 203:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 204:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding        , y + padding + height - (uint16_t)(he
 660              	 .loc 1 204 0 discriminator 3
 661 03a2 FB79     	 ldrb r3,[r7,#7]
 662 03a4 9B00     	 lsls r3,r3,#2
 663 03a6 07F18002 	 add r2,r7,#128
 664 03aa 1344     	 add r3,r3,r2
 665 03ac 53F8484C 	 ldr r4,[r3,#-72]
 666 03b0 BA88     	 ldrh r2,[r7,#4]
 667 03b2 B7F89C30 	 ldrh r3,[r7,#156]
 668 03b6 1344     	 add r3,r3,r2
 669 03b8 C3F30E03 	 ubfx r3,r3,#0,#15
 670 03bc DD03     	 lsls r5,r3,#15
 671 03be 7A88     	 ldrh r2,[r7,#2]
 672 03c0 B7F89C30 	 ldrh r3,[r7,#156]
 673 03c4 1A44     	 add r2,r2,r3
 674 03c6 B7F89830 	 ldrh r3,[r7,#152]
 675 03ca D618     	 adds r6,r2,r3
 676 03cc B86F     	 ldr r0,[r7,#120]
 677 03ce FFF7FEFF 	 bl __aeabi_i2d
 678 03d2 0246     	 mov r2,r0
 679 03d4 0B46     	 mov r3,r1
 680 03d6 1046     	 mov r0,r2
 681 03d8 1946     	 mov r1,r3
 682 03da D7E91423 	 ldrd r2,[r7,#80]
 683 03de FFF7FEFF 	 bl __aeabi_dmul
 684 03e2 0246     	 mov r2,r0
 685 03e4 0B46     	 mov r3,r1
 686 03e6 1046     	 mov r0,r2
 687 03e8 1946     	 mov r1,r3
 688 03ea FFF7FEFF 	 bl __aeabi_d2uiz
 689 03ee 0346     	 mov r3,r0
 690 03f0 9BB2     	 uxth r3,r3
 691 03f2 F31A     	 subs r3,r6,r3
 692 03f4 C3F30E03 	 ubfx r3,r3,#0,#15
 693 03f8 2B43     	 orrs r3,r3,r5
 694 03fa 43F08043 	 orr r3,r3,#1073741824
 695 03fe 1846     	 mov r0,r3
 696 0400 A047     	 blx r4
 205:../Libraries/FT800-FT813-5.x/tft.c **** 		(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width, y + padding + height - (uint16_t)(he
 697              	 .loc 1 205 0 discriminator 3
 698 0402 FB79     	 ldrb r3,[r7,#7]
 699 0404 9B00     	 lsls r3,r3,#2
 700 0406 07F18002 	 add r2,r7,#128
 701 040a 1344     	 add r3,r3,r2
 702 040c 53F8484C 	 ldr r4,[r3,#-72]
 703 0410 BA88     	 ldrh r2,[r7,#4]
 704 0412 B7F89C30 	 ldrh r3,[r7,#156]
 705 0416 1A44     	 add r2,r2,r3
 706 0418 3B88     	 ldrh r3,[r7]
 707 041a 1344     	 add r3,r3,r2
 708 041c C3F30E03 	 ubfx r3,r3,#0,#15
 709 0420 DD03     	 lsls r5,r3,#15
 710 0422 7A88     	 ldrh r2,[r7,#2]
 711 0424 B7F89C30 	 ldrh r3,[r7,#156]
 712 0428 1A44     	 add r2,r2,r3
 713 042a B7F89830 	 ldrh r3,[r7,#152]
 714 042e D618     	 adds r6,r2,r3
 715 0430 B86F     	 ldr r0,[r7,#120]
 716 0432 FFF7FEFF 	 bl __aeabi_i2d
 717 0436 0246     	 mov r2,r0
 718 0438 0B46     	 mov r3,r1
 719 043a 1046     	 mov r0,r2
 720 043c 1946     	 mov r1,r3
 721 043e D7E91423 	 ldrd r2,[r7,#80]
 722 0442 FFF7FEFF 	 bl __aeabi_dmul
 723 0446 0246     	 mov r2,r0
 724 0448 0B46     	 mov r3,r1
 725 044a 1046     	 mov r0,r2
 726 044c 1946     	 mov r1,r3
 727 044e FFF7FEFF 	 bl __aeabi_d2uiz
 728 0452 0346     	 mov r3,r0
 729 0454 9BB2     	 uxth r3,r3
 730 0456 F31A     	 subs r3,r6,r3
 731 0458 C3F30E03 	 ubfx r3,r3,#0,#15
 732 045c 2B43     	 orrs r3,r3,r5
 733 045e 43F08043 	 orr r3,r3,#1073741824
 734 0462 1846     	 mov r0,r3
 735 0464 A047     	 blx r4
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 736              	 .loc 1 202 0 discriminator 3
 737 0466 BB6F     	 ldr r3,[r7,#120]
 738 0468 0133     	 adds r3,r3,#1
 739 046a BB67     	 str r3,[r7,#120]
 740              	.L4:
 202:../Libraries/FT800-FT813-5.x/tft.c **** 		// x-position at left and right corner; y-position from top y, padding and height divided by numb
 741              	 .loc 1 202 0 is_stmt 0 discriminator 1
 742 046c D7E92C01 	 ldrd r0,[r7,#176]
 743 0470 FFF7FEFF 	 bl floor
 744 0474 0246     	 mov r2,r0
 745 0476 0B46     	 mov r3,r1
 746 0478 1046     	 mov r0,r2
 747 047a 1946     	 mov r1,r3
 748 047c FFF7FEFF 	 bl __aeabi_d2iz
 749 0480 0246     	 mov r2,r0
 750 0482 BB6F     	 ldr r3,[r7,#120]
 751 0484 9A42     	 cmp r2,r3
 752 0486 8CDA     	 bge .L5
 753              	.LBE3:
 206:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 207:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 754              	 .loc 1 207 0 is_stmt 1
 755 0488 FB79     	 ldrb r3,[r7,#7]
 756 048a 9B00     	 lsls r3,r3,#2
 757 048c 07F18002 	 add r2,r7,#128
 758 0490 1344     	 add r3,r3,r2
 759 0492 53F8483C 	 ldr r3,[r3,#-72]
 760 0496 4FF00450 	 mov r0,#553648128
 761 049a 9847     	 blx r3
 208:../Libraries/FT800-FT813-5.x/tft.c **** 
 209:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Grid VALUES
 210:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 762              	 .loc 1 210 0
 763 049c FB79     	 ldrb r3,[r7,#7]
 764 049e 9B00     	 lsls r3,r3,#2
 765 04a0 07F18002 	 add r2,r7,#128
 766 04a4 1344     	 add r3,r3,r2
 767 04a6 53F8483C 	 ldr r3,[r3,#-72]
 768 04aa A448     	 ldr r0,.L22
 769 04ac 9847     	 blx r3
 770              	.LBB4:
 211:../Libraries/FT800-FT813-5.x/tft.c **** 	// vertical grid (time)
 212:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)ceil(v_grid_lines); i++){ // "ceil" and "i-1" at val -> print also the 0 valu
 771              	 .loc 1 212 0
 772 04ae 0123     	 movs r3,#1
 773 04b0 7B67     	 str r3,[r7,#116]
 774 04b2 BEE0     	 b .L6
 775              	.L10:
 776              	.LBB5:
 213:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 214:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (t_max/v_grid_lines*(double)(i-1));
 777              	 .loc 1 214 0
 778 04b4 D7E92A01 	 ldrd r0,[r7,#168]
 779 04b8 D7E92E23 	 ldrd r2,[r7,#184]
 780 04bc FFF7FEFF 	 bl __aeabi_ddiv
 781 04c0 0246     	 mov r2,r0
 782 04c2 0B46     	 mov r3,r1
 783 04c4 1446     	 mov r4,r2
 784 04c6 1D46     	 mov r5,r3
 785 04c8 7B6F     	 ldr r3,[r7,#116]
 786 04ca 013B     	 subs r3,r3,#1
 787 04cc 1846     	 mov r0,r3
 788 04ce FFF7FEFF 	 bl __aeabi_i2d
 789 04d2 0246     	 mov r2,r0
 790 04d4 0B46     	 mov r3,r1
 791 04d6 2046     	 mov r0,r4
 792 04d8 2946     	 mov r1,r5
 793 04da FFF7FEFF 	 bl __aeabi_dmul
 794 04de 0246     	 mov r2,r0
 795 04e0 0B46     	 mov r3,r1
 796 04e2 C7E91223 	 strd r2,[r7,#72]
 215:../Libraries/FT800-FT813-5.x/tft.c **** 
 216:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 217:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 797              	 .loc 1 217 0
 798 04e6 D7E91201 	 ldrd r0,[r7,#72]
 799 04ea FFF7FEFF 	 bl __aeabi_d2uiz
 800 04ee 0346     	 mov r3,r0
 801 04f0 1846     	 mov r0,r3
 802 04f2 FFF7FEFF 	 bl __aeabi_ui2d
 803 04f6 0246     	 mov r2,r0
 804 04f8 0B46     	 mov r3,r1
 805 04fa D7E91201 	 ldrd r0,[r7,#72]
 806 04fe FFF7FEFF 	 bl __aeabi_dsub
 807 0502 0246     	 mov r2,r0
 808 0504 0B46     	 mov r3,r1
 809 0506 1046     	 mov r0,r2
 810 0508 1946     	 mov r1,r3
 811 050a 4FF00002 	 mov r2,#0
 812 050e 4FF00003 	 mov r3,#0
 813 0512 FFF7FEFF 	 bl __aeabi_dcmpeq
 814 0516 0346     	 mov r3,r0
 815 0518 002B     	 cmp r3,#0
 816 051a 41D0     	 beq .L18
 218:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_g
 817              	 .loc 1 218 0
 818 051c FB79     	 ldrb r3,[r7,#7]
 819 051e 9B00     	 lsls r3,r3,#2
 820 0520 07F18002 	 add r2,r7,#128
 821 0524 1344     	 add r3,r3,r2
 822 0526 53F8584C 	 ldr r4,[r3,#-88]
 823 052a BA88     	 ldrh r2,[r7,#4]
 824 052c B7F89C30 	 ldrh r3,[r7,#156]
 825 0530 1344     	 add r3,r3,r2
 826 0532 9DB2     	 uxth r5,r3
 827 0534 7B6F     	 ldr r3,[r7,#116]
 828 0536 013B     	 subs r3,r3,#1
 829 0538 1846     	 mov r0,r3
 830 053a FFF7FEFF 	 bl __aeabi_i2d
 831 053e 0246     	 mov r2,r0
 832 0540 0B46     	 mov r3,r1
 833 0542 1046     	 mov r0,r2
 834 0544 1946     	 mov r1,r3
 835 0546 D7E91623 	 ldrd r2,[r7,#88]
 836 054a FFF7FEFF 	 bl __aeabi_dmul
 837 054e 0246     	 mov r2,r0
 838 0550 0B46     	 mov r3,r1
 839 0552 1046     	 mov r0,r2
 840 0554 1946     	 mov r1,r3
 841 0556 FFF7FEFF 	 bl __aeabi_d2uiz
 842 055a 0346     	 mov r3,r0
 843 055c 9BB2     	 uxth r3,r3
 844 055e 2B44     	 add r3,r3,r5
 845 0560 9AB2     	 uxth r2,r3
 846 0562 97F86930 	 ldrb r3,[r7,#105]
 847 0566 9BB2     	 uxth r3,r3
 848 0568 1344     	 add r3,r3,r2
 849 056a 9BB2     	 uxth r3,r3
 850 056c 9EB2     	 uxth r6,r3
 851 056e 7A88     	 ldrh r2,[r7,#2]
 852 0570 B7F89830 	 ldrh r3,[r7,#152]
 853 0574 1344     	 add r3,r3,r2
 854 0576 9AB2     	 uxth r2,r3
 855 0578 97F86830 	 ldrb r3,[r7,#104]
 856 057c 9BB2     	 uxth r3,r3
 857 057e 1344     	 add r3,r3,r2
 858 0580 9BB2     	 uxth r3,r3
 859 0582 9DB2     	 uxth r5,r3
 860 0584 D7E91201 	 ldrd r0,[r7,#72]
 861 0588 FFF7FEFF 	 bl __aeabi_d2iz
 862 058c 0146     	 mov r1,r0
 863 058e 32B2     	 sxth r2,r6
 864 0590 2BB2     	 sxth r3,r5
 865 0592 0091     	 str r1,[sp]
 866 0594 1046     	 mov r0,r2
 867 0596 1946     	 mov r1,r3
 868 0598 1422     	 movs r2,#20
 869 059a 0023     	 movs r3,#0
 870 059c A047     	 blx r4
 871 059e 45E0     	 b .L9
 872              	.L18:
 873              	.LBB6:
 219:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 220:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 221:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 222:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 874              	 .loc 1 222 0
 875 05a0 07F10803 	 add r3,r7,#8
 876 05a4 1846     	 mov r0,r3
 877 05a6 6649     	 ldr r1,.L22+4
 878 05a8 D7E91223 	 ldrd r2,[r7,#72]
 879 05ac FFF7FEFF 	 bl sprintf
 223:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x + padding + (uint16_t)(widthPerSection*(double)(i-1)) + h_gri
 880              	 .loc 1 223 0
 881 05b0 FB79     	 ldrb r3,[r7,#7]
 882 05b2 9B00     	 lsls r3,r3,#2
 883 05b4 07F18002 	 add r2,r7,#128
 884 05b8 1344     	 add r3,r3,r2
 885 05ba 53F8504C 	 ldr r4,[r3,#-80]
 886 05be BA88     	 ldrh r2,[r7,#4]
 887 05c0 B7F89C30 	 ldrh r3,[r7,#156]
 888 05c4 1344     	 add r3,r3,r2
 889 05c6 9DB2     	 uxth r5,r3
 890 05c8 7B6F     	 ldr r3,[r7,#116]
 891 05ca 013B     	 subs r3,r3,#1
 892 05cc 1846     	 mov r0,r3
 893 05ce FFF7FEFF 	 bl __aeabi_i2d
 894 05d2 0246     	 mov r2,r0
 895 05d4 0B46     	 mov r3,r1
 896 05d6 1046     	 mov r0,r2
 897 05d8 1946     	 mov r1,r3
 898 05da D7E91623 	 ldrd r2,[r7,#88]
 899 05de FFF7FEFF 	 bl __aeabi_dmul
 900 05e2 0246     	 mov r2,r0
 901 05e4 0B46     	 mov r3,r1
 902 05e6 1046     	 mov r0,r2
 903 05e8 1946     	 mov r1,r3
 904 05ea FFF7FEFF 	 bl __aeabi_d2uiz
 905 05ee 0346     	 mov r3,r0
 906 05f0 9BB2     	 uxth r3,r3
 907 05f2 2B44     	 add r3,r3,r5
 908 05f4 9AB2     	 uxth r2,r3
 909 05f6 97F86930 	 ldrb r3,[r7,#105]
 910 05fa 9BB2     	 uxth r3,r3
 911 05fc 1344     	 add r3,r3,r2
 912 05fe 9BB2     	 uxth r3,r3
 913 0600 99B2     	 uxth r1,r3
 914 0602 7A88     	 ldrh r2,[r7,#2]
 915 0604 B7F89830 	 ldrh r3,[r7,#152]
 916 0608 1344     	 add r3,r3,r2
 917 060a 9AB2     	 uxth r2,r3
 918 060c 97F86830 	 ldrb r3,[r7,#104]
 919 0610 9BB2     	 uxth r3,r3
 920 0612 1344     	 add r3,r3,r2
 921 0614 9BB2     	 uxth r3,r3
 922 0616 9BB2     	 uxth r3,r3
 923 0618 09B2     	 sxth r1,r1
 924 061a 1AB2     	 sxth r2,r3
 925 061c 07F10803 	 add r3,r7,#8
 926 0620 0093     	 str r3,[sp]
 927 0622 0846     	 mov r0,r1
 928 0624 1146     	 mov r1,r2
 929 0626 1422     	 movs r2,#20
 930 0628 0023     	 movs r3,#0
 931 062a A047     	 blx r4
 932              	.L9:
 933              	.LBE6:
 934              	.LBE5:
 212:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 935              	 .loc 1 212 0 discriminator 2
 936 062c 7B6F     	 ldr r3,[r7,#116]
 937 062e 0133     	 adds r3,r3,#1
 938 0630 7B67     	 str r3,[r7,#116]
 939              	.L6:
 212:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc time at current vertical line
 940              	 .loc 1 212 0 is_stmt 0 discriminator 1
 941 0632 D7E92E01 	 ldrd r0,[r7,#184]
 942 0636 FFF7FEFF 	 bl ceil
 943 063a 0246     	 mov r2,r0
 944 063c 0B46     	 mov r3,r1
 945 063e 1046     	 mov r0,r2
 946 0640 1946     	 mov r1,r3
 947 0642 FFF7FEFF 	 bl __aeabi_d2iz
 948 0646 0246     	 mov r2,r0
 949 0648 7B6F     	 ldr r3,[r7,#116]
 950 064a 9A42     	 cmp r2,r3
 951 064c BFF632AF 	 bge .L10
 952              	.LBE4:
 953              	.LBB7:
 224:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 225:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 226:../Libraries/FT800-FT813-5.x/tft.c **** 	// horizontal grid (amplitude)
 227:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 228:../Libraries/FT800-FT813-5.x/tft.c **** 	for(int i=1; i<=(int)floor(h_grid_lines); i++){  // "floor" and "i" at val -> don't print the 0 va
 954              	 .loc 1 228 0 is_stmt 1
 955 0650 0123     	 movs r3,#1
 956 0652 3B67     	 str r3,[r7,#112]
 957 0654 BDE0     	 b .L11
 958              	.L15:
 959              	.LBB8:
 229:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 230:../Libraries/FT800-FT813-5.x/tft.c **** 		double val = (amp_max/h_grid_lines*(double)i);
 960              	 .loc 1 230 0
 961 0656 D7E92801 	 ldrd r0,[r7,#160]
 962 065a D7E92C23 	 ldrd r2,[r7,#176]
 963 065e FFF7FEFF 	 bl __aeabi_ddiv
 964 0662 0246     	 mov r2,r0
 965 0664 0B46     	 mov r3,r1
 966 0666 1446     	 mov r4,r2
 967 0668 1D46     	 mov r5,r3
 968 066a 386F     	 ldr r0,[r7,#112]
 969 066c FFF7FEFF 	 bl __aeabi_i2d
 970 0670 0246     	 mov r2,r0
 971 0672 0B46     	 mov r3,r1
 972 0674 2046     	 mov r0,r4
 973 0676 2946     	 mov r1,r5
 974 0678 FFF7FEFF 	 bl __aeabi_dmul
 975 067c 0246     	 mov r2,r0
 976 067e 0B46     	 mov r3,r1
 977 0680 C7E91023 	 strd r2,[r7,#64]
 231:../Libraries/FT800-FT813-5.x/tft.c **** 
 232:../Libraries/FT800-FT813-5.x/tft.c **** 		// If its a pure integer write it as number, else convert and write it to string
 233:../Libraries/FT800-FT813-5.x/tft.c **** 		if((val - (double)((uint32_t)val)) == 0){ //val % 1.0 == 0
 978              	 .loc 1 233 0
 979 0684 D7E91001 	 ldrd r0,[r7,#64]
 980 0688 FFF7FEFF 	 bl __aeabi_d2uiz
 981 068c 0346     	 mov r3,r0
 982 068e 1846     	 mov r0,r3
 983 0690 FFF7FEFF 	 bl __aeabi_ui2d
 984 0694 0246     	 mov r2,r0
 985 0696 0B46     	 mov r3,r1
 986 0698 D7E91001 	 ldrd r0,[r7,#64]
 987 069c FFF7FEFF 	 bl __aeabi_dsub
 988 06a0 0246     	 mov r2,r0
 989 06a2 0B46     	 mov r3,r1
 990 06a4 1046     	 mov r0,r2
 991 06a6 1946     	 mov r1,r3
 992 06a8 4FF00002 	 mov r2,#0
 993 06ac 4FF00003 	 mov r3,#0
 994 06b0 FFF7FEFF 	 bl __aeabi_dcmpeq
 995 06b4 0346     	 mov r3,r0
 996 06b6 002B     	 cmp r3,#0
 997 06b8 44D0     	 beq .L19
 234:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_number__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(heig
 998              	 .loc 1 234 0
 999 06ba FB79     	 ldrb r3,[r7,#7]
 1000 06bc 9B00     	 lsls r3,r3,#2
 1001 06be 07F18002 	 add r2,r7,#128
 1002 06c2 1344     	 add r3,r3,r2
 1003 06c4 53F8584C 	 ldr r4,[r3,#-88]
 1004 06c8 97F86730 	 ldrb r3,[r7,#103]
 1005 06cc 9BB2     	 uxth r3,r3
 1006 06ce BA88     	 ldrh r2,[r7,#4]
 1007 06d0 D31A     	 subs r3,r2,r3
 1008 06d2 9BB2     	 uxth r3,r3
 1009 06d4 9EB2     	 uxth r6,r3
 1010 06d6 7A88     	 ldrh r2,[r7,#2]
 1011 06d8 B7F89C30 	 ldrh r3,[r7,#156]
 1012 06dc 1344     	 add r3,r3,r2
 1013 06de 9AB2     	 uxth r2,r3
 1014 06e0 B7F89830 	 ldrh r3,[r7,#152]
 1015 06e4 1344     	 add r3,r3,r2
 1016 06e6 9DB2     	 uxth r5,r3
 1017 06e8 386F     	 ldr r0,[r7,#112]
 1018 06ea FFF7FEFF 	 bl __aeabi_i2d
 1019 06ee 0246     	 mov r2,r0
 1020 06f0 0B46     	 mov r3,r1
 1021 06f2 1046     	 mov r0,r2
 1022 06f4 1946     	 mov r1,r3
 1023 06f6 D7E91423 	 ldrd r2,[r7,#80]
 1024 06fa FFF7FEFF 	 bl __aeabi_dmul
 1025 06fe 0246     	 mov r2,r0
 1026 0700 0B46     	 mov r3,r1
 1027 0702 1046     	 mov r0,r2
 1028 0704 1946     	 mov r1,r3
 1029 0706 FFF7FEFF 	 bl __aeabi_d2uiz
 1030 070a 0346     	 mov r3,r0
 1031 070c 9BB2     	 uxth r3,r3
 1032 070e EB1A     	 subs r3,r5,r3
 1033 0710 9AB2     	 uxth r2,r3
 1034 0712 97F86630 	 ldrb r3,[r7,#102]
 1035 0716 9BB2     	 uxth r3,r3
 1036 0718 1344     	 add r3,r3,r2
 1037 071a 9BB2     	 uxth r3,r3
 1038 071c 9DB2     	 uxth r5,r3
 1039 071e D7E91001 	 ldrd r0,[r7,#64]
 1040 0722 FFF7FEFF 	 bl __aeabi_d2iz
 1041 0726 0146     	 mov r1,r0
 1042 0728 32B2     	 sxth r2,r6
 1043 072a 2BB2     	 sxth r3,r5
 1044 072c 0091     	 str r1,[sp]
 1045 072e 1046     	 mov r0,r2
 1046 0730 1946     	 mov r1,r3
 1047 0732 1422     	 movs r2,#20
 1048 0734 0023     	 movs r3,#0
 1049 0736 A047     	 blx r4
 1050 0738 48E0     	 b .L14
 1051              	.L23:
 1052 073a 00BF     	 .align 2
 1053              	.L22:
 1054 073c 0B1E3B04 	 .word 70983179
 1055 0740 08000000 	 .word .LC5
 1056              	.L19:
 1057              	.LBB9:
 235:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 236:../Libraries/FT800-FT813-5.x/tft.c **** 		else{
 237:../Libraries/FT800-FT813-5.x/tft.c **** 			char buffer[32]; // buffer for double to string conversion
 238:../Libraries/FT800-FT813-5.x/tft.c **** 			sprintf(buffer, "%.1lf", val); // double to string conversion
 1058              	 .loc 1 238 0
 1059 0744 07F10803 	 add r3,r7,#8
 1060 0748 1846     	 mov r0,r3
 1061 074a 9C49     	 ldr r1,.L24
 1062 074c D7E91023 	 ldrd r2,[r7,#64]
 1063 0750 FFF7FEFF 	 bl sprintf
 239:../Libraries/FT800-FT813-5.x/tft.c **** 			(*EVE_cmd_text__fptr_arr[burst])(x - v_grid_lbl_comp_x, y + padding + height - (uint16_t)(height
 1064              	 .loc 1 239 0
 1065 0754 FB79     	 ldrb r3,[r7,#7]
 1066 0756 9B00     	 lsls r3,r3,#2
 1067 0758 07F18002 	 add r2,r7,#128
 1068 075c 1344     	 add r3,r3,r2
 1069 075e 53F8504C 	 ldr r4,[r3,#-80]
 1070 0762 97F86730 	 ldrb r3,[r7,#103]
 1071 0766 9BB2     	 uxth r3,r3
 1072 0768 BA88     	 ldrh r2,[r7,#4]
 1073 076a D31A     	 subs r3,r2,r3
 1074 076c 9BB2     	 uxth r3,r3
 1075 076e 9EB2     	 uxth r6,r3
 1076 0770 7A88     	 ldrh r2,[r7,#2]
 1077 0772 B7F89C30 	 ldrh r3,[r7,#156]
 1078 0776 1344     	 add r3,r3,r2
 1079 0778 9AB2     	 uxth r2,r3
 1080 077a B7F89830 	 ldrh r3,[r7,#152]
 1081 077e 1344     	 add r3,r3,r2
 1082 0780 9DB2     	 uxth r5,r3
 1083 0782 386F     	 ldr r0,[r7,#112]
 1084 0784 FFF7FEFF 	 bl __aeabi_i2d
 1085 0788 0246     	 mov r2,r0
 1086 078a 0B46     	 mov r3,r1
 1087 078c 1046     	 mov r0,r2
 1088 078e 1946     	 mov r1,r3
 1089 0790 D7E91423 	 ldrd r2,[r7,#80]
 1090 0794 FFF7FEFF 	 bl __aeabi_dmul
 1091 0798 0246     	 mov r2,r0
 1092 079a 0B46     	 mov r3,r1
 1093 079c 1046     	 mov r0,r2
 1094 079e 1946     	 mov r1,r3
 1095 07a0 FFF7FEFF 	 bl __aeabi_d2uiz
 1096 07a4 0346     	 mov r3,r0
 1097 07a6 9BB2     	 uxth r3,r3
 1098 07a8 EB1A     	 subs r3,r5,r3
 1099 07aa 9AB2     	 uxth r2,r3
 1100 07ac 97F86630 	 ldrb r3,[r7,#102]
 1101 07b0 9BB2     	 uxth r3,r3
 1102 07b2 1344     	 add r3,r3,r2
 1103 07b4 9BB2     	 uxth r3,r3
 1104 07b6 9BB2     	 uxth r3,r3
 1105 07b8 31B2     	 sxth r1,r6
 1106 07ba 1AB2     	 sxth r2,r3
 1107 07bc 07F10803 	 add r3,r7,#8
 1108 07c0 0093     	 str r3,[sp]
 1109 07c2 0846     	 mov r0,r1
 1110 07c4 1146     	 mov r1,r2
 1111 07c6 1422     	 movs r2,#20
 1112 07c8 0023     	 movs r3,#0
 1113 07ca A047     	 blx r4
 1114              	.L14:
 1115              	.LBE9:
 1116              	.LBE8:
 228:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1117              	 .loc 1 228 0 discriminator 2
 1118 07cc 3B6F     	 ldr r3,[r7,#112]
 1119 07ce 0133     	 adds r3,r3,#1
 1120 07d0 3B67     	 str r3,[r7,#112]
 1121              	.L11:
 228:../Libraries/FT800-FT813-5.x/tft.c **** 		// Calc amplitude at current horizontal line
 1122              	 .loc 1 228 0 is_stmt 0 discriminator 1
 1123 07d2 D7E92C01 	 ldrd r0,[r7,#176]
 1124 07d6 FFF7FEFF 	 bl floor
 1125 07da 0246     	 mov r2,r0
 1126 07dc 0B46     	 mov r3,r1
 1127 07de 1046     	 mov r0,r2
 1128 07e0 1946     	 mov r1,r3
 1129 07e2 FFF7FEFF 	 bl __aeabi_d2iz
 1130 07e6 0246     	 mov r2,r0
 1131 07e8 3B6F     	 ldr r3,[r7,#112]
 1132 07ea 9A42     	 cmp r2,r3
 1133 07ec BFF633AF 	 bge .L15
 1134              	.LBE7:
 240:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 241:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 242:../Libraries/FT800-FT813-5.x/tft.c **** 
 243:../Libraries/FT800-FT813-5.x/tft.c **** 	/// ARROWS on axes
 244:../Libraries/FT800-FT813-5.x/tft.c **** 	//(*EVE_cmd_dl__fptr_arr[burst])(DL_COLOR_RGB | GRAPH_AXISCOLOR);
 245:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom vertical arrow (Amplitude)
 246:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1135              	 .loc 1 246 0 is_stmt 1
 1136 07f0 FB79     	 ldrb r3,[r7,#7]
 1137 07f2 9B00     	 lsls r3,r3,#2
 1138 07f4 07F18002 	 add r2,r7,#128
 1139 07f8 1344     	 add r3,r3,r2
 1140 07fa 53F8483C 	 ldr r3,[r3,#-72]
 1141 07fe 7048     	 ldr r0,.L24+4
 1142 0800 9847     	 blx r3
 247:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + arrow_offset, y + arrow_offset ));
 1143              	 .loc 1 247 0
 1144 0802 FB79     	 ldrb r3,[r7,#7]
 1145 0804 9B00     	 lsls r3,r3,#2
 1146 0806 07F18002 	 add r2,r7,#128
 1147 080a 1344     	 add r3,r3,r2
 1148 080c 53F8483C 	 ldr r3,[r3,#-72]
 1149 0810 B988     	 ldrh r1,[r7,#4]
 1150 0812 B7F89C20 	 ldrh r2,[r7,#156]
 1151 0816 1144     	 add r1,r1,r2
 1152 0818 97F86F20 	 ldrb r2,[r7,#111]
 1153 081c 0A44     	 add r2,r2,r1
 1154 081e C2F30E02 	 ubfx r2,r2,#0,#15
 1155 0822 D103     	 lsls r1,r2,#15
 1156 0824 7888     	 ldrh r0,[r7,#2]
 1157 0826 97F86F20 	 ldrb r2,[r7,#111]
 1158 082a 0244     	 add r2,r2,r0
 1159 082c C2F30E02 	 ubfx r2,r2,#0,#15
 1160 0830 0A43     	 orrs r2,r2,r1
 1161 0832 42F08042 	 orr r2,r2,#1073741824
 1162 0836 1046     	 mov r0,r2
 1163 0838 9847     	 blx r3
 248:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding               , y                ));
 1164              	 .loc 1 248 0
 1165 083a FB79     	 ldrb r3,[r7,#7]
 1166 083c 9B00     	 lsls r3,r3,#2
 1167 083e 07F18002 	 add r2,r7,#128
 1168 0842 1344     	 add r3,r3,r2
 1169 0844 53F8483C 	 ldr r3,[r3,#-72]
 1170 0848 B988     	 ldrh r1,[r7,#4]
 1171 084a B7F89C20 	 ldrh r2,[r7,#156]
 1172 084e 0A44     	 add r2,r2,r1
 1173 0850 C2F30E02 	 ubfx r2,r2,#0,#15
 1174 0854 D103     	 lsls r1,r2,#15
 1175 0856 7A88     	 ldrh r2,[r7,#2]
 1176 0858 C2F30E02 	 ubfx r2,r2,#0,#15
 1177 085c 0A43     	 orrs r2,r2,r1
 1178 085e 42F08042 	 orr r2,r2,#1073741824
 1179 0862 1046     	 mov r0,r2
 1180 0864 9847     	 blx r3
 249:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding - arrow_offset, y + arrow_offset ));
 1181              	 .loc 1 249 0
 1182 0866 FB79     	 ldrb r3,[r7,#7]
 1183 0868 9B00     	 lsls r3,r3,#2
 1184 086a 07F18002 	 add r2,r7,#128
 1185 086e 1344     	 add r3,r3,r2
 1186 0870 53F8483C 	 ldr r3,[r3,#-72]
 1187 0874 B988     	 ldrh r1,[r7,#4]
 1188 0876 B7F89C20 	 ldrh r2,[r7,#156]
 1189 087a 1144     	 add r1,r1,r2
 1190 087c 97F86F20 	 ldrb r2,[r7,#111]
 1191 0880 8A1A     	 subs r2,r1,r2
 1192 0882 C2F30E02 	 ubfx r2,r2,#0,#15
 1193 0886 D103     	 lsls r1,r2,#15
 1194 0888 7888     	 ldrh r0,[r7,#2]
 1195 088a 97F86F20 	 ldrb r2,[r7,#111]
 1196 088e 0244     	 add r2,r2,r0
 1197 0890 C2F30E02 	 ubfx r2,r2,#0,#15
 1198 0894 0A43     	 orrs r2,r2,r1
 1199 0896 42F08042 	 orr r2,r2,#1073741824
 1200 089a 1046     	 mov r0,r2
 1201 089c 9847     	 blx r3
 250:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1202              	 .loc 1 250 0
 1203 089e FB79     	 ldrb r3,[r7,#7]
 1204 08a0 9B00     	 lsls r3,r3,#2
 1205 08a2 07F18002 	 add r2,r7,#128
 1206 08a6 1344     	 add r3,r3,r2
 1207 08a8 53F8483C 	 ldr r3,[r3,#-72]
 1208 08ac 4FF00450 	 mov r0,#553648128
 1209 08b0 9847     	 blx r3
 251:../Libraries/FT800-FT813-5.x/tft.c **** 	// bottom horizontal arrow (Time)
 252:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_BEGIN | EVE_LINE_STRIP);
 1210              	 .loc 1 252 0
 1211 08b2 FB79     	 ldrb r3,[r7,#7]
 1212 08b4 9B00     	 lsls r3,r3,#2
 1213 08b6 07F18002 	 add r2,r7,#128
 1214 08ba 1344     	 add r3,r3,r2
 1215 08bc 53F8483C 	 ldr r3,[r3,#-72]
 1216 08c0 3F48     	 ldr r0,.L24+4
 1217 08c2 9847     	 blx r3
 253:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1218              	 .loc 1 253 0
 1219 08c4 FB79     	 ldrb r3,[r7,#7]
 1220 08c6 9B00     	 lsls r3,r3,#2
 1221 08c8 07F18002 	 add r2,r7,#128
 1222 08cc 1344     	 add r3,r3,r2
 1223 08ce 53F8483C 	 ldr r3,[r3,#-72]
 1224 08d2 B988     	 ldrh r1,[r7,#4]
 1225 08d4 B7F89C20 	 ldrh r2,[r7,#156]
 1226 08d8 1144     	 add r1,r1,r2
 1227 08da 3A88     	 ldrh r2,[r7]
 1228 08dc 1144     	 add r1,r1,r2
 1229 08de B7F89C20 	 ldrh r2,[r7,#156]
 1230 08e2 1144     	 add r1,r1,r2
 1231 08e4 97F86F20 	 ldrb r2,[r7,#111]
 1232 08e8 8A1A     	 subs r2,r1,r2
 1233 08ea C2F30E02 	 ubfx r2,r2,#0,#15
 1234 08ee D103     	 lsls r1,r2,#15
 1235 08f0 7888     	 ldrh r0,[r7,#2]
 1236 08f2 B7F89C20 	 ldrh r2,[r7,#156]
 1237 08f6 1044     	 add r0,r0,r2
 1238 08f8 B7F89820 	 ldrh r2,[r7,#152]
 1239 08fc 1044     	 add r0,r0,r2
 1240 08fe 97F86F20 	 ldrb r2,[r7,#111]
 1241 0902 0244     	 add r2,r2,r0
 1242 0904 C2F30E02 	 ubfx r2,r2,#0,#15
 1243 0908 0A43     	 orrs r2,r2,r1
 1244 090a 42F08042 	 orr r2,r2,#1073741824
 1245 090e 1046     	 mov r0,r2
 1246 0910 9847     	 blx r3
 254:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding               , y + padding 
 1247              	 .loc 1 254 0
 1248 0912 FB79     	 ldrb r3,[r7,#7]
 1249 0914 9B00     	 lsls r3,r3,#2
 1250 0916 07F18002 	 add r2,r7,#128
 1251 091a 1344     	 add r3,r3,r2
 1252 091c 53F8483C 	 ldr r3,[r3,#-72]
 1253 0920 B988     	 ldrh r1,[r7,#4]
 1254 0922 B7F89C20 	 ldrh r2,[r7,#156]
 1255 0926 1144     	 add r1,r1,r2
 1256 0928 3A88     	 ldrh r2,[r7]
 1257 092a 1144     	 add r1,r1,r2
 1258 092c B7F89C20 	 ldrh r2,[r7,#156]
 1259 0930 0A44     	 add r2,r2,r1
 1260 0932 C2F30E02 	 ubfx r2,r2,#0,#15
 1261 0936 D103     	 lsls r1,r2,#15
 1262 0938 7888     	 ldrh r0,[r7,#2]
 1263 093a B7F89C20 	 ldrh r2,[r7,#156]
 1264 093e 1044     	 add r0,r0,r2
 1265 0940 B7F89820 	 ldrh r2,[r7,#152]
 1266 0944 0244     	 add r2,r2,r0
 1267 0946 C2F30E02 	 ubfx r2,r2,#0,#15
 1268 094a 0A43     	 orrs r2,r2,r1
 1269 094c 42F08042 	 orr r2,r2,#1073741824
 1270 0950 1046     	 mov r0,r2
 1271 0952 9847     	 blx r3
 255:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(VERTEX2F(x + padding + width + padding - arrow_offset, y + padding 
 1272              	 .loc 1 255 0
 1273 0954 FB79     	 ldrb r3,[r7,#7]
 1274 0956 9B00     	 lsls r3,r3,#2
 1275 0958 07F18002 	 add r2,r7,#128
 1276 095c 1344     	 add r3,r3,r2
 1277 095e 53F8483C 	 ldr r3,[r3,#-72]
 1278 0962 B988     	 ldrh r1,[r7,#4]
 1279 0964 B7F89C20 	 ldrh r2,[r7,#156]
 1280 0968 1144     	 add r1,r1,r2
 1281 096a 3A88     	 ldrh r2,[r7]
 1282 096c 1144     	 add r1,r1,r2
 1283 096e B7F89C20 	 ldrh r2,[r7,#156]
 1284 0972 1144     	 add r1,r1,r2
 1285 0974 97F86F20 	 ldrb r2,[r7,#111]
 1286 0978 8A1A     	 subs r2,r1,r2
 1287 097a C2F30E02 	 ubfx r2,r2,#0,#15
 1288 097e D103     	 lsls r1,r2,#15
 1289 0980 7888     	 ldrh r0,[r7,#2]
 1290 0982 B7F89C20 	 ldrh r2,[r7,#156]
 1291 0986 1044     	 add r0,r0,r2
 1292 0988 B7F89820 	 ldrh r2,[r7,#152]
 1293 098c 1044     	 add r0,r0,r2
 1294 098e 97F86F20 	 ldrb r2,[r7,#111]
 1295 0992 821A     	 subs r2,r0,r2
 1296 0994 C2F30E02 	 ubfx r2,r2,#0,#15
 1297 0998 0A43     	 orrs r2,r2,r1
 1298 099a 42F08042 	 orr r2,r2,#1073741824
 1299 099e 1046     	 mov r0,r2
 1300 09a0 9847     	 blx r3
 256:../Libraries/FT800-FT813-5.x/tft.c **** 	(*EVE_cmd_dl__fptr_arr[burst])(DL_END);
 1301              	 .loc 1 256 0
 1302 09a2 FB79     	 ldrb r3,[r7,#7]
 1303 09a4 9B00     	 lsls r3,r3,#2
 1304 09a6 07F18002 	 add r2,r7,#128
 1305 09aa 1344     	 add r3,r3,r2
 1306 09ac 53F8483C 	 ldr r3,[r3,#-72]
 1307 09b0 4FF00450 	 mov r0,#553648128
 1308 09b4 9847     	 blx r3
 257:../Libraries/FT800-FT813-5.x/tft.c **** 
 258:../Libraries/FT800-FT813-5.x/tft.c **** }
 1309              	 .loc 1 258 0
 1310 09b6 8437     	 adds r7,r7,#132
 1311              	.LCFI3:
 1312              	 .cfi_def_cfa_offset 20
 1313 09b8 BD46     	 mov sp,r7
 1314              	.LCFI4:
 1315              	 .cfi_def_cfa_register 13
 1316              	 
 1317 09ba F0BD     	 pop {r4,r5,r6,r7,pc}
 1318              	.L25:
 1319              	 .align 2
 1320              	.L24:
 1321 09bc 08000000 	 .word .LC5
 1322 09c0 0400001F 	 .word 520093700
 1323              	 .cfi_endproc
 1324              	.LFE446:
 1326              	 .section .text.TFT_GraphData,"ax",%progbits
 1327              	 .align 2
 1328              	 .global TFT_GraphData
 1329              	 .thumb
 1330              	 .thumb_func
 1332              	TFT_GraphData:
 1333              	.LFB447:
 259:../Libraries/FT800-FT813-5.x/tft.c **** 
 260:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_GraphData(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t padding, doubl
 1334              	 .loc 1 260 0
 1335              	 .cfi_startproc
 1336              	 
 1337              	 
 1338 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 1339              	.LCFI5:
 1340              	 .cfi_def_cfa_offset 24
 1341              	 .cfi_offset 4,-24
 1342              	 .cfi_offset 5,-20
 1343              	 .cfi_offset 7,-16
 1344              	 .cfi_offset 8,-12
 1345              	 .cfi_offset 9,-8
 1346              	 .cfi_offset 14,-4
 1347 0004 84B0     	 sub sp,sp,#16
 1348              	.LCFI6:
 1349              	 .cfi_def_cfa_offset 40
 1350 0006 00AF     	 add r7,sp,#0
 1351              	.LCFI7:
 1352              	 .cfi_def_cfa_register 7
 1353 0008 0446     	 mov r4,r0
 1354 000a 0846     	 mov r0,r1
 1355 000c 1146     	 mov r1,r2
 1356 000e 1A46     	 mov r2,r3
 1357 0010 2346     	 mov r3,r4
 1358 0012 FB80     	 strh r3,[r7,#6]
 1359 0014 0346     	 mov r3,r0
 1360 0016 BB80     	 strh r3,[r7,#4]
 1361 0018 0B46     	 mov r3,r1
 1362 001a 7B80     	 strh r3,[r7,#2]
 1363 001c 1346     	 mov r3,r2
 1364 001e 3B80     	 strh r3,[r7]
 261:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the dynamic parts of an Graph to the TFT (data and markers). Used at recurring display l
 262:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 263:../Libraries/FT800-FT813-5.x/tft.c **** 	///  x		...	beginning of left edge of the graph (Note that the vertical axis starts at "x+padding"
 264:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y		... beginning of upper edge of the graph (Note this is the position of the axis-arrow poin
 265:../Libraries/FT800-FT813-5.x/tft.c **** 	///  width	... width of the actual graph data area in full Pixels
 266:../Libraries/FT800-FT813-5.x/tft.c **** 	///  height	... height of the actual graph data area in full Pixels
 267:../Libraries/FT800-FT813-5.x/tft.c **** 	///  padding	...	clearance from the outer corners (x,y) to the axes
 268:../Libraries/FT800-FT813-5.x/tft.c **** 	///  y_max   ... maximum expected value of input (e.g. for 12bit ADC 4095), will represent 100%
 269:../Libraries/FT800-FT813-5.x/tft.c **** 	///  SBuffer[] 		...	Array of data values
 270:../Libraries/FT800-FT813-5.x/tft.c **** 	///  size	 		... size of array of data values
 271:../Libraries/FT800-FT813-5.x/tft.c **** 	///  *SBuffer_curidx ... current position (index of most recent value)
 272:../Libraries/FT800-FT813-5.x/tft.c **** 	///  graphmode 		... 0 = frame-mode, 1 = roll-mode
 273:../Libraries/FT800-FT813-5.x/tft.c **** 	///  datacolor 		... 24bit color (as 32 bit integer with leading 0's) used for the dataline
 274:../Libraries/FT800-FT813-5.x/tft.c **** 	///  markercolor		... 24bit color (as 32 bit integer with leading 0's) used for the current positi
 275:../Libraries/FT800-FT813-5.x/tft.c **** 	///  Note: No predefined graph settings are used direct (#define ...)!
 276:../Libraries/FT800-FT813-5.x/tft.c **** 
 277:../Libraries/FT800-FT813-5.x/tft.c **** 
 278:../Libraries/FT800-FT813-5.x/tft.c **** 
 279:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display current DATA as line strip in frame or roll mode
 280:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | datacolor);
 1365              	 .loc 1 280 0
 1366 0020 BB6C     	 ldr r3,[r7,#72]
 1367 0022 43F08063 	 orr r3,r3,#67108864
 1368 0026 1846     	 mov r0,r3
 1369 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 281:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1370              	 .loc 1 281 0
 1371 002c 7748     	 ldr r0,.L35
 1372 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 282:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph frame-mode
 283:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1373              	 .loc 1 283 0
 1374 0032 97F84430 	 ldrb r3,[r7,#68]
 1375 0036 002B     	 cmp r3,#0
 1376 0038 46D1     	 bne .L27
 1377              	.LBB10:
 284:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print values in the order they are stored
 285:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int x_cur = 0; x_cur < size; ++x_cur) {
 1378              	 .loc 1 285 0
 1379 003a 0023     	 movs r3,#0
 1380 003c FB60     	 str r3,[r7,#12]
 1381 003e 3EE0     	 b .L28
 1382              	.L29:
 286:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1383              	 .loc 1 286 0 discriminator 3
 1384 0040 FA88     	 ldrh r2,[r7,#6]
 1385 0042 3B8D     	 ldrh r3,[r7,#40]
 1386 0044 1A44     	 add r2,r2,r3
 1387 0046 FB68     	 ldr r3,[r7,#12]
 1388 0048 1344     	 add r3,r3,r2
 1389 004a C3F30E03 	 ubfx r3,r3,#0,#15
 1390 004e DC03     	 lsls r4,r3,#15
 1391 0050 BA88     	 ldrh r2,[r7,#4]
 1392 0052 3B8D     	 ldrh r3,[r7,#40]
 1393 0054 1A44     	 add r2,r2,r3
 1394 0056 3B88     	 ldrh r3,[r7]
 1395 0058 D518     	 adds r5,r2,r3
 1396 005a FB68     	 ldr r3,[r7,#12]
 1397 005c 5B00     	 lsls r3,r3,#1
 1398 005e BA6B     	 ldr r2,[r7,#56]
 1399 0060 1344     	 add r3,r3,r2
 1400 0062 1B88     	 ldrh r3,[r3]
 1401 0064 1846     	 mov r0,r3
 1402 0066 FFF7FEFF 	 bl __aeabi_ui2d
 1403 006a 0246     	 mov r2,r0
 1404 006c 0B46     	 mov r3,r1
 1405 006e 1046     	 mov r0,r2
 1406 0070 1946     	 mov r1,r3
 1407 0072 D7E90C23 	 ldrd r2,[r7,#48]
 1408 0076 FFF7FEFF 	 bl __aeabi_ddiv
 1409 007a 0246     	 mov r2,r0
 1410 007c 0B46     	 mov r3,r1
 1411 007e 9046     	 mov r8,r2
 1412 0080 9946     	 mov r9,r3
 1413 0082 3B88     	 ldrh r3,[r7]
 1414 0084 1846     	 mov r0,r3
 1415 0086 FFF7FEFF 	 bl __aeabi_ui2d
 1416 008a 0246     	 mov r2,r0
 1417 008c 0B46     	 mov r3,r1
 1418 008e 4046     	 mov r0,r8
 1419 0090 4946     	 mov r1,r9
 1420 0092 FFF7FEFF 	 bl __aeabi_dmul
 1421 0096 0246     	 mov r2,r0
 1422 0098 0B46     	 mov r3,r1
 1423 009a 1046     	 mov r0,r2
 1424 009c 1946     	 mov r1,r3
 1425 009e FFF7FEFF 	 bl __aeabi_d2uiz
 1426 00a2 0346     	 mov r3,r0
 1427 00a4 9BB2     	 uxth r3,r3
 1428 00a6 EB1A     	 subs r3,r5,r3
 1429 00a8 C3F30E03 	 ubfx r3,r3,#0,#15
 1430 00ac 2343     	 orrs r3,r3,r4
 1431 00ae 43F08043 	 orr r3,r3,#1073741824
 1432 00b2 1846     	 mov r0,r3
 1433 00b4 FFF7FEFF 	 bl EVE_cmd_dl_burst
 285:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1434              	 .loc 1 285 0 discriminator 3
 1435 00b8 FB68     	 ldr r3,[r7,#12]
 1436 00ba 0133     	 adds r3,r3,#1
 1437 00bc FB60     	 str r3,[r7,#12]
 1438              	.L28:
 285:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1439              	 .loc 1 285 0 is_stmt 0 discriminator 1
 1440 00be BA8F     	 ldrh r2,[r7,#60]
 1441 00c0 FB68     	 ldr r3,[r7,#12]
 1442 00c2 9A42     	 cmp r2,r3
 1443 00c4 BCDC     	 bgt .L29
 1444              	.LBE10:
 1445 00c6 5BE0     	 b .L30
 1446              	.L27:
 1447              	.LBB11:
 287:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 288:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 289:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Display graph roll-mode
 290:../Libraries/FT800-FT813-5.x/tft.c **** 	else {
 291:../Libraries/FT800-FT813-5.x/tft.c **** 		// Print newest value always at the rightmost corner with all older values to the right
 292:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Display    x position at rightmost corner and decrement till 0 (last run will make it
 293:../Libraries/FT800-FT813-5.x/tft.c **** 		// => Start Arrayindex i at current index and decrement every loop. If i goes below 0, reset to m
 294:../Libraries/FT800-FT813-5.x/tft.c **** 		//    value before current is hit.
 295:../Libraries/FT800-FT813-5.x/tft.c **** 
 296:../Libraries/FT800-FT813-5.x/tft.c **** 		int16_t i = *SBuffer_curidx;
 1448              	 .loc 1 296 0 is_stmt 1
 1449 00c8 3B6C     	 ldr r3,[r7,#64]
 1450 00ca 1B88     	 ldrh r3,[r3]
 1451 00cc 7B81     	 strh r3,[r7,#10]
 1452              	.LBB12:
 297:../Libraries/FT800-FT813-5.x/tft.c **** 		for (int16_t x_cur = size-1; x_cur >= 0; x_cur--) {
 1453              	 .loc 1 297 0
 1454 00ce BB8F     	 ldrh r3,[r7,#60]
 1455 00d0 013B     	 subs r3,r3,#1
 1456 00d2 9BB2     	 uxth r3,r3
 1457 00d4 3B81     	 strh r3,[r7,#8]
 1458 00d6 4FE0     	 b .L31
 1459              	.L33:
 298:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 299:../Libraries/FT800-FT813-5.x/tft.c **** 			if(i < 0){i = size-1;}
 1460              	 .loc 1 299 0
 1461 00d8 B7F90A30 	 ldrsh r3,[r7,#10]
 1462 00dc 002B     	 cmp r3,#0
 1463 00de 03DA     	 bge .L32
 1464              	 .loc 1 299 0 is_stmt 0 discriminator 1
 1465 00e0 BB8F     	 ldrh r3,[r7,#60]
 1466 00e2 013B     	 subs r3,r3,#1
 1467 00e4 9BB2     	 uxth r3,r3
 1468 00e6 7B81     	 strh r3,[r7,#10]
 1469              	.L32:
 300:../Libraries/FT800-FT813-5.x/tft.c **** 
 301:../Libraries/FT800-FT813-5.x/tft.c **** 			// Send next point for EVE_LINE_STRIP at current x+padding and normalized buffer value
 302:../Libraries/FT800-FT813-5.x/tft.c **** 			EVE_cmd_dl_burst(VERTEX2F(x + padding + x_cur, y + padding + height - (uint16_t)(( ((double)SBuf
 1470              	 .loc 1 302 0 is_stmt 1 discriminator 2
 1471 00e8 FA88     	 ldrh r2,[r7,#6]
 1472 00ea 3B8D     	 ldrh r3,[r7,#40]
 1473 00ec 1A44     	 add r2,r2,r3
 1474 00ee B7F90830 	 ldrsh r3,[r7,#8]
 1475 00f2 1344     	 add r3,r3,r2
 1476 00f4 C3F30E03 	 ubfx r3,r3,#0,#15
 1477 00f8 DC03     	 lsls r4,r3,#15
 1478 00fa BA88     	 ldrh r2,[r7,#4]
 1479 00fc 3B8D     	 ldrh r3,[r7,#40]
 1480 00fe 1A44     	 add r2,r2,r3
 1481 0100 3B88     	 ldrh r3,[r7]
 1482 0102 D518     	 adds r5,r2,r3
 1483 0104 B7F90A30 	 ldrsh r3,[r7,#10]
 1484 0108 5B00     	 lsls r3,r3,#1
 1485 010a BA6B     	 ldr r2,[r7,#56]
 1486 010c 1344     	 add r3,r3,r2
 1487 010e 1B88     	 ldrh r3,[r3]
 1488 0110 1846     	 mov r0,r3
 1489 0112 FFF7FEFF 	 bl __aeabi_ui2d
 1490 0116 0246     	 mov r2,r0
 1491 0118 0B46     	 mov r3,r1
 1492 011a 1046     	 mov r0,r2
 1493 011c 1946     	 mov r1,r3
 1494 011e D7E90C23 	 ldrd r2,[r7,#48]
 1495 0122 FFF7FEFF 	 bl __aeabi_ddiv
 1496 0126 0246     	 mov r2,r0
 1497 0128 0B46     	 mov r3,r1
 1498 012a 9046     	 mov r8,r2
 1499 012c 9946     	 mov r9,r3
 1500 012e 3B88     	 ldrh r3,[r7]
 1501 0130 1846     	 mov r0,r3
 1502 0132 FFF7FEFF 	 bl __aeabi_ui2d
 1503 0136 0246     	 mov r2,r0
 1504 0138 0B46     	 mov r3,r1
 1505 013a 4046     	 mov r0,r8
 1506 013c 4946     	 mov r1,r9
 1507 013e FFF7FEFF 	 bl __aeabi_dmul
 1508 0142 0246     	 mov r2,r0
 1509 0144 0B46     	 mov r3,r1
 1510 0146 1046     	 mov r0,r2
 1511 0148 1946     	 mov r1,r3
 1512 014a FFF7FEFF 	 bl __aeabi_d2uiz
 1513 014e 0346     	 mov r3,r0
 1514 0150 9BB2     	 uxth r3,r3
 1515 0152 EB1A     	 subs r3,r5,r3
 1516 0154 C3F30E03 	 ubfx r3,r3,#0,#15
 1517 0158 2343     	 orrs r3,r3,r4
 1518 015a 43F08043 	 orr r3,r3,#1073741824
 1519 015e 1846     	 mov r0,r3
 1520 0160 FFF7FEFF 	 bl EVE_cmd_dl_burst
 303:../Libraries/FT800-FT813-5.x/tft.c **** 
 304:../Libraries/FT800-FT813-5.x/tft.c **** 			// decrement index
 305:../Libraries/FT800-FT813-5.x/tft.c **** 			i--;
 1521              	 .loc 1 305 0 discriminator 2
 1522 0164 7B89     	 ldrh r3,[r7,#10]
 1523 0166 9BB2     	 uxth r3,r3
 1524 0168 013B     	 subs r3,r3,#1
 1525 016a 9BB2     	 uxth r3,r3
 1526 016c 7B81     	 strh r3,[r7,#10]
 297:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1527              	 .loc 1 297 0 discriminator 2
 1528 016e 3B89     	 ldrh r3,[r7,#8]
 1529 0170 9BB2     	 uxth r3,r3
 1530 0172 013B     	 subs r3,r3,#1
 1531 0174 9BB2     	 uxth r3,r3
 1532 0176 3B81     	 strh r3,[r7,#8]
 1533              	.L31:
 297:../Libraries/FT800-FT813-5.x/tft.c **** 			// if index goes below 0 set to highest buffer index
 1534              	 .loc 1 297 0 is_stmt 0 discriminator 1
 1535 0178 B7F90830 	 ldrsh r3,[r7,#8]
 1536 017c 002B     	 cmp r3,#0
 1537 017e ABDA     	 bge .L33
 1538              	.L30:
 1539              	.LBE12:
 1540              	.LBE11:
 306:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 307:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 308:../Libraries/FT800-FT813-5.x/tft.c **** 	// End EVE_LINE_STRIP and therefore DATA
 309:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_END);
 1541              	 .loc 1 309 0 is_stmt 1
 1542 0180 4FF00450 	 mov r0,#553648128
 1543 0184 FFF7FEFF 	 bl EVE_cmd_dl_burst
 310:../Libraries/FT800-FT813-5.x/tft.c **** 
 311:../Libraries/FT800-FT813-5.x/tft.c **** 
 312:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw current POSITION MARKER in frame mode
 313:../Libraries/FT800-FT813-5.x/tft.c **** 	if(graphmode == 0){
 1544              	 .loc 1 313 0
 1545 0188 97F84430 	 ldrb r3,[r7,#68]
 1546 018c 002B     	 cmp r3,#0
 1547 018e 38D1     	 bne .L26
 314:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_COLOR_RGB | markercolor);
 1548              	 .loc 1 314 0
 1549 0190 FB6C     	 ldr r3,[r7,#76]
 1550 0192 43F08063 	 orr r3,r3,#67108864
 1551 0196 1846     	 mov r0,r3
 1552 0198 FFF7FEFF 	 bl EVE_cmd_dl_burst
 315:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_LINE_STRIP);
 1553              	 .loc 1 315 0
 1554 019c 1B48     	 ldr r0,.L35
 1555 019e FFF7FEFF 	 bl EVE_cmd_dl_burst
 316:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding - 5 ));
 1556              	 .loc 1 316 0
 1557 01a2 FA88     	 ldrh r2,[r7,#6]
 1558 01a4 3B8D     	 ldrh r3,[r7,#40]
 1559 01a6 1344     	 add r3,r3,r2
 1560 01a8 3A6C     	 ldr r2,[r7,#64]
 1561 01aa 1288     	 ldrh r2,[r2]
 1562 01ac 1344     	 add r3,r3,r2
 1563 01ae C3F30E03 	 ubfx r3,r3,#0,#15
 1564 01b2 DA03     	 lsls r2,r3,#15
 1565 01b4 B988     	 ldrh r1,[r7,#4]
 1566 01b6 3B8D     	 ldrh r3,[r7,#40]
 1567 01b8 0B44     	 add r3,r3,r1
 1568 01ba 053B     	 subs r3,r3,#5
 1569 01bc C3F30E03 	 ubfx r3,r3,#0,#15
 1570 01c0 1343     	 orrs r3,r3,r2
 1571 01c2 43F08043 	 orr r3,r3,#1073741824
 1572 01c6 1846     	 mov r0,r3
 1573 01c8 FFF7FEFF 	 bl EVE_cmd_dl_burst
 317:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(x + padding + *SBuffer_curidx, y + padding + height + 5 ));
 1574              	 .loc 1 317 0
 1575 01cc FA88     	 ldrh r2,[r7,#6]
 1576 01ce 3B8D     	 ldrh r3,[r7,#40]
 1577 01d0 1344     	 add r3,r3,r2
 1578 01d2 3A6C     	 ldr r2,[r7,#64]
 1579 01d4 1288     	 ldrh r2,[r2]
 1580 01d6 1344     	 add r3,r3,r2
 1581 01d8 C3F30E03 	 ubfx r3,r3,#0,#15
 1582 01dc DA03     	 lsls r2,r3,#15
 1583 01de B988     	 ldrh r1,[r7,#4]
 1584 01e0 3B8D     	 ldrh r3,[r7,#40]
 1585 01e2 1944     	 add r1,r1,r3
 1586 01e4 3B88     	 ldrh r3,[r7]
 1587 01e6 0B44     	 add r3,r3,r1
 1588 01e8 0533     	 adds r3,r3,#5
 1589 01ea C3F30E03 	 ubfx r3,r3,#0,#15
 1590 01ee 1343     	 orrs r3,r3,r2
 1591 01f0 43F08043 	 orr r3,r3,#1073741824
 1592 01f4 1846     	 mov r0,r3
 1593 01f6 FFF7FEFF 	 bl EVE_cmd_dl_burst
 318:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1594              	 .loc 1 318 0
 1595 01fa 4FF00450 	 mov r0,#553648128
 1596 01fe FFF7FEFF 	 bl EVE_cmd_dl_burst
 1597              	.L26:
 319:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 320:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH END
 321:../Libraries/FT800-FT813-5.x/tft.c **** 
 322:../Libraries/FT800-FT813-5.x/tft.c **** }
 1598              	 .loc 1 322 0
 1599 0202 1037     	 adds r7,r7,#16
 1600              	.LCFI8:
 1601              	 .cfi_def_cfa_offset 24
 1602 0204 BD46     	 mov sp,r7
 1603              	.LCFI9:
 1604              	 .cfi_def_cfa_register 13
 1605              	 
 1606 0206 BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 1607              	.L36:
 1608 020a 00BF     	 .align 2
 1609              	.L35:
 1610 020c 0400001F 	 .word 520093700
 1611              	 .cfi_endproc
 1612              	.LFE447:
 1614              	 .section .text.touch_calibrate,"ax",%progbits
 1615              	 .align 2
 1616              	 .global touch_calibrate
 1617              	 .thumb
 1618              	 .thumb_func
 1620              	touch_calibrate:
 1621              	.LFB448:
 323:../Libraries/FT800-FT813-5.x/tft.c **** 
 324:../Libraries/FT800-FT813-5.x/tft.c **** 
 325:../Libraries/FT800-FT813-5.x/tft.c **** void touch_calibrate(void) {
 1622              	 .loc 1 325 0
 1623              	 .cfi_startproc
 1624              	 
 1625              	 
 1626 0000 80B5     	 push {r7,lr}
 1627              	.LCFI10:
 1628              	 .cfi_def_cfa_offset 8
 1629              	 .cfi_offset 7,-8
 1630              	 .cfi_offset 14,-4
 1631 0002 00AF     	 add r7,sp,#0
 1632              	.LCFI11:
 1633              	 .cfi_def_cfa_register 7
 326:../Libraries/FT800-FT813-5.x/tft.c **** // Sends pre-recorded touch calibration values, depending on the display the code is compiled for. 
 327:../Libraries/FT800-FT813-5.x/tft.c **** #if defined (EVE_RiTFT43)
 328:../Libraries/FT800-FT813-5.x/tft.c **** 	// Original library values
 329:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000062cd);
 330:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0xfffffe45);
 331:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff45e0a);
 332:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0x000001a3);
 333:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b33);
 334:../Libraries/FT800-FT813-5.x/tft.c **** 	//EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFbb870);
 335:../Libraries/FT800-FT813-5.x/tft.c **** 
 336:../Libraries/FT800-FT813-5.x/tft.c **** 	// Actual values (measured with routine down below) by Rene S. at 20.12.2020 on Display SM-RVT43UL
 337:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_A, 0x000061c4);
 1634              	 .loc 1 337 0
 1635 0004 0E48     	 ldr r0,.L38
 1636 0006 46F2C411 	 movw r1,#25028
 1637 000a FFF7FEFF 	 bl EVE_memWrite32
 338:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_B, 0x0000025d);
 1638              	 .loc 1 338 0
 1639 000e 0D48     	 ldr r0,.L38+4
 1640 0010 40F25D21 	 movw r1,#605
 1641 0014 FFF7FEFF 	 bl EVE_memWrite32
 339:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_C, 0xfff14ab1);
 1642              	 .loc 1 339 0
 1643 0018 0B48     	 ldr r0,.L38+8
 1644 001a 0C49     	 ldr r1,.L38+12
 1645 001c FFF7FEFF 	 bl EVE_memWrite32
 340:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_D, 0xffffff91);
 1646              	 .loc 1 340 0
 1647 0020 0B48     	 ldr r0,.L38+16
 1648 0022 6FF06E01 	 mvn r1,#110
 1649 0026 FFF7FEFF 	 bl EVE_memWrite32
 341:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_E, 0x00005b6b);
 1650              	 .loc 1 341 0
 1651 002a 0A48     	 ldr r0,.L38+20
 1652 002c 45F66B31 	 movw r1,#23403
 1653 0030 FFF7FEFF 	 bl EVE_memWrite32
 342:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_memWrite32(REG_TOUCH_TRANSFORM_F, 0xFFFac7ab);
 1654              	 .loc 1 342 0
 1655 0034 0848     	 ldr r0,.L38+24
 1656 0036 0949     	 ldr r1,.L38+28
 1657 0038 FFF7FEFF 	 bl EVE_memWrite32
 343:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 344:../Libraries/FT800-FT813-5.x/tft.c **** 
 345:../Libraries/FT800-FT813-5.x/tft.c **** // All targets other than EVE_RiTFT43 where deleted -> see original lib 4
 346:../Libraries/FT800-FT813-5.x/tft.c **** 
 347:../Libraries/FT800-FT813-5.x/tft.c **** /* activate this if you are using a module for the first time or if you need to re-calibrate it */
 348:../Libraries/FT800-FT813-5.x/tft.c **** /* write down the numbers on the screen and either place them in one of the pre-defined blocks abov
 349:../Libraries/FT800-FT813-5.x/tft.c **** #if 0
 350:../Libraries/FT800-FT813-5.x/tft.c **** 	/* calibrate touch and displays values to screen */
 351:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 352:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 353:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 354:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text((EVE_HSIZE/2), 50, 26, EVE_OPT_CENTER, "Please tap on the dot.");
 355:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_calibrate();
 356:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);
 357:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP);
 358:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 359:../Libraries/FT800-FT813-5.x/tft.c **** 
 360:../Libraries/FT800-FT813-5.x/tft.c **** 	uint32_t touch_a, touch_b, touch_c, touch_d, touch_e, touch_f;
 361:../Libraries/FT800-FT813-5.x/tft.c **** 
 362:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_a = EVE_memRead32(REG_TOUCH_TRANSFORM_A);
 363:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_b = EVE_memRead32(REG_TOUCH_TRANSFORM_B);
 364:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_c = EVE_memRead32(REG_TOUCH_TRANSFORM_C);
 365:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_d = EVE_memRead32(REG_TOUCH_TRANSFORM_D);
 366:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_e = EVE_memRead32(REG_TOUCH_TRANSFORM_E);
 367:../Libraries/FT800-FT813-5.x/tft.c **** 	touch_f = EVE_memRead32(REG_TOUCH_TRANSFORM_F);
 368:../Libraries/FT800-FT813-5.x/tft.c **** 
 369:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART);
 370:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR_RGB | BLACK);
 371:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG);
 372:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0));
 373:../Libraries/FT800-FT813-5.x/tft.c **** 
 374:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 15, 26, 0, "TOUCH_TRANSFORM_A:");
 375:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 30, 26, 0, "TOUCH_TRANSFORM_B:");
 376:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 45, 26, 0, "TOUCH_TRANSFORM_C:");
 377:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 60, 26, 0, "TOUCH_TRANSFORM_D:");
 378:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 75, 26, 0, "TOUCH_TRANSFORM_E:");
 379:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(5, 90, 26, 0, "TOUCH_TRANSFORM_F:");
 380:../Libraries/FT800-FT813-5.x/tft.c **** 
 381:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_setbase(16L);
 382:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 15, 26, EVE_OPT_RIGHTX|8, touch_a);
 383:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 30, 26, EVE_OPT_RIGHTX|8, touch_b);
 384:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 45, 26, EVE_OPT_RIGHTX|8, touch_c);
 385:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 60, 26, EVE_OPT_RIGHTX|8, touch_d);
 386:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 75, 26, EVE_OPT_RIGHTX|8, touch_e);
 387:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number(310, 90, 26, EVE_OPT_RIGHTX|8, touch_f);
 388:../Libraries/FT800-FT813-5.x/tft.c **** 
 389:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_DISPLAY);	/* instruct the graphics processor to show the list */
 390:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_SWAP); /* make this list active */
 391:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_execute();
 392:../Libraries/FT800-FT813-5.x/tft.c **** 
 393:../Libraries/FT800-FT813-5.x/tft.c **** 	while(1);
 394:../Libraries/FT800-FT813-5.x/tft.c **** #endif
 395:../Libraries/FT800-FT813-5.x/tft.c **** }
 1658              	 .loc 1 395 0
 1659 003c 80BD     	 pop {r7,pc}
 1660              	.L39:
 1661 003e 00BF     	 .align 2
 1662              	.L38:
 1663 0040 50213000 	 .word 3154256
 1664 0044 54213000 	 .word 3154260
 1665 0048 58213000 	 .word 3154264
 1666 004c B14AF1FF 	 .word -963919
 1667 0050 5C213000 	 .word 3154268
 1668 0054 60213000 	 .word 3154272
 1669 0058 64213000 	 .word 3154276
 1670 005c ABC7FAFF 	 .word -342101
 1671              	 .cfi_endproc
 1672              	.LFE448:
 1674              	 .section .text.TFT_display_init_screen,"ax",%progbits
 1675              	 .align 2
 1676              	 .global TFT_display_init_screen
 1677              	 .thumb
 1678              	 .thumb_func
 1680              	TFT_display_init_screen:
 1681              	.LFB449:
 396:../Libraries/FT800-FT813-5.x/tft.c **** 
 397:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_init_screen(void)
 398:../Libraries/FT800-FT813-5.x/tft.c **** {
 1682              	 .loc 1 398 0
 1683              	 .cfi_startproc
 1684              	 
 1685              	 
 1686 0000 80B5     	 push {r7,lr}
 1687              	.LCFI12:
 1688              	 .cfi_def_cfa_offset 8
 1689              	 .cfi_offset 7,-8
 1690              	 .cfi_offset 14,-4
 1691 0002 00AF     	 add r7,sp,#0
 1692              	.LCFI13:
 1693              	 .cfi_def_cfa_register 7
 399:../Libraries/FT800-FT813-5.x/tft.c **** 
 400:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 1694              	 .loc 1 400 0
 1695 0004 1A4B     	 ldr r3,.L42
 1696 0006 1B78     	 ldrb r3,[r3]
 1697 0008 002B     	 cmp r3,#0
 1698 000a 30D0     	 beq .L40
 401:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 402:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_inflate(MEM_LOGO, logo_init, sizeof(logo_init)); /* load logo into gfx-memory and de-comp
 1699              	 .loc 1 402 0
 1700 000c 0020     	 movs r0,#0
 1701 000e 1949     	 ldr r1,.L42+4
 1702 0010 44F60472 	 movw r2,#20228
 1703 0014 FFF7FEFF 	 bl EVE_cmd_inflate
 403:../Libraries/FT800-FT813-5.x/tft.c **** 
 404:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1704              	 .loc 1 404 0
 1705 0018 FFF7FEFF 	 bl EVE_start_cmd_burst
 405:../Libraries/FT800-FT813-5.x/tft.c **** 
 406:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1706              	 .loc 1 406 0
 1707 001c 6FF0FF00 	 mvn r0,#255
 1708 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 407:../Libraries/FT800-FT813-5.x/tft.c **** 		//EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16
 408:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1709              	 .loc 1 408 0
 1710 0024 6FF07D40 	 mvn r0,#-50331648
 1711 0028 FFF7FEFF 	 bl EVE_cmd_dl_burst
 409:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1712              	 .loc 1 409 0
 1713 002c 1248     	 ldr r0,.L42+8
 1714 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 410:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 1715              	 .loc 1 410 0
 1716 0032 4FF04070 	 mov r0,#50331648
 1717 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 411:../Libraries/FT800-FT813-5.x/tft.c **** 
 412:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_setbitmap_burst(MEM_LOGO, EVE_ARGB1555, 308, 250);
 1718              	 .loc 1 412 0
 1719 003a 0020     	 movs r0,#0
 1720 003c 0021     	 movs r1,#0
 1721 003e 4FF49A72 	 mov r2,#308
 1722 0042 FA23     	 movs r3,#250
 1723 0044 FFF7FEFF 	 bl EVE_cmd_setbitmap_burst
 413:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_BEGIN | EVE_BITMAPS);
 1724              	 .loc 1 413 0
 1725 0048 0C48     	 ldr r0,.L42+12
 1726 004a FFF7FEFF 	 bl EVE_cmd_dl_burst
 414:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX2F(86*16, 11*16));  //105*16
 1727              	 .loc 1 414 0
 1728 004e 0C48     	 ldr r0,.L42+16
 1729 0050 FFF7FEFF 	 bl EVE_cmd_dl_burst
 415:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_END);
 1730              	 .loc 1 415 0
 1731 0054 4FF00450 	 mov r0,#553648128
 1732 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 416:../Libraries/FT800-FT813-5.x/tft.c **** 
 417:../Libraries/FT800-FT813-5.x/tft.c **** 
 418:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1733              	 .loc 1 418 0
 1734 005c 0020     	 movs r0,#0
 1735 005e FFF7FEFF 	 bl EVE_cmd_dl_burst
 419:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1736              	 .loc 1 419 0
 1737 0062 6FF0FE00 	 mvn r0,#254
 1738 0066 FFF7FEFF 	 bl EVE_cmd_dl_burst
 420:../Libraries/FT800-FT813-5.x/tft.c **** 
 421:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1739              	 .loc 1 421 0
 1740 006a FFF7FEFF 	 bl EVE_end_cmd_burst
 1741              	.L40:
 422:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 423:../Libraries/FT800-FT813-5.x/tft.c **** }
 1742              	 .loc 1 423 0
 1743 006e 80BD     	 pop {r7,pc}
 1744              	.L43:
 1745              	 .align 2
 1746              	.L42:
 1747 0070 00000000 	 .word tft_active
 1748 0074 00000000 	 .word logo_init
 1749 0078 07000026 	 .word 637534215
 1750 007c 0100001F 	 .word 520093697
 1751 0080 B000B042 	 .word 1118830768
 1752              	 .cfi_endproc
 1753              	.LFE449:
 1755              	 .section .rodata
 1756              	 .align 2
 1757              	.LC6:
 1758 0028 5446545F 	 .ascii "TFT_init - EVE_init was ok, starting to init TFT!\000"
 1758      696E6974 
 1758      202D2045 
 1758      56455F69 
 1758      6E697420 
 1759              	 .section .text.TFT_init,"ax",%progbits
 1760              	 .align 2
 1761              	 .global TFT_init
 1762              	 .thumb
 1763              	 .thumb_func
 1765              	TFT_init:
 1766              	.LFB450:
 424:../Libraries/FT800-FT813-5.x/tft.c **** //
 425:../Libraries/FT800-FT813-5.x/tft.c **** //void initStaticGraphBackground(void)
 426:../Libraries/FT800-FT813-5.x/tft.c **** //{
 427:../Libraries/FT800-FT813-5.x/tft.c **** //	// Static portion of display-handling, meant to be called once at startup. Created by Rudolph Ri
 428:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(CMD_DLSTART); // Start a new display list (resets REG_CMD_DL to 0)
 429:../Libraries/FT800-FT813-5.x/tft.c **** //
 430:../Libraries/FT800-FT813-5.x/tft.c **** //	/// Main settings
 431:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature
 432:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_bgcolor(MAIN_BGCOLOR); /* light grey */
 433:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 pixel 
 434:../Libraries/FT800-FT813-5.x/tft.c **** //	// Main Rectangle
 435:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BGCOLOR);
 436:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_BEGIN | EVE_RECTS);
 437:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(0, 0));
 438:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, EVE_VSIZE));
 439:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_END);
 440:../Libraries/FT800-FT813-5.x/tft.c **** //
 441:../Libraries/FT800-FT813-5.x/tft.c **** //	/// Draw Banner and divider line on top
 442:../Libraries/FT800-FT813-5.x/tft.c **** //	// Banner
 443:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 444:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 445:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 446:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 447:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 448:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 449:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 450:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_END);
 451:../Libraries/FT800-FT813-5.x/tft.c **** //	// Divider
 452:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 453:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 454:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 455:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 456:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 457:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 458:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_END);
 459:../Libraries/FT800-FT813-5.x/tft.c **** //
 460:../Libraries/FT800-FT813-5.x/tft.c **** //	// Add the static text
 461:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 462:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 463:../Libraries/FT800-FT813-5.x/tft.c **** //	#if defined (EVE_DMA)
 464:../Libraries/FT800-FT813-5.x/tft.c **** //		EVE_cmd_text(10, EVE_VSIZE - 65, 26, 0, "Bytes: ");
 465:../Libraries/FT800-FT813-5.x/tft.c **** //	#endif
 466:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_text(360, 10, 26, 0, "DL-size:");
 467:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_text(360, 25, 26, 0, "Sensor:");
 468:../Libraries/FT800-FT813-5.x/tft.c **** //
 469:../Libraries/FT800-FT813-5.x/tft.c **** //	/// Write the static part of the Graph to the display list
 470:../Libraries/FT800-FT813-5.x/tft.c **** //	TFT_GraphStatic(0, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, G
 471:../Libraries/FT800-FT813-5.x/tft.c **** //
 472:../Libraries/FT800-FT813-5.x/tft.c **** //	// Wait for Display to be finished
 473:../Libraries/FT800-FT813-5.x/tft.c **** //	while (EVE_busy());
 474:../Libraries/FT800-FT813-5.x/tft.c **** //
 475:../Libraries/FT800-FT813-5.x/tft.c **** //	// Get size of the current display list
 476:../Libraries/FT800-FT813-5.x/tft.c **** //	num_dl_static = EVE_memRead16(REG_CMD_DL); // REG_CMD_DL = Command display list offset
 477:../Libraries/FT800-FT813-5.x/tft.c **** //
 478:../Libraries/FT800-FT813-5.x/tft.c **** //	// Copy "num_dl_static" bytes from pointer "EVE_RAM_DL" to pointer "MEM_DL_STATIC"
 479:../Libraries/FT800-FT813-5.x/tft.c **** //	EVE_cmd_memcpy(MEM_DL_STATIC, EVE_RAM_DL, num_dl_static);
 480:../Libraries/FT800-FT813-5.x/tft.c **** //	while (EVE_busy());
 481:../Libraries/FT800-FT813-5.x/tft.c **** //
 482:../Libraries/FT800-FT813-5.x/tft.c **** //	//EVE_cmd_track(0, 0, EVE_HSIZE, EVE_VSIZE, 1);
 483:../Libraries/FT800-FT813-5.x/tft.c **** //}
 484:../Libraries/FT800-FT813-5.x/tft.c **** 
 485:../Libraries/FT800-FT813-5.x/tft.c **** uint8_t TFT_init(void)
 486:../Libraries/FT800-FT813-5.x/tft.c **** {
 1767              	 .loc 1 486 0
 1768              	 .cfi_startproc
 1769              	 
 1770              	 
 1771 0000 80B5     	 push {r7,lr}
 1772              	.LCFI14:
 1773              	 .cfi_def_cfa_offset 8
 1774              	 .cfi_offset 7,-8
 1775              	 .cfi_offset 14,-4
 1776 0002 00AF     	 add r7,sp,#0
 1777              	.LCFI15:
 1778              	 .cfi_def_cfa_register 7
 487:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Initializes EVE (or checks if its already initialized). Only at first sucessful EVE_init() the
 488:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_init() != 0)
 1779              	 .loc 1 488 0
 1780 0004 FFF7FEFF 	 bl EVE_init
 1781 0008 0346     	 mov r3,r0
 1782 000a 002B     	 cmp r3,#0
 1783 000c 2ED0     	 beq .L45
 489:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 490:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (DEBUG_ENABLE)
 491:../Libraries/FT800-FT813-5.x/tft.c **** 			printf("TFT_init - EVE_init was ok, starting to init TFT!\n");
 1784              	 .loc 1 491 0
 1785 000e 1948     	 ldr r0,.L47
 1786 0010 FFF7FEFF 	 bl puts
 492:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 493:../Libraries/FT800-FT813-5.x/tft.c **** 		// Mark Display as active (TFT_display only does anythin after his)
 494:../Libraries/FT800-FT813-5.x/tft.c **** 		tft_active = 1;
 1787              	 .loc 1 494 0
 1788 0014 184B     	 ldr r3,.L47+4
 1789 0016 0122     	 movs r2,#1
 1790 0018 1A70     	 strb r2,[r3]
 495:../Libraries/FT800-FT813-5.x/tft.c **** 
 496:../Libraries/FT800-FT813-5.x/tft.c **** 		// Initial Backlight strength
 497:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_memWrite8(REG_PWM_DUTY, 0x30);	/* setup backlight, range is from 0 = off to 0x80 = max */
 1791              	 .loc 1 497 0
 1792 001a 1848     	 ldr r0,.L47+8
 1793 001c 3021     	 movs r1,#48
 1794 001e FFF7FEFF 	 bl EVE_memWrite8
 498:../Libraries/FT800-FT813-5.x/tft.c **** 
 499:../Libraries/FT800-FT813-5.x/tft.c **** 		// Write prerecorded touchscreen calibration back to display
 500:../Libraries/FT800-FT813-5.x/tft.c **** 		touch_calibrate();
 1795              	 .loc 1 500 0
 1796 0022 FFF7FEFF 	 bl touch_calibrate
 501:../Libraries/FT800-FT813-5.x/tft.c **** 
 502:../Libraries/FT800-FT813-5.x/tft.c **** 		// Clear screen, set precision for VERTEX2F to 1 pixel and show DL for the first time
 503:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst(); /* start writing to the cmd-fifo as one stream of bytes, only sending the 
 1797              	 .loc 1 503 0
 1798 0026 FFF7FEFF 	 bl EVE_start_cmd_burst
 504:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART); /* start the display list */
 1799              	 .loc 1 504 0
 1800 002a 6FF0FF00 	 mvn r0,#255
 1801 002e FFF7FEFF 	 bl EVE_cmd_dl_burst
 505:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0)); /* do not use the following objects for touch-detection */
 1802              	 .loc 1 505 0
 1803 0032 4FF04070 	 mov r0,#50331648
 1804 0036 FFF7FEFF 	 bl EVE_cmd_dl_burst
 506:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_bgcolor_burst(MAIN_BGCOLOR);
 1805              	 .loc 1 506 0
 1806 003a 1148     	 ldr r0,.L47+12
 1807 003c FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 507:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 p
 1808              	 .loc 1 507 0
 1809 0040 4FF01C50 	 mov r0,#654311424
 1810 0044 FFF7FEFF 	 bl EVE_cmd_dl_burst
 508:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 1811              	 .loc 1 508 0
 1812 0048 6FF07D40 	 mvn r0,#-50331648
 1813 004c FFF7FEFF 	 bl EVE_cmd_dl_burst
 509:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 1814              	 .loc 1 509 0
 1815 0050 0C48     	 ldr r0,.L47+16
 1816 0052 FFF7FEFF 	 bl EVE_cmd_dl_burst
 510:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 1817              	 .loc 1 510 0
 1818 0056 0020     	 movs r0,#0
 1819 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 511:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 1820              	 .loc 1 511 0
 1821 005c 6FF0FE00 	 mvn r0,#254
 1822 0060 FFF7FEFF 	 bl EVE_cmd_dl_burst
 512:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 1823              	 .loc 1 512 0
 1824 0064 FFF7FEFF 	 bl EVE_end_cmd_burst
 513:../Libraries/FT800-FT813-5.x/tft.c **** 		return 1;
 1825              	 .loc 1 513 0
 1826 0068 0123     	 movs r3,#1
 1827 006a 00E0     	 b .L46
 1828              	.L45:
 514:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 515:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 516:../Libraries/FT800-FT813-5.x/tft.c **** 		return 0;
 1829              	 .loc 1 516 0
 1830 006c 0023     	 movs r3,#0
 1831              	.L46:
 517:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 518:../Libraries/FT800-FT813-5.x/tft.c **** }
 1832              	 .loc 1 518 0
 1833 006e 1846     	 mov r0,r3
 1834 0070 80BD     	 pop {r7,pc}
 1835              	.L48:
 1836 0072 00BF     	 .align 2
 1837              	.L47:
 1838 0074 28000000 	 .word .LC6
 1839 0078 00000000 	 .word tft_active
 1840 007c D4203000 	 .word 3154132
 1841 0080 EEF1F500 	 .word 16118254
 1842 0084 07000026 	 .word 637534215
 1843              	 .cfi_endproc
 1844              	.LFE450:
 1846              	 .section .text.TFT_display_static,"ax",%progbits
 1847              	 .align 2
 1848              	 .global TFT_display_static
 1849              	 .thumb
 1850              	 .thumb_func
 1852              	TFT_display_static:
 1853              	.LFB451:
 519:../Libraries/FT800-FT813-5.x/tft.c **** 
 520:../Libraries/FT800-FT813-5.x/tft.c **** 
 521:../Libraries/FT800-FT813-5.x/tft.c **** 
 522:../Libraries/FT800-FT813-5.x/tft.c **** 
 523:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static(void)
 524:../Libraries/FT800-FT813-5.x/tft.c **** {
 1854              	 .loc 1 524 0
 1855              	 .cfi_startproc
 1856              	 
 1857              	 
 1858 0000 80B5     	 push {r7,lr}
 1859              	.LCFI16:
 1860              	 .cfi_def_cfa_offset 8
 1861              	 .cfi_offset 7,-8
 1862              	 .cfi_offset 14,-4
 1863 0002 00AF     	 add r7,sp,#0
 1864              	.LCFI17:
 1865              	 .cfi_def_cfa_register 7
 525:../Libraries/FT800-FT813-5.x/tft.c **** 	// Static portion of display-handling, meant to be called once at startup. Created by Rudolph Ried
 526:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(CMD_DLSTART); // Start a new display list (resets REG_CMD_DL to 0)
 1866              	 .loc 1 526 0
 1867 0004 6FF0FF00 	 mvn r0,#255
 1868 0008 FFF7FEFF 	 bl EVE_cmd_dl
 527:../Libraries/FT800-FT813-5.x/tft.c **** 
 528:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Main settings
 529:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature*/
 1869              	 .loc 1 529 0
 1870 000c 2148     	 ldr r0,.L52
 1871 000e FFF7FEFF 	 bl EVE_cmd_dl
 530:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor(MAIN_BGCOLOR); /* light grey */
 1872              	 .loc 1 530 0
 1873 0012 2148     	 ldr r0,.L52+4
 1874 0014 FFF7FEFF 	 bl EVE_cmd_bgcolor
 531:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX_FORMAT(0)); /* reduce precision for VERTEX2F to 1 pixel instead of 1/16 pixel de
 1875              	 .loc 1 531 0
 1876 0018 4FF01C50 	 mov r0,#654311424
 1877 001c FFF7FEFF 	 bl EVE_cmd_dl
 532:../Libraries/FT800-FT813-5.x/tft.c **** 	// Main Rectangle
 533:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BGCOLOR);
 1878              	 .loc 1 533 0
 1879 0020 1E48     	 ldr r0,.L52+8
 1880 0022 FFF7FEFF 	 bl EVE_cmd_dl
 534:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_RECTS);
 1881              	 .loc 1 534 0
 1882 0026 1E48     	 ldr r0,.L52+12
 1883 0028 FFF7FEFF 	 bl EVE_cmd_dl
 535:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, 0));
 1884              	 .loc 1 535 0
 1885 002c 4FF08040 	 mov r0,#1073741824
 1886 0030 FFF7FEFF 	 bl EVE_cmd_dl
 536:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, EVE_VSIZE));
 1887              	 .loc 1 536 0
 1888 0034 1B48     	 ldr r0,.L52+16
 1889 0036 FFF7FEFF 	 bl EVE_cmd_dl
 537:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 1890              	 .loc 1 537 0
 1891 003a 4FF00450 	 mov r0,#553648128
 1892 003e FFF7FEFF 	 bl EVE_cmd_dl
 538:../Libraries/FT800-FT813-5.x/tft.c **** 
 539:../Libraries/FT800-FT813-5.x/tft.c **** 
 540:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Execute current menu specific code
 541:../Libraries/FT800-FT813-5.x/tft.c **** 	(*TFT_display_static_cur_Menu__fptr_arr[TFT_cur_Menu])();
 1893              	 .loc 1 541 0
 1894 0042 194B     	 ldr r3,.L52+20
 1895 0044 1B78     	 ldrb r3,[r3]
 1896 0046 5BB2     	 sxtb r3,r3
 1897 0048 184A     	 ldr r2,.L52+24
 1898 004a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1899 004e 9847     	 blx r3
 542:../Libraries/FT800-FT813-5.x/tft.c **** 
 543:../Libraries/FT800-FT813-5.x/tft.c **** 
 544:../Libraries/FT800-FT813-5.x/tft.c **** 
 545:../Libraries/FT800-FT813-5.x/tft.c **** 	// Wait for Display to be finished
 546:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1900              	 .loc 1 546 0
 1901 0050 00BF     	 nop
 1902              	.L50:
 1903              	 .loc 1 546 0 is_stmt 0 discriminator 1
 1904 0052 FFF7FEFF 	 bl EVE_busy
 1905 0056 0346     	 mov r3,r0
 1906 0058 002B     	 cmp r3,#0
 1907 005a FAD1     	 bne .L50
 547:../Libraries/FT800-FT813-5.x/tft.c **** 
 548:../Libraries/FT800-FT813-5.x/tft.c **** 	// Get size of the current display list
 549:../Libraries/FT800-FT813-5.x/tft.c **** 	num_dl_static = EVE_memRead16(REG_CMD_DL); // REG_CMD_DL = Command display list offset
 1908              	 .loc 1 549 0 is_stmt 1
 1909 005c 1448     	 ldr r0,.L52+28
 1910 005e FFF7FEFF 	 bl EVE_memRead16
 1911 0062 0346     	 mov r3,r0
 1912 0064 1A46     	 mov r2,r3
 1913 0066 134B     	 ldr r3,.L52+32
 1914 0068 1A60     	 str r2,[r3]
 550:../Libraries/FT800-FT813-5.x/tft.c **** 
 551:../Libraries/FT800-FT813-5.x/tft.c **** 	// Copy "num_dl_static" bytes from pointer "EVE_RAM_DL" to pointer "MEM_DL_STATIC"
 552:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_memcpy(MEM_DL_STATIC, EVE_RAM_DL, num_dl_static);
 1915              	 .loc 1 552 0
 1916 006a 124B     	 ldr r3,.L52+32
 1917 006c 1B68     	 ldr r3,[r3]
 1918 006e 4FF47F20 	 mov r0,#1044480
 1919 0072 4FF44011 	 mov r1,#3145728
 1920 0076 1A46     	 mov r2,r3
 1921 0078 FFF7FEFF 	 bl EVE_cmd_memcpy
 553:../Libraries/FT800-FT813-5.x/tft.c **** 	while (EVE_busy());
 1922              	 .loc 1 553 0
 1923 007c 00BF     	 nop
 1924              	.L51:
 1925              	 .loc 1 553 0 is_stmt 0 discriminator 1
 1926 007e FFF7FEFF 	 bl EVE_busy
 1927 0082 0346     	 mov r3,r0
 1928 0084 002B     	 cmp r3,#0
 1929 0086 FAD1     	 bne .L51
 554:../Libraries/FT800-FT813-5.x/tft.c **** 
 555:../Libraries/FT800-FT813-5.x/tft.c **** 	// The menu is now established and can be set as last known menu
 556:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_last_Menu = TFT_cur_Menu;
 1930              	 .loc 1 556 0 is_stmt 1
 1931 0088 074B     	 ldr r3,.L52+20
 1932 008a 1A78     	 ldrb r2,[r3]
 1933 008c 0A4B     	 ldr r3,.L52+36
 1934 008e 1A70     	 strb r2,[r3]
 557:../Libraries/FT800-FT813-5.x/tft.c **** }
 1935              	 .loc 1 557 0
 1936 0090 80BD     	 pop {r7,pc}
 1937              	.L53:
 1938 0092 00BF     	 .align 2
 1939              	.L52:
 1940 0094 01000003 	 .word 50331649
 1941 0098 EEF1F500 	 .word 16118254
 1942 009c EEF1F504 	 .word 83227118
 1943 00a0 0900001F 	 .word 520093705
 1944 00a4 1001F040 	 .word 1089470736
 1945 00a8 00000000 	 .word TFT_cur_Menu
 1946 00ac 00000000 	 .word TFT_display_static_cur_Menu__fptr_arr
 1947 00b0 00213000 	 .word 3154176
 1948 00b4 00000000 	 .word num_dl_static
 1949 00b8 00000000 	 .word TFT_last_Menu
 1950              	 .cfi_endproc
 1951              	.LFE451:
 1953              	 .section .text.TFT_touch,"ax",%progbits
 1954              	 .align 2
 1955              	 .global TFT_touch
 1956              	 .thumb
 1957              	 .thumb_func
 1959              	TFT_touch:
 1960              	.LFB452:
 558:../Libraries/FT800-FT813-5.x/tft.c **** 
 559:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch(void)
 560:../Libraries/FT800-FT813-5.x/tft.c **** {
 1961              	 .loc 1 560 0
 1962              	 .cfi_startproc
 1963              	 
 1964              	 
 1965 0000 80B5     	 push {r7,lr}
 1966              	.LCFI18:
 1967              	 .cfi_def_cfa_offset 8
 1968              	 .cfi_offset 7,-8
 1969              	 .cfi_offset 14,-4
 1970 0002 84B0     	 sub sp,sp,#16
 1971              	.LCFI19:
 1972              	 .cfi_def_cfa_offset 24
 1973 0004 00AF     	 add r7,sp,#0
 1974              	.LCFI20:
 1975              	 .cfi_def_cfa_register 7
 561:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Check for touch events and setup vars for TFT_display() (Buttons). Created by Rudolph Riedel, 
 562:../Libraries/FT800-FT813-5.x/tft.c **** 	// Init vars
 563:../Libraries/FT800-FT813-5.x/tft.c **** 	uint8_t tag; // temporary store of received touched tag
 564:../Libraries/FT800-FT813-5.x/tft.c **** 	
 565:../Libraries/FT800-FT813-5.x/tft.c **** 	// If Display is still busy, skip this evaluation to prevent hanging, glitches and flickers
 566:../Libraries/FT800-FT813-5.x/tft.c **** 	if(EVE_busy()) { return; } /* is EVE still processing the last display list? */
 1976              	 .loc 1 566 0
 1977 0006 FFF7FEFF 	 bl EVE_busy
 1978 000a 0346     	 mov r3,r0
 1979 000c 002B     	 cmp r3,#0
 1980 000e 00D0     	 beq .L55
 1981 0010 C7E0     	 b .L54
 1982              	.L55:
 567:../Libraries/FT800-FT813-5.x/tft.c **** 
 568:../Libraries/FT800-FT813-5.x/tft.c **** 	// Read the value for the first touch point
 569:../Libraries/FT800-FT813-5.x/tft.c **** 	tag = EVE_memRead8(REG_TOUCH_TAG);
 1983              	 .loc 1 569 0
 1984 0012 6548     	 ldr r0,.L74
 1985 0014 FFF7FEFF 	 bl EVE_memRead8
 1986 0018 0346     	 mov r3,r0
 1987 001a FB73     	 strb r3,[r7,#15]
 570:../Libraries/FT800-FT813-5.x/tft.c **** 	TouchXY = EVE_memRead32(REG_TOUCH_SCREEN_XY);
 1988              	 .loc 1 570 0
 1989 001c 6348     	 ldr r0,.L74+4
 1990 001e FFF7FEFF 	 bl EVE_memRead32
 1991 0022 0246     	 mov r2,r0
 1992 0024 624B     	 ldr r3,.L74+8
 1993 0026 1A60     	 str r2,[r3]
 571:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t Y = TouchXY;
 1994              	 .loc 1 571 0
 1995 0028 614B     	 ldr r3,.L74+8
 1996 002a 1B68     	 ldr r3,[r3]
 1997 002c BB81     	 strh r3,[r7,#12]
 572:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t X = TouchXY >> 16;
 1998              	 .loc 1 572 0
 1999 002e 604B     	 ldr r3,.L74+8
 2000 0030 1B68     	 ldr r3,[r3]
 2001 0032 1B0C     	 lsrs r3,r3,#16
 2002 0034 7B81     	 strh r3,[r7,#10]
 573:../Libraries/FT800-FT813-5.x/tft.c **** 
 574:../Libraries/FT800-FT813-5.x/tft.c **** 
 575:../Libraries/FT800-FT813-5.x/tft.c **** 	if(swipeInProgress){
 2003              	 .loc 1 575 0
 2004 0036 5F4B     	 ldr r3,.L74+12
 2005 0038 1B78     	 ldrb r3,[r3]
 2006 003a 002B     	 cmp r3,#0
 2007 003c 00F08A80 	 beq .L57
 576:../Libraries/FT800-FT813-5.x/tft.c **** 
 577:../Libraries/FT800-FT813-5.x/tft.c **** 		if(tag == 1 && X < 32768 && Y < 32768){
 2008              	 .loc 1 577 0
 2009 0040 FB7B     	 ldrb r3,[r7,#15]
 2010 0042 012B     	 cmp r3,#1
 2011 0044 43D1     	 bne .L58
 2012              	 .loc 1 577 0 is_stmt 0 discriminator 1
 2013 0046 7B89     	 ldrh r3,[r7,#10]
 2014 0048 1BB2     	 sxth r3,r3
 2015 004a 002B     	 cmp r3,#0
 2016 004c 3FDB     	 blt .L58
 2017              	 .loc 1 577 0 discriminator 2
 2018 004e BB89     	 ldrh r3,[r7,#12]
 2019 0050 1BB2     	 sxth r3,r3
 2020 0052 002B     	 cmp r3,#0
 2021 0054 3BDB     	 blt .L58
 2022              	.LBB13:
 578:../Libraries/FT800-FT813-5.x/tft.c **** 			int32_t swipe_X = BGtouchInitial_X - X;
 2023              	 .loc 1 578 0 is_stmt 1
 2024 0056 584B     	 ldr r3,.L74+16
 2025 0058 1B88     	 ldrh r3,[r3]
 2026 005a 1A46     	 mov r2,r3
 2027 005c 7B89     	 ldrh r3,[r7,#10]
 2028 005e D31A     	 subs r3,r2,r3
 2029 0060 7B60     	 str r3,[r7,#4]
 579:../Libraries/FT800-FT813-5.x/tft.c **** 			int32_t swipe_Y = BGtouchInitial_Y - Y;
 2030              	 .loc 1 579 0
 2031 0062 564B     	 ldr r3,.L74+20
 2032 0064 1B88     	 ldrh r3,[r3]
 2033 0066 1A46     	 mov r2,r3
 2034 0068 BB89     	 ldrh r3,[r7,#12]
 2035 006a D31A     	 subs r3,r2,r3
 2036 006c 3B60     	 str r3,[r7]
 2037              	.LBB14:
 580:../Libraries/FT800-FT813-5.x/tft.c **** 
 581:../Libraries/FT800-FT813-5.x/tft.c **** 			if(abs(swipe_X) > abs(swipe_Y)){
 2038              	 .loc 1 581 0
 2039 006e 7B68     	 ldr r3,[r7,#4]
 2040 0070 83EAE372 	 eor r2,r3,r3,asr#31
 2041 0074 A2EBE372 	 sub r2,r2,r3,asr#31
 2042 0078 3B68     	 ldr r3,[r7]
 2043 007a 002B     	 cmp r3,#0
 2044 007c B8BF     	 it lt
 2045 007e 5B42     	 rsblt r3,r3,#0
 2046 0080 9A42     	 cmp r2,r3
 2047 0082 12DD     	 ble .L59
 582:../Libraries/FT800-FT813-5.x/tft.c **** 				if(swipe_X > 50)      	// swipe to left
 2048              	 .loc 1 582 0
 2049 0084 7B68     	 ldr r3,[r7,#4]
 2050 0086 322B     	 cmp r3,#50
 2051 0088 03DD     	 ble .L60
 583:../Libraries/FT800-FT813-5.x/tft.c **** 					swipeDetect = Left;
 2052              	 .loc 1 583 0
 2053 008a 4D4B     	 ldr r3,.L74+24
 2054 008c 0322     	 movs r2,#3
 2055 008e 1A70     	 strb r2,[r3]
 2056 0090 1DE0     	 b .L58
 2057              	.L60:
 584:../Libraries/FT800-FT813-5.x/tft.c **** 				else if(swipe_X < -50)	// swipe to right
 2058              	 .loc 1 584 0
 2059 0092 7B68     	 ldr r3,[r7,#4]
 2060 0094 13F1320F 	 cmn r3,#50
 2061 0098 03DA     	 bge .L62
 585:../Libraries/FT800-FT813-5.x/tft.c **** 					swipeDetect = Right;
 2062              	 .loc 1 585 0
 2063 009a 494B     	 ldr r3,.L74+24
 2064 009c 0422     	 movs r2,#4
 2065 009e 1A70     	 strb r2,[r3]
 2066 00a0 15E0     	 b .L58
 2067              	.L62:
 586:../Libraries/FT800-FT813-5.x/tft.c **** 				else
 587:../Libraries/FT800-FT813-5.x/tft.c **** 					swipeDetect = None;
 2068              	 .loc 1 587 0
 2069 00a2 474B     	 ldr r3,.L74+24
 2070 00a4 0022     	 movs r2,#0
 2071 00a6 1A70     	 strb r2,[r3]
 2072 00a8 11E0     	 b .L58
 2073              	.L59:
 588:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 589:../Libraries/FT800-FT813-5.x/tft.c **** 			else{
 590:../Libraries/FT800-FT813-5.x/tft.c **** 				if(swipe_Y > 50)		// swipe down
 2074              	 .loc 1 590 0
 2075 00aa 3B68     	 ldr r3,[r7]
 2076 00ac 322B     	 cmp r3,#50
 2077 00ae 03DD     	 ble .L63
 591:../Libraries/FT800-FT813-5.x/tft.c **** 					swipeDetect = Down;
 2078              	 .loc 1 591 0
 2079 00b0 434B     	 ldr r3,.L74+24
 2080 00b2 0222     	 movs r2,#2
 2081 00b4 1A70     	 strb r2,[r3]
 2082 00b6 0AE0     	 b .L58
 2083              	.L63:
 592:../Libraries/FT800-FT813-5.x/tft.c **** 				else if(swipe_Y < -50)	// swipe up
 2084              	 .loc 1 592 0
 2085 00b8 3B68     	 ldr r3,[r7]
 2086 00ba 13F1320F 	 cmn r3,#50
 2087 00be 03DA     	 bge .L64
 593:../Libraries/FT800-FT813-5.x/tft.c **** 					swipeDetect = Up;
 2088              	 .loc 1 593 0
 2089 00c0 3F4B     	 ldr r3,.L74+24
 2090 00c2 0122     	 movs r2,#1
 2091 00c4 1A70     	 strb r2,[r3]
 2092 00c6 02E0     	 b .L58
 2093              	.L64:
 594:../Libraries/FT800-FT813-5.x/tft.c **** 				else
 595:../Libraries/FT800-FT813-5.x/tft.c **** 					swipeDetect = None;
 2094              	 .loc 1 595 0
 2095 00c8 3D4B     	 ldr r3,.L74+24
 2096 00ca 0022     	 movs r2,#0
 2097 00cc 1A70     	 strb r2,[r3]
 2098              	.L58:
 2099              	.LBE14:
 2100              	.LBE13:
 596:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 597:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 598:../Libraries/FT800-FT813-5.x/tft.c **** 
 599:../Libraries/FT800-FT813-5.x/tft.c **** 
 600:../Libraries/FT800-FT813-5.x/tft.c **** 
 601:../Libraries/FT800-FT813-5.x/tft.c **** 
 602:../Libraries/FT800-FT813-5.x/tft.c **** 		if(tag == 0) swipeDebounce++;
 2101              	 .loc 1 602 0
 2102 00ce FB7B     	 ldrb r3,[r7,#15]
 2103 00d0 002B     	 cmp r3,#0
 2104 00d2 05D1     	 bne .L65
 2105              	 .loc 1 602 0 is_stmt 0 discriminator 1
 2106 00d4 3B4B     	 ldr r3,.L74+28
 2107 00d6 1B78     	 ldrb r3,[r3]
 2108 00d8 0133     	 adds r3,r3,#1
 2109 00da DAB2     	 uxtb r2,r3
 2110 00dc 394B     	 ldr r3,.L74+28
 2111 00de 1A70     	 strb r2,[r3]
 2112              	.L65:
 603:../Libraries/FT800-FT813-5.x/tft.c **** 
 604:../Libraries/FT800-FT813-5.x/tft.c **** 		if(swipeDebounce >= 5){
 2113              	 .loc 1 604 0 is_stmt 1
 2114 00e0 384B     	 ldr r3,.L74+28
 2115 00e2 1B78     	 ldrb r3,[r3]
 2116 00e4 042B     	 cmp r3,#4
 2117 00e6 5CD9     	 bls .L54
 605:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeInProgress = 0;
 2118              	 .loc 1 605 0
 2119 00e8 324B     	 ldr r3,.L74+12
 2120 00ea 0022     	 movs r2,#0
 2121 00ec 1A70     	 strb r2,[r3]
 606:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeDebounce = 0;
 2122              	 .loc 1 606 0
 2123 00ee 354B     	 ldr r3,.L74+28
 2124 00f0 0022     	 movs r2,#0
 2125 00f2 1A70     	 strb r2,[r3]
 607:../Libraries/FT800-FT813-5.x/tft.c **** 
 608:../Libraries/FT800-FT813-5.x/tft.c **** 			// Change menu if swipe was detected
 609:../Libraries/FT800-FT813-5.x/tft.c **** 			if(swipeDetect == Left && TFT_cur_Menu < (TFT_MENU_SIZE-1)) TFT_cur_Menu++;
 2126              	 .loc 1 609 0
 2127 00f4 324B     	 ldr r3,.L74+24
 2128 00f6 1B78     	 ldrb r3,[r3]
 2129 00f8 032B     	 cmp r3,#3
 2130 00fa 0DD1     	 bne .L67
 2131              	 .loc 1 609 0 is_stmt 0 discriminator 1
 2132 00fc 324B     	 ldr r3,.L74+32
 2133 00fe 1B78     	 ldrb r3,[r3]
 2134 0100 002B     	 cmp r3,#0
 2135 0102 09D1     	 bne .L67
 2136              	 .loc 1 609 0 discriminator 2
 2137 0104 304B     	 ldr r3,.L74+32
 2138 0106 1B78     	 ldrb r3,[r3]
 2139 0108 DBB2     	 uxtb r3,r3
 2140 010a DBB2     	 uxtb r3,r3
 2141 010c 0133     	 adds r3,r3,#1
 2142 010e DBB2     	 uxtb r3,r3
 2143 0110 DAB2     	 uxtb r2,r3
 2144 0112 2D4B     	 ldr r3,.L74+32
 2145 0114 1A70     	 strb r2,[r3]
 2146 0116 11E0     	 b .L68
 2147              	.L67:
 610:../Libraries/FT800-FT813-5.x/tft.c **** 			else if(swipeDetect == Right && TFT_cur_Menu > 0) TFT_cur_Menu--;
 2148              	 .loc 1 610 0 is_stmt 1
 2149 0118 294B     	 ldr r3,.L74+24
 2150 011a 1B78     	 ldrb r3,[r3]
 2151 011c 042B     	 cmp r3,#4
 2152 011e 0DD1     	 bne .L68
 2153              	 .loc 1 610 0 is_stmt 0 discriminator 1
 2154 0120 294B     	 ldr r3,.L74+32
 2155 0122 1B78     	 ldrb r3,[r3]
 2156 0124 5BB2     	 sxtb r3,r3
 2157 0126 002B     	 cmp r3,#0
 2158 0128 08DD     	 ble .L68
 2159              	 .loc 1 610 0 discriminator 2
 2160 012a 274B     	 ldr r3,.L74+32
 2161 012c 1B78     	 ldrb r3,[r3]
 2162 012e DBB2     	 uxtb r3,r3
 2163 0130 DBB2     	 uxtb r3,r3
 2164 0132 013B     	 subs r3,r3,#1
 2165 0134 DBB2     	 uxtb r3,r3
 2166 0136 DAB2     	 uxtb r2,r3
 2167 0138 234B     	 ldr r3,.L74+32
 2168 013a 1A70     	 strb r2,[r3]
 2169              	.L68:
 611:../Libraries/FT800-FT813-5.x/tft.c **** 
 612:../Libraries/FT800-FT813-5.x/tft.c **** 			//if(TFT_cur_Menu > TFT_MENU_SIZE-1) TFT_cur_Menu = TFT_MENU_SIZE-1;
 613:../Libraries/FT800-FT813-5.x/tft.c **** 			//else if(TFT_cur_Menu < 0) TFT_cur_Menu = 0;
 614:../Libraries/FT800-FT813-5.x/tft.c **** 
 615:../Libraries/FT800-FT813-5.x/tft.c **** 			// Reset swipe feature variables
 616:../Libraries/FT800-FT813-5.x/tft.c **** 			BGtouchInitial_X = 32768;
 2170              	 .loc 1 616 0 is_stmt 1
 2171 013c 1E4B     	 ldr r3,.L74+16
 2172 013e 4FF40042 	 mov r2,#32768
 2173 0142 1A80     	 strh r2,[r3]
 617:../Libraries/FT800-FT813-5.x/tft.c **** 			BGtouchInitial_Y = 32768;
 2174              	 .loc 1 617 0
 2175 0144 1D4B     	 ldr r3,.L74+20
 2176 0146 4FF40042 	 mov r2,#32768
 2177 014a 1A80     	 strh r2,[r3]
 618:../Libraries/FT800-FT813-5.x/tft.c **** 			swipeDetect = None;
 2178              	 .loc 1 618 0
 2179 014c 1C4B     	 ldr r3,.L74+24
 2180 014e 0022     	 movs r2,#0
 2181 0150 1A70     	 strb r2,[r3]
 2182 0152 26E0     	 b .L54
 2183              	.L57:
 619:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 620:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 621:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 622:../Libraries/FT800-FT813-5.x/tft.c **** 		// Execute action based on touched tag
 623:../Libraries/FT800-FT813-5.x/tft.c **** 		switch(tag)
 2184              	 .loc 1 623 0
 2185 0154 FB7B     	 ldrb r3,[r7,#15]
 2186 0156 002B     	 cmp r3,#0
 2187 0158 02D0     	 beq .L70
 2188 015a 012B     	 cmp r3,#1
 2189 015c 04D0     	 beq .L71
 2190 015e 16E0     	 b .L73
 2191              	.L70:
 624:../Libraries/FT800-FT813-5.x/tft.c **** 		{
 625:../Libraries/FT800-FT813-5.x/tft.c **** 			// nothing touched - reset states and locks
 626:../Libraries/FT800-FT813-5.x/tft.c **** 			case 0:
 627:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 0;
 2192              	 .loc 1 627 0
 2193 0160 1A4B     	 ldr r3,.L74+36
 2194 0162 0022     	 movs r2,#0
 2195 0164 1A70     	 strb r2,[r3]
 628:../Libraries/FT800-FT813-5.x/tft.c **** 				break;
 2196              	 .loc 1 628 0
 2197 0166 1CE0     	 b .L54
 2198              	.L71:
 629:../Libraries/FT800-FT813-5.x/tft.c **** 			case 1:
 630:../Libraries/FT800-FT813-5.x/tft.c **** 
 631:../Libraries/FT800-FT813-5.x/tft.c **** 				// Detect initial touch on BG - save coordinates to determine to where the user swipes
 632:../Libraries/FT800-FT813-5.x/tft.c **** 				if(X < 32768 && Y < 32768){
 2199              	 .loc 1 632 0
 2200 0168 7B89     	 ldrh r3,[r7,#10]
 2201 016a 1BB2     	 sxth r3,r3
 2202 016c 002B     	 cmp r3,#0
 2203 016e 0DDB     	 blt .L72
 2204              	 .loc 1 632 0 is_stmt 0 discriminator 1
 2205 0170 BB89     	 ldrh r3,[r7,#12]
 2206 0172 1BB2     	 sxth r3,r3
 2207 0174 002B     	 cmp r3,#0
 2208 0176 09DB     	 blt .L72
 633:../Libraries/FT800-FT813-5.x/tft.c **** 					BGtouchInitial_X = X;
 2209              	 .loc 1 633 0 is_stmt 1
 2210 0178 0F4A     	 ldr r2,.L74+16
 2211 017a 7B89     	 ldrh r3,[r7,#10]
 2212 017c 1380     	 strh r3,[r2]
 634:../Libraries/FT800-FT813-5.x/tft.c **** 					BGtouchInitial_Y = Y;
 2213              	 .loc 1 634 0
 2214 017e 0F4A     	 ldr r2,.L74+20
 2215 0180 BB89     	 ldrh r3,[r7,#12]
 2216 0182 1380     	 strh r3,[r2]
 635:../Libraries/FT800-FT813-5.x/tft.c **** 					swipeInProgress = 1;
 2217              	 .loc 1 635 0
 2218 0184 0B4B     	 ldr r3,.L74+12
 2219 0186 0122     	 movs r2,#1
 2220 0188 1A70     	 strb r2,[r3]
 636:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 637:../Libraries/FT800-FT813-5.x/tft.c **** 
 638:../Libraries/FT800-FT813-5.x/tft.c **** 
 639:../Libraries/FT800-FT813-5.x/tft.c **** 				break;
 2221              	 .loc 1 639 0
 2222 018a 0AE0     	 b .L54
 2223              	.L72:
 2224 018c 09E0     	 b .L54
 2225              	.L73:
 640:../Libraries/FT800-FT813-5.x/tft.c **** 			default:
 641:../Libraries/FT800-FT813-5.x/tft.c **** 				// Execute current menu specific code
 642:../Libraries/FT800-FT813-5.x/tft.c **** 				(*TFT_touch_cur_Menu__fptr_arr[TFT_cur_Menu])(tag);
 2226              	 .loc 1 642 0
 2227 018e 0E4B     	 ldr r3,.L74+32
 2228 0190 1B78     	 ldrb r3,[r3]
 2229 0192 5BB2     	 sxtb r3,r3
 2230 0194 0E4A     	 ldr r2,.L74+40
 2231 0196 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2232 019a FA7B     	 ldrb r2,[r7,#15]
 2233 019c 1046     	 mov r0,r2
 2234 019e 9847     	 blx r3
 643:../Libraries/FT800-FT813-5.x/tft.c **** 				break;
 2235              	 .loc 1 643 0
 2236 01a0 00BF     	 nop
 2237              	.L54:
 644:../Libraries/FT800-FT813-5.x/tft.c **** 		}
 645:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 646:../Libraries/FT800-FT813-5.x/tft.c **** 	//printf("%d %d %d %d-%d\n", swipeInProgress, (int)swipeDetect, TFT_cur_Menu, BGtouchInitial_X, X)
 647:../Libraries/FT800-FT813-5.x/tft.c **** }
 2238              	 .loc 1 647 0
 2239 01a2 1037     	 adds r7,r7,#16
 2240              	.LCFI21:
 2241              	 .cfi_def_cfa_offset 8
 2242 01a4 BD46     	 mov sp,r7
 2243              	.LCFI22:
 2244              	 .cfi_def_cfa_register 13
 2245              	 
 2246 01a6 80BD     	 pop {r7,pc}
 2247              	.L75:
 2248              	 .align 2
 2249              	.L74:
 2250 01a8 2C213000 	 .word 3154220
 2251 01ac 24213000 	 .word 3154212
 2252 01b0 00000000 	 .word TouchXY
 2253 01b4 00000000 	 .word swipeInProgress
 2254 01b8 00000000 	 .word BGtouchInitial_X
 2255 01bc 00000000 	 .word BGtouchInitial_Y
 2256 01c0 00000000 	 .word swipeDetect
 2257 01c4 00000000 	 .word swipeDebounce
 2258 01c8 00000000 	 .word TFT_cur_Menu
 2259 01cc 00000000 	 .word toggle_lock
 2260 01d0 00000000 	 .word TFT_touch_cur_Menu__fptr_arr
 2261              	 .cfi_endproc
 2262              	.LFE452:
 2264              	 .section .text.TFT_display,"ax",%progbits
 2265              	 .align 2
 2266              	 .global TFT_display
 2267              	 .thumb
 2268              	 .thumb_func
 2270              	TFT_display:
 2271              	.LFB453:
 648:../Libraries/FT800-FT813-5.x/tft.c **** 
 649:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display(void)
 650:../Libraries/FT800-FT813-5.x/tft.c **** {
 2272              	 .loc 1 650 0
 2273              	 .cfi_startproc
 2274              	 
 2275              	 
 2276 0000 80B5     	 push {r7,lr}
 2277              	.LCFI23:
 2278              	 .cfi_def_cfa_offset 8
 2279              	 .cfi_offset 7,-8
 2280              	 .cfi_offset 14,-4
 2281 0002 00AF     	 add r7,sp,#0
 2282              	.LCFI24:
 2283              	 .cfi_def_cfa_register 7
 651:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Dynamic portion of display-handling, meant to be called every 20ms or more. Created by Rudolph
 652:../Libraries/FT800-FT813-5.x/tft.c **** 	///
 653:../Libraries/FT800-FT813-5.x/tft.c **** 	/// The inputs are used to draw the Graph data. Note that also some predefined graph settings are 
 654:../Libraries/FT800-FT813-5.x/tft.c **** 
 655:../Libraries/FT800-FT813-5.x/tft.c **** 	if(tft_active != 0)
 2284              	 .loc 1 655 0
 2285 0004 214B     	 ldr r3,.L79
 2286 0006 1B78     	 ldrb r3,[r3]
 2287 0008 002B     	 cmp r3,#0
 2288 000a 3ED0     	 beq .L76
 656:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 657:../Libraries/FT800-FT813-5.x/tft.c **** 		// Setup static part of the current menu - only needed once when the menu is changed
 658:../Libraries/FT800-FT813-5.x/tft.c **** 		if(TFT_last_Menu != TFT_cur_Menu)
 2289              	 .loc 1 658 0
 2290 000c 204B     	 ldr r3,.L79+4
 2291 000e 1A78     	 ldrb r2,[r3]
 2292 0010 204B     	 ldr r3,.L79+8
 2293 0012 1B78     	 ldrb r3,[r3]
 2294 0014 52B2     	 sxtb r2,r2
 2295 0016 5BB2     	 sxtb r3,r3
 2296 0018 9A42     	 cmp r2,r3
 2297 001a 01D0     	 beq .L78
 659:../Libraries/FT800-FT813-5.x/tft.c **** 			TFT_display_static();
 2298              	 .loc 1 659 0
 2299 001c FFF7FEFF 	 bl TFT_display_static
 2300              	.L78:
 660:../Libraries/FT800-FT813-5.x/tft.c **** 
 661:../Libraries/FT800-FT813-5.x/tft.c **** 		// Debug
 662:../Libraries/FT800-FT813-5.x/tft.c **** 		#if defined (EVE_DMA)
 663:../Libraries/FT800-FT813-5.x/tft.c **** 			uint16_t cmd_fifo_size;
 664:../Libraries/FT800-FT813-5.x/tft.c **** 			cmd_fifo_size = EVE_dma_buffer_index*4; /* without DMA there is no way to tell how many bytes ar
 665:../Libraries/FT800-FT813-5.x/tft.c **** 		#endif
 666:../Libraries/FT800-FT813-5.x/tft.c **** 
 667:../Libraries/FT800-FT813-5.x/tft.c **** 		// Get size of last display list to be printed on screen (section "Debug Values")
 668:../Libraries/FT800-FT813-5.x/tft.c **** 		display_list_size = EVE_memRead16(REG_CMD_DL);
 2301              	 .loc 1 668 0
 2302 0020 1D48     	 ldr r0,.L79+12
 2303 0022 FFF7FEFF 	 bl EVE_memRead16
 2304 0026 0346     	 mov r3,r0
 2305 0028 1A46     	 mov r2,r3
 2306 002a 1C4B     	 ldr r3,.L79+16
 2307 002c 1A80     	 strh r2,[r3]
 669:../Libraries/FT800-FT813-5.x/tft.c **** 		tracker = EVE_memRead32(REG_TRACKER);
 2308              	 .loc 1 669 0
 2309 002e 1C48     	 ldr r0,.L79+20
 2310 0030 FFF7FEFF 	 bl EVE_memRead32
 2311 0034 0246     	 mov r2,r0
 2312 0036 1B4B     	 ldr r3,.L79+24
 2313 0038 1A60     	 str r2,[r3]
 670:../Libraries/FT800-FT813-5.x/tft.c **** 
 671:../Libraries/FT800-FT813-5.x/tft.c **** 		// Start Burst (start writing to the cmd-fifo as one stream of bytes, only sending the address on
 672:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_start_cmd_burst();
 2314              	 .loc 1 672 0
 2315 003a FFF7FEFF 	 bl EVE_start_cmd_burst
 673:../Libraries/FT800-FT813-5.x/tft.c **** 
 674:../Libraries/FT800-FT813-5.x/tft.c **** 
 675:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Start the actual display list
 676:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_DLSTART);
 2316              	 .loc 1 676 0
 2317 003e 6FF0FF00 	 mvn r0,#255
 2318 0042 FFF7FEFF 	 bl EVE_cmd_dl_burst
 677:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR_RGB | WHITE); /* set the default clear color to white */
 2319              	 .loc 1 677 0
 2320 0046 6FF07D40 	 mvn r0,#-50331648
 2321 004a FFF7FEFF 	 bl EVE_cmd_dl_burst
 678:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG); /* clear the screen - this and the prev
 2322              	 .loc 1 678 0
 2323 004e 1648     	 ldr r0,.L79+28
 2324 0050 FFF7FEFF 	 bl EVE_cmd_dl_burst
 679:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(TAG(0));
 2325              	 .loc 1 679 0
 2326 0054 4FF04070 	 mov r0,#50331648
 2327 0058 FFF7FEFF 	 bl EVE_cmd_dl_burst
 680:../Libraries/FT800-FT813-5.x/tft.c **** 
 681:../Libraries/FT800-FT813-5.x/tft.c **** 		// Insert static part of display-list from copy in gfx-mem
 682:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_append_burst(MEM_DL_STATIC, num_dl_static);
 2328              	 .loc 1 682 0
 2329 005c 134B     	 ldr r3,.L79+32
 2330 005e 1B68     	 ldr r3,[r3]
 2331 0060 4FF47F20 	 mov r0,#1044480
 2332 0064 1946     	 mov r1,r3
 2333 0066 FFF7FEFF 	 bl EVE_cmd_append_burst
 683:../Libraries/FT800-FT813-5.x/tft.c **** 
 684:../Libraries/FT800-FT813-5.x/tft.c **** 
 685:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Execute current menu specific code
 686:../Libraries/FT800-FT813-5.x/tft.c **** 		(*TFT_display_cur_Menu__fptr_arr[TFT_cur_Menu])();
 2334              	 .loc 1 686 0
 2335 006a 0A4B     	 ldr r3,.L79+8
 2336 006c 1B78     	 ldrb r3,[r3]
 2337 006e 5BB2     	 sxtb r3,r3
 2338 0070 0F4A     	 ldr r2,.L79+36
 2339 0072 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2340 0076 9847     	 blx r3
 687:../Libraries/FT800-FT813-5.x/tft.c **** 
 688:../Libraries/FT800-FT813-5.x/tft.c **** 
 689:../Libraries/FT800-FT813-5.x/tft.c **** 		/////////////// Finish Display list and burst
 690:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(DL_DISPLAY); /* instruct the graphics processor to show the list */
 2341              	 .loc 1 690 0
 2342 0078 0020     	 movs r0,#0
 2343 007a FFF7FEFF 	 bl EVE_cmd_dl_burst
 691:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_dl_burst(CMD_SWAP); /* make this list active */
 2344              	 .loc 1 691 0
 2345 007e 6FF0FE00 	 mvn r0,#254
 2346 0082 FFF7FEFF 	 bl EVE_cmd_dl_burst
 692:../Libraries/FT800-FT813-5.x/tft.c **** 
 693:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_end_cmd_burst(); /* stop writing to the cmd-fifo, the cmd-FIFO will be executed automatically
 2347              	 .loc 1 693 0
 2348 0086 FFF7FEFF 	 bl EVE_end_cmd_burst
 2349              	.L76:
 694:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 695:../Libraries/FT800-FT813-5.x/tft.c **** }
 2350              	 .loc 1 695 0
 2351 008a 80BD     	 pop {r7,pc}
 2352              	.L80:
 2353              	 .align 2
 2354              	.L79:
 2355 008c 00000000 	 .word tft_active
 2356 0090 00000000 	 .word TFT_last_Menu
 2357 0094 00000000 	 .word TFT_cur_Menu
 2358 0098 00213000 	 .word 3154176
 2359 009c 00000000 	 .word display_list_size
 2360 00a0 00903000 	 .word 3182592
 2361 00a4 00000000 	 .word tracker
 2362 00a8 07000026 	 .word 637534215
 2363 00ac 00000000 	 .word num_dl_static
 2364 00b0 00000000 	 .word TFT_display_cur_Menu__fptr_arr
 2365              	 .cfi_endproc
 2366              	.LFE453:
 2368              	 .section .rodata
 2369 005a 0000     	 .align 2
 2370              	.LC7:
 2371 005c 444C2D73 	 .ascii "DL-size:\000"
 2371      697A653A 
 2371      00
 2372 0065 000000   	 .align 2
 2373              	.LC8:
 2374 0068 53656E73 	 .ascii "Sensor:\000"
 2374      6F723A00 
 2375              	 .section .text.TFT_display_static_menu0,"ax",%progbits
 2376              	 .align 2
 2377              	 .global TFT_display_static_menu0
 2378              	 .thumb
 2379              	 .thumb_func
 2381              	TFT_display_static_menu0:
 2382              	.LFB454:
 696:../Libraries/FT800-FT813-5.x/tft.c **** 
 697:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu0(void){
 2383              	 .loc 1 697 0
 2384              	 .cfi_startproc
 2385              	 
 2386              	 
 2387 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 2388              	.LCFI25:
 2389              	 .cfi_def_cfa_offset 32
 2390              	 .cfi_offset 4,-32
 2391              	 .cfi_offset 5,-28
 2392              	 .cfi_offset 6,-24
 2393              	 .cfi_offset 7,-20
 2394              	 .cfi_offset 8,-16
 2395              	 .cfi_offset 9,-12
 2396              	 .cfi_offset 10,-8
 2397              	 .cfi_offset 14,-4
 2398 0004 8AB0     	 sub sp,sp,#40
 2399              	.LCFI26:
 2400              	 .cfi_def_cfa_offset 72
 2401 0006 0AAF     	 add r7,sp,#40
 2402              	.LCFI27:
 2403              	 .cfi_def_cfa 7,32
 698:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw Banner and divider line on top
 699:../Libraries/FT800-FT813-5.x/tft.c **** 	// Banner
 700:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature*/
 2404              	 .loc 1 700 0
 2405 0008 3A48     	 ldr r0,.L82
 2406 000a FFF7FEFF 	 bl EVE_cmd_dl
 701:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 2407              	 .loc 1 701 0
 2408 000e 3A48     	 ldr r0,.L82+4
 2409 0010 FFF7FEFF 	 bl EVE_cmd_dl
 702:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 2410              	 .loc 1 702 0
 2411 0014 3948     	 ldr r0,.L82+8
 2412 0016 FFF7FEFF 	 bl EVE_cmd_dl
 703:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 2413              	 .loc 1 703 0
 2414 001a 3948     	 ldr r0,.L82+12
 2415 001c FFF7FEFF 	 bl EVE_cmd_dl
 704:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2416              	 .loc 1 704 0
 2417 0020 3848     	 ldr r0,.L82+16
 2418 0022 FFF7FEFF 	 bl EVE_cmd_dl
 705:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2419              	 .loc 1 705 0
 2420 0026 3848     	 ldr r0,.L82+20
 2421 0028 FFF7FEFF 	 bl EVE_cmd_dl
 706:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2422              	 .loc 1 706 0
 2423 002c 3748     	 ldr r0,.L82+24
 2424 002e FFF7FEFF 	 bl EVE_cmd_dl
 707:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2425              	 .loc 1 707 0
 2426 0032 3748     	 ldr r0,.L82+28
 2427 0034 FFF7FEFF 	 bl EVE_cmd_dl
 708:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2428              	 .loc 1 708 0
 2429 0038 4FF00450 	 mov r0,#553648128
 2430 003c FFF7FEFF 	 bl EVE_cmd_dl
 709:../Libraries/FT800-FT813-5.x/tft.c **** 	// Divider
 710:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 2431              	 .loc 1 710 0
 2432 0040 3448     	 ldr r0,.L82+32
 2433 0042 FFF7FEFF 	 bl EVE_cmd_dl
 711:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 2434              	 .loc 1 711 0
 2435 0046 3448     	 ldr r0,.L82+36
 2436 0048 FFF7FEFF 	 bl EVE_cmd_dl
 712:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2437              	 .loc 1 712 0
 2438 004c 2D48     	 ldr r0,.L82+16
 2439 004e FFF7FEFF 	 bl EVE_cmd_dl
 713:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2440              	 .loc 1 713 0
 2441 0052 2D48     	 ldr r0,.L82+20
 2442 0054 FFF7FEFF 	 bl EVE_cmd_dl
 714:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2443              	 .loc 1 714 0
 2444 0058 2C48     	 ldr r0,.L82+24
 2445 005a FFF7FEFF 	 bl EVE_cmd_dl
 715:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2446              	 .loc 1 715 0
 2447 005e 2C48     	 ldr r0,.L82+28
 2448 0060 FFF7FEFF 	 bl EVE_cmd_dl
 716:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2449              	 .loc 1 716 0
 2450 0064 4FF00450 	 mov r0,#553648128
 2451 0068 FFF7FEFF 	 bl EVE_cmd_dl
 717:../Libraries/FT800-FT813-5.x/tft.c **** 
 718:../Libraries/FT800-FT813-5.x/tft.c **** 	// Add the static text
 719:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 2452              	 .loc 1 719 0
 2453 006c 4FF04070 	 mov r0,#50331648
 2454 0070 FFF7FEFF 	 bl EVE_cmd_dl
 720:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 2455              	 .loc 1 720 0
 2456 0074 2748     	 ldr r0,.L82+32
 2457 0076 FFF7FEFF 	 bl EVE_cmd_dl
 721:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 722:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_text(10, EVE_VSIZE - 65, 26, 0, "Bytes: ");
 723:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 724:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 10, 26, 0, "DL-size:");
 2458              	 .loc 1 724 0
 2459 007a 284B     	 ldr r3,.L82+40
 2460 007c 0093     	 str r3,[sp]
 2461 007e 4FF4B470 	 mov r0,#360
 2462 0082 0A21     	 movs r1,#10
 2463 0084 1A22     	 movs r2,#26
 2464 0086 0023     	 movs r3,#0
 2465 0088 FFF7FEFF 	 bl EVE_cmd_text
 725:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 25, 26, 0, "Sensor:");
 2466              	 .loc 1 725 0
 2467 008c 244B     	 ldr r3,.L82+44
 2468 008e 0093     	 str r3,[sp]
 2469 0090 4FF4B470 	 mov r0,#360
 2470 0094 1921     	 movs r1,#25
 2471 0096 1A22     	 movs r2,#26
 2472 0098 0023     	 movs r3,#0
 2473 009a FFF7FEFF 	 bl EVE_cmd_text
 726:../Libraries/FT800-FT813-5.x/tft.c **** 
 727:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Write the static part of the Graph to the display list
 728:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphStatic(0, G_x, G_y, G_width, G_height, G_PADDING, G_amp_max, G_t_max, G_h_grid_lines, G_v
 2474              	 .loc 1 728 0
 2475 009e 214B     	 ldr r3,.L82+48
 2476 00a0 B3F800A0 	 ldrh r10,[r3]
 2477 00a4 204B     	 ldr r3,.L82+52
 2478 00a6 B3F800C0 	 ldrh ip,[r3]
 2479 00aa 204B     	 ldr r3,.L82+56
 2480 00ac B3F800E0 	 ldrh lr,[r3]
 2481 00b0 1F4B     	 ldr r3,.L82+60
 2482 00b2 1E88     	 ldrh r6,[r3]
 2483 00b4 1F4B     	 ldr r3,.L82+64
 2484 00b6 D3E90089 	 ldrd r8,[r3]
 2485 00ba 1F4B     	 ldr r3,.L82+68
 2486 00bc D3E90045 	 ldrd r4,[r3]
 2487 00c0 1E4B     	 ldr r3,.L82+72
 2488 00c2 D3E90001 	 ldrd r0,[r3]
 2489 00c6 1E4B     	 ldr r3,.L82+76
 2490 00c8 D3E90023 	 ldrd r2,[r3]
 2491 00cc 0096     	 str r6,[sp]
 2492 00ce 0A26     	 movs r6,#10
 2493 00d0 0196     	 str r6,[sp,#4]
 2494 00d2 CDE90289 	 strd r8,[sp,#8]
 2495 00d6 CDE90445 	 strd r4,[sp,#16]
 2496 00da CDE90601 	 strd r0,[sp,#24]
 2497 00de CDE90823 	 strd r2,[sp,#32]
 2498 00e2 0020     	 movs r0,#0
 2499 00e4 5146     	 mov r1,r10
 2500 00e6 6246     	 mov r2,ip
 2501 00e8 7346     	 mov r3,lr
 2502 00ea FFF7FEFF 	 bl TFT_GraphStatic
 729:../Libraries/FT800-FT813-5.x/tft.c **** 
 730:../Libraries/FT800-FT813-5.x/tft.c **** 
 731:../Libraries/FT800-FT813-5.x/tft.c **** }
 2503              	 .loc 1 731 0
 2504 00ee BD46     	 mov sp,r7
 2505              	.LCFI28:
 2506              	 .cfi_def_cfa_register 13
 2507              	 
 2508 00f0 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 2509              	.L83:
 2510              	 .align 2
 2511              	.L82:
 2512 00f4 01000003 	 .word 50331649
 2513 00f8 1000000E 	 .word 234881040
 2514 00fc 4B586404 	 .word 73685067
 2515 0100 0700001F 	 .word 520093703
 2516 0104 42000040 	 .word 1073741890
 2517 0108 42008C40 	 .word 1082916930
 2518 010c 3200A040 	 .word 1084227634
 2519 0110 3200F040 	 .word 1089470514
 2520 0114 29CDF304 	 .word 83086633
 2521 0118 0400001F 	 .word 520093700
 2522 011c 5C000000 	 .word .LC7
 2523 0120 68000000 	 .word .LC8
 2524 0124 00000000 	 .word G_x
 2525 0128 00000000 	 .word G_y
 2526 012c 00000000 	 .word G_width
 2527 0130 00000000 	 .word G_height
 2528 0134 00000000 	 .word G_amp_max
 2529 0138 00000000 	 .word G_t_max
 2530 013c 00000000 	 .word G_h_grid_lines
 2531 0140 00000000 	 .word G_v_grid_lines
 2532              	 .cfi_endproc
 2533              	.LFE454:
 2535              	 .section .rodata
 2536              	 .align 2
 2537              	.LC9:
 2538 0070 583A00   	 .ascii "X:\000"
 2539 0073 00       	 .align 2
 2540              	.LC10:
 2541 0074 593A00   	 .ascii "Y:\000"
 2542              	 .section .text.TFT_display_static_menu1,"ax",%progbits
 2543              	 .align 2
 2544              	 .global TFT_display_static_menu1
 2545              	 .thumb
 2546              	 .thumb_func
 2548              	TFT_display_static_menu1:
 2549              	.LFB455:
 732:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_static_menu1(void){
 2550              	 .loc 1 732 0
 2551              	 .cfi_startproc
 2552              	 
 2553              	 
 2554 0000 80B5     	 push {r7,lr}
 2555              	.LCFI29:
 2556              	 .cfi_def_cfa_offset 8
 2557              	 .cfi_offset 7,-8
 2558              	 .cfi_offset 14,-4
 2559 0002 82B0     	 sub sp,sp,#8
 2560              	.LCFI30:
 2561              	 .cfi_def_cfa_offset 16
 2562 0004 02AF     	 add r7,sp,#8
 2563              	.LCFI31:
 2564              	 .cfi_def_cfa 7,8
 733:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Draw Banner and divider line on top
 734:../Libraries/FT800-FT813-5.x/tft.c **** 	// Banner
 735:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(1)); /* give everything considered background area tag 1 -> used for wipe feature*/
 2565              	 .loc 1 735 0
 2566 0006 2648     	 ldr r0,.L85
 2567 0008 FFF7FEFF 	 bl EVE_cmd_dl
 736:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(LINE_WIDTH(1*16)); /* size is in 1/16 pixel */
 2568              	 .loc 1 736 0
 2569 000c 2548     	 ldr r0,.L85+4
 2570 000e FFF7FEFF 	 bl EVE_cmd_dl
 737:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_BANNERCOLOR);
 2571              	 .loc 1 737 0
 2572 0012 2548     	 ldr r0,.L85+8
 2573 0014 FFF7FEFF 	 bl EVE_cmd_dl
 738:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_EDGE_STRIP_A);
 2574              	 .loc 1 738 0
 2575 0018 2448     	 ldr r0,.L85+12
 2576 001a FFF7FEFF 	 bl EVE_cmd_dl
 739:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2577              	 .loc 1 739 0
 2578 001e 2448     	 ldr r0,.L85+16
 2579 0020 FFF7FEFF 	 bl EVE_cmd_dl
 740:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2580              	 .loc 1 740 0
 2581 0024 2348     	 ldr r0,.L85+20
 2582 0026 FFF7FEFF 	 bl EVE_cmd_dl
 741:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2583              	 .loc 1 741 0
 2584 002a 2348     	 ldr r0,.L85+24
 2585 002c FFF7FEFF 	 bl EVE_cmd_dl
 742:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2586              	 .loc 1 742 0
 2587 0030 2248     	 ldr r0,.L85+28
 2588 0032 FFF7FEFF 	 bl EVE_cmd_dl
 743:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2589              	 .loc 1 743 0
 2590 0036 4FF00450 	 mov r0,#553648128
 2591 003a FFF7FEFF 	 bl EVE_cmd_dl
 744:../Libraries/FT800-FT813-5.x/tft.c **** 	// Divider
 745:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_DIVIDERCOLOR);
 2592              	 .loc 1 745 0
 2593 003e 2048     	 ldr r0,.L85+32
 2594 0040 FFF7FEFF 	 bl EVE_cmd_dl
 746:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_BEGIN | EVE_LINE_STRIP);
 2595              	 .loc 1 746 0
 2596 0044 1F48     	 ldr r0,.L85+36
 2597 0046 FFF7FEFF 	 bl EVE_cmd_dl
 747:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(0, LAYOUT_Y1));
 2598              	 .loc 1 747 0
 2599 004a 1948     	 ldr r0,.L85+16
 2600 004c FFF7FEFF 	 bl EVE_cmd_dl
 748:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X1, LAYOUT_Y1));
 2601              	 .loc 1 748 0
 2602 0050 1848     	 ldr r0,.L85+20
 2603 0052 FFF7FEFF 	 bl EVE_cmd_dl
 749:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(LAYOUT_X2, LAYOUT_Y2));
 2604              	 .loc 1 749 0
 2605 0056 1848     	 ldr r0,.L85+24
 2606 0058 FFF7FEFF 	 bl EVE_cmd_dl
 750:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(VERTEX2F(EVE_HSIZE, LAYOUT_Y2));
 2607              	 .loc 1 750 0
 2608 005c 1748     	 ldr r0,.L85+28
 2609 005e FFF7FEFF 	 bl EVE_cmd_dl
 751:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_END);
 2610              	 .loc 1 751 0
 2611 0062 4FF00450 	 mov r0,#553648128
 2612 0066 FFF7FEFF 	 bl EVE_cmd_dl
 752:../Libraries/FT800-FT813-5.x/tft.c **** 
 753:../Libraries/FT800-FT813-5.x/tft.c **** 	// Add the static text
 754:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(TAG(0)); /* do not use the following objects for touch-detection */
 2613              	 .loc 1 754 0
 2614 006a 4FF04070 	 mov r0,#50331648
 2615 006e FFF7FEFF 	 bl EVE_cmd_dl
 755:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl(DL_COLOR_RGB | MAIN_TEXTCOLOR);
 2616              	 .loc 1 755 0
 2617 0072 1348     	 ldr r0,.L85+32
 2618 0074 FFF7FEFF 	 bl EVE_cmd_dl
 756:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 10, 26, 0, "X:");
 2619              	 .loc 1 756 0
 2620 0078 134B     	 ldr r3,.L85+40
 2621 007a 0093     	 str r3,[sp]
 2622 007c 4FF4B470 	 mov r0,#360
 2623 0080 0A21     	 movs r1,#10
 2624 0082 1A22     	 movs r2,#26
 2625 0084 0023     	 movs r3,#0
 2626 0086 FFF7FEFF 	 bl EVE_cmd_text
 757:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text(360, 25, 26, 0, "Y:");
 2627              	 .loc 1 757 0
 2628 008a 104B     	 ldr r3,.L85+44
 2629 008c 0093     	 str r3,[sp]
 2630 008e 4FF4B470 	 mov r0,#360
 2631 0092 1921     	 movs r1,#25
 2632 0094 1A22     	 movs r2,#26
 2633 0096 0023     	 movs r3,#0
 2634 0098 FFF7FEFF 	 bl EVE_cmd_text
 758:../Libraries/FT800-FT813-5.x/tft.c **** 
 759:../Libraries/FT800-FT813-5.x/tft.c **** }
 2635              	 .loc 1 759 0
 2636 009c BD46     	 mov sp,r7
 2637              	.LCFI32:
 2638              	 .cfi_def_cfa_register 13
 2639              	 
 2640 009e 80BD     	 pop {r7,pc}
 2641              	.L86:
 2642              	 .align 2
 2643              	.L85:
 2644 00a0 01000003 	 .word 50331649
 2645 00a4 1000000E 	 .word 234881040
 2646 00a8 4B586404 	 .word 73685067
 2647 00ac 0700001F 	 .word 520093703
 2648 00b0 42000040 	 .word 1073741890
 2649 00b4 42008C40 	 .word 1082916930
 2650 00b8 3200A040 	 .word 1084227634
 2651 00bc 3200F040 	 .word 1089470514
 2652 00c0 29CDF304 	 .word 83086633
 2653 00c4 0400001F 	 .word 520093700
 2654 00c8 70000000 	 .word .LC9
 2655 00cc 74000000 	 .word .LC10
 2656              	 .cfi_endproc
 2657              	.LFE455:
 2659              	 .section .rodata
 2660 0077 00       	 .align 2
 2661              	.LC11:
 2662 0078 53656E73 	 .ascii "Sensor\000"
 2662      6F7200
 2663 007f 00       	 .align 2
 2664              	.LC12:
 2665 0080 496D7000 	 .ascii "Imp\000"
 2666              	 .align 2
 2667              	.LC13:
 2668 0084 53617700 	 .ascii "Saw\000"
 2669              	 .align 2
 2670              	.LC14:
 2671 0088 53696E65 	 .ascii "Sine\000"
 2671      00
 2672 008d 000000   	 .align 2
 2673              	.LC15:
 2674 0090 526F6C6C 	 .ascii "Roll\000"
 2674      00
 2675 0095 000000   	 .align 2
 2676              	.LC16:
 2677 0098 4672616D 	 .ascii "Frame\000"
 2677      6500
 2678 009e 0000     	 .align 2
 2679              	.LC17:
 2680 00a0 44696D6D 	 .ascii "Dimmer\000"
 2680      657200
 2681 00a7 00       	 .align 2
 2682              	.LC18:
 2683 00a8 252E326C 	 .ascii "%.2lf\000"
 2683      6600
 2684 00ae 0000     	 .align 2
 2685              	.LC19:
 2686 00b0 205600   	 .ascii " V\000"
 2687              	 .section .text.TFT_display_menu0,"ax",%progbits
 2688              	 .align 2
 2689              	 .global TFT_display_menu0
 2690              	 .thumb
 2691              	 .thumb_func
 2693              	TFT_display_menu0:
 2694              	.LFB456:
 760:../Libraries/FT800-FT813-5.x/tft.c **** 
 761:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu0(void)
 762:../Libraries/FT800-FT813-5.x/tft.c **** {
 2695              	 .loc 1 762 0
 2696              	 .cfi_startproc
 2697              	 
 2698              	 
 2699 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2700              	.LCFI33:
 2701              	 .cfi_def_cfa_offset 20
 2702              	 .cfi_offset 4,-20
 2703              	 .cfi_offset 5,-16
 2704              	 .cfi_offset 6,-12
 2705              	 .cfi_offset 7,-8
 2706              	 .cfi_offset 14,-4
 2707 0002 93B0     	 sub sp,sp,#76
 2708              	.LCFI34:
 2709              	 .cfi_def_cfa_offset 96
 2710 0004 0AAF     	 add r7,sp,#40
 2711              	.LCFI35:
 2712              	 .cfi_def_cfa 7,56
 763:../Libraries/FT800-FT813-5.x/tft.c **** 	/// The inputs are used to draw the Graph data. Note that also some predefined graph settings are 
 764:../Libraries/FT800-FT813-5.x/tft.c **** 
 765:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Display BUTTONS and Toggles
 766:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 2713              	 .loc 1 766 0
 2714 0006 7C48     	 ldr r0,.L94
 2715 0008 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 767:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 2716              	 .loc 1 767 0
 2717 000c 7B48     	 ldr r0,.L94+4
 2718 000e FFF7FEFF 	 bl EVE_cmd_dl_burst
 768:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 2719              	 .loc 1 768 0
 2720 0012 7B48     	 ldr r0,.L94+8
 2721 0014 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 769:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 2722              	 .loc 1 769 0
 2723 0018 7A48     	 ldr r0,.L94+12
 2724 001a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 770:../Libraries/FT800-FT813-5.x/tft.c **** 
 771:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(13)); /* assign tag-value '13' to the button that follows */
 2725              	 .loc 1 771 0
 2726 001e 7A48     	 ldr r0,.L94+16
 2727 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 772:../Libraries/FT800-FT813-5.x/tft.c **** 	if(InputType == 0){ 		EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sensor");	}
 2728              	 .loc 1 772 0
 2729 0024 794B     	 ldr r3,.L94+20
 2730 0026 1B78     	 ldrb r3,[r3]
 2731 0028 DBB2     	 uxtb r3,r3
 2732 002a 002B     	 cmp r3,#0
 2733 002c 0CD1     	 bne .L88
 2734              	 .loc 1 772 0 is_stmt 0 discriminator 1
 2735 002e 1B23     	 movs r3,#27
 2736 0030 0093     	 str r3,[sp]
 2737 0032 0023     	 movs r3,#0
 2738 0034 0193     	 str r3,[sp,#4]
 2739 0036 764B     	 ldr r3,.L94+24
 2740 0038 0293     	 str r3,[sp,#8]
 2741 003a 1420     	 movs r0,#20
 2742 003c 0F21     	 movs r1,#15
 2743 003e 5022     	 movs r2,#80
 2744 0040 1E23     	 movs r3,#30
 2745 0042 FFF7FEFF 	 bl EVE_cmd_button_burst
 2746 0046 2FE0     	 b .L89
 2747              	.L88:
 773:../Libraries/FT800-FT813-5.x/tft.c **** 	else if(InputType == 1){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Imp");	}
 2748              	 .loc 1 773 0 is_stmt 1
 2749 0048 704B     	 ldr r3,.L94+20
 2750 004a 1B78     	 ldrb r3,[r3]
 2751 004c DBB2     	 uxtb r3,r3
 2752 004e 012B     	 cmp r3,#1
 2753 0050 0CD1     	 bne .L90
 2754              	 .loc 1 773 0 is_stmt 0 discriminator 1
 2755 0052 1B23     	 movs r3,#27
 2756 0054 0093     	 str r3,[sp]
 2757 0056 0023     	 movs r3,#0
 2758 0058 0193     	 str r3,[sp,#4]
 2759 005a 6E4B     	 ldr r3,.L94+28
 2760 005c 0293     	 str r3,[sp,#8]
 2761 005e 1420     	 movs r0,#20
 2762 0060 0F21     	 movs r1,#15
 2763 0062 5022     	 movs r2,#80
 2764 0064 1E23     	 movs r3,#30
 2765 0066 FFF7FEFF 	 bl EVE_cmd_button_burst
 2766 006a 1DE0     	 b .L89
 2767              	.L90:
 774:../Libraries/FT800-FT813-5.x/tft.c **** 	else if(InputType == 2){	EVE_cmd_button_burst(20,15,80,30, 27, 0,"Saw");	}
 2768              	 .loc 1 774 0 is_stmt 1
 2769 006c 674B     	 ldr r3,.L94+20
 2770 006e 1B78     	 ldrb r3,[r3]
 2771 0070 DBB2     	 uxtb r3,r3
 2772 0072 022B     	 cmp r3,#2
 2773 0074 0CD1     	 bne .L91
 2774              	 .loc 1 774 0 is_stmt 0 discriminator 1
 2775 0076 1B23     	 movs r3,#27
 2776 0078 0093     	 str r3,[sp]
 2777 007a 0023     	 movs r3,#0
 2778 007c 0193     	 str r3,[sp,#4]
 2779 007e 664B     	 ldr r3,.L94+32
 2780 0080 0293     	 str r3,[sp,#8]
 2781 0082 1420     	 movs r0,#20
 2782 0084 0F21     	 movs r1,#15
 2783 0086 5022     	 movs r2,#80
 2784 0088 1E23     	 movs r3,#30
 2785 008a FFF7FEFF 	 bl EVE_cmd_button_burst
 2786 008e 0BE0     	 b .L89
 2787              	.L91:
 775:../Libraries/FT800-FT813-5.x/tft.c **** 	else{						EVE_cmd_button_burst(20,15,80,30, 27, 0,"Sine");	}
 2788              	 .loc 1 775 0 is_stmt 1
 2789 0090 1B23     	 movs r3,#27
 2790 0092 0093     	 str r3,[sp]
 2791 0094 0023     	 movs r3,#0
 2792 0096 0193     	 str r3,[sp,#4]
 2793 0098 604B     	 ldr r3,.L94+36
 2794 009a 0293     	 str r3,[sp,#8]
 2795 009c 1420     	 movs r0,#20
 2796 009e 0F21     	 movs r1,#15
 2797 00a0 5022     	 movs r2,#80
 2798 00a2 1E23     	 movs r3,#30
 2799 00a4 FFF7FEFF 	 bl EVE_cmd_button_burst
 2800              	.L89:
 776:../Libraries/FT800-FT813-5.x/tft.c **** 
 777:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 2801              	 .loc 1 777 0
 2802 00a8 5D48     	 ldr r0,.L94+40
 2803 00aa FFF7FEFF 	 bl EVE_cmd_dl_burst
 778:../Libraries/FT800-FT813-5.x/tft.c **** 	if(toggle_state_graphmode){
 2804              	 .loc 1 778 0
 2805 00ae 5D4B     	 ldr r3,.L94+44
 2806 00b0 1B88     	 ldrh r3,[r3]
 2807 00b2 002B     	 cmp r3,#0
 2808 00b4 0DD0     	 beq .L92
 779:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "Roll");
 2809              	 .loc 1 779 0
 2810 00b6 0023     	 movs r3,#0
 2811 00b8 0093     	 str r3,[sp]
 2812 00ba 4FF6FF73 	 movw r3,#65535
 2813 00be 0193     	 str r3,[sp,#4]
 2814 00c0 594B     	 ldr r3,.L94+48
 2815 00c2 0293     	 str r3,[sp,#8]
 2816 00c4 7820     	 movs r0,#120
 2817 00c6 1821     	 movs r1,#24
 2818 00c8 3E22     	 movs r2,#62
 2819 00ca 1B23     	 movs r3,#27
 2820 00cc FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2821 00d0 0BE0     	 b .L93
 2822              	.L92:
 780:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 781:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 782:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "Frame");
 2823              	 .loc 1 782 0
 2824 00d2 0023     	 movs r3,#0
 2825 00d4 0093     	 str r3,[sp]
 2826 00d6 0023     	 movs r3,#0
 2827 00d8 0193     	 str r3,[sp,#4]
 2828 00da 544B     	 ldr r3,.L94+52
 2829 00dc 0293     	 str r3,[sp,#8]
 2830 00de 7820     	 movs r0,#120
 2831 00e0 1821     	 movs r1,#24
 2832 00e2 3E22     	 movs r2,#62
 2833 00e4 1B23     	 movs r3,#27
 2834 00e6 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 2835              	.L93:
 783:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 784:../Libraries/FT800-FT813-5.x/tft.c **** 
 785:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(10)); /* assign tag-value '10' to the button that follows */
 2836              	 .loc 1 785 0
 2837 00ea 5148     	 ldr r0,.L94+56
 2838 00ec FFF7FEFF 	 bl EVE_cmd_dl_burst
 786:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_button_burst(205,15,80,30, 27, toggle_state_dimmer,"Dimmer");
 2839              	 .loc 1 786 0
 2840 00f0 504B     	 ldr r3,.L94+60
 2841 00f2 1B88     	 ldrh r3,[r3]
 2842 00f4 1B22     	 movs r2,#27
 2843 00f6 0092     	 str r2,[sp]
 2844 00f8 0193     	 str r3,[sp,#4]
 2845 00fa 4F4B     	 ldr r3,.L94+64
 2846 00fc 0293     	 str r3,[sp,#8]
 2847 00fe CD20     	 movs r0,#205
 2848 0100 0F21     	 movs r1,#15
 2849 0102 5022     	 movs r2,#80
 2850 0104 1E23     	 movs r3,#30
 2851 0106 FFF7FEFF 	 bl EVE_cmd_button_burst
 787:../Libraries/FT800-FT813-5.x/tft.c **** 
 788:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 2852              	 .loc 1 788 0
 2853 010a 4FF04070 	 mov r0,#50331648
 2854 010e FFF7FEFF 	 bl EVE_cmd_dl_burst
 789:../Libraries/FT800-FT813-5.x/tft.c **** 
 790:../Libraries/FT800-FT813-5.x/tft.c **** 
 791:../Libraries/FT800-FT813-5.x/tft.c **** 
 792:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Debug Values
 793:../Libraries/FT800-FT813-5.x/tft.c **** 	#if defined (EVE_DMA)
 794:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(120, EVE_VSIZE - 65, 26, EVE_OPT_RIGHTX, cmd_fifo_size); /* number of bytes w
 795:../Libraries/FT800-FT813-5.x/tft.c **** 	#endif
 796:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, display_list_size); /* number of bytes written t
 2855              	 .loc 1 796 0
 2856 0112 4A4B     	 ldr r3,.L94+68
 2857 0114 1B88     	 ldrh r3,[r3]
 2858 0116 0093     	 str r3,[sp]
 2859 0118 4FF4EB70 	 mov r0,#470
 2860 011c 0A21     	 movs r1,#10
 2861 011e 1A22     	 movs r2,#26
 2862 0120 4FF40063 	 mov r3,#2048
 2863 0124 FFF7FEFF 	 bl EVE_cmd_number_burst
 797:../Libraries/FT800-FT813-5.x/tft.c **** 
 798:../Libraries/FT800-FT813-5.x/tft.c **** 	// Write current sensor value with unit
 799:../Libraries/FT800-FT813-5.x/tft.c **** 	char buffer[32]; // buffer for double to string conversion
 800:../Libraries/FT800-FT813-5.x/tft.c **** 	sprintf(buffer, "%.2lf", (G_amp_max/G_y_max)*InputBuffer1[InputBuffer1_idx]); // double to string 
 2864              	 .loc 1 800 0
 2865 0128 454B     	 ldr r3,.L94+72
 2866 012a D3E90001 	 ldrd r0,[r3]
 2867 012e 454B     	 ldr r3,.L94+76
 2868 0130 D3E90023 	 ldrd r2,[r3]
 2869 0134 FFF7FEFF 	 bl __aeabi_ddiv
 2870 0138 0246     	 mov r2,r0
 2871 013a 0B46     	 mov r3,r1
 2872 013c 1446     	 mov r4,r2
 2873 013e 1D46     	 mov r5,r3
 2874 0140 414B     	 ldr r3,.L94+80
 2875 0142 1B88     	 ldrh r3,[r3]
 2876 0144 1A46     	 mov r2,r3
 2877 0146 414B     	 ldr r3,.L94+84
 2878 0148 33F81230 	 ldrh r3,[r3,r2,lsl#1]
 2879 014c 1846     	 mov r0,r3
 2880 014e FFF7FEFF 	 bl __aeabi_i2d
 2881 0152 0246     	 mov r2,r0
 2882 0154 0B46     	 mov r3,r1
 2883 0156 2046     	 mov r0,r4
 2884 0158 2946     	 mov r1,r5
 2885 015a FFF7FEFF 	 bl __aeabi_dmul
 2886 015e 0246     	 mov r2,r0
 2887 0160 0B46     	 mov r3,r1
 2888 0162 1446     	 mov r4,r2
 2889 0164 1D46     	 mov r5,r3
 2890 0166 3B46     	 mov r3,r7
 2891 0168 1846     	 mov r0,r3
 2892 016a 3949     	 ldr r1,.L94+88
 2893 016c 2246     	 mov r2,r4
 2894 016e 2B46     	 mov r3,r5
 2895 0170 FFF7FEFF 	 bl sprintf
 801:../Libraries/FT800-FT813-5.x/tft.c **** 	strcat(buffer, unit_Sensor);
 2896              	 .loc 1 801 0
 2897 0174 3B46     	 mov r3,r7
 2898 0176 1846     	 mov r0,r3
 2899 0178 FFF7FEFF 	 bl strlen
 2900 017c 0346     	 mov r3,r0
 2901 017e 1A46     	 mov r2,r3
 2902 0180 3B46     	 mov r3,r7
 2903 0182 1344     	 add r3,r3,r2
 2904 0184 334A     	 ldr r2,.L94+92
 2905 0186 1188     	 ldrh r1,[r2]
 2906 0188 9278     	 ldrb r2,[r2,#2]
 2907 018a 1980     	 strh r1,[r3]
 2908 018c 9A70     	 strb r2,[r3,#2]
 802:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_text_burst(470, 25, 26, EVE_OPT_RIGHTX, buffer);
 2909              	 .loc 1 802 0
 2910 018e 3B46     	 mov r3,r7
 2911 0190 0093     	 str r3,[sp]
 2912 0192 4FF4EB70 	 mov r0,#470
 2913 0196 1921     	 movs r1,#25
 2914 0198 1A22     	 movs r2,#26
 2915 019a 4FF40063 	 mov r3,#2048
 2916 019e FFF7FEFF 	 bl EVE_cmd_text_burst
 803:../Libraries/FT800-FT813-5.x/tft.c **** 
 804:../Libraries/FT800-FT813-5.x/tft.c **** 
 805:../Libraries/FT800-FT813-5.x/tft.c **** 
 806:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// GRAPH
 807:../Libraries/FT800-FT813-5.x/tft.c **** 	///// Print dynamic part of the Graph (data & marker)
 808:../Libraries/FT800-FT813-5.x/tft.c **** 	TFT_GraphData(G_x, G_y, G_width, G_height, G_PADDING, G_y_max, &InputBuffer1[0], INPUTBUFFER1_SIZE
 2917              	 .loc 1 808 0
 2918 01a2 2D4B     	 ldr r3,.L94+96
 2919 01a4 B3F800E0 	 ldrh lr,[r3]
 2920 01a8 2C4B     	 ldr r3,.L94+100
 2921 01aa 1E88     	 ldrh r6,[r3]
 2922 01ac 2C4B     	 ldr r3,.L94+104
 2923 01ae 1D88     	 ldrh r5,[r3]
 2924 01b0 2C4B     	 ldr r3,.L94+108
 2925 01b2 1C88     	 ldrh r4,[r3]
 2926 01b4 234B     	 ldr r3,.L94+76
 2927 01b6 D3E90023 	 ldrd r2,[r3]
 2928 01ba 1A49     	 ldr r1,.L94+44
 2929 01bc 0988     	 ldrh r1,[r1]
 2930 01be C9B2     	 uxtb r1,r1
 2931 01c0 0A20     	 movs r0,#10
 2932 01c2 0090     	 str r0,[sp]
 2933 01c4 CDE90223 	 strd r2,[sp,#8]
 2934 01c8 204B     	 ldr r3,.L94+84
 2935 01ca 0493     	 str r3,[sp,#16]
 2936 01cc 4FF4DC73 	 mov r3,#440
 2937 01d0 0593     	 str r3,[sp,#20]
 2938 01d2 1D4B     	 ldr r3,.L94+80
 2939 01d4 0693     	 str r3,[sp,#24]
 2940 01d6 0791     	 str r1,[sp,#28]
 2941 01d8 43F69E73 	 movw r3,#16286
 2942 01dc 0893     	 str r3,[sp,#32]
 2943 01de 4FF47F03 	 mov r3,#16711680
 2944 01e2 0993     	 str r3,[sp,#36]
 2945 01e4 7046     	 mov r0,lr
 2946 01e6 3146     	 mov r1,r6
 2947 01e8 2A46     	 mov r2,r5
 2948 01ea 2346     	 mov r3,r4
 2949 01ec FFF7FEFF 	 bl TFT_GraphData
 809:../Libraries/FT800-FT813-5.x/tft.c **** 
 810:../Libraries/FT800-FT813-5.x/tft.c **** }
 2950              	 .loc 1 810 0
 2951 01f0 2437     	 adds r7,r7,#36
 2952              	.LCFI36:
 2953              	 .cfi_def_cfa_offset 20
 2954 01f2 BD46     	 mov sp,r7
 2955              	.LCFI37:
 2956              	 .cfi_def_cfa_register 13
 2957              	 
 2958 01f4 F0BD     	 pop {r4,r5,r6,r7,pc}
 2959              	.L95:
 2960 01f6 00BF     	 .align 2
 2961              	.L94:
 2962 01f8 124B8C00 	 .word 9194258
 2963 01fc EEF8FF04 	 .word 83884270
 2964 0200 2BA9EA00 	 .word 15378731
 2965 0204 6696AD00 	 .word 11376230
 2966 0208 0D000003 	 .word 50331661
 2967 020c 00000000 	 .word InputType
 2968 0210 78000000 	 .word .LC11
 2969 0214 80000000 	 .word .LC12
 2970 0218 84000000 	 .word .LC13
 2971 021c 88000000 	 .word .LC14
 2972 0220 0C000003 	 .word 50331660
 2973 0224 00000000 	 .word toggle_state_graphmode
 2974 0228 90000000 	 .word .LC15
 2975 022c 98000000 	 .word .LC16
 2976 0230 0A000003 	 .word 50331658
 2977 0234 00000000 	 .word toggle_state_dimmer
 2978 0238 A0000000 	 .word .LC17
 2979 023c 00000000 	 .word display_list_size
 2980 0240 00000000 	 .word G_amp_max
 2981 0244 00000000 	 .word G_y_max
 2982 0248 00000000 	 .word InputBuffer1_idx
 2983 024c 00000000 	 .word InputBuffer1
 2984 0250 A8000000 	 .word .LC18
 2985 0254 B0000000 	 .word .LC19
 2986 0258 00000000 	 .word G_x
 2987 025c 00000000 	 .word G_y
 2988 0260 00000000 	 .word G_width
 2989 0264 00000000 	 .word G_height
 2990              	 .cfi_endproc
 2991              	.LFE456:
 2993              	 .section .rodata
 2994 00b3 00       	 .align 2
 2995              	.LC20:
 2996 00b4 6C6900   	 .ascii "li\000"
 2997 00b7 00       	 .align 2
 2998              	.LC21:
 2999 00b8 726500   	 .ascii "re\000"
 3000              	 .section .text.TFT_display_menu1,"ax",%progbits
 3001              	 .align 2
 3002              	 .global TFT_display_menu1
 3003              	 .thumb
 3004              	 .thumb_func
 3006              	TFT_display_menu1:
 3007              	.LFB457:
 811:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_display_menu1(void)
 812:../Libraries/FT800-FT813-5.x/tft.c **** {
 3008              	 .loc 1 812 0
 3009              	 .cfi_startproc
 3010              	 
 3011              	 
 3012 0000 80B5     	 push {r7,lr}
 3013              	.LCFI38:
 3014              	 .cfi_def_cfa_offset 8
 3015              	 .cfi_offset 7,-8
 3016              	 .cfi_offset 14,-4
 3017 0002 86B0     	 sub sp,sp,#24
 3018              	.LCFI39:
 3019              	 .cfi_def_cfa_offset 32
 3020 0004 04AF     	 add r7,sp,#16
 3021              	.LCFI40:
 3022              	 .cfi_def_cfa 7,16
 813:../Libraries/FT800-FT813-5.x/tft.c **** 	/// Test menu
 814:../Libraries/FT800-FT813-5.x/tft.c **** 
 815:../Libraries/FT800-FT813-5.x/tft.c **** 	/////////////// Display BUTTONS and Toggles
 816:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_gradcolor_burst(MAIN_BTNGRDCOLOR);
 3023              	 .loc 1 816 0
 3024 0006 2948     	 ldr r0,.L99
 3025 0008 FFF7FEFF 	 bl EVE_cmd_gradcolor_burst
 817:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(DL_COLOR_RGB | MAIN_BTNTXTCOLOR);
 3026              	 .loc 1 817 0
 3027 000c 2848     	 ldr r0,.L99+4
 3028 000e FFF7FEFF 	 bl EVE_cmd_dl_burst
 818:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_BTNCOLOR);
 3029              	 .loc 1 818 0
 3030 0012 2848     	 ldr r0,.L99+8
 3031 0014 FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 819:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_bgcolor_burst(MAIN_BTNCTSCOLOR);
 3032              	 .loc 1 819 0
 3033 0018 2748     	 ldr r0,.L99+12
 3034 001a FFF7FEFF 	 bl EVE_cmd_bgcolor_burst
 820:../Libraries/FT800-FT813-5.x/tft.c **** 
 821:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(12)); /* assign tag-value '12' to the toggle that follows */
 3035              	 .loc 1 821 0
 3036 001e 2748     	 ldr r0,.L99+16
 3037 0020 FFF7FEFF 	 bl EVE_cmd_dl_burst
 822:../Libraries/FT800-FT813-5.x/tft.c **** 	if(toggle_state_graphmode){
 3038              	 .loc 1 822 0
 3039 0024 264B     	 ldr r3,.L99+20
 3040 0026 1B88     	 ldrh r3,[r3]
 3041 0028 002B     	 cmp r3,#0
 3042 002a 0DD0     	 beq .L97
 823:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0xFFFF, "li");
 3043              	 .loc 1 823 0
 3044 002c 0023     	 movs r3,#0
 3045 002e 0093     	 str r3,[sp]
 3046 0030 4FF6FF73 	 movw r3,#65535
 3047 0034 0193     	 str r3,[sp,#4]
 3048 0036 234B     	 ldr r3,.L99+24
 3049 0038 0293     	 str r3,[sp,#8]
 3050 003a 7820     	 movs r0,#120
 3051 003c 1821     	 movs r1,#24
 3052 003e 3E22     	 movs r2,#62
 3053 0040 1B23     	 movs r3,#27
 3054 0042 FFF7FEFF 	 bl EVE_cmd_toggle_burst
 3055 0046 0BE0     	 b .L98
 3056              	.L97:
 824:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 825:../Libraries/FT800-FT813-5.x/tft.c **** 	else{
 826:../Libraries/FT800-FT813-5.x/tft.c **** 		EVE_cmd_toggle_burst(120,24,62, 27, 0, 0x0000, "re");
 3057              	 .loc 1 826 0
 3058 0048 0023     	 movs r3,#0
 3059 004a 0093     	 str r3,[sp]
 3060 004c 0023     	 movs r3,#0
 3061 004e 0193     	 str r3,[sp,#4]
 3062 0050 1D4B     	 ldr r3,.L99+28
 3063 0052 0293     	 str r3,[sp,#8]
 3064 0054 7820     	 movs r0,#120
 3065 0056 1821     	 movs r1,#24
 3066 0058 3E22     	 movs r2,#62
 3067 005a 1B23     	 movs r3,#27
 3068 005c FFF7FEFF 	 bl EVE_cmd_toggle_burst
 3069              	.L98:
 827:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 828:../Libraries/FT800-FT813-5.x/tft.c **** 
 829:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_dl_burst(TAG(0)); /* no touch from here on */
 3070              	 .loc 1 829 0
 3071 0060 4FF04070 	 mov r0,#50331648
 3072 0064 FFF7FEFF 	 bl EVE_cmd_dl_burst
 830:../Libraries/FT800-FT813-5.x/tft.c **** 
 831:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_fgcolor_burst(MAIN_TEXTCOLOR);
 3073              	 .loc 1 831 0
 3074 0068 1848     	 ldr r0,.L99+32
 3075 006a FFF7FEFF 	 bl EVE_cmd_fgcolor_burst
 832:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t X = TouchXY;
 3076              	 .loc 1 832 0
 3077 006e 184B     	 ldr r3,.L99+36
 3078 0070 1B68     	 ldr r3,[r3]
 3079 0072 FB80     	 strh r3,[r7,#6]
 833:../Libraries/FT800-FT813-5.x/tft.c **** 	uint16_t Y = TouchXY >> 16;
 3080              	 .loc 1 833 0
 3081 0074 164B     	 ldr r3,.L99+36
 3082 0076 1B68     	 ldr r3,[r3]
 3083 0078 1B0C     	 lsrs r3,r3,#16
 3084 007a BB80     	 strh r3,[r7,#4]
 834:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, 10, 26, EVE_OPT_RIGHTX, X);
 3085              	 .loc 1 834 0
 3086 007c FB88     	 ldrh r3,[r7,#6]
 3087 007e 0093     	 str r3,[sp]
 3088 0080 4FF4EB70 	 mov r0,#470
 3089 0084 0A21     	 movs r1,#10
 3090 0086 1A22     	 movs r2,#26
 3091 0088 4FF40063 	 mov r3,#2048
 3092 008c FFF7FEFF 	 bl EVE_cmd_number_burst
 835:../Libraries/FT800-FT813-5.x/tft.c **** 	EVE_cmd_number_burst(470, 25, 26, EVE_OPT_RIGHTX, Y);
 3093              	 .loc 1 835 0
 3094 0090 BB88     	 ldrh r3,[r7,#4]
 3095 0092 0093     	 str r3,[sp]
 3096 0094 4FF4EB70 	 mov r0,#470
 3097 0098 1921     	 movs r1,#25
 3098 009a 1A22     	 movs r2,#26
 3099 009c 4FF40063 	 mov r3,#2048
 3100 00a0 FFF7FEFF 	 bl EVE_cmd_number_burst
 836:../Libraries/FT800-FT813-5.x/tft.c **** 
 837:../Libraries/FT800-FT813-5.x/tft.c **** }
 3101              	 .loc 1 837 0
 3102 00a4 0837     	 adds r7,r7,#8
 3103              	.LCFI41:
 3104              	 .cfi_def_cfa_offset 8
 3105 00a6 BD46     	 mov sp,r7
 3106              	.LCFI42:
 3107              	 .cfi_def_cfa_register 13
 3108              	 
 3109 00a8 80BD     	 pop {r7,pc}
 3110              	.L100:
 3111 00aa 00BF     	 .align 2
 3112              	.L99:
 3113 00ac 124B8C00 	 .word 9194258
 3114 00b0 EEF8FF04 	 .word 83884270
 3115 00b4 2BA9EA00 	 .word 15378731
 3116 00b8 6696AD00 	 .word 11376230
 3117 00bc 0C000003 	 .word 50331660
 3118 00c0 00000000 	 .word toggle_state_graphmode
 3119 00c4 B4000000 	 .word .LC20
 3120 00c8 B8000000 	 .word .LC21
 3121 00cc 29CDF300 	 .word 15977769
 3122 00d0 00000000 	 .word TouchXY
 3123              	 .cfi_endproc
 3124              	.LFE457:
 3126              	 .section .rodata
 3127 00bb 00       	 .align 2
 3128              	.LC22:
 3129 00bc 42757474 	 .ascii "Button Dimmer touched\000"
 3129      6F6E2044 
 3129      696D6D65 
 3129      7220746F 
 3129      75636865 
 3130 00d2 0000     	 .align 2
 3131              	.LC23:
 3132 00d4 546F6767 	 .ascii "Toggle Roll touched\000"
 3132      6C652052 
 3132      6F6C6C20 
 3132      746F7563 
 3132      68656400 
 3133              	 .align 2
 3134              	.LC24:
 3135 00e8 53776974 	 .ascii "Switch Signal\000"
 3135      63682053 
 3135      69676E61 
 3135      6C00
 3136              	 .section .text.TFT_touch_menu0,"ax",%progbits
 3137              	 .align 2
 3138              	 .global TFT_touch_menu0
 3139              	 .thumb
 3140              	 .thumb_func
 3142              	TFT_touch_menu0:
 3143              	.LFB458:
 838:../Libraries/FT800-FT813-5.x/tft.c **** 
 839:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu0(uint8_t tag){
 3144              	 .loc 1 839 0
 3145              	 .cfi_startproc
 3146              	 
 3147              	 
 3148 0000 80B5     	 push {r7,lr}
 3149              	.LCFI43:
 3150              	 .cfi_def_cfa_offset 8
 3151              	 .cfi_offset 7,-8
 3152              	 .cfi_offset 14,-4
 3153 0002 82B0     	 sub sp,sp,#8
 3154              	.LCFI44:
 3155              	 .cfi_def_cfa_offset 16
 3156 0004 00AF     	 add r7,sp,#0
 3157              	.LCFI45:
 3158              	 .cfi_def_cfa_register 7
 3159 0006 0346     	 mov r3,r0
 3160 0008 FB71     	 strb r3,[r7,#7]
 840:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 841:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 3161              	 .loc 1 841 0
 3162 000a FB79     	 ldrb r3,[r7,#7]
 3163 000c 0C2B     	 cmp r3,#12
 3164 000e 23D0     	 beq .L103
 3165 0010 0D2B     	 cmp r3,#13
 3166 0012 38D0     	 beq .L104
 3167 0014 0A2B     	 cmp r3,#10
 3168 0016 50D1     	 bne .L101
 842:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 843:../Libraries/FT800-FT813-5.x/tft.c **** 		// dimmer button on top as on/off radio-switch
 844:../Libraries/FT800-FT813-5.x/tft.c **** 		case 10:
 845:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3169              	 .loc 1 845 0
 3170 0018 294B     	 ldr r3,.L111
 3171 001a 1B78     	 ldrb r3,[r3]
 3172 001c 002B     	 cmp r3,#0
 3173 001e 1AD1     	 bne .L106
 846:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Button Dimmer touched\n");
 3174              	 .loc 1 846 0
 3175 0020 2848     	 ldr r0,.L111+4
 3176 0022 FFF7FEFF 	 bl puts
 847:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3177              	 .loc 1 847 0
 3178 0026 264B     	 ldr r3,.L111
 3179 0028 2A22     	 movs r2,#42
 3180 002a 1A70     	 strb r2,[r3]
 848:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_dimmer == 0){
 3181              	 .loc 1 848 0
 3182 002c 264B     	 ldr r3,.L111+8
 3183 002e 1B88     	 ldrh r3,[r3]
 3184 0030 002B     	 cmp r3,#0
 3185 0032 08D1     	 bne .L107
 849:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = EVE_OPT_FLAT;
 3186              	 .loc 1 849 0
 3187 0034 244B     	 ldr r3,.L111+8
 3188 0036 4FF48072 	 mov r2,#256
 3189 003a 1A80     	 strh r2,[r3]
 850:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x01);	/* setup backlight, range is from 0 = off to 0x80 = max */
 3190              	 .loc 1 850 0
 3191 003c 2348     	 ldr r0,.L111+12
 3192 003e 0121     	 movs r1,#1
 3193 0040 FFF7FEFF 	 bl EVE_memWrite8
 3194 0044 07E0     	 b .L106
 3195              	.L107:
 851:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 852:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 853:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_dimmer = 0;
 3196              	 .loc 1 853 0
 3197 0046 204B     	 ldr r3,.L111+8
 3198 0048 0022     	 movs r2,#0
 3199 004a 1A80     	 strh r2,[r3]
 854:../Libraries/FT800-FT813-5.x/tft.c **** 					EVE_memWrite8(REG_PWM_DUTY, 0x80);	/* setup backlight, range is from 0 = off to 0x80 = max */
 3200              	 .loc 1 854 0
 3201 004c 1F48     	 ldr r0,.L111+12
 3202 004e 8021     	 movs r1,#128
 3203 0050 FFF7FEFF 	 bl EVE_memWrite8
 855:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 856:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 857:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3204              	 .loc 1 857 0
 3205 0054 31E0     	 b .L101
 3206              	.L106:
 3207 0056 30E0     	 b .L101
 3208              	.L103:
 858:../Libraries/FT800-FT813-5.x/tft.c **** 		// roll/frame mode toggle on top
 859:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 860:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3209              	 .loc 1 860 0
 3210 0058 194B     	 ldr r3,.L111
 3211 005a 1B78     	 ldrb r3,[r3]
 3212 005c 002B     	 cmp r3,#0
 3213 005e 11D1     	 bne .L108
 861:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle Roll touched\n");
 3214              	 .loc 1 861 0
 3215 0060 1B48     	 ldr r0,.L111+16
 3216 0062 FFF7FEFF 	 bl puts
 862:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3217              	 .loc 1 862 0
 3218 0066 164B     	 ldr r3,.L111
 3219 0068 2A22     	 movs r2,#42
 3220 006a 1A70     	 strb r2,[r3]
 863:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 3221              	 .loc 1 863 0
 3222 006c 194B     	 ldr r3,.L111+20
 3223 006e 1B88     	 ldrh r3,[r3]
 3224 0070 002B     	 cmp r3,#0
 3225 0072 03D1     	 bne .L109
 864:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 3226              	 .loc 1 864 0
 3227 0074 174B     	 ldr r3,.L111+20
 3228 0076 0122     	 movs r2,#1
 3229 0078 1A80     	 strh r2,[r3]
 3230 007a 03E0     	 b .L108
 3231              	.L109:
 865:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 866:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 867:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 3232              	 .loc 1 867 0
 3233 007c 154B     	 ldr r3,.L111+20
 3234 007e 0022     	 movs r2,#0
 3235 0080 1A80     	 strh r2,[r3]
 868:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 869:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 870:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3236              	 .loc 1 870 0
 3237 0082 1AE0     	 b .L101
 3238              	.L108:
 3239 0084 19E0     	 b .L101
 3240              	.L104:
 871:../Libraries/FT800-FT813-5.x/tft.c **** 		// signal switcher button
 872:../Libraries/FT800-FT813-5.x/tft.c **** 		case 13:
 873:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3241              	 .loc 1 873 0
 3242 0086 0E4B     	 ldr r3,.L111
 3243 0088 1B78     	 ldrb r3,[r3]
 3244 008a 002B     	 cmp r3,#0
 3245 008c 14D1     	 bne .L110
 874:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Switch Signal\n");
 3246              	 .loc 1 874 0
 3247 008e 1248     	 ldr r0,.L111+24
 3248 0090 FFF7FEFF 	 bl puts
 875:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3249              	 .loc 1 875 0
 3250 0094 0A4B     	 ldr r3,.L111
 3251 0096 2A22     	 movs r2,#42
 3252 0098 1A70     	 strb r2,[r3]
 876:../Libraries/FT800-FT813-5.x/tft.c **** 				InputType++;
 3253              	 .loc 1 876 0
 3254 009a 104B     	 ldr r3,.L111+28
 3255 009c 1B78     	 ldrb r3,[r3]
 3256 009e DBB2     	 uxtb r3,r3
 3257 00a0 0133     	 adds r3,r3,#1
 3258 00a2 DAB2     	 uxtb r2,r3
 3259 00a4 0D4B     	 ldr r3,.L111+28
 3260 00a6 1A70     	 strb r2,[r3]
 877:../Libraries/FT800-FT813-5.x/tft.c **** 				if(InputType > 3){ InputType = 0; }
 3261              	 .loc 1 877 0
 3262 00a8 0C4B     	 ldr r3,.L111+28
 3263 00aa 1B78     	 ldrb r3,[r3]
 3264 00ac DBB2     	 uxtb r3,r3
 3265 00ae 032B     	 cmp r3,#3
 3266 00b0 02D9     	 bls .L110
 3267              	 .loc 1 877 0 is_stmt 0 discriminator 1
 3268 00b2 0A4B     	 ldr r3,.L111+28
 3269 00b4 0022     	 movs r2,#0
 3270 00b6 1A70     	 strb r2,[r3]
 3271              	.L110:
 878:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 879:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3272              	 .loc 1 879 0 is_stmt 1
 3273 00b8 00BF     	 nop
 3274              	.L101:
 880:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 881:../Libraries/FT800-FT813-5.x/tft.c **** }
 3275              	 .loc 1 881 0
 3276 00ba 0837     	 adds r7,r7,#8
 3277              	.LCFI46:
 3278              	 .cfi_def_cfa_offset 8
 3279 00bc BD46     	 mov sp,r7
 3280              	.LCFI47:
 3281              	 .cfi_def_cfa_register 13
 3282              	 
 3283 00be 80BD     	 pop {r7,pc}
 3284              	.L112:
 3285              	 .align 2
 3286              	.L111:
 3287 00c0 00000000 	 .word toggle_lock
 3288 00c4 BC000000 	 .word .LC22
 3289 00c8 00000000 	 .word toggle_state_dimmer
 3290 00cc D4203000 	 .word 3154132
 3291 00d0 D4000000 	 .word .LC23
 3292 00d4 00000000 	 .word toggle_state_graphmode
 3293 00d8 E8000000 	 .word .LC24
 3294 00dc 00000000 	 .word InputType
 3295              	 .cfi_endproc
 3296              	.LFE458:
 3298              	 .section .rodata
 3299 00f6 0000     	 .align 2
 3300              	.LC25:
 3301 00f8 546F6767 	 .ascii "Toggle li/re touched\000"
 3301      6C65206C 
 3301      692F7265 
 3301      20746F75 
 3301      63686564 
 3302 010d 000000   	 .section .text.TFT_touch_menu1,"ax",%progbits
 3303              	 .align 2
 3304              	 .global TFT_touch_menu1
 3305              	 .thumb
 3306              	 .thumb_func
 3308              	TFT_touch_menu1:
 3309              	.LFB459:
 882:../Libraries/FT800-FT813-5.x/tft.c **** void TFT_touch_menu1(uint8_t tag){
 3310              	 .loc 1 882 0
 3311              	 .cfi_startproc
 3312              	 
 3313              	 
 3314 0000 80B5     	 push {r7,lr}
 3315              	.LCFI48:
 3316              	 .cfi_def_cfa_offset 8
 3317              	 .cfi_offset 7,-8
 3318              	 .cfi_offset 14,-4
 3319 0002 82B0     	 sub sp,sp,#8
 3320              	.LCFI49:
 3321              	 .cfi_def_cfa_offset 16
 3322 0004 00AF     	 add r7,sp,#0
 3323              	.LCFI50:
 3324              	 .cfi_def_cfa_register 7
 3325 0006 0346     	 mov r3,r0
 3326 0008 FB71     	 strb r3,[r7,#7]
 883:../Libraries/FT800-FT813-5.x/tft.c **** 	// Determine which tag was touched
 884:../Libraries/FT800-FT813-5.x/tft.c **** 	switch(tag)
 3327              	 .loc 1 884 0
 3328 000a FB79     	 ldrb r3,[r7,#7]
 3329 000c 002B     	 cmp r3,#0
 3330 000e 02D0     	 beq .L115
 3331 0010 0C2B     	 cmp r3,#12
 3332 0012 04D0     	 beq .L116
 3333 0014 19E0     	 b .L113
 3334              	.L115:
 885:../Libraries/FT800-FT813-5.x/tft.c **** 	{
 886:../Libraries/FT800-FT813-5.x/tft.c **** 		// nothing touched - reset states and locks
 887:../Libraries/FT800-FT813-5.x/tft.c **** 		case 0:
 888:../Libraries/FT800-FT813-5.x/tft.c **** 			toggle_lock = 0;
 3335              	 .loc 1 888 0
 3336 0016 0E4B     	 ldr r3,.L119
 3337 0018 0022     	 movs r2,#0
 3338 001a 1A70     	 strb r2,[r3]
 889:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3339              	 .loc 1 889 0
 3340 001c 15E0     	 b .L113
 3341              	.L116:
 890:../Libraries/FT800-FT813-5.x/tft.c **** 		// li/re mode toggle on top
 891:../Libraries/FT800-FT813-5.x/tft.c **** 		case 12:
 892:../Libraries/FT800-FT813-5.x/tft.c **** 			if(toggle_lock == 0) {
 3342              	 .loc 1 892 0
 3343 001e 0C4B     	 ldr r3,.L119
 3344 0020 1B78     	 ldrb r3,[r3]
 3345 0022 002B     	 cmp r3,#0
 3346 0024 10D1     	 bne .L117
 893:../Libraries/FT800-FT813-5.x/tft.c **** 				printf("Toggle li/re touched\n");
 3347              	 .loc 1 893 0
 3348 0026 0B48     	 ldr r0,.L119+4
 3349 0028 FFF7FEFF 	 bl puts
 894:../Libraries/FT800-FT813-5.x/tft.c **** 				toggle_lock = 42;
 3350              	 .loc 1 894 0
 3351 002c 084B     	 ldr r3,.L119
 3352 002e 2A22     	 movs r2,#42
 3353 0030 1A70     	 strb r2,[r3]
 895:../Libraries/FT800-FT813-5.x/tft.c **** 				if(toggle_state_graphmode == 0)	{
 3354              	 .loc 1 895 0
 3355 0032 094B     	 ldr r3,.L119+8
 3356 0034 1B88     	 ldrh r3,[r3]
 3357 0036 002B     	 cmp r3,#0
 3358 0038 03D1     	 bne .L118
 896:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 1;
 3359              	 .loc 1 896 0
 3360 003a 074B     	 ldr r3,.L119+8
 3361 003c 0122     	 movs r2,#1
 3362 003e 1A80     	 strh r2,[r3]
 3363 0040 02E0     	 b .L117
 3364              	.L118:
 897:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 898:../Libraries/FT800-FT813-5.x/tft.c **** 				else {
 899:../Libraries/FT800-FT813-5.x/tft.c **** 					toggle_state_graphmode = 0;
 3365              	 .loc 1 899 0
 3366 0042 054B     	 ldr r3,.L119+8
 3367 0044 0022     	 movs r2,#0
 3368 0046 1A80     	 strh r2,[r3]
 3369              	.L117:
 900:../Libraries/FT800-FT813-5.x/tft.c **** 				}
 901:../Libraries/FT800-FT813-5.x/tft.c **** 			}
 902:../Libraries/FT800-FT813-5.x/tft.c **** 			break;
 3370              	 .loc 1 902 0
 3371 0048 00BF     	 nop
 3372              	.L113:
 903:../Libraries/FT800-FT813-5.x/tft.c **** 	}
 904:../Libraries/FT800-FT813-5.x/tft.c **** 
 905:../Libraries/FT800-FT813-5.x/tft.c **** }
 3373              	 .loc 1 905 0
 3374 004a 0837     	 adds r7,r7,#8
 3375              	.LCFI51:
 3376              	 .cfi_def_cfa_offset 8
 3377 004c BD46     	 mov sp,r7
 3378              	.LCFI52:
 3379              	 .cfi_def_cfa_register 13
 3380              	 
 3381 004e 80BD     	 pop {r7,pc}
 3382              	.L120:
 3383              	 .align 2
 3384              	.L119:
 3385 0050 00000000 	 .word toggle_lock
 3386 0054 F8000000 	 .word .LC25
 3387 0058 00000000 	 .word toggle_state_graphmode
 3388              	 .cfi_endproc
 3389              	.LFE459:
 3391              	 .text
 3392              	.Letext0:
 3393              	 .file 2 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3394              	 .file 3 "c:\\workspaces\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3395              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_gpio.h"
 3396              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc4_gpio.h"
 3397              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_usic.h"
 3398              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_spi.h"
 3399              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master.h"
 3400              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io.h"
 3401              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/XMCLib/inc/xmc_vadc.h"
 3402              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/cmsis_gcc.h"
 3403              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Include/core_cm4.h"
 3404              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 3405              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 3406              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 3407              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit_WS/DeflectionAnalyzer/globals.h"
 3408              	 .file 17 "../Libraries/FT800-FT813-5.x/EVE_target.h"
 3409              	 .file 18 "../Libraries/FT800-FT813-5.x/tft_data.h"
 3410              	 .file 19 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 tft.c
                            *COM*:00000004 _msCounter
                            *COM*:00000001 tft_tick
                            *COM*:00000004 MeasurementCounter
                            *COM*:00000002 InputBuffer1_idx
                            *COM*:00000001 InputType
                            *COM*:00000001 frameover
                            *COM*:00000001 ReadData
    {standard input}:31     .data.G_x:00000000 G_x
    {standard input}:28     .data.G_x:00000000 $d
    {standard input}:38     .data.G_y:00000000 G_y
    {standard input}:35     .data.G_y:00000000 $d
    {standard input}:45     .data.G_width:00000000 G_width
    {standard input}:42     .data.G_width:00000000 $d
    {standard input}:52     .data.G_height:00000000 G_height
    {standard input}:49     .data.G_height:00000000 $d
    {standard input}:59     .rodata.unit_Sensor:00000000 unit_Sensor
    {standard input}:56     .rodata.unit_Sensor:00000000 $d
    {standard input}:66     .data.G_amp_max:00000000 G_amp_max
    {standard input}:63     .data.G_amp_max:00000000 $d
    {standard input}:74     .data.G_t_max:00000000 G_t_max
    {standard input}:71     .data.G_t_max:00000000 $d
    {standard input}:82     .data.G_y_max:00000000 G_y_max
    {standard input}:79     .data.G_y_max:00000000 $d
    {standard input}:90     .data.G_h_grid_lines:00000000 G_h_grid_lines
    {standard input}:87     .data.G_h_grid_lines:00000000 $d
    {standard input}:98     .data.G_v_grid_lines:00000000 G_v_grid_lines
    {standard input}:95     .data.G_v_grid_lines:00000000 $d
                            *COM*:00000004 num_dl_static
    {standard input}:106    .bss.tft_active:00000000 tft_active
    {standard input}:107    .bss.tft_active:00000000 $d
    {standard input}:112    .bss.TFT_cur_Menu:00000000 TFT_cur_Menu
    {standard input}:113    .bss.TFT_cur_Menu:00000000 $d
    {standard input}:118    .data.TFT_last_Menu:00000000 TFT_last_Menu
    {standard input}:125    .data.TFT_display_cur_Menu__fptr_arr:00000000 TFT_display_cur_Menu__fptr_arr
    {standard input}:122    .data.TFT_display_cur_Menu__fptr_arr:00000000 $d
    {standard input}:2693   .text.TFT_display_menu0:00000000 TFT_display_menu0
    {standard input}:3006   .text.TFT_display_menu1:00000000 TFT_display_menu1
    {standard input}:133    .data.TFT_touch_cur_Menu__fptr_arr:00000000 TFT_touch_cur_Menu__fptr_arr
    {standard input}:130    .data.TFT_touch_cur_Menu__fptr_arr:00000000 $d
    {standard input}:3142   .text.TFT_touch_menu0:00000000 TFT_touch_menu0
    {standard input}:3308   .text.TFT_touch_menu1:00000000 TFT_touch_menu1
    {standard input}:141    .data.TFT_display_static_cur_Menu__fptr_arr:00000000 TFT_display_static_cur_Menu__fptr_arr
    {standard input}:138    .data.TFT_display_static_cur_Menu__fptr_arr:00000000 $d
    {standard input}:2381   .text.TFT_display_static_menu0:00000000 TFT_display_static_menu0
    {standard input}:2548   .text.TFT_display_static_menu1:00000000 TFT_display_static_menu1
    {standard input}:149    .bss.display_list_size:00000000 display_list_size
    {standard input}:146    .bss.display_list_size:00000000 $d
    {standard input}:156    .bss.tracker:00000000 tracker
    {standard input}:153    .bss.tracker:00000000 $d
    {standard input}:163    .bss.TouchXY:00000000 TouchXY
    {standard input}:160    .bss.TouchXY:00000000 $d
    {standard input}:170    .data.BGtouchInitial_X:00000000 BGtouchInitial_X
    {standard input}:167    .data.BGtouchInitial_X:00000000 $d
    {standard input}:177    .data.BGtouchInitial_Y:00000000 BGtouchInitial_Y
    {standard input}:174    .data.BGtouchInitial_Y:00000000 $d
    {standard input}:183    .bss.swipeDetect:00000000 swipeDetect
    {standard input}:184    .bss.swipeDetect:00000000 $d
    {standard input}:189    .bss.swipeInProgress:00000000 swipeInProgress
    {standard input}:190    .bss.swipeInProgress:00000000 $d
    {standard input}:195    .bss.swipeDebounce:00000000 swipeDebounce
    {standard input}:196    .bss.swipeDebounce:00000000 $d
    {standard input}:201    .bss.toggle_lock:00000000 toggle_lock
    {standard input}:202    .bss.toggle_lock:00000000 $d
    {standard input}:208    .bss.toggle_state_graphmode:00000000 toggle_state_graphmode
    {standard input}:205    .bss.toggle_state_graphmode:00000000 $d
    {standard input}:215    .bss.toggle_state_dimmer:00000000 toggle_state_dimmer
    {standard input}:212    .bss.toggle_state_dimmer:00000000 $d
    {standard input}:220    .rodata:00000000 $d
    {standard input}:248    .text.TFT_GraphStatic:00000000 $t
    {standard input}:253    .text.TFT_GraphStatic:00000000 TFT_GraphStatic
    {standard input}:555    .text.TFT_GraphStatic:000002a0 $d
    {standard input}:565    .text.TFT_GraphStatic:000002c0 $t
    {standard input}:1054   .text.TFT_GraphStatic:0000073c $d
    {standard input}:1059   .text.TFT_GraphStatic:00000744 $t
    {standard input}:1321   .text.TFT_GraphStatic:000009bc $d
    {standard input}:1327   .text.TFT_GraphData:00000000 $t
    {standard input}:1332   .text.TFT_GraphData:00000000 TFT_GraphData
    {standard input}:1610   .text.TFT_GraphData:0000020c $d
    {standard input}:1615   .text.touch_calibrate:00000000 $t
    {standard input}:1620   .text.touch_calibrate:00000000 touch_calibrate
    {standard input}:1663   .text.touch_calibrate:00000040 $d
    {standard input}:1675   .text.TFT_display_init_screen:00000000 $t
    {standard input}:1680   .text.TFT_display_init_screen:00000000 TFT_display_init_screen
    {standard input}:1747   .text.TFT_display_init_screen:00000070 $d
    {standard input}:1760   .text.TFT_init:00000000 $t
    {standard input}:1765   .text.TFT_init:00000000 TFT_init
    {standard input}:1838   .text.TFT_init:00000074 $d
    {standard input}:1847   .text.TFT_display_static:00000000 $t
    {standard input}:1852   .text.TFT_display_static:00000000 TFT_display_static
    {standard input}:1940   .text.TFT_display_static:00000094 $d
    {standard input}:1954   .text.TFT_touch:00000000 $t
    {standard input}:1959   .text.TFT_touch:00000000 TFT_touch
    {standard input}:2250   .text.TFT_touch:000001a8 $d
    {standard input}:2265   .text.TFT_display:00000000 $t
    {standard input}:2270   .text.TFT_display:00000000 TFT_display
    {standard input}:2355   .text.TFT_display:0000008c $d
    {standard input}:2376   .text.TFT_display_static_menu0:00000000 $t
    {standard input}:2512   .text.TFT_display_static_menu0:000000f4 $d
    {standard input}:2543   .text.TFT_display_static_menu1:00000000 $t
    {standard input}:2644   .text.TFT_display_static_menu1:000000a0 $d
    {standard input}:2688   .text.TFT_display_menu0:00000000 $t
    {standard input}:2962   .text.TFT_display_menu0:000001f8 $d
    {standard input}:3001   .text.TFT_display_menu1:00000000 $t
    {standard input}:3113   .text.TFT_display_menu1:000000ac $d
    {standard input}:3137   .text.TFT_touch_menu0:00000000 $t
    {standard input}:3287   .text.TFT_touch_menu0:000000c0 $d
    {standard input}:3303   .text.TFT_touch_menu1:00000000 $t
    {standard input}:3385   .text.TFT_touch_menu1:00000050 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_d2iz
__aeabi_dsub
__aeabi_dcmpeq
EVE_cmd_dl
EVE_cmd_dl_burst
EVE_cmd_text
EVE_cmd_text_burst
EVE_cmd_number
EVE_cmd_number_burst
floor
sprintf
ceil
EVE_memWrite32
EVE_cmd_inflate
EVE_start_cmd_burst
EVE_cmd_setbitmap_burst
EVE_end_cmd_burst
logo_init
EVE_init
puts
EVE_memWrite8
EVE_cmd_bgcolor_burst
EVE_cmd_bgcolor
EVE_busy
EVE_memRead16
EVE_cmd_memcpy
EVE_memRead8
EVE_memRead32
EVE_cmd_append_burst
EVE_cmd_gradcolor_burst
EVE_cmd_fgcolor_burst
EVE_cmd_button_burst
EVE_cmd_toggle_burst
strlen
InputBuffer1
